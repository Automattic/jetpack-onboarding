(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var AppDispatcher=require("../dispatcher/app-dispatcher"),JPSConstants=require("../constants/jetpack-start-constants"),DataActions={requestStarted:function(){AppDispatcher.dispatch({actionType:JPSConstants.SAVE_STARTED})},requestFinished:function(){AppDispatcher.dispatch({actionType:JPSConstants.SAVE_FINISHED})}};module.exports=DataActions;


},{"../constants/jetpack-start-constants":19,"../dispatcher/app-dispatcher":21}],2:[function(require,module,exports){
var AppDispatcher=require("../dispatcher/app-dispatcher"),JPSConstants=require("../constants/jetpack-start-constants"),FlashActions={notice:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SET_FLASH,message:t,severity:JPSConstants.FLASH_SEVERITY_NOTICE})},error:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SET_FLASH,message:t,severity:JPSConstants.FLASH_SEVERITY_ERROR})},unset:function(){AppDispatcher.dispatch({actionType:JPSConstants.UNSET_FLASH})}};module.exports=FlashActions;


},{"../constants/jetpack-start-constants":19,"../dispatcher/app-dispatcher":21}],3:[function(require,module,exports){
var AppDispatcher=require("../dispatcher/app-dispatcher"),JPSConstants=require("../constants/jetpack-start-constants"),Paths=require("../constants/jetpack-start-paths"),FlashActions=require("./flash-actions"),SiteActions=require("./site-actions"),WPAjax=require("../utils/wp-ajax"),SetupProgressStore=require("../stores/setup-progress-store"),SiteStore=require("../stores/site-store"),SetupProgressActions={resetData:function(){WPAjax.post(JPS.site_actions.reset_data).fail(function(t){FlashActions.error("Failed to save data: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.RESET_DATA})},completeStep:function(t,e){var s=SetupProgressStore.getStepFromSlug(t);AppDispatcher.dispatch({actionType:JPSConstants.STEP_COMPLETE,slug:t}),this._recordComplete(s,e)},completeAndNextStep:function(t,e){this.completeStep(t,e),AppDispatcher.dispatch({actionType:JPSConstants.STEP_NEXT,slug:t})},_recordComplete:function(t,e){"undefined"==typeof e&&(e={}),e.completion=SetupProgressStore.getProgressPercent(),WPAjax.post(JPS.step_actions.complete,{step:t.slug,data:e}).fail(function(t){FlashActions.error(t)})},skipStep:function(){FlashActions.unset();var t=SetupProgressStore.getCurrentStep();t.skipped||WPAjax.post(JPS.step_actions.skip,{step:t.slug}).fail(function(t){FlashActions.error(t)}),AppDispatcher.dispatch({actionType:JPSConstants.STEP_SKIP})},getStarted:function(){WPAjax.post(JPS.step_actions.start).fail(function(t){FlashActions.error(t)}),AppDispatcher.dispatch({actionType:JPSConstants.STEP_GET_STARTED})},setCurrentStep:function(t){FlashActions.unset(),AppDispatcher.dispatch({actionType:JPSConstants.STEP_SELECT,slug:t})},selectNextStep:function(){FlashActions.unset(),AppDispatcher.dispatch({actionType:JPSConstants.STEP_NEXT})},submitTitleStep:function(){SiteActions.saveTitleAndDescription().done(function(){this.completeAndNextStep(Paths.SITE_TITLE_STEP_SLUG)}.bind(this))},submitLayoutStep:function(t){SiteActions.setLayout(t).done(function(){this.completeAndNextStep(Paths.LAYOUT_STEP_SLUG)}.bind(this))},submitJetpackJumpstart:function(){SiteActions.enableJumpstart().done(function(){this.completeStep(Paths.JETPACK_MODULES_STEP_SLUG)}.bind(this))},setActiveTheme:function(t){SiteActions.setActiveTheme(t).done(function(){this.completeStep(Paths.DESIGN_STEP_SLUG,{themeId:t.id})}.bind(this))},saveDesignStep:function(){this.completeAndNextStep(Paths.DESIGN_STEP_SLUG,{themeId:SiteStore.getActiveThemeId()})}};module.exports=SetupProgressActions;


},{"../constants/jetpack-start-constants":19,"../constants/jetpack-start-paths":20,"../dispatcher/app-dispatcher":21,"../stores/setup-progress-store":25,"../stores/site-store":26,"../utils/wp-ajax":28,"./flash-actions":2,"./site-actions":4}],4:[function(require,module,exports){
var AppDispatcher=require("../dispatcher/app-dispatcher"),JPSConstants=require("../constants/jetpack-start-constants"),SiteStore=require("../stores/site-store"),FlashActions=require("./flash-actions.js"),SpinnerActions=require("./spinner-actions.js"),WPAjax=require("../utils/wp-ajax"),SiteActions={setTitle:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SITE_SET_TITLE,title:t})},setDescription:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SITE_SET_DESCRIPTION,description:t})},saveTitleAndDescription:function(){var t=SiteStore.getTitle(),e=SiteStore.getDescription();return WPAjax.post(JPS.site_actions.set_title,{title:t,description:e}).fail(function(t){FlashActions.error("Error setting title: "+t)}),jQuery("#wp-admin-bar-site-name .ab-item").html(t),AppDispatcher.dispatch({actionType:JPSConstants.SITE_SAVE_TITLE_AND_DESCRIPTION,title:t}),jQuery.Deferred().resolve()},_installTheme:function(t){return t.installed?jQuery.Deferred().resolve():(SpinnerActions.show("Installing '"+t.name+"'"),WPAjax.post(JPS.site_actions.install_theme,{themeId:t.id}).done(function(){t.installed=!0,AppDispatcher.dispatch({actionType:JPSConstants.SITE_INSTALL_THEME,theme:t})}).fail(function(t){FlashActions.error("Server error installing theme: "+t)}).always(function(){SpinnerActions.hide()}))},_activateTheme:function(t){WPAjax.post(JPS.site_actions.set_theme,{themeId:t.id}).fail(function(t){FlashActions.error("Server error setting theme: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.SITE_SET_THEME,themeId:t.id})},setActiveTheme:function(t){return this._installTheme(t).done(function(){this._activateTheme(t)}.bind(this)),jQuery.Deferred().resolve()},setLayout:function(t){return WPAjax.post(JPS.site_actions.set_layout,{layout:t}).fail(function(t){FlashActions.error("Error setting layout: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.SITE_SET_LAYOUT,layout:t}),jQuery.Deferred().resolve()},configureJetpack:function(t){return SpinnerActions.show("Connecting to WordPress.com"),WPAjax.post(JPS.site_actions.configure_jetpack,{return_to_step:t}).done(function(t){AppDispatcher.dispatch({actionType:JPSConstants.SITE_JETPACK_CONFIGURED}),t.next?window.location.replace(t.next):SpinnerActions.hide()}).fail(function(t){FlashActions.error("Error enabling Jetpack: "+t),SpinnerActions.hide()})},activateJetpackModule:function(t){return WPAjax.post(JPS.site_actions.activate_jetpack_modules,{modules:[t]}).fail(function(t){FlashActions.error("Error activating Jetpack module: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.SITE_JETPACK_MODULE_ENABLED,slug:t}),jQuery.Deferred().resolve()},deactivateJetpackModule:function(t){return WPAjax.post(JPS.site_actions.deactivate_jetpack_modules,{modules:[t]}).fail(function(t){FlashActions.error("Error deactivating Jetpack module: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.SITE_JETPACK_MODULE_DISABLED,slug:t}),jQuery.Deferred().resolve()},loadAllJetpackModules:function(){return 0===SiteStore.getJetpackAdditionalModules().length?WPAjax.post(JPS.site_actions.list_jetpack_modules).done(function(t){AppDispatcher.dispatch({actionType:JPSConstants.SITE_JETPACK_ADD_MODULES,modules:t})}).fail(function(t){FlashActions.error("Error fetching all Jetpack modules: "+t)}):jQuery.Deferred().resolve()},enableJumpstart:function(){return WPAjax.post(JPS.site_actions.activate_jetpack_modules,{modules:SiteStore.getJumpstartModuleSlugs()}).fail(function(t){FlashActions.error("Error activating Jetpack modules: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.SITE_JETPACK_JUMPSTART_ENABLED}),jQuery.Deferred().resolve()}};module.exports=SiteActions;


},{"../constants/jetpack-start-constants":19,"../dispatcher/app-dispatcher":21,"../stores/site-store":26,"../utils/wp-ajax":28,"./flash-actions.js":2,"./spinner-actions.js":5}],5:[function(require,module,exports){
var AppDispatcher=require("../dispatcher/app-dispatcher"),JPSConstants=require("../constants/jetpack-start-constants"),SpinnerActions={show:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SHOW_SPINNER,message:t})},hide:function(){AppDispatcher.dispatch({actionType:JPSConstants.HIDE_SPINNER})},showAsync:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SHOW_ASYNC_SPINNER,message:t})},hideAsync:function(){AppDispatcher.dispatch({actionType:JPSConstants.HIDE_ASYNC_SPINNER})}};module.exports=SpinnerActions;


},{"../constants/jetpack-start-constants":19,"../dispatcher/app-dispatcher":21}],6:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Button=require("@automattic/dops-react/js/components/button"),SiteStore=require("../stores/site-store"),AdvancedSettingsStep=React.createClass({displayName:"AdvancedSettingsStep",render:function(){return React.createElement("div",{className:"welcome__section",id:"welcome__advanced"},React.createElement("h4",null,"Advanced settings"),React.createElement("ul",{className:"welcome__advanced"},React.createElement("li",null,React.createElement("h5",null,"Fine-tune your site's layout and appearance"),"Customize your site’s colors, fonts, sidebars and other settings.",React.createElement("br",null),React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.customize_url},"Customize my site"),"   ",React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.themes_url},"Browse and add themes")),("blog"==SiteStore.getLayout()||"site-blog"==SiteStore.getLayout())&&React.createElement("li",null,React.createElement("h5",null,"Create your first blog post"),'An epic essay or just "Hello World!"',React.createElement("br",null),React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.new_blog_post_url},"Write a new blog post"),"  ",React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.manage_posts_url},"Manage posts")),React.createElement("li",null,React.createElement("h5",null,"Create a static page"),'"About me", "Our Services" or anything else you can imagine.',React.createElement("br",null),React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.new_page_url},"Create a new page"),"  ",React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.manage_pages_url},"Manage pages")),React.createElement("li",null,React.createElement("h5",null,"Extend your site's functionality"),"WordPress offers thousands of plugins from Jetpack and the WordPress community.",React.createElement("br",null),React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.plugins_url},"Manage plugins"),"   ",SiteStore.getJetpackConfigured()&&React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.jetpack_modules_url},"Manage Jetpack modules")),React.createElement("li",null,React.createElement("h5",null,"Learn more"),React.createElement("a",{href:"https://codex.wordpress.org/First_Steps_With_WordPress"},"First Steps with WordPress")," - an online guide from the creators of WordPress")))}});module.exports=AdvancedSettingsStep;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../stores/site-store":26,"@automattic/dops-react/js/components/button":30}],7:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,ContentBox=React.createClass({displayName:"ContentBox",render:function(){return React.createElement("div",{className:"welcome__content_box"},this.props.children,React.createElement("div",{className:"clear"}))}});module.exports=ContentBox;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],8:[function(require,module,exports){
(function (global){
function getThemeState(){return{themes:SiteStore.getThemes()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SiteStore=require("../stores/site-store"),SetupProgressActions=require("../actions/setup-progress-actions"),Tooltip=require("./tooltip"),ContentBox=require("./content-box"),Button=require("@automattic/dops-react/js/components/button"),DesignStep=React.createClass({displayName:"DesignStep",componentDidMount:function(){SiteStore.addChangeListener(this._onChange),this._loadPopularThemes()},componentWillUnmount:function(){SiteStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getThemeState())},getInitialState:function(){var e=getThemeState();return e.popularThemes=[],e},handleActivateTheme:function(e){e.preventDefault(),this.setState({tooltipTheme:null,tooltipPosition:null});var t=jQuery(e.currentTarget),n=t.data("theme-id"),o=this.findTheme(n),a=!o.installed,i=SetupProgressActions.setActiveTheme(o);a&&i.done(function(){this._loadPopularThemes()}.bind(this))},findTheme:function(e){return _.findWhere(this.state.themes,{id:e})||_.findWhere(this.state.popularThemes,{id:e})},handleContinue:function(e){e.preventDefault(),SetupProgressActions.saveDesignStep()},handleShowTooltip:function(e){e.preventDefault();var t=jQuery(e.currentTarget),n=this.findTheme(t.data("theme-id")),o=t.position(),a=t.outerWidth(),i=t.outerHeight(),s={top:o.top+i/2,left:o.left+a};this.setState({tooltipTheme:n,tooltipPosition:s})},handleHideTooltip:function(e){e.preventDefault(),this.setState({tooltipTheme:null,tooltipPosition:null})},handleGetPopularThemes:function(e){e.preventDefault(),this._loadPopularThemes()},_loadPopularThemes:function(){SiteStore.getPopularThemes().done(function(e){this.setState({popularThemes:e})}.bind(this))},render:function(){return React.createElement("div",{className:"welcome__section",id:"welcome__design"},React.createElement("h4",null,"Pick a design"),React.createElement("p",{className:"step-description"},'A "theme" controls the design of your site - colours, fonts and layout.'),React.createElement("p",{className:"step-description"},"Click any theme below to choose it for your site. And don't worry - you can easily change this later."),React.createElement("p",{className:"submit"},React.createElement(Button,{color:"blue",onClick:this.handleContinue},"Next Step →")),React.createElement(ContentBox,null,React.createElement("h3",null,"Installed themes"),React.createElement("div",{className:"theme-browser rendered"},this._renderThemeList())),React.createElement(ContentBox,null,React.createElement("h3",null,"Popular themes from WordPress.org",React.createElement(Button,{color:"blue",style:{"float":"right"},onClick:this.handleGetPopularThemes},"Load more themes")),React.createElement("div",{className:"theme-browser rendered"},this._renderPopularThemeList())),React.createElement("div",{style:{clear:"both"}}),this.state.tooltipTheme&&this._renderTooltip())},_renderTooltip:function(){var e=this.state.tooltipTheme,t=this.state.tooltipPosition;return React.createElement(Tooltip,{left:t.left,top:t.top,width:320,title:e.name},React.createElement("p",null,"By ",e.author),React.createElement("p",{dangerouslySetInnerHTML:{__html:_.unescape(e.description)}}))},_renderTheme:function(e){return React.createElement("div",{key:e.id,className:"theme"+(e.active?" active":""),"data-theme-id":e.id,onClick:this.handleActivateTheme,onMouseEnter:this.handleShowTooltip,onMouseLeave:this.handleHideTooltip,"aria-describedby":e.id+"-action "+e.id+"-name"},e.screenshot?React.createElement("div",{className:"theme-screenshot"},React.createElement("img",{src:e.screenshot,alt:""})):React.createElement("div",{className:"theme-screenshot blank"}),!e.active&&React.createElement("span",{className:"more-details"},e.installed?"Click to select":"Click to install"),React.createElement("h3",{className:"theme-name",id:e.id+"-name"},React.createElement("span",null,e.active?"Selected:":"")," ",e.name))},_renderPopularThemeList:function(){return this.state.popularThemes.map(this._renderTheme)},_renderThemeList:function(){return this.state.themes.map(this._renderTheme)}});module.exports=DesignStep;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../stores/site-store":26,"./content-box":7,"./tooltip":16,"@automattic/dops-react/js/components/button":30}],9:[function(require,module,exports){
(function (global){
function getFlashState(){return FlashStore.getFlash()}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,FlashStore=require("../stores/flash-store"),Flash=React.createClass({displayName:"Flash",componentDidMount:function(){FlashStore.addChangeListener(this._onChange)},componentWillUnmount:function(){FlashStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getFlashState())},getInitialState:function(){return getFlashState()},render:function(){return this.state.message?React.createElement("div",{className:this.state.severity+" updated"},this.state.message):null}});module.exports=Flash;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../stores/flash-store":24}],10:[function(require,module,exports){
(function (global){
function getSetupState(){return{}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SetupProgressStore=require("../stores/setup-progress-store"),SetupProgressActions=require("../actions/setup-progress-actions"),Button=require("@automattic/dops-react/js/components/button"),GetStarted=React.createClass({displayName:"GetStarted",componentDidMount:function(){SetupProgressStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SetupProgressStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getSetupState())},getInitialState:function(){return getSetupState()},handleGetStarted:function(e){e.preventDefault(),SetupProgressActions.getStarted()},render:function(){return React.createElement("div",{className:"getting-started__intro"},React.createElement("h3",null,"You're almost done!"),React.createElement("p",{className:"getting-started__subhead"},"Take these steps to supercharge your WordPress site."),React.createElement("p",{style:{textAlign:"center"}},React.createElement(Button,{color:"green",size:"big",theme:"jetpack",onClick:this.handleGetStarted},"Get Started →")))}});module.exports=GetStarted;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../stores/setup-progress-store":25,"@automattic/dops-react/js/components/button":30}],11:[function(require,module,exports){
(function (global){
function getJetpackProgress(){return{jetpackConfigured:SiteStore.getJetpackConfigured()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SiteStore=require("../stores/site-store"),SiteActions=require("../actions/site-actions"),Paths=require("../constants/jetpack-start-paths"),JetpackJumpstartMenu=React.createClass({displayName:"JetpackJumpstartMenu",componentDidMount:function(){SiteStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SiteStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getJetpackProgress())},getInitialState:function(){return getJetpackProgress()},handleClickConnect:function(e){e.preventDefault(),console.log("clicked"),SiteActions.configureJetpack(Paths.JETPACK_MODULES_STEP_SLUG)},style:{color:"black",fontSize:12},render:function(){return React.createElement("div",{style:this.style},this.state.jetpackConfigured?React.createElement("div",null):React.createElement("div",null,"Boost traffic, enhance security, and improve performance with a connection to WordPress.com",React.createElement("br",null),React.createElement("a",{className:"button button-primary button-large",href:"#",onClick:this.handleClickConnect},"Connect to WordPress.com")))}});module.exports=JetpackJumpstartMenu;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/site-actions":4,"../constants/jetpack-start-paths":20,"../stores/site-store":26}],12:[function(require,module,exports){
(function (global){
function getJetpackState(){return{site_title:SiteStore.getTitle(),jetpackConfigured:SiteStore.getJetpackConfigured(),jumpstartEnabled:SiteStore.getJetpackJumpstartEnabled(),modulesEnabled:SiteStore.getActiveModuleSlugs()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SkipButton=require("./skip-button"),SiteStore=require("../stores/site-store"),SiteActions=require("../actions/site-actions"),Paths=require("../constants/jetpack-start-paths"),ContentBox=require("./content-box"),SetupProgressActions=require("../actions/setup-progress-actions"),SpinnerStore=require("../stores/spinner-store"),Button=require("@automattic/dops-react/js/components/button"),JetpackJumpstart=React.createClass({displayName:"JetpackJumpstart",componentDidMount:function(){SiteStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SiteStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getJetpackState())},getInitialState:function(){var e=getJetpackState();return e.showMoreModules=!1,e},handleJetpackConnect:function(e){e.preventDefault(),SiteActions.configureJetpack(Paths.JETPACK_MODULES_STEP_SLUG)},handleChangeModuleStatus:function(e){var t=jQuery(e.currentTarget),a=t.data("module-slug");SiteStore.isJetpackModuleEnabled(a)?SiteActions.deactivateJetpackModule(a):SiteActions.activateJetpackModule(a)},handleEnableAllModules:function(e){e.preventDefault(),SiteActions.enableJumpstart()},handleNext:function(e){e.preventDefault(),SetupProgressActions.completeAndNextStep(Paths.JETPACK_MODULES_STEP_SLUG)},handleShowMoreModules:function(e){e.preventDefault(),SiteActions.loadAllJetpackModules().done(function(){this.setState({showMoreModules:!0})}.bind(this))},handleShowFewerModules:function(e){e.preventDefault(),this.setState({showMoreModules:!1})},_renderModule:function(e){var t=SiteStore.isJetpackModuleEnabled(e.slug),a="jp-module-"+e.slug;return React.createElement("div",{key:"modules-"+e.slug,className:"welcome__jumpstart_module"},React.createElement("input",{id:a,type:"checkbox",checked:t,"data-module-slug":e.slug,onChange:this.handleChangeModuleStatus}),React.createElement("label",{htmlFor:a},React.createElement("strong",null,e.name)),React.createElement("small",{className:"jumpstart_module__description",dangerouslySetInnerHTML:{__html:e.description}}),t&&e.configure_url&&React.createElement("small",null,React.createElement("a",{target:"_configure",href:e.configure_url},"configure")))},render:function(){var e,t;this.state.jetpackConfigured||SpinnerStore.showing()||(e=React.createElement("div",{className:"welcome__jumpstart_overlay"}),t=React.createElement("div",{className:"welcome__jumpstart_overlay__body"},React.createElement("p",null,"These modules require a WordPress.com account - it's free!"),React.createElement(Button,{color:"green",size:"big",theme:"jetpack",onClick:this.handleJetpackConnect},"Connect to WordPress.com"),React.createElement("p",null,React.createElement(SkipButton,null))));var a=SiteStore.getJumpstartModules().map(this._renderModule),n=SiteStore.getJetpackAdditionalModules().map(this._renderModule);return React.createElement("div",{className:"welcome__section"},React.createElement("h3",null,"Let's launch ",React.createElement("em",null,this.state.site_title)),React.createElement("h4",null,"Enable Jetpack features"),this.state.jetpackConfigured&&React.createElement("div",null,React.createElement("span",{className:"jetpack-logo"},"Powered by",React.createElement("br",null),React.createElement("a",{href:"http://192.168.59.103/wp-admin/admin.php?page=jetpack",title:"Jetpack",className:"current"},React.createElement("span",null,"Jetpack"))),React.createElement("p",{className:"step-description"},"Congratulations! You've enabled Jetpack and unlocked dozens of powerful features."),React.createElement("p",{className:"step-description"},"Check the boxes below to enable our most popular features.")),React.createElement("div",{className:"welcome__connect"},React.createElement("div",{className:"welcome__jumpstart_wrapper"},e,t,this.state.jetpackConfigured&&React.createElement("div",{className:"submit"},React.createElement(Button,{style:{"float":"right"},color:"blue",onClick:this.handleNext},"Next Step →"),React.createElement("div",{className:"clear"})),React.createElement(ContentBox,null,React.createElement("h3",null,"Popular features   ",React.createElement(Button,{disabled:this.state.jumpstartEnabled,color:"blue",onClick:this.handleEnableAllModules},this.state.jumpstartEnabled?"Enabled":"Enable all (recommended)")),a),this.state.showMoreModules?React.createElement("p",{className:"more"},React.createElement("a",{href:"#",onClick:this.handleShowFewerModules},"hide additional features")):React.createElement("p",{className:"more"},React.createElement("a",{href:"#",onClick:this.handleShowMoreModules},"show additional features")),this.state.showMoreModules&&React.createElement(ContentBox,null,React.createElement("h3",null,"Additional modules"),n))))}});module.exports=JetpackJumpstart;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../actions/site-actions":4,"../constants/jetpack-start-paths":20,"../stores/site-store":26,"../stores/spinner-store":27,"./content-box":7,"./skip-button":15,"@automattic/dops-react/js/components/button":30}],13:[function(require,module,exports){
(function (global){
function getSiteLayoutState(){return{site_title:SiteStore.getTitle(),layout:SiteStore.getLayout()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SiteStore=require("../stores/site-store"),Button=require("@automattic/dops-react/js/components/button"),SetupProgressActions=require("../actions/setup-progress-actions"),LayoutStep=React.createClass({displayName:"LayoutStep",componentDidMount:function(){SiteStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SiteStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getSiteLayoutState())},getInitialState:function(){return getSiteLayoutState()},handleSetLayout:function(e){this.setState({layout:jQuery(e.currentTarget).val()})},handleSubmit:function(e){e.preventDefault(),SetupProgressActions.submitLayoutStep(this.state.layout)},render:function(){return React.createElement("div",{className:"welcome__section",id:"welcome__layout"},React.createElement("h3",null,"Let's launch ",React.createElement("em",null,this.state.site_title)),React.createElement("h4",null,"Select a layout"),React.createElement("p",{className:"step-description"},"WordPress can be a blog, a web site with a hierarchy of static pages, or a combination of the two."),React.createElement("form",{onSubmit:this.handleSubmit},React.createElement("label",null,React.createElement("input",{type:"radio",name:"site_layout",value:"website",checked:"website"===this.state.layout,onChange:this.handleSetLayout})," Static Website",React.createElement("p",{className:"description"},"A web site with a hierarchy of pages")),React.createElement("br",null),React.createElement("label",null,React.createElement("input",{type:"radio",name:"site_layout",value:"site-blog",checked:"site-blog"===this.state.layout,onChange:this.handleSetLayout})," Static Website with a blog",React.createElement("p",{className:"description"},"A web site with pages that also has a blog or news section")),React.createElement("br",null),React.createElement("label",null,React.createElement("input",{type:"radio",name:"site_layout",value:"blog",checked:"blog"===this.state.layout,onChange:this.handleSetLayout})," Just a blog",React.createElement("p",{className:"description"},"A web site that will constantly show new content (articles, photos, videos, etc.)")),React.createElement("p",{className:"submit"},React.createElement(Button,{color:"blue"},"Next Step →"))))}});module.exports=LayoutStep;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../stores/site-store":26,"@automattic/dops-react/js/components/button":30}],14:[function(require,module,exports){
(function (global){
function getSiteTitleState(){return{title:SiteStore.getTitle(),description:SiteStore.getDescription()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SiteActions=require("../actions/site-actions"),SiteStore=require("../stores/site-store"),Button=require("@automattic/dops-react/js/components/button"),SetupProgressActions=require("../actions/setup-progress-actions"),SiteTitleStep=React.createClass({displayName:"SiteTitleStep",componentDidMount:function(){SiteStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SiteStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getSiteTitleState())},getInitialState:function(){return getSiteTitleState()},handleChangeTitle:function(e){SiteActions.setTitle(e.currentTarget.value)},handleChangeDescription:function(e){SiteActions.setDescription(e.currentTarget.value)},handleSubmit:function(e){e.preventDefault(),SetupProgressActions.submitTitleStep()},render:function(){return React.createElement("div",{className:"welcome__section",id:"welcome__site-title"},React.createElement("h3",null,"Let's launch your new website"),React.createElement("h4",null,"Title and Description"),React.createElement("p",{className:"step-description"},"Make your site stand out with a catchy name."),React.createElement("form",{onSubmit:this.handleSubmit},React.createElement("table",{className:"form-table"},React.createElement("tbody",null,React.createElement("tr",null,React.createElement("th",null,React.createElement("label",{htmlFor:"site_title"},"Site Title")),React.createElement("td",null,React.createElement("input",{type:"text",name:"site_title",id:"site-title",autoComplete:"off",onChange:this.handleChangeTitle,value:this.state.title,placeholder:"Site Title (this can be changed later)",required:!0}),React.createElement("p",{className:"description"},"The name of your site. This title appears at the top of pages and in search results."))),React.createElement("tr",null,React.createElement("th",null,React.createElement("label",{htmlFor:"site_description"},"Site Description")),React.createElement("td",null,React.createElement("input",{type:"text",name:"site_description",id:"site-description",autoComplete:"off",onChange:this.handleChangeDescription,value:this.state.description,placeholder:"Site Description",required:!0}),React.createElement("p",{className:"description"},'A motto or tagline. This appears below the title on your site, and next to the title in search results. Try to be brief and descriptive, e.g. "Your online bait and tackle store"'))))),React.createElement("p",{className:"submit"},React.createElement(Button,{color:"blue"},"Next Step →"))))}});module.exports=SiteTitleStep;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../actions/site-actions":4,"../stores/site-store":26,"@automattic/dops-react/js/components/button":30}],15:[function(require,module,exports){
(function (global){
function getSetupProgress(){return{completed:SetupProgressStore.getCurrentStep().completed}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SetupProgressStore=require("../stores/setup-progress-store"),SetupProgressActions=require("../actions/setup-progress-actions"),SkipButton=React.createClass({displayName:"SkipButton",componentDidMount:function(){SetupProgressStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SetupProgressStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getSetupProgress())},getInitialState:function(){return getSetupProgress()},handleSkip:function(e){e.preventDefault(),SetupProgressActions.skipStep()},render:function(){var e=this.state.completed;return e?null:React.createElement("a",{className:"skip",href:"#",onClick:this.handleSkip},"Not now")}});module.exports=SkipButton;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../stores/setup-progress-store":25}],16:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Tooltip=React.createClass({displayName:"Tooltip",propTypes:{left:React.PropTypes.number.isRequired,top:React.PropTypes.number.isRequired,width:React.PropTypes.number.isRequired,title:React.PropTypes.string.isRequired},handleDismiss:function(e){e.preventDefault()},componentDidMount:function(){this._recomputePosition()},componentWillReceiveProps:function(){this._recomputePosition()},getInitialState:function(){return{realTop:this.props.top}},_recomputePosition:function(){var e=jQuery(React.findDOMNode(this.refs.wrapper));this.setState({realTop:this.props.top-e.outerHeight()/2})},render:function(){return React.createElement("div",{ref:"wrapper",className:"wp-pointer wp-pointer-left",style:{position:"absolute",width:this.props.width,top:this.state.realTop,left:this.props.left,zIndex:9999}},React.createElement("div",{className:"wp-pointer-content"},React.createElement("h3",null,this.props.title),React.createElement("p",null,this.props.children)),React.createElement("div",{className:"wp-pointer-arrow"},React.createElement("div",{className:"wp-pointer-arrow-inner"})))}});module.exports=Tooltip;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],17:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,ProgressBar=require("@automattic/dops-react/js/components/progress-bar"),SetupProgressActions=require("../actions/setup-progress-actions"),stepShape=React.PropTypes.shape({name:React.PropTypes.string.isRequired,slug:React.PropTypes.string}),WelcomeMenu=React.createClass({displayName:"WelcomeMenu",propTypes:{currentStep:stepShape.isRequired,clickable:React.PropTypes.bool,allSteps:React.PropTypes.arrayOf(stepShape).isRequired,progressPercent:React.PropTypes.number.isRequired},getDefaultProps:function(){return{clickable:!0}},selectStep:function(e){e.preventDefault();var t=jQuery(e.currentTarget).data("step-slug");SetupProgressActions.setCurrentStep(t)},render:function(){var e=this.props.allSteps.map(function(e){var t,r,s,a;return this.props.clickable&&this.props.currentStep&&(r=this.props.currentStep.slug==e.slug),t=!e["static"]&&this.props.clickable?React.createElement("a",{href:"#","data-step-slug":e.slug,onClick:this.selectStep},e.name):e.name,e.menuView&&this.props.clickable&&(a=React.createElement(e.menuView,null)),s=e.completed?"completed":"",React.createElement("li",{key:e.slug,className:s+(r?" current":"")},t," ",e.skipped?"(skipped)":null,a)}.bind(this));return React.createElement("div",{className:"getting-started__steps"},React.createElement("h3",null,React.createElement("span",null,"Your Progress"),React.createElement("div",null,React.createElement(ProgressBar,{style:{"float":"left"},progressPercent:this.props.progressPercent}))),React.createElement("ol",null,e))}});module.exports=WelcomeMenu;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"@automattic/dops-react/js/components/progress-bar":31}],18:[function(require,module,exports){
(function (global){
function getSetupProgress(){return{newUser:SetupProgressStore.isNewUser(),showSpinner:SpinnerStore.showing(),spinnerMessage:SpinnerStore.getMessage(),currentStep:SetupProgressStore.getCurrentStep(),allSteps:SetupProgressStore.getAllSteps(),progressPercent:SetupProgressStore.getProgressPercent()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,WelcomeMenu=require("./welcome-menu"),SetupProgressStore=require("../stores/setup-progress-store"),SetupProgressActions=require("../actions/setup-progress-actions"),Flash=require("./flash"),GetStarted=require("./get-started"),SpinnerStore=require("../stores/spinner-store"),SpinnerActions=require("../actions/spinner-actions"),DataStore=require("../stores/data-store"),WelcomeWidget=React.createClass({displayName:"WelcomeWidget",componentDidMount:function(){SetupProgressStore.addChangeListener(this._onChange),SpinnerStore.addChangeListener(this._onSpinnerChange),DataStore.addChangeListener(this._onDataChange)},componentWillUnmount:function(){SetupProgressStore.removeChangeListener(this._onChange),SpinnerStore.removeChangeListener(this._onSpinnerChange),DataStore.removeChangeListener(this._onDataChange)},_onChange:function(){this.setState(getSetupProgress())},_onSpinnerChange:function(){this.setState({showSpinner:SpinnerStore.showing(),spinnerMessage:SpinnerStore.getMessage()})},_onDataChange:function(){this.setState({saving:DataStore.isSaving()})},getInitialState:function(){return getSetupProgress()},handleReset:function(e){e.preventDefault(),SetupProgressActions.resetData()},handleShowSpinner:function(e){e.preventDefault(),SpinnerActions.show("Testing spinner")},handleHideSpinner:function(e){e.preventDefault(),SpinnerActions.hide()},render:function(){return React.createElement("div",{className:"getting-started"},this._renderDebug(),React.createElement("div",{className:"getting-started__wrapper"},this._renderSpinner(),React.createElement("div",{className:"getting-started__sections"},React.createElement(Flash,null),this._renderSection()),React.createElement(WelcomeMenu,{clickable:!this.state.newUser,currentStep:this.state.currentStep,allSteps:this.state.allSteps,progressPercent:this.state.progressPercent}),React.createElement("div",{className:"clear"})))},_renderSection:function(){return this.state.newUser?React.createElement(GetStarted,null):this._renderCurrentView()},_renderDebug:function(){return JPS.debug?React.createElement("div",null,React.createElement("a",{href:"#",className:"button",onClick:this.handleReset},"Reset Wizard"),React.createElement("a",{href:"#",className:"button",onClick:this.handleShowSpinner},"Show spinner"),React.createElement("a",{href:"#",className:"button",onClick:this.handleHideSpinner},"Hide spinner")):null},_renderSpinner:function(){return this.state.showSpinner?React.createElement("div",{className:"loading"},React.createElement("div",{className:"loading__message"},React.createElement("img",{src:"/wp-admin/images/spinner-2x.gif",width:"16px",height:"16px"}),"  ",this.state.spinnerMessage)):null},_renderCurrentView:function(){return this.state.currentStep?React.createElement(this.state.currentStep.welcomeView,null):React.createElement("h3",null,"Nothing")}});module.exports=WelcomeWidget;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../actions/spinner-actions":5,"../stores/data-store":23,"../stores/setup-progress-store":25,"../stores/spinner-store":27,"./flash":9,"./get-started":10,"./welcome-menu":17}],19:[function(require,module,exports){
var keyMirror=require("keymirror");module.exports=keyMirror({STEP_COMPLETE:null,STEP_GET_STARTED:null,STEP_SELECT:null,STEP_NEXT:null,STEP_SKIP:null,SITE_SET_TITLE:null,SITE_SET_DESCRIPTION:null,SITE_SAVE_TITLE_AND_DESCRIPTION:null,SITE_SET_THEME:null,SITE_INSTALL_THEME:null,SITE_JETPACK_CONFIGURED:null,SITE_JETPACK_MODULE_ENABLED:null,SITE_JETPACK_MODULE_DISABLED:null,SITE_JETPACK_JUMPSTART_ENABLED:null,SITE_JETPACK_ADD_MODULES:null,SITE_SET_LAYOUT:null,SAVE_STARTED:null,SAVE_FINISHED:null,SET_FLASH:null,UNSET_FLASH:null,FLASH_SEVERITY_NOTICE:null,FLASH_SEVERITY_ERROR:null,RESET_DATA:null,SHOW_SPINNER:null,HIDE_SPINNER:null});


},{"keymirror":51}],20:[function(require,module,exports){
module.exports={SITE_TITLE_STEP_SLUG:"title",LAYOUT_STEP_SLUG:"layout",TRAFFIC_STEP_SLUG:"traffic",STATS_MONITORING_STEP_SLUG:"stats-monitoring",DESIGN_STEP_SLUG:"design",ADVANCED_STEP_SLUG:"advanced",JETPACK_MODULES_STEP_SLUG:"jetpack"};


},{}],21:[function(require,module,exports){
var Dispatcher=require("flux").Dispatcher;module.exports=new Dispatcher;


},{"flux":46}],22:[function(require,module,exports){
var WelcomePanel=require("./welcome-panel");WelcomePanel();


},{"./welcome-panel":29}],23:[function(require,module,exports){
function incrementSaveCounter(){_currentSaves+=1}function decrementSaveCounter(){_currentSaves-=1}var AppDispatcher=require("../dispatcher/app-dispatcher"),EventEmitter=require("events").EventEmitter,JPSConstants=require("../constants/jetpack-start-constants"),_currentSaves=0,jpsTimeout,CHANGE_EVENT="change";jQuery(window).on("beforeunload",function(){return DataStore.isSaving()?(jpsTimeout=setTimeout(function(){},1e3),"Your site changes are still saving."):void 0}),jQuery(window).on("unload",function(){clearTimeout(jpsTimeout)});var DataStore=_.extend({},EventEmitter.prototype,{isSaving:function(){return _currentSaves>0},addChangeListener:function(e){this.on(CHANGE_EVENT,e)},removeChangeListener:function(e){this.removeListener(CHANGE_EVENT,e)},emitChange:function(){this.emit(CHANGE_EVENT)}});AppDispatcher.register(function(e){switch(e.actionType){case JPSConstants.SAVE_STARTED:incrementSaveCounter(),DataStore.emitChange();break;case JPSConstants.SAVE_FINISHED:decrementSaveCounter(),DataStore.emitChange()}}),module.exports=DataStore;


},{"../constants/jetpack-start-constants":19,"../dispatcher/app-dispatcher":21,"events":49}],24:[function(require,module,exports){
function setFlash(e,t){message=e,severity=t}var AppDispatcher=require("../dispatcher/app-dispatcher"),EventEmitter=require("events").EventEmitter,JPSConstants=require("../constants/jetpack-start-constants"),CHANGE_EVENT="change",message,severity,FlashStore=_.extend({},EventEmitter.prototype,{getFlash:function(){var e;switch(severity){case JPSConstants.FLASH_SEVERITY_ERROR:e="error";break;case JPSConstants.FLASH_SEVERITY_NOTICE:e="notice"}return{message:message,severity:e}},addChangeListener:function(e){this.on(CHANGE_EVENT,e)},removeChangeListener:function(e){this.removeListener(CHANGE_EVENT,e)},emitChange:function(){this.emit(CHANGE_EVENT)}});AppDispatcher.register(function(e){switch(e.actionType){case JPSConstants.SET_FLASH:setFlash(e.message,e.severity),FlashStore.emitChange();break;case JPSConstants.UNSET_FLASH:setFlash(null,null),FlashStore.emitChange()}}),module.exports=FlashStore;


},{"../constants/jetpack-start-constants":19,"../dispatcher/app-dispatcher":21,"events":49}],25:[function(require,module,exports){
function setSteps(e){e.forEach(function(e){"undefined"==typeof e.completed&&(e.completed=JPS.step_status[e.slug]&&JPS.step_status[e.slug].completed||!1),"undefined"==typeof e.skipped&&(e.skipped=JPS.step_status[e.slug]&&JPS.step_status[e.slug].skipped||!1),"undefined"==typeof e["static"]&&(e["static"]=!1),"undefined"==typeof e.includeInProgress&&(e.includeInProgress=!0)}),_steps=e,ensureValidStepSlug()}function getStarted(){_started=!0,selectNextPendingStep()}function complete(e){var t=getStepFromSlug(e);t.completed=!0,t.skipped=!1}function skip(){var e=currentStepSlug(),t=getStepFromSlug(e);t.skipped=!0,selectNextPendingStep()}function getStepFromSlug(e){var t=null;return _.each(_steps,function(s){s.slug===e&&(t=s)}),t}function ensureValidStepSlug(){var e=currentStepSlug();e&&getStepFromSlug(e)||selectNextPendingStep()}function selectNextPendingStep(){var e=_.findWhere(_steps,{completed:!1,skipped:!1});null!==e&&select(e.slug)}function currentStepSlug(){if(0===window.location.hash.indexOf("#welcome/steps")){var e=window.location.hash.split("/"),t=e[e.length-1];return t}return null}function select(e){window.location.hash="welcome/steps/"+e}function reset(){JPS.step_status={},_.where(_steps,{"static":!1}).forEach(function(e){e.completed=!1,e.skipped=!1}),_started=!1}var AppDispatcher=require("../dispatcher/app-dispatcher"),EventEmitter=require("events").EventEmitter,JPSConstants=require("../constants/jetpack-start-constants"),CHANGE_EVENT="change",_steps,_started=JPS.started,SetupProgressStore=_.extend({},EventEmitter.prototype,{init:function(e){setSteps(e)},getAllSteps:function(){return _steps},isNewUser:function(){return!_started},emitChange:function(){this.emit(CHANGE_EVENT)},getCurrentStep:function(){return getStepFromSlug(currentStepSlug())},getStepFromSlug:function(e){return getStepFromSlug(e)},getProgressPercent:function(){var e=_.where(_steps,{includeInProgress:!0}).length,t=_.where(_steps,{includeInProgress:!0,completed:!0}).length,s=t/e*90+10,n=10*Math.round(s/10);return n},addChangeListener:function(e){this.on(CHANGE_EVENT,e)},removeChangeListener:function(e){this.removeListener(CHANGE_EVENT,e)}});AppDispatcher.register(function(e){switch(e.actionType){case JPSConstants.STEP_GET_STARTED:getStarted(),SetupProgressStore.emitChange();break;case JPSConstants.STEP_SELECT:select(e.slug),SetupProgressStore.emitChange();break;case JPSConstants.STEP_NEXT:selectNextPendingStep(),SetupProgressStore.emitChange();break;case JPSConstants.STEP_COMPLETE:complete(e.slug),SetupProgressStore.emitChange();break;case JPSConstants.STEP_COMPLETE_AND_NEXT:complete(e.slug),selectNextPendingStep(),SetupProgressStore.emitChange();break;case JPSConstants.RESET_DATA:reset(),SetupProgressStore.emitChange();break;case JPSConstants.STEP_SKIP:skip(),SetupProgressStore.emitChange()}}),module.exports=SetupProgressStore;


},{"../constants/jetpack-start-constants":19,"../dispatcher/app-dispatcher":21,"events":49}],26:[function(require,module,exports){
function setTitle(e){JPS.bloginfo.name=e}function setDescription(e){JPS.bloginfo.description=e}function setActiveTheme(e){JPS.themes.forEach(function(t){t.id==e?t.active=!0:t.active=!1})}function installedTheme(e){JPS.themes.unshift(e),JPS.themes=JPS.themes.slice(0,3)}function setJetpackModuleActivated(e){-1===_.indexOf(JPS.jetpack.active_modules,e)&&JPS.jetpack.active_modules.push(e)}function setJetpackModuleDectivated(e){var t=_.indexOf(JPS.jetpack.active_modules,e);t>=0&&JPS.jetpack.active_modules.splice(t,1)}function setJetpackAdditionalModules(e){JPS.jetpack.additional_modules=_.filter(e,function(e){return-1==_.indexOf(JPS.jetpack.jumpstart_modules.map(function(e){return e.slug}),e.slug)})}function setLayout(e){layout=e}function setJetpackConfigured(){JPS.jetpack.configured=!0}function setJetpackJumpstartActivated(){JPS.jetpack.jumpstart_modules.forEach(function(e){setJetpackModuleActivated(e.slug)})}var AppDispatcher=require("../dispatcher/app-dispatcher"),EventEmitter=require("events").EventEmitter,JPSConstants=require("../constants/jetpack-start-constants"),WPAjax=require("../utils/wp-ajax"),CHANGE_EVENT="change",layout=JPS.steps.layout.current,SiteStore=_.extend({},EventEmitter.prototype,{getTitle:function(){return JPS.bloginfo.name},getDescription:function(){return JPS.bloginfo.description},getThemes:function(){return JPS.themes},getActiveThemeId:function(){for(var e=0;e<JPS.themes.length;e++){var t=JPS.themes[e];if(t.active)return t.id}return null},getJetpackConfigured:function(){return JPS.jetpack.configured},getActiveModuleSlugs:function(){return JPS.jetpack.active_modules},isJetpackModuleEnabled:function(e){return _.indexOf(JPS.jetpack.active_modules,e)>=0},getJetpackAdditionalModules:function(){return JPS.jetpack.additional_modules},getJumpstartModuleSlugs:function(){return JPS.jetpack.jumpstart_modules.map(function(e){return e.slug})},getJumpstartModules:function(){return JPS.jetpack.jumpstart_modules},getPopularThemes:function(){return WPAjax.post(JPS.site_actions.get_popular_themes)},getJetpackJumpstartEnabled:function(){for(var e=0;e<JPS.jetpack.jumpstart_modules.length;e++){var t=JPS.jetpack.jumpstart_modules[e];if(!this.isJetpackModuleEnabled(t.slug))return!1}return!0},getLayout:function(){return layout},emitChange:function(){this.emit(CHANGE_EVENT)},addChangeListener:function(e){this.on(CHANGE_EVENT,e)},removeChangeListener:function(e){this.removeListener(CHANGE_EVENT,e)}});AppDispatcher.register(function(e){switch(e.actionType){case JPSConstants.SITE_SET_TITLE:setTitle(e.title),SiteStore.emitChange();break;case JPSConstants.SITE_SET_DESCRIPTION:setDescription(e.description),SiteStore.emitChange();break;case JPSConstants.SITE_SET_THEME:setActiveTheme(e.themeId),SiteStore.emitChange();break;case JPSConstants.SITE_INSTALL_THEME:installedTheme(e.theme),SiteStore.emitChange();break;case JPSConstants.SITE_JETPACK_CONFIGURED:setJetpackConfigured(),SiteStore.emitChange();break;case JPSConstants.SITE_JETPACK_ADD_MODULES:setJetpackAdditionalModules(e.modules),SiteStore.emitChange();break;case JPSConstants.SITE_JETPACK_MODULE_ENABLED:setJetpackModuleActivated(e.slug),SiteStore.emitChange();break;case JPSConstants.SITE_JETPACK_MODULE_DISABLED:setJetpackModuleDectivated(e.slug),SiteStore.emitChange();break;case JPSConstants.SITE_JETPACK_JUMPSTART_ENABLED:setJetpackJumpstartActivated(),SiteStore.emitChange();break;case JPSConstants.SITE_SET_LAYOUT:setLayout(e.layout),SiteStore.emitChange()}}),module.exports=SiteStore;


},{"../constants/jetpack-start-constants":19,"../dispatcher/app-dispatcher":21,"../utils/wp-ajax":28,"events":49}],27:[function(require,module,exports){
function show(e){spinnerEnabled=!0,spinnerMessage=e}function hide(){spinnerEnabled=!1,spinnerMessage=null}var AppDispatcher=require("../dispatcher/app-dispatcher"),EventEmitter=require("events").EventEmitter,JPSConstants=require("../constants/jetpack-start-constants"),CHANGE_EVENT="change",spinnerEnabled=!1,spinnerMessage=null,SpinnerStore=_.extend({},EventEmitter.prototype,{showing:function(){return spinnerEnabled},getMessage:function(){return spinnerMessage},addChangeListener:function(e){this.on(CHANGE_EVENT,e)},removeChangeListener:function(e){this.removeListener(CHANGE_EVENT,e)},emitChange:function(){this.emit(CHANGE_EVENT)}});AppDispatcher.register(function(e){switch(e.actionType){case JPSConstants.SHOW_SPINNER:show(e.message),SpinnerStore.emitChange();break;case JPSConstants.HIDE_SPINNER:hide(),SpinnerStore.emitChange()}}),module.exports=SpinnerStore;


},{"../constants/jetpack-start-constants":19,"../dispatcher/app-dispatcher":21,"events":49}],28:[function(require,module,exports){
var DataActions=require("../actions/data-actions"),WPAjax=function(){return{post:function(e,t){t="undefined"!=typeof t?t:{};var n=_.extend(t,{action:e,nonce:JPS.nonce}),a=jQuery.Deferred();return DataActions.requestStarted(),jQuery.post(ajaxurl,n).success(function(e){e.success?a.resolve(e.data):a.reject(e.data)}).fail(function(){a.reject("Server error")}).always(function(){DataActions.requestFinished()}),a}}}();module.exports=WPAjax;


},{"../actions/data-actions":1}],29:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,WelcomeWidget=require("./components/welcome-widget"),Paths=require("./constants/jetpack-start-paths"),SetupProgressStore=require("./stores/setup-progress-store");module.exports=function(){jQuery(document).ready(function(){SetupProgressStore.init([{name:"Site title",slug:Paths.SITE_TITLE_STEP_SLUG,welcomeView:require("./components/site-title-step")},{name:"Pick a layout",slug:Paths.LAYOUT_STEP_SLUG,welcomeView:require("./components/layout-step")},{name:"Pick a design",slug:Paths.DESIGN_STEP_SLUG,welcomeView:require("./components/design-step")},{name:"Enable Jetpack",slug:Paths.JETPACK_MODULES_STEP_SLUG,welcomeView:require("./components/jetpack-jumpstart-step"),menuView:require("./components/jetpack-jumpstart-menu")},{name:"Advanced settings",slug:Paths.ADVANCED_STEP_SLUG,welcomeView:require("./components/advanced-settings-step"),includeInProgress:!1}]),React.render(React.createElement(WelcomeWidget,{}),document.getElementById("jps-welcome-panel"))})};


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./components/advanced-settings-step":6,"./components/design-step":8,"./components/jetpack-jumpstart-menu":11,"./components/jetpack-jumpstart-step":12,"./components/layout-step":13,"./components/site-title-step":14,"./components/welcome-widget":18,"./constants/jetpack-start-paths":20,"./stores/setup-progress-store":25}],30:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,styles=require("../styles"),Radium=require("radium"),Button=React.createClass({displayName:"Button",propTypes:{size:React.PropTypes.oneOf(["tiny","normal","big"]),color:React.PropTypes.oneOf(["gray","blue","green"]),theme:React.PropTypes.oneOf(["wp","jetpack"]),inline:React.PropTypes.bool,onClick:React.PropTypes.func,href:React.PropTypes.string},getDefaultProps:function(){return{size:"normal",inline:!0,color:"gray",theme:"wp"}},handleCallbackHref:function(e){e.preventDefault(),window.location=this.props.href},styles:{basic:{borderRadius:3,boxShadow:"inset 0 1px 0 rgba(255, 255, 255, 0.3)",borderWidth:1,borderStyle:"solid",cursor:"pointer",display:"block",fontSize:14,fontWeight:"bold",padding:"10px 20px",textAlign:"center",textDecoration:"none",WebkitFontSmoothing:"antialiased",transition:"background 0.2s"},sizes:{tiny:{fontSize:10,padding:"2px 10px"},normal:{fontSize:13,padding:"5px 10px"},big:{fontSize:16,padding:"20px 40px"}},colors:{gray:{background:"linear-gradient(#fff, #f9f9f9)",borderColor:styles.colors.lightGray,color:styles.colors.darkGray,":hover":{color:styles.colors.gray}},blue:{background:styles.colors.blue,borderColor:"rgba(0,0,0,0.6)",color:"white",":hover":{background:styles.colors.lighterBlue}},green:{background:styles.colors.green,color:"white",borderColor:"rgba(0,0,0,0.6)",":hover":{background:styles.colors.lighterGreen}}},themes:{wp:{},jetpack:{padding:"18px 24px 15px",font:'400 20px/1 "Open Sans", Helvetica, sans-serif',borderRadius:6,border:"none",boxShadow:"0 6px 0 #3e6c20,0 6px 3px rgba(0,0,0,0.4)"}},inline:{display:"inline-block"},disabled:{background:"#f9f9f9",borderColor:styles.colors.lightGray,color:styles.colors.lightGray,":hover":{background:"#f9f9f9",borderColor:styles.colors.lightGray,color:styles.colors.lightGray}}},render:function(){var e,o=this.props,r=o.size,t=o.color,s=o.inline,l=o.onClick,n=o.theme,i=o.href,a=function(e,o){var r={},t=Object.prototype.hasOwnProperty;if(null==e)throw new TypeError;for(var s in e)t.call(e,s)&&!t.call(o,s)&&(r[s]=e[s]);return r}(o,{size:1,color:1,inline:1,onClick:1,theme:1,href:1}),c=[this.styles.basic,this.styles.sizes[r],this.styles.colors[t],this.styles.themes[n],this.props.disabled&&this.styles.disabled,s&&this.styles.inline,this.props.style];return e=i&&!l?this.handleCallbackHref:l,React.createElement("button",React.__spread({},a,{style:c,onClick:e,onMouseOver:this.handleMouseOver,onMouseOut:this.handleMouseOut}),this.props.children)}});module.exports=Radium(Button);


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../styles":32,"radium":38}],31:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Radium=require("radium"),ProgressBar=React.createClass({displayName:"ProgressBar",propTypes:{style:React.PropTypes.object,progressPercent:React.PropTypes.number.isRequired},styles:{wrapper:{fontWeight:400,fontSize:"80%"},progress:{background:"#4ab866",width:"0%",transition:"width 0.5s",display:"block",height:"100%"},bar:{display:"inline-block",width:80,height:12,margin:"0 8px -2px 0",padding:2,borderRadius:2,background:"#f5f5f5"}},render:function(){return React.createElement("div",{style:[this.styles.wrapper,this.props.style]},React.createElement("div",{style:this.styles.bar},React.createElement("span",{style:[this.styles.progress,{width:this.props.progressPercent+"%"}]})),this.props.progressPercent,"% complete")}});module.exports=Radium(ProgressBar);


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"radium":38}],32:[function(require,module,exports){
module.exports={right:{"float":"right"},left:{"float":"left"},third:{width:"33%"},full:{width:"100%"},half:{width:"48%"},hidden:{display:"none"},clear:{clear:"both",display:"block"},accountStatus:{textTransform:"capitalize"},accountStatusNoticon:{borderRadius:"50%",width:16,height:16,marginRight:10,color:"#fff",background:"#81bf16"},box:{borderRadius:2,padding:"5px 10px",background:"#f5f5f5"},light:{color:"#999"},colors:{akismetGreen:"#5e8e14",blue:"#029dd6",lighterBlue:"#13AEE7",black:"#333",darkGray:"#444",gray:"#787878",lightGray:"#bbb",veryLightGray:"#eee",offWhite:"#f9f9f9",accountActive:"#81bf16",accountInactive:"#bbb",green:"#518d2a",lighterGreen:"#57972d"},fonts:{sans:'Open Sans, "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif',serif:"Merriweather, Georgia, serif",mono:'"Courier New", Courier, monospace'},input:{width:"100%",boxShadow:"none",background:"#fff",border:"1px solid #d5d5d5",fontSize:12,padding:"8px 10px"},select:{borderRadius:3,backgroundColor:"#fff",fontSize:12,height:35,width:"100%",border:"1px solid #d5d5d5",padding:"3px 5px",minWidth:0},checkbox:{marginRight:10},errorField:{border:"1px solid #dd3d36"},errorLabel:{border:"1px solid #dd3d36",color:"#a00",display:"block",fontSize:12,margin:"5px 0 0 0",padding:5}};


},{}],33:[function(require,module,exports){
(function (global){
"use strict";var createMarkupForStyles=require("../create-markup-for-styles"),Prefixer=require("../prefixer"),React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,buildCssString=function(e,t){if(e&&t){var r=Prefixer.getPrefixedStyle(t,"css"),i=createMarkupForStyles(r);return e+"{"+i+"}"}},Style=React.createClass({displayName:"Style",propTypes:{rules:React.PropTypes.object,scopeSelector:React.PropTypes.string},getDefaultProps:function(){return{scopeSelector:""}},_buildStyles:function(e){var t=this;return Object.keys(e).reduce(function(r,i){var s=e[i];if("mediaQueries"===i)r+=t._buildMediaQueryString(s);else{var n=(t.props.scopeSelector?t.props.scopeSelector+" ":"")+i;r+=buildCssString(n,s)}return r},"")},_buildMediaQueryString:function(e){var t=this,r=this._getContextMediaQueries(),i="";return Object.keys(e).forEach(function(s){var n=r[s]?r[s]:s;i+="@media "+n+"{"+t._buildStyles(e[s])+"}"}),i},_getContextMediaQueries:function(){var e={};return this.context&&this.context.mediaQueries&&Object.keys(this.context.mediaQueries).forEach(function(t){e[t]=this.context.mediaQueries[t].media}.bind(this)),e},render:function(){if(!this.props.rules)return null;var e=this._buildStyles(this.props.rules);return React.createElement("style",{dangerouslySetInnerHTML:{__html:e}})}});module.exports=Style;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../create-markup-for-styles":35,"../prefixer":41}],34:[function(require,module,exports){
"use strict";var ExecutionEnvironment=require("exenv"),_matchMediaFunction=ExecutionEnvironment.canUseDOM&&window&&window.matchMedia;module.exports={canMatchMedia:function(){return"function"==typeof _matchMediaFunction},matchMedia:function(n){return _matchMediaFunction(n)},setMatchMedia:function(n){_matchMediaFunction=n}};


},{"exenv":44}],35:[function(require,module,exports){
"use strict";var createMarkupForStyles=function(e,r){return r=r||"",Object.keys(e).map(function(t){return r+t+": "+e[t]+";"}).join("\n")};module.exports=createMarkupForStyles;


},{}],36:[function(require,module,exports){
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(e.__proto__=t)}var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),_get=function(e,t,r){for(var n=!0;n;){var o=e,i=t,a=r;s=l=u=void 0,n=!1;var s=Object.getOwnPropertyDescriptor(o,i);if(void 0!==s){if("value"in s)return s.value;var u=s.get;return void 0===u?void 0:u.call(a)}var l=Object.getPrototypeOf(o);if(null===l)return void 0;e=l,t=i,r=a,n=!0}},resolveStyles=require("./resolve-styles.js"),enhanceWithRadium=function(e){var t=e.displayName||e.name||"Component",r=function(e){function t(){_classCallCheck(this,t),_get(Object.getPrototypeOf(t.prototype),"constructor",this).apply(this,arguments),this.state=this.state||{},this.state._radiumStyleState={}}return _inherits(t,e),_createClass(t,[{key:"render",value:function(){var e=_get(Object.getPrototypeOf(t.prototype),"render",this).call(this);return resolveStyles(this,e)}},{key:"componentWillUnmount",value:function(){_get(Object.getPrototypeOf(t.prototype),"componentWillUnmount",this)&&_get(Object.getPrototypeOf(t.prototype),"componentWillUnmount",this).call(this),this._radiumMouseUpListener&&this._radiumMouseUpListener.remove(),this._radiumMediaQueryListenersByQuery&&Object.keys(this._radiumMediaQueryListenersByQuery).forEach(function(e){this._radiumMediaQueryListenersByQuery[e].remove()},this)}}]),t}(e);return r.displayName="Radium("+t+")",r};module.exports=enhanceWithRadium;


},{"./resolve-styles.js":42}],37:[function(require,module,exports){
"use strict";var VALID_KEYS=[":active",":focus",":hover"],getState=function(t,e,a){if(e=e||"main",-1===VALID_KEYS.indexOf(a))throw new Error("Radium.getState invalid value param: `"+a+"`");return!!(t&&t._radiumStyleState&&t._radiumStyleState[e]&&t._radiumStyleState[e][a])||!1};module.exports=getState;


},{}],38:[function(require,module,exports){
"use strict";var Enhancer=require("./enhancer");module.exports=function(e){return Enhancer(e)},module.exports.Style=require("./components/style"),module.exports.getState=require("./get-state"),module.exports.keyframes=require("./keyframes"),module.exports.Config=require("./config");


},{"./components/style":33,"./config":34,"./enhancer":36,"./get-state":37,"./keyframes":39}],39:[function(require,module,exports){
"use strict";var createMarkupForStyles=require("./create-markup-for-styles"),Prefixer=require("./prefixer"),ExecutionEnvironment=require("exenv"),isAnimationSupported=ExecutionEnvironment.canUseDOM&&Prefixer.getPrefixedPropertyName("animation")!==!1,animationIndex=1,animationStyleSheet=null,keyframesPrefixed=null;isAnimationSupported&&(animationStyleSheet=document.createElement("style"),document.head.appendChild(animationStyleSheet),keyframesPrefixed="keyframes",animationStyleSheet.textContent="@keyframes {}",animationStyleSheet.sheet.cssRules.length||(keyframesPrefixed=Prefixer.cssPrefix+"keyframes"));var keyframes=function(e){var t="Animation"+animationIndex;if(animationIndex+=1,!isAnimationSupported)return t;var n="@"+keyframesPrefixed+" "+t+" {\n"+Object.keys(e).map(function(t){var n=e[t],r=Prefixer.getPrefixedStyle(n,"css"),i=createMarkupForStyles(r,"  ");return"  "+t+" {\n  "+i+"\n  }"}).join("\n")+"\n}\n";if(!animationStyleSheet)throw new Error("keyframes not initialized properly");return animationStyleSheet.sheet.insertRule(n,animationStyleSheet.sheet.cssRules.length),t};module.exports=keyframes;


},{"./create-markup-for-styles":35,"./prefixer":41,"exenv":44}],40:[function(require,module,exports){
"use strict";var _callbacks=[],_mouseUpListenerIsActive=!1,_handleMouseUp=function(e){_callbacks.forEach(function(s){s(e)})},subscribe=function(e){return-1===_callbacks.indexOf(e)&&_callbacks.push(e),_mouseUpListenerIsActive||(window.addEventListener("mouseup",_handleMouseUp),_mouseUpListenerIsActive=!0),{remove:function(){var s=_callbacks.indexOf(e);_callbacks.splice(s,1),0===_callbacks.length&&_mouseUpListenerIsActive&&(window.removeEventListener("mouseup",_handleMouseUp),_mouseUpListenerIsActive=!1)}}};module.exports={subscribe:subscribe};


},{}],41:[function(require,module,exports){
"use strict";var ExecutionEnvironment=require("exenv"),arrayFind=require("array-find"),infoByCssPrefix={"-moz-":{cssPrefix:"-moz-",jsPrefix:"Moz",alternativeProperties:{flex:[{css:"-moz-box-flex",js:"MozBoxFlex"}],order:[{css:"-moz-box-ordinal-group",js:"MozBoxOrdinalGroup"}]},alternativeValues:{display:{flex:["-moz-box"]}}},"-ms-":{cssPrefix:"-ms-",jsPrefix:"ms",alternativeValues:{display:{flex:["-ms-flexbox"],order:["-ms-flex-order"]}}},"-o-":{cssPrefix:"-o-",jsPrefix:"O"},"-webkit-":{cssPrefix:"-webkit-",jsPrefix:"Webkit",alternativeProperties:{flex:[{css:"-webkit-box-flex",js:"WebkitBoxFlex"}],order:[{css:"-webkit-box-ordinal-group",js:"WebkitBoxOrdinalGroup"}]},alternativeValues:{display:{flex:["-webkit-box"]}}}},isUnitlessNumber={boxFlex:!0,boxFlexGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,strokeDashoffset:!0,strokeOpacity:!0,strokeWidth:!0},domStyle={},prefixedPropertyCache={},prefixedValueCache={},prefixInfo={cssPrefix:"",jsPrefix:""};if(ExecutionEnvironment.canUseDOM){domStyle=document.createElement("p").style;var windowStyles=window.getComputedStyle(document.documentElement,""),prefixMatch=Array.prototype.slice.call(windowStyles).join("").match(/-(moz|webkit|ms|o)-/),cssVendorPrefix=prefixMatch&&prefixMatch[0];prefixInfo=infoByCssPrefix[cssVendorPrefix]||prefixInfo}var _camelCaseRegex=/([a-z])?([A-Z])/g,_camelCaseReplacer=function(e,r,i){return r+"-"+i.toLowerCase()},_camelCaseToDashCase=function(e){return e.replace(_camelCaseRegex,_camelCaseReplacer)},getPrefixedPropertyName=function(e){if(prefixedPropertyCache.hasOwnProperty(e))return prefixedPropertyCache[e];var r={css:_camelCaseToDashCase(e),js:e,isDefaultForServer:!0},i=[{css:prefixInfo.cssPrefix+_camelCaseToDashCase(e),js:prefixInfo.jsPrefix+e[0].toUpperCase()+e.slice(1)},r];prefixInfo.alternativeProperties&&prefixInfo.alternativeProperties[e]&&(i=i.concat(prefixInfo.alternativeProperties[e]));var a=arrayFind(i,function(e){return e.js in domStyle?e:void 0})||!1;return prefixedPropertyCache[e]=a},_addPixelSuffixToValueIfNeeded=function(e,r){return 0===r||isNaN(r)||isUnitlessNumber[e]?r:r+"px"},_getPrefixedValue=function(e,r,i){if(!Array.isArray(r)){if(!isNaN(r))return _addPixelSuffixToValueIfNeeded(i,r);if("string"!=typeof r&&(r=r.toString()),!isNaN(parseInt(r,10)))return r}var a=Array.isArray(r)?r.join(" || "):e+r;if(prefixedValueCache.hasOwnProperty(a))return prefixedValueCache[a];var o;Array.isArray(r)?(o=r.map(function(e){return _addPixelSuffixToValueIfNeeded(i,e)}),o=o.concat(r.filter(function(e){return!isNaN(e)}).map(function(e){return prefixInfo.cssPrefix+e}))):o=[r,prefixInfo.cssPrefix+r],prefixInfo.alternativeValues&&prefixInfo.alternativeValues[i]&&prefixInfo.alternativeValues[i][r]&&(o=o.concat(prefixInfo.alternativeValues[i][r]));var t=arrayFind(o,function(r){return domStyle[e]="",domStyle[e]=r,!!domStyle[e]});return t?prefixedValueCache[a]=t:(prefixedValueCache[a]=r,console&&console.warn&&console.warn('Unsupported CSS value "'+r+'" for property "'+e+'"')),prefixedValueCache[a]},getPrefixedStyle=function(e,r){if(r=r||"js",!ExecutionEnvironment.canUseDOM)return Object.keys(e).reduce(function(i,a){var o=e[a],t="css"===r?_camelCaseToDashCase(a):a,s=Array.isArray(o)?o[0]:o;return i[t]=s,i},{});var i={};return Object.keys(e).forEach(function(a){var o=e[a],t=getPrefixedPropertyName(a);if(t===!1)return void(console&&console.warn&&console.warn('Unsupported CSS property "'+a+'"'));var s=_getPrefixedValue(t.js,o,a);i[t[r]]=s}),i};module.exports={getPrefixedPropertyName:getPrefixedPropertyName,getPrefixedStyle:getPrefixedStyle,cssPrefix:prefixInfo.cssPrefix,jsPrefix:prefixInfo.jsPrefix};


},{"array-find":43,"exenv":44}],42:[function(require,module,exports){
(function (process,global){
"use strict";var MouseUpListener=require("./mouse-up-listener"),getState=require("./get-state"),Prefixer=require("./prefixer"),Config=require("./config"),ExecutionEnvironment=require("exenv"),React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,objectAssign=require("object-assign"),mediaQueryListByQueryString={},_isSpecialKey=function(e){return":"===e[0]||"@"===e[0]},_getStyleState=function(e,t,r){return getState(e.state,t,r)},_setStyleState=function(e,t,r){var n=e.state&&e.state._radiumStyleState||{},i={_radiumStyleState:objectAssign({},n)};i._radiumStyleState[t]=i._radiumStyleState[t]||{},objectAssign(i._radiumStyleState[t],r),e.setState(i)},_mergeStyles=function e(t){var r={};return t.forEach(function(t){t&&"object"==typeof t&&!Array.isArray(t)&&Object.keys(t).forEach(function(n){_isSpecialKey(n)&&r[n]?r[n]=e([r[n],t[n]]):r[n]=t[n]})}),r},_mouseUp=function(e){Object.keys(e.state._radiumStyleState).forEach(function(t){_getStyleState(e,t,":active")&&_setStyleState(e,t,{":active":!1})})},_onMediaQueryChange=function(e,t,r){var n={};n[t]=r.matches,_setStyleState(e,"_all",n)},_resolveMediaQueryStyles=function(e,t){return Config.canMatchMedia()?(Object.keys(t).filter(function(e){return"@"===e[0]}).map(function(r){var n=t[r];r=r.replace("@media ","");var i=mediaQueryListByQueryString[r];if(i||(mediaQueryListByQueryString[r]=i=Config.matchMedia(r)),e._radiumMediaQueryListenersByQuery||(e._radiumMediaQueryListenersByQuery={}),!e._radiumMediaQueryListenersByQuery[r]){var o=_onMediaQueryChange.bind(null,e,r);i.addListener(o),e._radiumMediaQueryListenersByQuery[r]={remove:function(){i.removeListener(o)}}}i.matches&&(t=_mergeStyles([t,n]))}),t):t},resolveStyles=function t(e,r,n){if(n=n||{},!r)return r;var i=null,o=r.props.children;if(o){var a=typeof o;if("string"===a||"number"===a)i=o;else if(1===React.Children.count(o)&&o.type){var s=React.Children.only(o);i=t(e,s,n)}else i=React.Children.map(o,function(r){return React.isValidElement(r)?t(e,r,n):r})}if(!React.isValidElement(r)||"string"!=typeof r.type)return o===i?r:React.cloneElement(r,r.props,i);var u=r.props,c=u.style,l={};if(Array.isArray(c)&&(c=_mergeStyles(c)),"production"!==process.env.NODE_ENV){var y=["background","border","borderBottom","borderColor","borderLeft","borderRadius","borderRight","borderStyle","borderTop","borderWidth","font","listStyle","margin","padding","transform","transition"],f=function M(e){if("object"==typeof e){var t=Object.keys(e);y.forEach(function(r){e[r]&&t.some(function(e){return e!==r&&0===e.indexOf(r)})&&console.warn('Radium: property "'+r+'" in style object',c,": do not mix longhand and shorthand properties in the same style object. See https://github.com/FormidableLabs/radium/issues/95 for more information.")}),t.forEach(function(t){return M(e[t])})}};f(c)}if(!c||!Object.keys(c).some(_isSpecialKey))return c?(l.style=Prefixer.getPrefixedStyle(c),React.cloneElement(r,l,i)):i?React.cloneElement(r,{},i):r;var d=r.ref||r.key,S=d||"main";if(n[S])throw new Error("Radium requires each element with interactive styles to have a unique key, set using either the ref or key prop. "+(d?'Key "'+d+'" is a duplicate.':"Multiple elements have no key specified."));n[S]=!0,c=_resolveMediaQueryStyles(e,c);var m={};if(Object.keys(c).forEach(function(e){_isSpecialKey(e)||(m[e]=c[e])}),c[":hover"]||c[":active"]){var v=u.onMouseEnter;l.onMouseEnter=function(t){v&&v(t),_setStyleState(e,S,{":hover":!0})};var p=u.onMouseLeave;l.onMouseLeave=function(t){p&&p(t),_setStyleState(e,S,{":hover":!1})}}if(c[":active"]){var _=u.onMouseDown;l.onMouseDown=function(t){_&&_(t),e._lastMouseDown=Date.now(),_setStyleState(e,S,{":active":!0})}}if(c[":focus"]){var g=u.onFocus;l.onFocus=function(t){g&&g(t),_setStyleState(e,S,{":focus":!0})};var h=u.onBlur;l.onBlur=function(t){h&&h(t),_setStyleState(e,S,{":focus":!1})}}var b=Object.keys(c).filter(function(t){return":active"===t&&_getStyleState(e,S,":active")||":hover"===t&&_getStyleState(e,S,":hover")||":focus"===t&&_getStyleState(e,S,":focus")}).map(function(e){return c[e]});return b.length&&(m=_mergeStyles([m].concat(b))),c[":active"]&&!e._radiumMouseUpListener&&ExecutionEnvironment.canUseEventListeners&&(e._radiumMouseUpListener=MouseUpListener.subscribe(_mouseUp.bind(null,e))),l.style=Prefixer.getPrefixedStyle(m),React.cloneElement(r,l,i)};resolveStyles.__clearStateForTests=function(){mediaQueryListByQueryString={}},module.exports=resolveStyles;


}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./config":34,"./get-state":37,"./mouse-up-listener":40,"./prefixer":41,"_process":50,"exenv":44,"object-assign":45}],43:[function(require,module,exports){
"use strict";function find(n,t,r){if("function"==typeof Array.prototype.find)return n.find(t,r);r=r||this;var f,i=n.length;if("function"!=typeof t)throw new TypeError(t+" is not a function");for(f=0;i>f;f++)if(t.call(r,n[f],f,n))return n[f]}module.exports=find;


},{}],44:[function(require,module,exports){
!function(){"use strict";var e=!("undefined"==typeof window||!window.document||!window.document.createElement),n={canUseDOM:e,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:e&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:e&&!!window.screen};"function"==typeof define&&"object"==typeof define.amd&&define.amd?define(function(){return n}):"undefined"!=typeof module&&module.exports?module.exports=n:window.ExecutionEnvironment=n}();


},{}],45:[function(require,module,exports){
"use strict";function ToObject(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}function ownEnumerableKeys(e){var r=Object.getOwnPropertyNames(e);return Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(e))),r.filter(function(r){return propIsEnumerable.call(e,r)})}var propIsEnumerable=Object.prototype.propertyIsEnumerable;module.exports=Object.assign||function(e,r){for(var t,n,o=ToObject(e),c=1;c<arguments.length;c++){t=arguments[c],n=ownEnumerableKeys(Object(t));for(var u=0;u<n.length;u++)o[n[u]]=t[n[u]]}return o};


},{}],46:[function(require,module,exports){
module.exports.Dispatcher=require("./lib/Dispatcher");


},{"./lib/Dispatcher":47}],47:[function(require,module,exports){
"use strict";function Dispatcher(){this.$Dispatcher_callbacks={},this.$Dispatcher_isPending={},this.$Dispatcher_isHandled={},this.$Dispatcher_isDispatching=!1,this.$Dispatcher_pendingPayload=null}var invariant=require("./invariant"),_lastID=1,_prefix="ID_";Dispatcher.prototype.register=function(i){var t=_prefix+_lastID++;return this.$Dispatcher_callbacks[t]=i,t},Dispatcher.prototype.unregister=function(i){invariant(this.$Dispatcher_callbacks[i],"Dispatcher.unregister(...): `%s` does not map to a registered callback.",i),delete this.$Dispatcher_callbacks[i]},Dispatcher.prototype.waitFor=function(i){invariant(this.$Dispatcher_isDispatching,"Dispatcher.waitFor(...): Must be invoked while dispatching.");for(var t=0;t<i.length;t++){var a=i[t];this.$Dispatcher_isPending[a]?invariant(this.$Dispatcher_isHandled[a],"Dispatcher.waitFor(...): Circular dependency detected while waiting for `%s`.",a):(invariant(this.$Dispatcher_callbacks[a],"Dispatcher.waitFor(...): `%s` does not map to a registered callback.",a),this.$Dispatcher_invokeCallback(a))}},Dispatcher.prototype.dispatch=function(i){invariant(!this.$Dispatcher_isDispatching,"Dispatch.dispatch(...): Cannot dispatch in the middle of a dispatch."),this.$Dispatcher_startDispatching(i);try{for(var t in this.$Dispatcher_callbacks)this.$Dispatcher_isPending[t]||this.$Dispatcher_invokeCallback(t)}finally{this.$Dispatcher_stopDispatching()}},Dispatcher.prototype.isDispatching=function(){return this.$Dispatcher_isDispatching},Dispatcher.prototype.$Dispatcher_invokeCallback=function(i){this.$Dispatcher_isPending[i]=!0,this.$Dispatcher_callbacks[i](this.$Dispatcher_pendingPayload),this.$Dispatcher_isHandled[i]=!0},Dispatcher.prototype.$Dispatcher_startDispatching=function(i){for(var t in this.$Dispatcher_callbacks)this.$Dispatcher_isPending[t]=!1,this.$Dispatcher_isHandled[t]=!1;this.$Dispatcher_pendingPayload=i,this.$Dispatcher_isDispatching=!0},Dispatcher.prototype.$Dispatcher_stopDispatching=function(){this.$Dispatcher_pendingPayload=null,this.$Dispatcher_isDispatching=!1},module.exports=Dispatcher;


},{"./invariant":48}],48:[function(require,module,exports){
"use strict";var invariant=function(r,e,n,i,o,a,t,f){if(!r){var s;if(void 0===e)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var d=[n,i,o,a,t,f],l=0;s=new Error("Invariant Violation: "+e.replace(/%s/g,function(){return d[l++]}))}throw s.framesToPop=1,s}};module.exports=invariant;


},{}],49:[function(require,module,exports){
function EventEmitter(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function isFunction(e){return"function"==typeof e}function isNumber(e){return"number"==typeof e}function isObject(e){return"object"==typeof e&&null!==e}function isUndefined(e){return void 0===e}module.exports=EventEmitter,EventEmitter.EventEmitter=EventEmitter,EventEmitter.prototype._events=void 0,EventEmitter.prototype._maxListeners=void 0,EventEmitter.defaultMaxListeners=10,EventEmitter.prototype.setMaxListeners=function(e){if(!isNumber(e)||0>e||isNaN(e))throw TypeError("n must be a positive number");return this._maxListeners=e,this},EventEmitter.prototype.emit=function(e){var t,n,s,i,r,o;if(this._events||(this._events={}),"error"===e&&(!this._events.error||isObject(this._events.error)&&!this._events.error.length)){if(t=arguments[1],t instanceof Error)throw t;throw TypeError('Uncaught, unspecified "error" event.')}if(n=this._events[e],isUndefined(n))return!1;if(isFunction(n))switch(arguments.length){case 1:n.call(this);break;case 2:n.call(this,arguments[1]);break;case 3:n.call(this,arguments[1],arguments[2]);break;default:for(s=arguments.length,i=new Array(s-1),r=1;s>r;r++)i[r-1]=arguments[r];n.apply(this,i)}else if(isObject(n)){for(s=arguments.length,i=new Array(s-1),r=1;s>r;r++)i[r-1]=arguments[r];for(o=n.slice(),s=o.length,r=0;s>r;r++)o[r].apply(this,i)}return!0},EventEmitter.prototype.addListener=function(e,t){var n;if(!isFunction(t))throw TypeError("listener must be a function");if(this._events||(this._events={}),this._events.newListener&&this.emit("newListener",e,isFunction(t.listener)?t.listener:t),this._events[e]?isObject(this._events[e])?this._events[e].push(t):this._events[e]=[this._events[e],t]:this._events[e]=t,isObject(this._events[e])&&!this._events[e].warned){var n;n=isUndefined(this._maxListeners)?EventEmitter.defaultMaxListeners:this._maxListeners,n&&n>0&&this._events[e].length>n&&(this._events[e].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[e].length),"function"==typeof console.trace&&console.trace())}return this},EventEmitter.prototype.on=EventEmitter.prototype.addListener,EventEmitter.prototype.once=function(e,t){function n(){this.removeListener(e,n),s||(s=!0,t.apply(this,arguments))}if(!isFunction(t))throw TypeError("listener must be a function");var s=!1;return n.listener=t,this.on(e,n),this},EventEmitter.prototype.removeListener=function(e,t){var n,s,i,r;if(!isFunction(t))throw TypeError("listener must be a function");if(!this._events||!this._events[e])return this;if(n=this._events[e],i=n.length,s=-1,n===t||isFunction(n.listener)&&n.listener===t)delete this._events[e],this._events.removeListener&&this.emit("removeListener",e,t);else if(isObject(n)){for(r=i;r-->0;)if(n[r]===t||n[r].listener&&n[r].listener===t){s=r;break}if(0>s)return this;1===n.length?(n.length=0,delete this._events[e]):n.splice(s,1),this._events.removeListener&&this.emit("removeListener",e,t)}return this},EventEmitter.prototype.removeAllListeners=function(e){var t,n;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[e]&&delete this._events[e],this;if(0===arguments.length){for(t in this._events)"removeListener"!==t&&this.removeAllListeners(t);return this.removeAllListeners("removeListener"),this._events={},this}if(n=this._events[e],isFunction(n))this.removeListener(e,n);else for(;n.length;)this.removeListener(e,n[n.length-1]);return delete this._events[e],this},EventEmitter.prototype.listeners=function(e){var t;return t=this._events&&this._events[e]?isFunction(this._events[e])?[this._events[e]]:this._events[e].slice():[]},EventEmitter.listenerCount=function(e,t){var n;return n=e._events&&e._events[t]?isFunction(e._events[t])?1:e._events[t].length:0};


},{}],50:[function(require,module,exports){
function cleanUpNextTick(){draining=!1,currentQueue.length?queue=currentQueue.concat(queue):queueIndex=-1,queue.length&&drainQueue()}function drainQueue(){if(!draining){var e=setTimeout(cleanUpNextTick);draining=!0;for(var n=queue.length;n;){for(currentQueue=queue,queue=[];++queueIndex<n;)currentQueue[queueIndex].run();queueIndex=-1,n=queue.length}currentQueue=null,draining=!1,clearTimeout(e)}}function Item(e,n){this.fun=e,this.array=n}function noop(){}var process=module.exports={},queue=[],draining=!1,currentQueue,queueIndex=-1;process.nextTick=function(e){var n=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)n[r-1]=arguments[r];queue.push(new Item(e,n)),draining||setTimeout(drainQueue,0)},Item.prototype.run=function(){this.fun.apply(null,this.array)},process.title="browser",process.browser=!0,process.env={},process.argv=[],process.version="",process.versions={},process.on=noop,process.addListener=noop,process.once=noop,process.off=noop,process.removeListener=noop,process.removeAllListeners=noop,process.emit=noop,process.binding=function(e){throw new Error("process.binding is not supported")},process.cwd=function(){return"/"},process.chdir=function(e){throw new Error("process.chdir is not supported")},process.umask=function(){return 0};


},{}],51:[function(require,module,exports){
"use strict";var keyMirror=function(r){var e,o={};if(!(r instanceof Object)||Array.isArray(r))throw new Error("keyMirror(...): Argument must be an object.");for(e in r)r.hasOwnProperty(e)&&(o[e]=e);return o};module.exports=keyMirror;


},{}]},{},[22])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9ncnVudC1icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2FjdGlvbnMvZGF0YS1hY3Rpb25zLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9hY3Rpb25zL2ZsYXNoLWFjdGlvbnMuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2FjdGlvbnMvc2V0dXAtcHJvZ3Jlc3MtYWN0aW9ucy5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9jbGllbnQvYWN0aW9ucy9zaXRlLWFjdGlvbnMuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2FjdGlvbnMvc3Bpbm5lci1hY3Rpb25zLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9jb21wb25lbnRzL2FkdmFuY2VkLXNldHRpbmdzLXN0ZXAuanN4IiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9jb21wb25lbnRzL2NvbnRlbnQtYm94LmpzeCIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9jbGllbnQvY29tcG9uZW50cy9kZXNpZ24tc3RlcC5qc3giLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2NvbXBvbmVudHMvZmxhc2guanN4IiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9jb21wb25lbnRzL2dldC1zdGFydGVkLmpzeCIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9jbGllbnQvY29tcG9uZW50cy9qZXRwYWNrLWp1bXBzdGFydC1tZW51LmpzeCIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9jbGllbnQvY29tcG9uZW50cy9qZXRwYWNrLWp1bXBzdGFydC1zdGVwLmpzeCIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9jbGllbnQvY29tcG9uZW50cy9sYXlvdXQtc3RlcC5qc3giLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2NvbXBvbmVudHMvc2l0ZS10aXRsZS1zdGVwLmpzeCIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9jbGllbnQvY29tcG9uZW50cy9za2lwLWJ1dHRvbi5qc3giLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2NvbXBvbmVudHMvdG9vbHRpcC5qc3giLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2NvbXBvbmVudHMvd2VsY29tZS1tZW51LmpzeCIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9jbGllbnQvY29tcG9uZW50cy93ZWxjb21lLXdpZGdldC5qc3giLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2NvbnN0YW50cy9qZXRwYWNrLXN0YXJ0LWNvbnN0YW50cy5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9jbGllbnQvY29uc3RhbnRzL2pldHBhY2stc3RhcnQtcGF0aHMuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2Rpc3BhdGNoZXIvYXBwLWRpc3BhdGNoZXIuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2pldHBhY2stc3RhcnQuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L3N0b3Jlcy9kYXRhLXN0b3JlLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9zdG9yZXMvZmxhc2gtc3RvcmUuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L3N0b3Jlcy9zZXR1cC1wcm9ncmVzcy1zdG9yZS5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9jbGllbnQvc3RvcmVzL3NpdGUtc3RvcmUuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L3N0b3Jlcy9zcGlubmVyLXN0b3JlLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC91dGlscy93cC1hamF4LmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC93ZWxjb21lLXBhbmVsLmpzeCIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9qcy9jb21wb25lbnRzL2J1dHRvbi5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9qcy9jb21wb25lbnRzL3Byb2dyZXNzLWJhci5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9qcy9zdHlsZXMuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL0BhdXRvbWF0dGljL2RvcHMtcmVhY3Qvbm9kZV9tb2R1bGVzL3JhZGl1bS9saWIvY29tcG9uZW50cy9zdHlsZS5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9ub2RlX21vZHVsZXMvcmFkaXVtL2xpYi9jb25maWcuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL0BhdXRvbWF0dGljL2RvcHMtcmVhY3Qvbm9kZV9tb2R1bGVzL3JhZGl1bS9saWIvY3JlYXRlLW1hcmt1cC1mb3Itc3R5bGVzLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9AYXV0b21hdHRpYy9kb3BzLXJlYWN0L25vZGVfbW9kdWxlcy9yYWRpdW0vbGliL2VuaGFuY2VyLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9AYXV0b21hdHRpYy9kb3BzLXJlYWN0L25vZGVfbW9kdWxlcy9yYWRpdW0vbGliL2dldC1zdGF0ZS5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9ub2RlX21vZHVsZXMvcmFkaXVtL2xpYi9pbmRleC5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9ub2RlX21vZHVsZXMvcmFkaXVtL2xpYi9rZXlmcmFtZXMuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL0BhdXRvbWF0dGljL2RvcHMtcmVhY3Qvbm9kZV9tb2R1bGVzL3JhZGl1bS9saWIvbW91c2UtdXAtbGlzdGVuZXIuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL0BhdXRvbWF0dGljL2RvcHMtcmVhY3Qvbm9kZV9tb2R1bGVzL3JhZGl1bS9saWIvcHJlZml4ZXIuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL0BhdXRvbWF0dGljL2RvcHMtcmVhY3Qvbm9kZV9tb2R1bGVzL3JhZGl1bS9saWIvcmVzb2x2ZS1zdHlsZXMuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL0BhdXRvbWF0dGljL2RvcHMtcmVhY3Qvbm9kZV9tb2R1bGVzL3JhZGl1bS9ub2RlX21vZHVsZXMvYXJyYXktZmluZC9maW5kLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9AYXV0b21hdHRpYy9kb3BzLXJlYWN0L25vZGVfbW9kdWxlcy9yYWRpdW0vbm9kZV9tb2R1bGVzL2V4ZW52L2luZGV4LmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9AYXV0b21hdHRpYy9kb3BzLXJlYWN0L25vZGVfbW9kdWxlcy9yYWRpdW0vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL2ZsdXgvaW5kZXguanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL2ZsdXgvbGliL0Rpc3BhdGNoZXIuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL2ZsdXgvbGliL2ludmFyaWFudC5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvZ3J1bnQtYnJvd3NlcmlmeS9ub2RlX21vZHVsZXMvYnJvd3NlcmlmeS9ub2RlX21vZHVsZXMvZXZlbnRzL2V2ZW50cy5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvZ3J1bnQtYnJvd3NlcmlmeS9ub2RlX21vZHVsZXMvYnJvd3NlcmlmeS9ub2RlX21vZHVsZXMvcHJvY2Vzcy9icm93c2VyLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9rZXltaXJyb3IvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQSxHQUFJLGVBQWdCLFFBQVEsZ0NBQzNCLGFBQWUsUUFBUSx3Q0FFcEIsYUFDSCxlQUFnQixXQUNmLGNBQWMsVUFDYixXQUFZLGFBQWEsZ0JBSTNCLGdCQUFpQixXQUNoQixjQUFjLFVBQ2IsV0FBWSxhQUFhLGlCQUs1QixRQUFPLFFBQVU7Ozs7QUNqQmpCLEdBQUksZUFBZ0IsUUFBUSxnQ0FDM0IsYUFBZSxRQUFRLHdDQUVwQixjQUNILE9BQVEsU0FBUyxHQUNoQixjQUFjLFVBQ2IsV0FBWSxhQUFhLFVBQ3pCLFFBQVMsRUFDVCxTQUFVLGFBQWEseUJBSXpCLE1BQU8sU0FBUyxHQUNmLGNBQWMsVUFDYixXQUFZLGFBQWEsVUFDekIsUUFBUyxFQUNULFNBQVUsYUFBYSx3QkFJekIsTUFBTyxXQUNOLGNBQWMsVUFDYixXQUFZLGFBQWEsZUFLNUIsUUFBTyxRQUFVOzs7O0FDM0JqQixHQUFJLGVBQWdCLFFBQVEsZ0NBQzNCLGFBQWUsUUFBUSx3Q0FDdkIsTUFBUSxRQUFRLG9DQUNoQixhQUFlLFFBQVEsbUJB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USxTQUFVLEdBQ3RCLEtBQU0sSUFBSSxPQUFNLG1DQUVwQixRQUFRLE1BQVEsV0FBYSxNQUFPOzs7O0FDeEVwQyxZQW9CQSxJQUFJLFdBQVksU0FBUyxHQUN2QixHQUNJLEdBREEsSUFFSixNQUFNLFlBQWUsVUFBVyxNQUFNLFFBQVEsR0FDNUMsS0FBTSxJQUFJLE9BQU0sOENBRWxCLEtBQUssSUFBTyxHQUNMLEVBQUksZUFBZSxLQUd4QixFQUFJLEdBQU8sRUFFYixPQUFPLEdBR1QsUUFBTyxRQUFVIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsInZhciBBcHBEaXNwYXRjaGVyID0gcmVxdWlyZSgnLi4vZGlzcGF0Y2hlci9hcHAtZGlzcGF0Y2hlcicpLFxuXHRKUFNDb25zdGFudHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvamV0cGFjay1zdGFydC1jb25zdGFudHMnKTtcblxudmFyIERhdGFBY3Rpb25zID0ge1xuXHRyZXF1ZXN0U3RhcnRlZDogZnVuY3Rpb24oKSB7XG5cdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU0FWRV9TVEFSVEVEXG5cdFx0fSk7XG5cdH0sXG5cblx0cmVxdWVzdEZpbmlzaGVkOiBmdW5jdGlvbigpIHtcblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TQVZFX0ZJTklTSEVEXG5cdFx0fSk7XG5cdH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRGF0YUFjdGlvbnM7IiwidmFyIEFwcERpc3BhdGNoZXIgPSByZXF1aXJlKCcuLi9kaXNwYXRjaGVyL2FwcC1kaXNwYXRjaGVyJyksXG5cdEpQU0NvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9qZXRwYWNrLXN0YXJ0LWNvbnN0YW50cycpO1xuXG52YXIgRmxhc2hBY3Rpb25zID0ge1xuXHRub3RpY2U6IGZ1bmN0aW9uKG1zZykge1xuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlNFVF9GTEFTSCxcblx0XHRcdG1lc3NhZ2U6IG1zZyxcblx0XHRcdHNldmVyaXR5OiBKUFNDb25zdGFudHMuRkxBU0hfU0VWRVJJVFlfTk9USUNFXG5cdFx0fSk7XG5cdH0sXG5cblx0ZXJyb3I6IGZ1bmN0aW9uKG1zZykge1xuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlNFVF9GTEFTSCxcblx0XHRcdG1lc3NhZ2U6IG1zZyxcblx0XHRcdHNldmVyaXR5OiBKUFNDb25zdGFudHMuRkxBU0hfU0VWRVJJVFlfRVJST1Jcblx0XHR9KTtcblx0fSxcblxuXHR1bnNldDogZnVuY3Rpb24oKSB7XG5cdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuVU5TRVRfRkxBU0hcblx0XHR9KTtcblx0fVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBGbGFzaEFjdGlvbnM7IiwidmFyIEFwcERpc3BhdGNoZXIgPSByZXF1aXJlKCcuLi9kaXNwYXRjaGVyL2FwcC1kaXNwYXRjaGVyJyksXG5cdEpQU0NvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9qZXRwYWNrLXN0YXJ0LWNvbnN0YW50cycpLFxuXHRQYXRocyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9qZXRwYWNrLXN0YXJ0LXBhdGhzJyksXG5cdEZsYXNoQWN0aW9ucyA9IHJlcXVpcmUoJy4vZmxhc2gtYWN0aW9ucycpLFxuXHRTaXRlQWN0aW9ucyA9IHJlcXVpcmUoJy4vc2l0ZS1hY3Rpb25zJyksXG5cdFdQQWpheCA9IHJlcXVpcmUoJy4uL3V0aWxzL3dwLWFqYXgnKSxcblx0U2V0dXBQcm9ncmVzc1N0b3JlID0gcmVxdWlyZSgnLi4vc3RvcmVzL3NldHVwLXByb2dyZXNzLXN0b3JlJyksXG5cdFNpdGVTdG9yZSA9IHJlcXVpcmUoJy4uL3N0b3Jlcy9zaXRlLXN0b3JlJyk7XG5cbnZhciBTZXR1cFByb2dyZXNzQWN0aW9ucyA9IHtcblx0cmVzZXREYXRhOiBmdW5jdGlvbigpIHtcblx0XHRXUEFqYXguXG5cdFx0XHRwb3N0KEpQUy5zaXRlX2FjdGlvbnMucmVzZXRfZGF0YSkuXG5cdFx0XHRmYWlsKCBmdW5jdGlvbiAoIG1zZyApIHtcblx0XHRcdFx0Rmxhc2hBY3Rpb25zLmVycm9yKFwiRmFpbGVkIHRvIHNhdmUgZGF0YTogXCIgKyBtc2cpO1xuXHRcdFx0fSk7XG5cdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdCAgICAgIFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlJFU0VUX0RBVEFcblx0ICAgIH0pO1xuXHR9LFxuXG5cdGNvbXBsZXRlU3RlcDogZnVuY3Rpb24oc2x1ZywgbWV0YSkge1xuXHRcdHZhciBzdGVwID0gU2V0dXBQcm9ncmVzc1N0b3JlLmdldFN0ZXBGcm9tU2x1ZyhzbHVnKTtcblxuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlNURVBfQ09NUExFVEUsXG5cdFx0XHRzbHVnOiBzbHVnXG5cdCAgICB9KTtcblxuXHRcdC8vIE5PVEU6IHRoaXMgbmVlZHMgdG8gY29tZSBhZnRlciB0aGUgZGlzcGF0Y2gsIHNvIHRoYXQgdGhlIGNvbXBsZXRpb24gJSBcblx0XHQvLyBpcyBhbHJlYWR5IHVwZGF0ZWQgYW5kIGNhbiBiZSBpbmNsdWRlZCBpbiB0aGUgbWV0YWRhdGFcblx0XHR0aGlzLl9yZWNvcmRDb21wbGV0ZShzdGVwLCBtZXRhKTtcblx0fSxcblxuXHRjb21wbGV0ZUFuZE5leHRTdGVwOiBmdW5jdGlvbihzbHVnLCBtZXRhKSB7XG5cdFx0dGhpcy5jb21wbGV0ZVN0ZXAoc2x1ZywgbWV0YSk7XG5cblx0ICAgIEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHQgICAgICBhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU1RFUF9ORVhULFxuXHQgICAgICBzbHVnOiBzbHVnXG5cdCAgICB9KTtcblx0fSxcblxuXHRfcmVjb3JkQ29tcGxldGU6IGZ1bmN0aW9uKHN0ZXAsIG1ldGEpIHtcblx0XHRpZiAodHlwZW9mKG1ldGEpID09PSAndW5kZWZpbmVkJykge1xuXHRcdFx0bWV0YSA9IHt9O1xuXHRcdH1cblxuXHRcdG1ldGEuY29tcGxldGlvbiA9IFNldHVwUHJvZ3Jlc3NTdG9yZS5nZXRQcm9ncmVzc1BlcmNlbnQoKTtcblxuXHRcdFdQQWpheC5cblx0XHQgIFx0cG9zdChKUFMuc3RlcF9hY3Rpb25zLmNvbXBsZXRlLCB7IHN0ZXA6IHN0ZXAuc2x1ZywgZGF0YTogbWV0YSB9KS5cblx0XHRcdGZhaWwoIGZ1bmN0aW9uKG1zZykge1xuXHRcdFx0XHRGbGFzaEFjdGlvbnMuZXJyb3IobXNnKTtcblx0XHRcdH0pO1xuXHR9LFxuXG5cdC8vIG1hcmsgY3VycmVudCBzdGVwIGFzIHNraXBwZWQgYW5kIG1vdmUgb25cblx0c2tpcFN0ZXA6IGZ1bmN0aW9uKCkge1xuXHRcdEZsYXNoQWN0aW9ucy51bnNldCgpO1xuXHRcdFxuXHRcdHZhciBzdGVwID0gU2V0dXBQcm9ncmVzc1N0b3JlLmdldEN1cnJlbnRTdGVwKCk7XG5cblx0XHRpZiAoICEgc3RlcC5za2lwcGVkICkge1xuXHRcdCAgICBXUEFqYXguXG5cdFx0XHRcdHBvc3QoSlBTLnN0ZXBfYWN0aW9ucy5za2lwLCB7IHN0ZXA6IHN0ZXAuc2x1ZyB9KS5cblx0XHRcdFx0ZmFpbCggZnVuY3Rpb24obXNnKSB7XG5cdFx0XHRcdFx0Rmxhc2hBY3Rpb25zLmVycm9yKG1zZyk7XG5cdFx0XHRcdH0pO1xuXHRcdH1cblxuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlNURVBfU0tJUFxuXHQgICAgfSk7XG5cdH0sXG5cblx0Z2V0U3RhcnRlZDogZnVuY3Rpb24oKSB7XG5cdCAgICBXUEFqYXguXG5cdFx0XHRwb3N0KEpQUy5zdGVwX2FjdGlvbnMuc3RhcnQpLlxuXHRcdFx0ZmFpbCggZnVuY3Rpb24obXNnKSB7XG5cdFx0XHRcdEZsYXNoQWN0aW9ucy5lcnJvcihtc2cpO1xuXHRcdFx0fSk7XG5cblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0ICAgICAgYWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlNURVBfR0VUX1NUQVJURURcblx0ICAgIH0pO1xuXHR9LFxuXG5cdHNldEN1cnJlbnRTdGVwOiBmdW5jdGlvbihzbHVnKSB7XG5cdFx0Rmxhc2hBY3Rpb25zLnVuc2V0KCk7XG5cdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdCAgICAgIGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TVEVQX1NFTEVDVCxcblx0ICAgICAgc2x1Zzogc2x1Z1xuXHQgICAgfSk7XG5cdH0sXG5cblx0Ly8gbW92ZXMgb24gdG8gdGhlIG5leHQgc3RlcCwgYnV0IGRvZXNuJ3QgbWFyayBpdCBhcyBcInNraXBwZWRcIlxuXHRzZWxlY3ROZXh0U3RlcDogZnVuY3Rpb24oKSB7XG5cdFx0Rmxhc2hBY3Rpb25zLnVuc2V0KCk7XG5cdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU1RFUF9ORVhUXG5cdCAgICB9KTtcblx0fSxcblxuXHRzdWJtaXRUaXRsZVN0ZXA6IGZ1bmN0aW9uKCkge1xuXHRcdFNpdGVBY3Rpb25zLnNhdmVUaXRsZUFuZERlc2NyaXB0aW9uKCkuZG9uZShmdW5jdGlvbigpIHtcblx0XHRcdHRoaXMuY29tcGxldGVBbmROZXh0U3RlcChQYXRocy5TSVRFX1RJVExFX1NURVBfU0xVRyk7XG5cdFx0fS5iaW5kKHRoaXMpKTtcblx0fSxcblxuXHRzdWJtaXRMYXlvdXRTdGVwOiBmdW5jdGlvbihsYXlvdXQpIHtcblx0XHRTaXRlQWN0aW9ucy5zZXRMYXlvdXQobGF5b3V0KS5kb25lKGZ1bmN0aW9uKCkge1xuXHRcdFx0dGhpcy5jb21wbGV0ZUFuZE5leHRTdGVwKFBhdGhzLkxBWU9VVF9TVEVQX1NMVUcpO1xuXHRcdH0uYmluZCh0aGlzKSk7XG5cdH0sXG5cblx0c3VibWl0SmV0cGFja0p1bXBzdGFydDogZnVuY3Rpb24oKSB7XG5cdFx0U2l0ZUFjdGlvbnMuZW5hYmxlSnVtcHN0YXJ0KCkuZG9uZShmdW5jdGlvbigpIHtcblx0XHRcdHRoaXMuY29tcGxldGVTdGVwKFBhdGhzLkpFVFBBQ0tfTU9EVUxFU19TVEVQX1NMVUcpO1xuXHRcdH0uYmluZCh0aGlzKSk7XG5cdH0sXG5cblx0c2V0QWN0aXZlVGhlbWU6IGZ1bmN0aW9uKHRoZW1lKSB7XG5cdFx0U2l0ZUFjdGlvbnMuc2V0QWN0aXZlVGhlbWUodGhlbWUpLmRvbmUoIGZ1bmN0aW9uICgpIHtcblx0XHRcdHRoaXMuY29tcGxldGVTdGVwKFBhdGhzLkRFU0lHTl9TVEVQX1NMVUcsIHt0aGVtZUlkOiB0aGVtZS5pZH0pO1xuXHRcdH0uYmluZCh0aGlzKSk7XG5cdH0sXG5cblx0c2F2ZURlc2lnblN0ZXA6IGZ1bmN0aW9uKCkge1xuXHRcdHRoaXMuY29tcGxldGVBbmROZXh0U3RlcChQYXRocy5ERVNJR05fU1RFUF9TTFVHLCB7dGhlbWVJZDogU2l0ZVN0b3JlLmdldEFjdGl2ZVRoZW1lSWQoKX0pO1xuXHR9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNldHVwUHJvZ3Jlc3NBY3Rpb25zOyIsInZhciBBcHBEaXNwYXRjaGVyID0gcmVxdWlyZSgnLi4vZGlzcGF0Y2hlci9hcHAtZGlzcGF0Y2hlcicpLFxuXHRKUFNDb25zdGFudHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvamV0cGFjay1zdGFydC1jb25zdGFudHMnKSxcblx0U2l0ZVN0b3JlID0gcmVxdWlyZSgnLi4vc3RvcmVzL3NpdGUtc3RvcmUnKSxcblx0Rmxhc2hBY3Rpb25zID0gcmVxdWlyZSgnLi9mbGFzaC1hY3Rpb25zLmpzJyksXG5cdFNwaW5uZXJBY3Rpb25zID0gcmVxdWlyZSgnLi9zcGlubmVyLWFjdGlvbnMuanMnKSxcblx0V1BBamF4ID0gcmVxdWlyZSgnLi4vdXRpbHMvd3AtYWpheCcpO1xuXG52YXIgU2l0ZUFjdGlvbnMgPSB7XG5cdHNldFRpdGxlOiBmdW5jdGlvbih0aXRsZSkge1xuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlNJVEVfU0VUX1RJVExFLFxuXHRcdFx0dGl0bGU6IHRpdGxlXG5cdCAgICB9KTtcblx0fSxcblxuXHRzZXREZXNjcmlwdGlvbjogZnVuY3Rpb24oZGVzY3JpcHRpb24pIHtcblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TSVRFX1NFVF9ERVNDUklQVElPTixcblx0XHRcdGRlc2NyaXB0aW9uOiBkZXNjcmlwdGlvblxuXHQgICAgfSk7XG5cdH0sXG5cblx0c2F2ZVRpdGxlQW5kRGVzY3JpcHRpb246IGZ1bmN0aW9uKCkge1xuXHRcdHZhciB0aXRsZSA9IFNpdGVTdG9yZS5nZXRUaXRsZSgpO1xuXHRcdHZhciBkZXNjcmlwdGlvbiA9IFNpdGVTdG9yZS5nZXREZXNjcmlwdGlvbigpO1xuXHRcdFxuXHRcdFdQQWpheC5cblx0XHRcdHBvc3QoIEpQUy5zaXRlX2FjdGlvbnMuc2V0X3RpdGxlLCB7IHRpdGxlOiB0aXRsZSwgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uIH0gKS5cblx0XHRcdGZhaWwoIGZ1bmN0aW9uICggbXNnICkge1xuXHRcdFx0XHRGbGFzaEFjdGlvbnMuZXJyb3IoXCJFcnJvciBzZXR0aW5nIHRpdGxlOiBcIittc2cpO1xuXHRcdFx0fSk7XG5cblx0XHRqUXVlcnkoJyN3cC1hZG1pbi1iYXItc2l0ZS1uYW1lIC5hYi1pdGVtJykuaHRtbCh0aXRsZSk7XG5cdFx0Ly8gRmxhc2hBY3Rpb25zLm5vdGljZSggXCJTZXQgdGl0bGUgdG8gJ1wiK3RpdGxlK1wiJyBhbmQgZGVzY3JpcHRpb24gdG8gJ1wiK2Rlc2NyaXB0aW9uK1wiJ1wiICk7XG5cdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU0lURV9TQVZFX1RJVExFX0FORF9ERVNDUklQVElPTixcblx0XHRcdHRpdGxlOiB0aXRsZVxuXHQgICAgfSk7XG5cblx0XHRyZXR1cm4galF1ZXJ5LkRlZmVycmVkKCkucmVzb2x2ZSgpOyAvLyBYWFggSEFDS1xuXHR9LFxuXG5cdF9pbnN0YWxsVGhlbWU6IGZ1bmN0aW9uICggdGhlbWUgKSB7XG5cdFx0aWYgKCAhIHRoZW1lLmluc3RhbGxlZCApIHtcblx0XHRcdFNwaW5uZXJBY3Rpb25zLnNob3coXCJJbnN0YWxsaW5nICdcIit0aGVtZS5uYW1lK1wiJ1wiKTtcblx0XHRcdHJldHVybiBXUEFqYXguXG5cdFx0XHRcdHBvc3QoIEpQUy5zaXRlX2FjdGlvbnMuaW5zdGFsbF90aGVtZSwgeyB0aGVtZUlkOiB0aGVtZS5pZCB9ICkuXG5cdFx0XHRcdGRvbmUoIGZ1bmN0aW9uICggKSB7XG5cdFx0XHRcdFx0dGhlbWUuaW5zdGFsbGVkID0gdHJ1ZTtcblx0XHRcdFx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdFx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TSVRFX0lOU1RBTExfVEhFTUUsXG5cdFx0XHRcdFx0XHR0aGVtZTogdGhlbWVcblx0XHRcdFx0ICAgIH0pO1xuXHRcdFx0XHR9KS5cblx0XHRcdFx0ZmFpbCggZnVuY3Rpb24gKCBtc2cgKSB7XG5cdFx0XHRcdFx0Rmxhc2hBY3Rpb25zLmVycm9yKFwiU2VydmVyIGVycm9yIGluc3RhbGxpbmcgdGhlbWU6IFwiK21zZyk7XG5cdFx0XHRcdH0pLlxuXHRcdFx0XHRhbHdheXMoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFNwaW5uZXJBY3Rpb25zLmhpZGUoKTtcblx0XHRcdFx0fSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoKS5yZXNvbHZlKCk7XG5cdFx0fVxuXHR9LFxuXG5cdF9hY3RpdmF0ZVRoZW1lOiBmdW5jdGlvbiAoIHRoZW1lICkge1xuXHRcdFdQQWpheC5cblx0XHRcdHBvc3QoIEpQUy5zaXRlX2FjdGlvbnMuc2V0X3RoZW1lLCB7IHRoZW1lSWQ6IHRoZW1lLmlkIH0gKS5cblx0XHRcdGZhaWwoIGZ1bmN0aW9uICggbXNnICkge1xuXHRcdFx0XHRGbGFzaEFjdGlvbnMuZXJyb3IoXCJTZXJ2ZXIgZXJyb3Igc2V0dGluZyB0aGVtZTogXCIrbXNnKTtcblx0XHRcdH0pO1xuXG5cdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU0lURV9TRVRfVEhFTUUsXG5cdFx0XHR0aGVtZUlkOiB0aGVtZS5pZFxuXHQgICAgfSk7XG5cdH0sXG5cblx0c2V0QWN0aXZlVGhlbWU6IGZ1bmN0aW9uKCB0aGVtZSApIHtcblxuXHRcdHRoaXMuX2luc3RhbGxUaGVtZSh0aGVtZSkuXG5cdFx0XHRkb25lKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0dGhpcy5fYWN0aXZhdGVUaGVtZSh0aGVtZSk7XG5cdFx0XHR9LmJpbmQodGhpcykpO1xuXG5cdFx0cmV0dXJuIGpRdWVyeS5EZWZlcnJlZCgpLnJlc29sdmUoKTsgLy8gWFhYIEhBQ0tcblx0fSxcblxuXHRzZXRMYXlvdXQ6IGZ1bmN0aW9uKCBsYXlvdXROYW1lICkge1xuXHRcblx0XHRXUEFqYXguXG5cdFx0XHRwb3N0KCBKUFMuc2l0ZV9hY3Rpb25zLnNldF9sYXlvdXQsIHsgbGF5b3V0OiBsYXlvdXROYW1lIH0gKS5cblx0XHRcdGZhaWwoIGZ1bmN0aW9uIChtc2cgKSB7XG5cdFx0XHRcdEZsYXNoQWN0aW9ucy5lcnJvcihcIkVycm9yIHNldHRpbmcgbGF5b3V0OiBcIittc2cpO1xuXHRcdFx0fSk7XG5cblx0XHQvLyBGbGFzaEFjdGlvbnMubm90aWNlKFwiU2V0IGxheW91dCB0byBcIitsYXlvdXROYW1lKTtcblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TSVRFX1NFVF9MQVlPVVQsXG5cdFx0XHRsYXlvdXQ6IGxheW91dE5hbWVcblx0ICAgIH0pO1xuXG5cdCAgICByZXR1cm4galF1ZXJ5LkRlZmVycmVkKCkucmVzb2x2ZSgpOyAvLyBYWFggSEFDS1xuXHR9LFxuXG5cdGNvbmZpZ3VyZUpldHBhY2s6IGZ1bmN0aW9uKHJldHVybl90b19zdGVwKSB7XG5cdFx0U3Bpbm5lckFjdGlvbnMuc2hvdyhcIkNvbm5lY3RpbmcgdG8gV29yZFByZXNzLmNvbVwiKTtcblx0XHRyZXR1cm4gV1BBamF4LlxuXHRcdFx0cG9zdCggSlBTLnNpdGVfYWN0aW9ucy5jb25maWd1cmVfamV0cGFjaywgeyByZXR1cm5fdG9fc3RlcDogcmV0dXJuX3RvX3N0ZXAgfSApLlxuXHRcdFx0ZG9uZSggZnVuY3Rpb24gKCBkYXRhICkge1xuXHRcdFx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU0lURV9KRVRQQUNLX0NPTkZJR1VSRURcblx0XHRcdCAgICB9KTtcblxuXHRcdFx0XHRpZiAoIGRhdGEubmV4dCApIHtcblx0XHRcdFx0XHR3aW5kb3cubG9jYXRpb24ucmVwbGFjZShkYXRhLm5leHQpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFNwaW5uZXJBY3Rpb25zLmhpZGUoKTtcblx0XHRcdFx0fVxuXHRcdFx0fSkuXG5cdFx0XHRmYWlsKCBmdW5jdGlvbiAoIG1zZyApIHtcblx0XHRcdFx0Rmxhc2hBY3Rpb25zLmVycm9yKFwiRXJyb3IgZW5hYmxpbmcgSmV0cGFjazogXCIrbXNnKTtcblx0XHRcdFx0U3Bpbm5lckFjdGlvbnMuaGlkZSgpO1xuXHRcdFx0fSk7XG5cdH0sXG5cblx0YWN0aXZhdGVKZXRwYWNrTW9kdWxlOiBmdW5jdGlvbihtb2R1bGVfc2x1Zykge1xuXG5cdFx0V1BBamF4LlxuXHRcdFx0cG9zdCggSlBTLnNpdGVfYWN0aW9ucy5hY3RpdmF0ZV9qZXRwYWNrX21vZHVsZXMsIHsgbW9kdWxlczogW21vZHVsZV9zbHVnXSB9KS5cblx0XHRcdGZhaWwoIGZ1bmN0aW9uICggbXNnICkge1xuXHRcdFx0XHRGbGFzaEFjdGlvbnMuZXJyb3IoXCJFcnJvciBhY3RpdmF0aW5nIEpldHBhY2sgbW9kdWxlOiBcIittc2cpO1xuXHRcdFx0fSk7XG5cblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TSVRFX0pFVFBBQ0tfTU9EVUxFX0VOQUJMRUQsXG5cdFx0XHRzbHVnOiBtb2R1bGVfc2x1Z1xuXHQgICAgfSk7XG5cblx0XHRyZXR1cm4galF1ZXJ5LkRlZmVycmVkKCkucmVzb2x2ZSgpOyAvLyBYWFggSEFDS1xuXHR9LFxuXG5cdGRlYWN0aXZhdGVKZXRwYWNrTW9kdWxlOiBmdW5jdGlvbihtb2R1bGVfc2x1Zykge1xuXG5cdFx0V1BBamF4LlxuXHRcdFx0cG9zdCggSlBTLnNpdGVfYWN0aW9ucy5kZWFjdGl2YXRlX2pldHBhY2tfbW9kdWxlcywgeyBtb2R1bGVzOiBbbW9kdWxlX3NsdWddIH0pLlxuXHRcdFx0ZmFpbCggZnVuY3Rpb24gKCBtc2cgKSB7XG5cdFx0XHRcdEZsYXNoQWN0aW9ucy5lcnJvcihcIkVycm9yIGRlYWN0aXZhdGluZyBKZXRwYWNrIG1vZHVsZTogXCIrbXNnKTtcblx0XHRcdH0pO1xuXG5cdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU0lURV9KRVRQQUNLX01PRFVMRV9ESVNBQkxFRCxcblx0XHRcdHNsdWc6IG1vZHVsZV9zbHVnXG5cdCAgICB9KTtcblxuXHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoKS5yZXNvbHZlKCk7IC8vIFhYWCBIQUNLXG5cdH0sXG5cblx0bG9hZEFsbEpldHBhY2tNb2R1bGVzOiBmdW5jdGlvbigpIHtcblx0XHRpZiAoIFNpdGVTdG9yZS5nZXRKZXRwYWNrQWRkaXRpb25hbE1vZHVsZXMoKS5sZW5ndGggPT09IDAgKSB7XG5cdFx0XHRyZXR1cm4gV1BBamF4LlxuXHRcdFx0XHRwb3N0KCBKUFMuc2l0ZV9hY3Rpb25zLmxpc3RfamV0cGFja19tb2R1bGVzICkuXG5cdFx0XHRcdGRvbmUoIGZ1bmN0aW9uICggYWxsX21vZHVsZXMgKSB7XG5cdFx0XHRcdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRcdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU0lURV9KRVRQQUNLX0FERF9NT0RVTEVTLFxuXHRcdFx0XHRcdFx0bW9kdWxlczogYWxsX21vZHVsZXNcblx0XHRcdFx0ICAgIH0pO1xuXHRcdFx0XHR9KS5cblx0XHRcdFx0ZmFpbCggZnVuY3Rpb24gKCBtc2cgKSB7XG5cdFx0XHRcdFx0Rmxhc2hBY3Rpb25zLmVycm9yKFwiRXJyb3IgZmV0Y2hpbmcgYWxsIEpldHBhY2sgbW9kdWxlczogXCIrbXNnKTtcblx0XHRcdFx0fSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoKS5yZXNvbHZlKCk7IC8vIFhYWCBIQUNLXG5cdFx0fVxuXHR9LFxuXG5cdGVuYWJsZUp1bXBzdGFydDogZnVuY3Rpb24oKSB7XG5cdFx0V1BBamF4LlxuXHRcdFx0cG9zdCggSlBTLnNpdGVfYWN0aW9ucy5hY3RpdmF0ZV9qZXRwYWNrX21vZHVsZXMsIHsgbW9kdWxlczogU2l0ZVN0b3JlLmdldEp1bXBzdGFydE1vZHVsZVNsdWdzKCkgfSkuXG5cdFx0XHRmYWlsKCBmdW5jdGlvbiAoIG1zZyApIHtcblx0XHRcdFx0Rmxhc2hBY3Rpb25zLmVycm9yKFwiRXJyb3IgYWN0aXZhdGluZyBKZXRwYWNrIG1vZHVsZXM6IFwiK21zZyk7XG5cdFx0XHR9KTtcblxuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlNJVEVfSkVUUEFDS19KVU1QU1RBUlRfRU5BQkxFRFxuXHQgICAgfSk7XG5cblx0XHRyZXR1cm4galF1ZXJ5LkRlZmVycmVkKCkucmVzb2x2ZSgpOyAvLyBYWFggSEFDS1xuXHR9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNpdGVBY3Rpb25zOyIsInZhciBBcHBEaXNwYXRjaGVyID0gcmVxdWlyZSgnLi4vZGlzcGF0Y2hlci9hcHAtZGlzcGF0Y2hlcicpLFxuXHRKUFNDb25zdGFudHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvamV0cGFjay1zdGFydC1jb25zdGFudHMnKTtcblxudmFyIFNwaW5uZXJBY3Rpb25zID0ge1xuXHRzaG93OiBmdW5jdGlvbihtc2cpIHtcblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TSE9XX1NQSU5ORVIsXG5cdFx0XHRtZXNzYWdlOiBtc2dcblx0XHR9KTtcblx0fSxcblxuXHRoaWRlOiBmdW5jdGlvbigpIHtcblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5ISURFX1NQSU5ORVIsXG5cdFx0fSk7XHRcblx0fSxcblxuXHRzaG93QXN5bmM6IGZ1bmN0aW9uKG1zZykge1xuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlNIT1dfQVNZTkNfU1BJTk5FUixcblx0XHRcdG1lc3NhZ2U6IG1zZ1xuXHRcdH0pO1x0XHRcblx0fSxcblxuXHRoaWRlQXN5bmM6IGZ1bmN0aW9uKCkge1xuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLkhJREVfQVNZTkNfU1BJTk5FUlxuXHRcdH0pO1x0XHRcdFxuXHR9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNwaW5uZXJBY3Rpb25zOyIsInZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93LlJlYWN0IDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbC5SZWFjdCA6IG51bGwpLFxuXHRCdXR0b24gPSByZXF1aXJlKCdAYXV0b21hdHRpYy9kb3BzLXJlYWN0L2pzL2NvbXBvbmVudHMvYnV0dG9uJyksXG5cdFNpdGVTdG9yZSA9IHJlcXVpcmUoJy4uL3N0b3Jlcy9zaXRlLXN0b3JlJyk7XG5cbnZhciBBZHZhbmNlZFNldHRpbmdzU3RlcCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtkaXNwbGF5TmFtZTogXCJBZHZhbmNlZFNldHRpbmdzU3RlcFwiLFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2NsYXNzTmFtZTogXCJ3ZWxjb21lX19zZWN0aW9uXCIsIGlkOiBcIndlbGNvbWVfX2FkdmFuY2VkXCJ9LCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImg0XCIsIG51bGwsIFwiQWR2YW5jZWQgc2V0dGluZ3NcIiksIFxuXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiLCB7Y2xhc3NOYW1lOiBcIndlbGNvbWVfX2FkdmFuY2VkXCJ9LCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwibGlcIiwgbnVsbCwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDVcIiwgbnVsbCwgXCJGaW5lLXR1bmUgeW91ciBzaXRlJ3MgbGF5b3V0IGFuZCBhcHBlYXJhbmNlXCIpLCBcblx0XHRcdFx0XHRcdFwiQ3VzdG9taXplIHlvdXIgc2l0ZeKAmXMgY29sb3JzLCBmb250cywgc2lkZWJhcnMgYW5kIG90aGVyIHNldHRpbmdzLlwiLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJiclwiLCBudWxsKSwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwge2NvbG9yOiBcImJsdWVcIiwgaHJlZjogSlBTLnN0ZXBzLmFkdmFuY2VkX3NldHRpbmdzLmN1c3RvbWl6ZV91cmx9LCBcIkN1c3RvbWl6ZSBteSBzaXRlXCIpLCBcblx0XHRcdFx0XHRcdFwiwqBcIiArICcgJyArXG5cdFx0XHRcdFx0XHRcIsKgXCIsIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHtjb2xvcjogXCJibHVlXCIsIGhyZWY6IEpQUy5zdGVwcy5hZHZhbmNlZF9zZXR0aW5ncy50aGVtZXNfdXJsfSwgXCJCcm93c2UgYW5kIGFkZCB0aGVtZXNcIilcblx0XHRcdFx0XHRcdFxuXHRcdFx0XHRcdCksIFxuXHRcdFx0XHRcdChTaXRlU3RvcmUuZ2V0TGF5b3V0KCkgPT0gJ2Jsb2cnIHx8IFNpdGVTdG9yZS5nZXRMYXlvdXQoKSA9PSAnc2l0ZS1ibG9nJykgJiYgKFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIG51bGwsIFxuXHRcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDVcIiwgbnVsbCwgXCJDcmVhdGUgeW91ciBmaXJzdCBibG9nIHBvc3RcIiksIFxuXHRcdFx0XHRcdFx0XHRcIkFuIGVwaWMgZXNzYXkgb3IganVzdCBcXFwiSGVsbG8gV29ybGQhXFxcIlwiLCBcblx0XHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImJyXCIsIG51bGwpLCBcblx0XHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHtjb2xvcjogXCJibHVlXCIsIGhyZWY6IEpQUy5zdGVwcy5hZHZhbmNlZF9zZXR0aW5ncy5uZXdfYmxvZ19wb3N0X3VybH0sIFwiV3JpdGUgYSBuZXcgYmxvZyBwb3N0XCIpLCBcblx0XHRcdFx0XHRcdFx0XCLCoMKgXCIsIFxuXHRcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwge2NvbG9yOiBcImJsdWVcIiwgaHJlZjogSlBTLnN0ZXBzLmFkdmFuY2VkX3NldHRpbmdzLm1hbmFnZV9wb3N0c191cmx9LCBcIk1hbmFnZSBwb3N0c1wiKVxuXHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdCksIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCBudWxsLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoNVwiLCBudWxsLCBcIkNyZWF0ZSBhIHN0YXRpYyBwYWdlXCIpLCBcblx0XHRcdFx0XHRcdFwiXFxcIkFib3V0IG1lXFxcIiwgXFxcIk91ciBTZXJ2aWNlc1xcXCIgb3IgYW55dGhpbmcgZWxzZSB5b3UgY2FuIGltYWdpbmUuXCIsIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImJyXCIsIG51bGwpLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7Y29sb3I6IFwiYmx1ZVwiLCBocmVmOiBKUFMuc3RlcHMuYWR2YW5jZWRfc2V0dGluZ3MubmV3X3BhZ2VfdXJsfSwgXCJDcmVhdGUgYSBuZXcgcGFnZVwiKSwgXG5cdFx0XHRcdFx0XHRcIsKgwqBcIiwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwge2NvbG9yOiBcImJsdWVcIiwgaHJlZjogSlBTLnN0ZXBzLmFkdmFuY2VkX3NldHRpbmdzLm1hbmFnZV9wYWdlc191cmx9LCBcIk1hbmFnZSBwYWdlc1wiKVxuXHRcdFx0XHRcdCksIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCBudWxsLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoNVwiLCBudWxsLCBcIkV4dGVuZCB5b3VyIHNpdGUncyBmdW5jdGlvbmFsaXR5XCIpLCBcblx0XHRcdFx0XHRcdFwiV29yZFByZXNzIG9mZmVycyB0aG91c2FuZHMgb2YgcGx1Z2lucyBmcm9tIEpldHBhY2sgYW5kIHRoZSBXb3JkUHJlc3MgY29tbXVuaXR5LlwiLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJiclwiLCBudWxsKSwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwge2NvbG9yOiBcImJsdWVcIiwgaHJlZjogSlBTLnN0ZXBzLmFkdmFuY2VkX3NldHRpbmdzLnBsdWdpbnNfdXJsfSwgXCJNYW5hZ2UgcGx1Z2luc1wiKSwgXG5cdFx0XHRcdFx0XHRcIsKgXCIgKyAnICcgK1xuXHRcdFx0XHRcdFx0XCLCoFwiLCBcblx0XHRcdFx0XHRcdFNpdGVTdG9yZS5nZXRKZXRwYWNrQ29uZmlndXJlZCgpICYmIChcblx0XHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHtjb2xvcjogXCJibHVlXCIsIGhyZWY6IEpQUy5zdGVwcy5hZHZhbmNlZF9zZXR0aW5ncy5qZXRwYWNrX21vZHVsZXNfdXJsfSwgXCJNYW5hZ2UgSmV0cGFjayBtb2R1bGVzXCIpXG5cdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0KSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIG51bGwsIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImg1XCIsIG51bGwsIFwiTGVhcm4gbW9yZVwiKSwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCB7aHJlZjogXCJodHRwczovL2NvZGV4LndvcmRwcmVzcy5vcmcvRmlyc3RfU3RlcHNfV2l0aF9Xb3JkUHJlc3NcIn0sIFwiRmlyc3QgU3RlcHMgd2l0aCBXb3JkUHJlc3NcIiksIFwiIC0gYW4gb25saW5lIGd1aWRlIGZyb20gdGhlIGNyZWF0b3JzIG9mIFdvcmRQcmVzc1wiXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpXG5cdFx0XHQpXG5cdFx0KTtcblx0fVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gQWR2YW5jZWRTZXR0aW5nc1N0ZXA7IiwidmFyIFJlYWN0ID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3cuUmVhY3QgOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsLlJlYWN0IDogbnVsbCk7XG5cbnZhciBDb250ZW50Qm94ID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiBcIkNvbnRlbnRCb3hcIixcblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gKFxuXHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiBcIndlbGNvbWVfX2NvbnRlbnRfYm94XCJ9LCBcblx0XHRcdFx0dGhpcy5wcm9wcy5jaGlsZHJlbiwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2NsYXNzTmFtZTogXCJjbGVhclwifSlcblx0XHRcdClcblx0XHQpO1xuXHR9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBDb250ZW50Qm94OyIsInZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93LlJlYWN0IDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbC5SZWFjdCA6IG51bGwpLFxuXHRTaXRlU3RvcmUgPSByZXF1aXJlKCcuLi9zdG9yZXMvc2l0ZS1zdG9yZScpLFxuXHRTZXR1cFByb2dyZXNzQWN0aW9ucyA9IHJlcXVpcmUoJy4uL2FjdGlvbnMvc2V0dXAtcHJvZ3Jlc3MtYWN0aW9ucycpLFxuXHRUb29sdGlwID0gcmVxdWlyZSgnLi90b29sdGlwJyksXG5cdENvbnRlbnRCb3ggPSByZXF1aXJlKCcuL2NvbnRlbnQtYm94JyksXG5cdEJ1dHRvbiA9IHJlcXVpcmUoJ0BhdXRvbWF0dGljL2RvcHMtcmVhY3QvanMvY29tcG9uZW50cy9idXR0b24nKTtcblxuZnVuY3Rpb24gZ2V0VGhlbWVTdGF0ZSgpIHtcblx0cmV0dXJuIHsgdGhlbWVzOiBTaXRlU3RvcmUuZ2V0VGhlbWVzKCkgfTtcbn1cblxudmFyIERlc2lnblN0ZXAgPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiRGVzaWduU3RlcFwiLFxuXG5cdGNvbXBvbmVudERpZE1vdW50OiBmdW5jdGlvbigpIHtcblx0XHRTaXRlU3RvcmUuYWRkQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuXHRcdHRoaXMuX2xvYWRQb3B1bGFyVGhlbWVzKCk7XG5cdH0sXG5cblx0Y29tcG9uZW50V2lsbFVubW91bnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFNpdGVTdG9yZS5yZW1vdmVDaGFuZ2VMaXN0ZW5lcih0aGlzLl9vbkNoYW5nZSk7XG5cdH0sXG5cblx0X29uQ2hhbmdlOiBmdW5jdGlvbigpIHtcbiAgICBcdHRoaXMuc2V0U3RhdGUoZ2V0VGhlbWVTdGF0ZSgpKTtcbiAgXHR9LFxuXG5cdGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGluaXRpYWxTdGF0ZSA9IGdldFRoZW1lU3RhdGUoKTtcblx0XHRpbml0aWFsU3RhdGUucG9wdWxhclRoZW1lcyA9IFtdO1xuXHRcdHJldHVybiBpbml0aWFsU3RhdGU7XG5cdH0sXG5cblx0aGFuZGxlQWN0aXZhdGVUaGVtZTogZnVuY3Rpb24gKCBlICkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcblx0XHR0aGlzLnNldFN0YXRlKHt0b29sdGlwVGhlbWU6IG51bGwsIHRvb2x0aXBQb3NpdGlvbjogbnVsbH0pO1xuXG5cdFx0dmFyICRlbCA9IGpRdWVyeShlLmN1cnJlbnRUYXJnZXQpLFxuXHRcdFx0dGhlbWVJZCA9ICRlbC5kYXRhKCd0aGVtZS1pZCcpLFxuXHRcdFx0dGhlbWUgPSB0aGlzLmZpbmRUaGVtZSh0aGVtZUlkKSxcblx0XHRcdG5lZWRzSW5zdGFsbGF0aW9uID0gIXRoZW1lLmluc3RhbGxlZDtcblxuXHRcdHZhciByZXNwb25zZSA9IFNldHVwUHJvZ3Jlc3NBY3Rpb25zLnNldEFjdGl2ZVRoZW1lKHRoZW1lKTtcblxuXHRcdC8vIGlmIHdlIGp1c3QgaW5zdGFsbGVkIGEgdGhlbWUgZnJvbSB0aGUgXCJwb3B1bGFyXCIgbGlzdCwgbGV0J3MgbG9hZCBzb21lIG5ld1xuXHRcdC8vIHNlbGVjdGlvbnMgb25jZSBpbnN0YWxsYXRpb24gaXMgZmluaXNoZWRcblx0XHRpZiAoIG5lZWRzSW5zdGFsbGF0aW9uICkge1xuXHRcdFx0cmVzcG9uc2UuZG9uZSggZnVuY3Rpb24gKCkge1xuXHRcdFx0XHR0aGlzLl9sb2FkUG9wdWxhclRoZW1lcygpO1xuXHRcdFx0fS5iaW5kKHRoaXMpKTtcblx0XHR9XG5cdH0sXG5cblx0ZmluZFRoZW1lOiBmdW5jdGlvbiAoIHRoZW1lSWQgKVx0e1xuXHRcdHJldHVybiBfLmZpbmRXaGVyZSh0aGlzLnN0YXRlLnRoZW1lcywge2lkOiB0aGVtZUlkfSkgfHwgXy5maW5kV2hlcmUodGhpcy5zdGF0ZS5wb3B1bGFyVGhlbWVzLCB7aWQ6IHRoZW1lSWR9KTtcblx0fSxcblxuXHRoYW5kbGVDb250aW51ZTogZnVuY3Rpb24gKCBlICkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRTZXR1cFByb2dyZXNzQWN0aW9ucy5zYXZlRGVzaWduU3RlcCgpO1xuXHR9LFxuXG5cdGhhbmRsZVNob3dUb29sdGlwOiBmdW5jdGlvbiAoIGUgKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG5cdFx0dmFyICRlbCAgID0galF1ZXJ5KGUuY3VycmVudFRhcmdldCksXG5cdFx0XHR0aGVtZSA9IHRoaXMuZmluZFRoZW1lKCRlbC5kYXRhKCd0aGVtZS1pZCcpKSxcblx0XHRcdG9mZnNldCA9ICRlbC5wb3NpdGlvbigpLFxuXHRcdFx0d2lkdGggPSAkZWwub3V0ZXJXaWR0aCgpLFxuXHRcdFx0aGVpZ2h0ID0gJGVsLm91dGVySGVpZ2h0KCk7XG5cdFx0XG5cdFx0Ly9kZXNjcmliZXMgYSBwb3NpdGlvbiBpbiB0aGUgbWlkZGxlIG9mIHRoZSByaWdodCBzaWRlXG5cdFx0dmFyIHBvc2l0aW9uID0ge1xuXHRcdFx0dG9wOiBvZmZzZXQudG9wICsgKGhlaWdodC8yKSxcblx0XHRcdGxlZnQ6IG9mZnNldC5sZWZ0ICsgd2lkdGhcblx0XHR9O1xuXG5cdFx0dGhpcy5zZXRTdGF0ZSh7dG9vbHRpcFRoZW1lOiB0aGVtZSwgdG9vbHRpcFBvc2l0aW9uOiBwb3NpdGlvbn0pO1xuXHR9LFxuXG5cdGhhbmRsZUhpZGVUb29sdGlwOiBmdW5jdGlvbiAoIGUgKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdHRoaXMuc2V0U3RhdGUoe3Rvb2x0aXBUaGVtZTogbnVsbCwgdG9vbHRpcFBvc2l0aW9uOiBudWxsfSk7XG5cdH0sXG5cblx0aGFuZGxlR2V0UG9wdWxhclRoZW1lczogZnVuY3Rpb24gKCBlICkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHR0aGlzLl9sb2FkUG9wdWxhclRoZW1lcygpO1x0XHRcblx0fSxcblxuXHRfbG9hZFBvcHVsYXJUaGVtZXM6IGZ1bmN0aW9uKCkge1xuXHRcdFNpdGVTdG9yZS5nZXRQb3B1bGFyVGhlbWVzKCkuZG9uZShmdW5jdGlvbih0aGVtZXMpIHtcblx0XHRcdHRoaXMuc2V0U3RhdGUoe3BvcHVsYXJUaGVtZXM6IHRoZW1lc30pO1xuXHRcdH0uYmluZCh0aGlzKSk7XG5cdH0sXG5cblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblxuXHRcdHJldHVybiAoXG5cdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IFwid2VsY29tZV9fc2VjdGlvblwiLCBpZDogXCJ3ZWxjb21lX19kZXNpZ25cIn0sIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDRcIiwgbnVsbCwgXCJQaWNrIGEgZGVzaWduXCIpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge2NsYXNzTmFtZTogXCJzdGVwLWRlc2NyaXB0aW9uXCJ9LCBcIkEgXFxcInRoZW1lXFxcIiBjb250cm9scyB0aGUgZGVzaWduIG9mIHlvdXIgc2l0ZSAtIGNvbG91cnMsIGZvbnRzIGFuZCBsYXlvdXQuXCIpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge2NsYXNzTmFtZTogXCJzdGVwLWRlc2NyaXB0aW9uXCJ9LCBcIkNsaWNrIGFueSB0aGVtZSBiZWxvdyB0byBjaG9vc2UgaXQgZm9yIHlvdXIgc2l0ZS4gQW5kIGRvbid0IHdvcnJ5IC0geW91IGNhbiBlYXNpbHkgY2hhbmdlIHRoaXMgbGF0ZXIuXCIpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge2NsYXNzTmFtZTogXCJzdWJtaXRcIn0sIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7Y29sb3I6IFwiYmx1ZVwiLCBvbkNsaWNrOiB0aGlzLmhhbmRsZUNvbnRpbnVlfSwgXCJOZXh0IFN0ZXAg4oaSXCIpXG5cdFx0XHRcdCksIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KENvbnRlbnRCb3gsIG51bGwsIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoM1wiLCBudWxsLCBcIkluc3RhbGxlZCB0aGVtZXNcIiksIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2NsYXNzTmFtZTogXCJ0aGVtZS1icm93c2VyIHJlbmRlcmVkXCJ9LCBcblx0XHRcdFx0XHRcdHRoaXMuX3JlbmRlclRoZW1lTGlzdCgpXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpLCBcblx0XHRcdFx0XG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGVudEJveCwgbnVsbCwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImgzXCIsIG51bGwsIFwiUG9wdWxhciB0aGVtZXMgZnJvbSBXb3JkUHJlc3Mub3JnXCIsIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7Y29sb3I6IFwiYmx1ZVwiLCBzdHlsZToge2Zsb2F0OiAncmlnaHQnfSwgb25DbGljazogdGhpcy5oYW5kbGVHZXRQb3B1bGFyVGhlbWVzfSwgXCJMb2FkIG1vcmUgdGhlbWVzXCIpXG5cdFx0XHRcdFx0KSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiBcInRoZW1lLWJyb3dzZXIgcmVuZGVyZWRcIn0sIFxuXHRcdFx0XHRcdFx0dGhpcy5fcmVuZGVyUG9wdWxhclRoZW1lTGlzdCgpXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpLCBcblxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtzdHlsZToge2NsZWFyOiAnYm90aCd9fSksIFxuXHRcdFx0XHR0aGlzLnN0YXRlLnRvb2x0aXBUaGVtZSAmJiB0aGlzLl9yZW5kZXJUb29sdGlwKClcblx0XHRcdClcblx0XHQpO1xuXHR9LFxuXG5cdF9yZW5kZXJUb29sdGlwOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgdGhlbWUgPSB0aGlzLnN0YXRlLnRvb2x0aXBUaGVtZSwgcG9zaXRpb24gPSB0aGlzLnN0YXRlLnRvb2x0aXBQb3NpdGlvbjtcblx0XHRyZXR1cm4gKFxuXHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChUb29sdGlwLCB7XG5cdFx0XHRcdGxlZnQ6IHBvc2l0aW9uLmxlZnQsIFxuXHRcdFx0XHR0b3A6IHBvc2l0aW9uLnRvcCwgXG5cdFx0XHRcdHdpZHRoOiAzMjAsIFxuXHRcdFx0XHR0aXRsZTogdGhlbWUubmFtZX0sIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCBudWxsLCBcIkJ5IFwiLCB0aGVtZS5hdXRob3IpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge2Rhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7X19odG1sOiBfLnVuZXNjYXBlKHRoZW1lLmRlc2NyaXB0aW9uKX19KVxuXHRcdFx0KVxuXHRcdCk7XG5cdH0sXG5cblx0X3JlbmRlclRoZW1lOiBmdW5jdGlvbih0aGVtZSkge1xuXHRcdHJldHVybiAoXG5cdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtrZXk6IHRoZW1lLmlkLCBcblx0XHRcdFx0Y2xhc3NOYW1lOiAndGhlbWUnICsgKHRoZW1lLmFjdGl2ZSA/ICcgYWN0aXZlJyA6ICcnKSwgXG5cdFx0XHRcdFwiZGF0YS10aGVtZS1pZFwiOiB0aGVtZS5pZCwgXG5cdFx0XHRcdG9uQ2xpY2s6IHRoaXMuaGFuZGxlQWN0aXZhdGVUaGVtZSwgXG5cdFx0XHRcdG9uTW91c2VFbnRlcjogdGhpcy5oYW5kbGVTaG93VG9vbHRpcCwgXG5cdFx0XHRcdG9uTW91c2VMZWF2ZTogdGhpcy5oYW5kbGVIaWRlVG9vbHRpcCwgXG5cdFx0XHRcdFwiYXJpYS1kZXNjcmliZWRieVwiOiB0aGVtZS5pZCsnLWFjdGlvbiAnK3RoZW1lLmlkKyctbmFtZSd9LCBcblxuXHRcdFx0XHR0aGVtZS5zY3JlZW5zaG90ID8gKFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2NsYXNzTmFtZTogXCJ0aGVtZS1zY3JlZW5zaG90XCJ9LCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIiwge3NyYzogdGhlbWUuc2NyZWVuc2hvdCwgYWx0OiBcIlwifSlcblx0XHRcdFx0XHQpXG5cdFx0XHRcdCkgOiAoXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiBcInRoZW1lLXNjcmVlbnNob3QgYmxhbmtcIn0pXG5cdFx0XHRcdCksIFxuXHRcdFx0XHQhdGhlbWUuYWN0aXZlICYmIChSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7Y2xhc3NOYW1lOiBcIm1vcmUtZGV0YWlsc1wifSwgdGhlbWUuaW5zdGFsbGVkID8gJ0NsaWNrIHRvIHNlbGVjdCcgOiAnQ2xpY2sgdG8gaW5zdGFsbCcpKSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoM1wiLCB7Y2xhc3NOYW1lOiBcInRoZW1lLW5hbWVcIiwgaWQ6IHRoZW1lLmlkKyctbmFtZSd9LCBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBudWxsLCB0aGVtZS5hY3RpdmUgPyAnU2VsZWN0ZWQ6JyA6ICcnKSwgXCIgXCIsIHRoZW1lLm5hbWUpXG5cdFx0XHQpXG5cdFx0KTtcblx0fSxcblxuXHRfcmVuZGVyUG9wdWxhclRoZW1lTGlzdDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMuc3RhdGUucG9wdWxhclRoZW1lcy5tYXAoIHRoaXMuX3JlbmRlclRoZW1lICk7XG5cdH0sXG5cblx0X3JlbmRlclRoZW1lTGlzdDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMuc3RhdGUudGhlbWVzLm1hcCggdGhpcy5fcmVuZGVyVGhlbWUgKTtcblx0fVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gRGVzaWduU3RlcDsiLCIvKipcbiAqIERpc3BsYXlzIGEgZmxhc2ggbWVzc2FnZSwgaWYgc2V0LlxuICogSlNPTiBzdHJ1Y3R1cmU6XG4gKiB7IHNldmVyaXR5OiAnbm90aWNlJywgbWVzc2FnZTogJ015IG1lc3NhZ2UnIH1cbiAqXG4gKiBWYWxpZCBzZXZlcml0aWVzOlxuICogLSBlcnJvciwgbm90aWNlXG4gKi9cblxudmFyIFJlYWN0ID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3cuUmVhY3QgOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsLlJlYWN0IDogbnVsbCksXG5cdEZsYXNoU3RvcmUgPSByZXF1aXJlKCcuLi9zdG9yZXMvZmxhc2gtc3RvcmUnKTtcblxuZnVuY3Rpb24gZ2V0Rmxhc2hTdGF0ZSgpIHtcblx0cmV0dXJuIEZsYXNoU3RvcmUuZ2V0Rmxhc2goKTtcbn1cblxudmFyIEZsYXNoID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiBcIkZsYXNoXCIsXG5cdGNvbXBvbmVudERpZE1vdW50OiBmdW5jdGlvbigpIHtcblx0XHRGbGFzaFN0b3JlLmFkZENoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0fSxcblxuXHRjb21wb25lbnRXaWxsVW5tb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0Rmxhc2hTdG9yZS5yZW1vdmVDaGFuZ2VMaXN0ZW5lcih0aGlzLl9vbkNoYW5nZSk7XG5cdH0sXG5cblx0X29uQ2hhbmdlOiBmdW5jdGlvbigpIHtcbiAgICBcdHRoaXMuc2V0U3RhdGUoZ2V0Rmxhc2hTdGF0ZSgpKTtcbiAgXHR9LFxuXG5cdGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGdldEZsYXNoU3RhdGUoKTtcblx0fSxcblxuXHRyZW5kZXI6IGZ1bmN0aW9uKCkge1xuXHRcdGlmICggdGhpcy5zdGF0ZS5tZXNzYWdlICkge1xuXHRcdFx0cmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IHRoaXMuc3RhdGUuc2V2ZXJpdHkgKyAnIHVwZGF0ZWQnfSwgdGhpcy5zdGF0ZS5tZXNzYWdlKSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJldHVybiBudWxsO1xuXHRcdH1cblx0fVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gRmxhc2g7IiwidmFyIFJlYWN0ID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3cuUmVhY3QgOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsLlJlYWN0IDogbnVsbCksXG5cdFNldHVwUHJvZ3Jlc3NTdG9yZSA9IHJlcXVpcmUoJy4uL3N0b3Jlcy9zZXR1cC1wcm9ncmVzcy1zdG9yZScpLFxuXHRTZXR1cFByb2dyZXNzQWN0aW9ucyA9IHJlcXVpcmUoJy4uL2FjdGlvbnMvc2V0dXAtcHJvZ3Jlc3MtYWN0aW9ucycpLFxuXHRCdXR0b24gPSByZXF1aXJlKCdAYXV0b21hdHRpYy9kb3BzLXJlYWN0L2pzL2NvbXBvbmVudHMvYnV0dG9uJyk7XG5cbmZ1bmN0aW9uIGdldFNldHVwU3RhdGUoKSB7XG5cdHJldHVybiB7fTtcbn1cblxudmFyIEdldFN0YXJ0ZWQgPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiR2V0U3RhcnRlZFwiLFxuXHRjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0U2V0dXBQcm9ncmVzc1N0b3JlLmFkZENoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0fSxcblxuXHRjb21wb25lbnRXaWxsVW5tb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0U2V0dXBQcm9ncmVzc1N0b3JlLnJlbW92ZUNoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0fSxcblxuXHRfb25DaGFuZ2U6IGZ1bmN0aW9uKCkge1xuICAgIFx0dGhpcy5zZXRTdGF0ZShnZXRTZXR1cFN0YXRlKCkpO1xuICBcdH0sXG5cblx0Z2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZ2V0U2V0dXBTdGF0ZSgpO1xuXHR9LFxuXG5cdGhhbmRsZUdldFN0YXJ0ZWQ6IGZ1bmN0aW9uKGUpIHtcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0U2V0dXBQcm9ncmVzc0FjdGlvbnMuZ2V0U3RhcnRlZCgpO1xuXHR9LFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2NsYXNzTmFtZTogXCJnZXR0aW5nLXN0YXJ0ZWRfX2ludHJvXCJ9LCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImgzXCIsIG51bGwsIFwiWW91J3JlIGFsbW9zdCBkb25lIVwiKSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHtjbGFzc05hbWU6IFwiZ2V0dGluZy1zdGFydGVkX19zdWJoZWFkXCJ9LCBcblx0XHRcdFx0XHRcIlRha2UgdGhlc2Ugc3RlcHMgdG8gc3VwZXJjaGFyZ2UgeW91ciBXb3JkUHJlc3Mgc2l0ZS5cIlxuXHRcdFx0XHQpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge3N0eWxlOiB7dGV4dEFsaWduOiAnY2VudGVyJ319LCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwge2NvbG9yOiBcImdyZWVuXCIsIHNpemU6IFwiYmlnXCIsIHRoZW1lOiBcImpldHBhY2tcIiwgb25DbGljazogdGhpcy5oYW5kbGVHZXRTdGFydGVkfSwgXCJHZXQgU3RhcnRlZCDihpJcIilcblx0XHRcdFx0KVxuXHRcdFx0KVxuXHRcdCk7XG5cdH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEdldFN0YXJ0ZWQ7IiwidmFyIFJlYWN0ID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3cuUmVhY3QgOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsLlJlYWN0IDogbnVsbCksXG5cdFNpdGVTdG9yZSA9IHJlcXVpcmUoJy4uL3N0b3Jlcy9zaXRlLXN0b3JlJyksXG5cdFNpdGVBY3Rpb25zID0gcmVxdWlyZSgnLi4vYWN0aW9ucy9zaXRlLWFjdGlvbnMnKSxcblx0UGF0aHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvamV0cGFjay1zdGFydC1wYXRocycpO1xuXG5mdW5jdGlvbiBnZXRKZXRwYWNrUHJvZ3Jlc3MoKSB7XG5cdHJldHVybiB7IFxuXHRcdGpldHBhY2tDb25maWd1cmVkOiBTaXRlU3RvcmUuZ2V0SmV0cGFja0NvbmZpZ3VyZWQoKVxuXHR9O1xufVxuXG52YXIgSmV0cGFja0p1bXBzdGFydE1lbnUgPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiSmV0cGFja0p1bXBzdGFydE1lbnVcIixcblx0Y29tcG9uZW50RGlkTW91bnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFNpdGVTdG9yZS5hZGRDaGFuZ2VMaXN0ZW5lcih0aGlzLl9vbkNoYW5nZSk7XG5cdH0sXG5cblx0Y29tcG9uZW50V2lsbFVubW91bnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFNpdGVTdG9yZS5yZW1vdmVDaGFuZ2VMaXN0ZW5lcih0aGlzLl9vbkNoYW5nZSk7XG5cdH0sXG5cblx0X29uQ2hhbmdlOiBmdW5jdGlvbigpIHtcbiAgICBcdHRoaXMuc2V0U3RhdGUoZ2V0SmV0cGFja1Byb2dyZXNzKCkpO1xuICBcdH0sXG5cbiAgXHRnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBnZXRKZXRwYWNrUHJvZ3Jlc3MoKTtcblx0fSxcblxuXHRoYW5kbGVDbGlja0Nvbm5lY3Q6IGZ1bmN0aW9uKGUpIHtcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0Y29uc29sZS5sb2coXCJjbGlja2VkXCIpO1xuXHRcdFNpdGVBY3Rpb25zLmNvbmZpZ3VyZUpldHBhY2soUGF0aHMuSkVUUEFDS19NT0RVTEVTX1NURVBfU0xVRyk7XG5cdH0sXG5cblx0c3R5bGU6IHtcblx0XHRjb2xvcjogJ2JsYWNrJyxcblx0XHRmb250U2l6ZTogMTJcblx0fSxcblxuXHRyZW5kZXI6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiAoXG5cdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtzdHlsZTogdGhpcy5zdHlsZX0sIFxuXHRcdFx0XHR0aGlzLnN0YXRlLmpldHBhY2tDb25maWd1cmVkID8gKFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbClcblx0XHRcdFx0KSA6IChcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsIFxuXHRcdFx0XHRcdFx0XCJCb29zdCB0cmFmZmljLCBlbmhhbmNlIHNlY3VyaXR5LCBhbmQgaW1wcm92ZSBwZXJmb3JtYW5jZSB3aXRoIGEgY29ubmVjdGlvbiB0byBXb3JkUHJlc3MuY29tXCIsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJiclwiLCBudWxsKSwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCB7Y2xhc3NOYW1lOiBcImJ1dHRvbiBidXR0b24tcHJpbWFyeSBidXR0b24tbGFyZ2VcIiwgaHJlZjogXCIjXCIsIG9uQ2xpY2s6IHRoaXMuaGFuZGxlQ2xpY2tDb25uZWN0fSwgXCJDb25uZWN0IHRvIFdvcmRQcmVzcy5jb21cIilcblx0XHRcdFx0XHQpXG5cdFx0XHRcdClcblx0XHRcdFx0XG5cdFx0XHQpXG5cdFx0KTtcblx0fVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gSmV0cGFja0p1bXBzdGFydE1lbnU7IiwidmFyIFJlYWN0ID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3cuUmVhY3QgOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsLlJlYWN0IDogbnVsbCksXG5cdFNraXBCdXR0b24gPSByZXF1aXJlKCcuL3NraXAtYnV0dG9uJyksXG5cdFNpdGVTdG9yZSA9IHJlcXVpcmUoJy4uL3N0b3Jlcy9zaXRlLXN0b3JlJyksXG5cdFNpdGVBY3Rpb25zID0gcmVxdWlyZSgnLi4vYWN0aW9ucy9zaXRlLWFjdGlvbnMnKSxcblx0UGF0aHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvamV0cGFjay1zdGFydC1wYXRocycpLCBcblx0Q29udGVudEJveCA9IHJlcXVpcmUoJy4vY29udGVudC1ib3gnKSxcblx0U2V0dXBQcm9ncmVzc0FjdGlvbnMgPSByZXF1aXJlKCcuLi9hY3Rpb25zL3NldHVwLXByb2dyZXNzLWFjdGlvbnMnKSxcblx0U3Bpbm5lclN0b3JlID0gcmVxdWlyZSgnLi4vc3RvcmVzL3NwaW5uZXItc3RvcmUnKSxcblx0QnV0dG9uID0gcmVxdWlyZSgnQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9qcy9jb21wb25lbnRzL2J1dHRvbicpO1xuXG5mdW5jdGlvbiBnZXRKZXRwYWNrU3RhdGUoKSB7XG5cdHJldHVybiB7XG5cdFx0c2l0ZV90aXRsZTogU2l0ZVN0b3JlLmdldFRpdGxlKCksXG5cdFx0amV0cGFja0NvbmZpZ3VyZWQ6IFNpdGVTdG9yZS5nZXRKZXRwYWNrQ29uZmlndXJlZCgpLFxuXHRcdGp1bXBzdGFydEVuYWJsZWQ6IFNpdGVTdG9yZS5nZXRKZXRwYWNrSnVtcHN0YXJ0RW5hYmxlZCgpLFxuXHRcdG1vZHVsZXNFbmFibGVkOiBTaXRlU3RvcmUuZ2V0QWN0aXZlTW9kdWxlU2x1Z3MoKVx0XG5cdH07XG59XG5cbnZhciBKZXRwYWNrSnVtcHN0YXJ0ID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiBcIkpldHBhY2tKdW1wc3RhcnRcIixcblxuXHRjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0U2l0ZVN0b3JlLmFkZENoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0fSxcblxuXHRjb21wb25lbnRXaWxsVW5tb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0U2l0ZVN0b3JlLnJlbW92ZUNoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0fSxcblxuXHRfb25DaGFuZ2U6IGZ1bmN0aW9uKCkge1xuICAgIFx0dGhpcy5zZXRTdGF0ZShnZXRKZXRwYWNrU3RhdGUoKSk7XG4gIFx0fSxcblxuXHRnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBzdGF0ZSA9IGdldEpldHBhY2tTdGF0ZSgpO1xuXHRcdHN0YXRlLnNob3dNb3JlTW9kdWxlcyA9IGZhbHNlO1xuXHRcdHJldHVybiBzdGF0ZTtcblx0fSxcblxuXHRoYW5kbGVKZXRwYWNrQ29ubmVjdDogZnVuY3Rpb24gKGUpIHtcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cblx0XHRTaXRlQWN0aW9ucy5jb25maWd1cmVKZXRwYWNrKFBhdGhzLkpFVFBBQ0tfTU9EVUxFU19TVEVQX1NMVUcpO1xuXHR9LFxuXG5cdGhhbmRsZUNoYW5nZU1vZHVsZVN0YXR1czogZnVuY3Rpb24gKGUpIHtcblx0XHR2YXIgJHRhcmdldCA9IGpRdWVyeShlLmN1cnJlbnRUYXJnZXQpLFxuXHRcdFx0bW9kdWxlX3NsdWcgPSAkdGFyZ2V0LmRhdGEoJ21vZHVsZS1zbHVnJyk7XG5cblx0XHRpZiAoIFNpdGVTdG9yZS5pc0pldHBhY2tNb2R1bGVFbmFibGVkKG1vZHVsZV9zbHVnKSApIHtcblx0XHRcdFNpdGVBY3Rpb25zLmRlYWN0aXZhdGVKZXRwYWNrTW9kdWxlKG1vZHVsZV9zbHVnKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0U2l0ZUFjdGlvbnMuYWN0aXZhdGVKZXRwYWNrTW9kdWxlKG1vZHVsZV9zbHVnKTtcblx0XHR9XG5cdH0sXG5cblx0aGFuZGxlRW5hYmxlQWxsTW9kdWxlczogZnVuY3Rpb24oZSkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRTaXRlQWN0aW9ucy5lbmFibGVKdW1wc3RhcnQoKTtcblx0fSxcblxuXHRoYW5kbGVOZXh0OiBmdW5jdGlvbiAoZSkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblxuXHRcdFNldHVwUHJvZ3Jlc3NBY3Rpb25zLmNvbXBsZXRlQW5kTmV4dFN0ZXAoUGF0aHMuSkVUUEFDS19NT0RVTEVTX1NURVBfU0xVRyk7XG5cdH0sXG5cblx0aGFuZGxlU2hvd01vcmVNb2R1bGVzOiBmdW5jdGlvbiAoZSkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcblx0XHRTaXRlQWN0aW9ucy5sb2FkQWxsSmV0cGFja01vZHVsZXMoKS5kb25lKGZ1bmN0aW9uKCkge1xuXHRcdFx0dGhpcy5zZXRTdGF0ZSh7c2hvd01vcmVNb2R1bGVzOiB0cnVlfSk7XG5cdFx0fS5iaW5kKHRoaXMpKTtcblx0fSxcblxuXHRoYW5kbGVTaG93RmV3ZXJNb2R1bGVzOiBmdW5jdGlvbiAoZSkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHR0aGlzLnNldFN0YXRlKHtzaG93TW9yZU1vZHVsZXM6IGZhbHNlfSk7XG5cdH0sXG5cblx0X3JlbmRlck1vZHVsZTogZnVuY3Rpb24obW9kdWxlKSB7XG5cdFx0dmFyIGlzQWN0aXZlID0gU2l0ZVN0b3JlLmlzSmV0cGFja01vZHVsZUVuYWJsZWQobW9kdWxlLnNsdWcpO1xuXHRcdHZhciBtb2R1bGVJZCA9ICdqcC1tb2R1bGUtJyttb2R1bGUuc2x1Zztcblx0XHRcblx0XHRyZXR1cm4gKFxuXHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7a2V5OiAnbW9kdWxlcy0nK21vZHVsZS5zbHVnLCBjbGFzc05hbWU6IFwid2VsY29tZV9fanVtcHN0YXJ0X21vZHVsZVwifSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7aWQ6IG1vZHVsZUlkLCB0eXBlOiBcImNoZWNrYm94XCIsIGNoZWNrZWQ6IGlzQWN0aXZlLCBcImRhdGEtbW9kdWxlLXNsdWdcIjogbW9kdWxlLnNsdWcsIG9uQ2hhbmdlOiB0aGlzLmhhbmRsZUNoYW5nZU1vZHVsZVN0YXR1c30pLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImxhYmVsXCIsIHtodG1sRm9yOiBtb2R1bGVJZH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzdHJvbmdcIiwgbnVsbCwgbW9kdWxlLm5hbWUpKSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzbWFsbFwiLCB7Y2xhc3NOYW1lOiBcImp1bXBzdGFydF9tb2R1bGVfX2Rlc2NyaXB0aW9uXCIsIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7X19odG1sOiBtb2R1bGUuZGVzY3JpcHRpb259fSksIFxuXHRcdFx0XHRpc0FjdGl2ZSAmJiBtb2R1bGUuY29uZmlndXJlX3VybCAmJiAoXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInNtYWxsXCIsIG51bGwsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIHt0YXJnZXQ6IFwiX2NvbmZpZ3VyZVwiLCBocmVmOiBtb2R1bGUuY29uZmlndXJlX3VybH0sIFwiY29uZmlndXJlXCIpKVxuXHRcdFx0XHQpXG5cdFx0XHQpXG5cdFx0KTtcblx0fSxcblxuXHRyZW5kZXI6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBtb2R1bGVPdmVybGF5LCBtb2R1bGVPdmVybGF5Qm9keTtcblxuXG5cdFx0aWYgKCAhIHRoaXMuc3RhdGUuamV0cGFja0NvbmZpZ3VyZWQgJiYgIVNwaW5uZXJTdG9yZS5zaG93aW5nKCkgKSB7XG5cdFx0XHRtb2R1bGVPdmVybGF5ID0gKFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IFwid2VsY29tZV9fanVtcHN0YXJ0X292ZXJsYXlcIn0pXG5cdFx0XHQpO1xuXHRcdFx0bW9kdWxlT3ZlcmxheUJvZHkgPSAoXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2NsYXNzTmFtZTogXCJ3ZWxjb21lX19qdW1wc3RhcnRfb3ZlcmxheV9fYm9keVwifSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwgbnVsbCwgXCJUaGVzZSBtb2R1bGVzIHJlcXVpcmUgYSBXb3JkUHJlc3MuY29tIGFjY291bnQgLSBpdCdzIGZyZWUhXCIpLCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwge2NvbG9yOiBcImdyZWVuXCIsIHNpemU6IFwiYmlnXCIsIHRoZW1lOiBcImpldHBhY2tcIiwgb25DbGljazogdGhpcy5oYW5kbGVKZXRwYWNrQ29ubmVjdH0sIFwiQ29ubmVjdCB0byBXb3JkUHJlc3MuY29tXCIpLCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCBudWxsLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoU2tpcEJ1dHRvbiwgbnVsbClcblx0XHRcdFx0XHQpXG5cdFx0XHRcdClcblx0XHRcdCk7XG5cdFx0fVxuXG5cdFx0dmFyIG1vZHVsZURlc2NyaXB0aW9ucyA9IFNpdGVTdG9yZS5nZXRKdW1wc3RhcnRNb2R1bGVzKCkubWFwKHRoaXMuX3JlbmRlck1vZHVsZSk7XG5cdFx0dmFyIG1vcmVNb2R1bGVEZXNjcmlwdGlvbnMgPSBTaXRlU3RvcmUuZ2V0SmV0cGFja0FkZGl0aW9uYWxNb2R1bGVzKCkubWFwKHRoaXMuX3JlbmRlck1vZHVsZSk7XG5cblx0XHRyZXR1cm4gKFxuXHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiBcIndlbGNvbWVfX3NlY3Rpb25cIn0sIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgXCJMZXQncyBsYXVuY2ggXCIsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJlbVwiLCBudWxsLCB0aGlzLnN0YXRlLnNpdGVfdGl0bGUpKSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoNFwiLCBudWxsLCBcIkVuYWJsZSBKZXRwYWNrIGZlYXR1cmVzXCIpLCBcblx0XHRcdFx0dGhpcy5zdGF0ZS5qZXRwYWNrQ29uZmlndXJlZCAmJiAoXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtjbGFzc05hbWU6IFwiamV0cGFjay1sb2dvXCJ9LCBcIlBvd2VyZWQgYnlcIiwgUmVhY3QuY3JlYXRlRWxlbWVudChcImJyXCIsIG51bGwpLCBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCB7aHJlZjogXCJodHRwOi8vMTkyLjE2OC41OS4xMDMvd3AtYWRtaW4vYWRtaW4ucGhwP3BhZ2U9amV0cGFja1wiLCB0aXRsZTogXCJKZXRwYWNrXCIsIGNsYXNzTmFtZTogXCJjdXJyZW50XCJ9LCBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBudWxsLCBcIkpldHBhY2tcIikpKSwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCB7Y2xhc3NOYW1lOiBcInN0ZXAtZGVzY3JpcHRpb25cIn0sIFwiQ29uZ3JhdHVsYXRpb25zISBZb3UndmUgZW5hYmxlZCBKZXRwYWNrIGFuZCB1bmxvY2tlZCBkb3plbnMgb2YgcG93ZXJmdWwgZmVhdHVyZXMuXCIpLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHtjbGFzc05hbWU6IFwic3RlcC1kZXNjcmlwdGlvblwifSwgXCJDaGVjayB0aGUgYm94ZXMgYmVsb3cgdG8gZW5hYmxlIG91ciBtb3N0IHBvcHVsYXIgZmVhdHVyZXMuXCIpXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiBcIndlbGNvbWVfX2Nvbm5lY3RcIn0sIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2NsYXNzTmFtZTogXCJ3ZWxjb21lX19qdW1wc3RhcnRfd3JhcHBlclwifSwgXG5cdFx0XHRcdFx0XHRtb2R1bGVPdmVybGF5LCBcblx0XHRcdFx0XHRcdG1vZHVsZU92ZXJsYXlCb2R5LCBcblx0XHRcdFx0XHRcdFxuXHRcdFx0XHRcdFx0dGhpcy5zdGF0ZS5qZXRwYWNrQ29uZmlndXJlZCAmJiAoXG5cdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2NsYXNzTmFtZTogXCJzdWJtaXRcIn0sIFxuXHRcdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7c3R5bGU6IHtmbG9hdDogJ3JpZ2h0J30sIGNvbG9yOiBcImJsdWVcIiwgb25DbGljazogdGhpcy5oYW5kbGVOZXh0fSwgXCJOZXh0IFN0ZXAg4oaSXCIpLCBcblx0XHRcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IFwiY2xlYXJcIn0pXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdCksIFxuXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KENvbnRlbnRCb3gsIG51bGwsIFxuXHRcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgXCJQb3B1bGFyIGZlYXR1cmVzXCIgKyAnICcgK1xuXG5cdFx0XHRcdFx0XHRcdFx0XCLCoMKgXCIsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7ZGlzYWJsZWQ6IHRoaXMuc3RhdGUuanVtcHN0YXJ0RW5hYmxlZCwgY29sb3I6IFwiYmx1ZVwiLCBvbkNsaWNrOiB0aGlzLmhhbmRsZUVuYWJsZUFsbE1vZHVsZXN9LCB0aGlzLnN0YXRlLmp1bXBzdGFydEVuYWJsZWQgPyAnRW5hYmxlZCcgOiAnRW5hYmxlIGFsbCAocmVjb21tZW5kZWQpJylcblx0XHRcdFx0XHRcdFx0KSwgXG5cdFx0XHRcdFx0XHRcdG1vZHVsZURlc2NyaXB0aW9uc1xuXHRcdFx0XHRcdFx0KSwgXG5cdFx0XHRcdFx0XHRcblx0XHRcdFx0XHRcdHRoaXMuc3RhdGUuc2hvd01vcmVNb2R1bGVzID8gKFxuXHRcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCB7Y2xhc3NOYW1lOiBcIm1vcmVcIn0sIFxuXHRcdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIHtocmVmOiBcIiNcIiwgb25DbGljazogdGhpcy5oYW5kbGVTaG93RmV3ZXJNb2R1bGVzfSwgXCJoaWRlIGFkZGl0aW9uYWwgZmVhdHVyZXNcIilcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KSA6IChcblx0XHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge2NsYXNzTmFtZTogXCJtb3JlXCJ9LCBcblx0XHRcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCB7aHJlZjogXCIjXCIsIG9uQ2xpY2s6IHRoaXMuaGFuZGxlU2hvd01vcmVNb2R1bGVzfSwgXCJzaG93IGFkZGl0aW9uYWwgZmVhdHVyZXNcIilcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KSwgXG5cblx0XHRcdFx0XHRcdHRoaXMuc3RhdGUuc2hvd01vcmVNb2R1bGVzICYmIChcblx0XHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChDb250ZW50Qm94LCBudWxsLCBcblx0XHRcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgXCJBZGRpdGlvbmFsIG1vZHVsZXNcIiksIFxuXHRcdFx0XHRcdFx0XHRcdG1vcmVNb2R1bGVEZXNjcmlwdGlvbnNcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KVxuXHRcdFx0KVxuXHRcdCk7XG5cdH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEpldHBhY2tKdW1wc3RhcnQ7IiwidmFyIFJlYWN0ID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3cuUmVhY3QgOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsLlJlYWN0IDogbnVsbCksXG5cdFNpdGVTdG9yZSA9IHJlcXVpcmUoJy4uL3N0b3Jlcy9zaXRlLXN0b3JlJyksXG5cdEJ1dHRvbiA9IHJlcXVpcmUoJ0BhdXRvbWF0dGljL2RvcHMtcmVhY3QvanMvY29tcG9uZW50cy9idXR0b24nKSxcblx0U2V0dXBQcm9ncmVzc0FjdGlvbnMgPSByZXF1aXJlKCcuLi9hY3Rpb25zL3NldHVwLXByb2dyZXNzLWFjdGlvbnMnKTtcblxuZnVuY3Rpb24gZ2V0U2l0ZUxheW91dFN0YXRlKCkge1xuXHRyZXR1cm4ge1xuXHRcdHNpdGVfdGl0bGU6IFNpdGVTdG9yZS5nZXRUaXRsZSgpLFxuXHRcdGxheW91dDogU2l0ZVN0b3JlLmdldExheW91dCgpXG5cdH07XG59XG5cbnZhciBMYXlvdXRTdGVwID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiBcIkxheW91dFN0ZXBcIixcblxuXHRjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0U2l0ZVN0b3JlLmFkZENoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0fSxcblxuXHRjb21wb25lbnRXaWxsVW5tb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0U2l0ZVN0b3JlLnJlbW92ZUNoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0fSxcblxuXHRfb25DaGFuZ2U6IGZ1bmN0aW9uKCkge1xuICAgIFx0dGhpcy5zZXRTdGF0ZShnZXRTaXRlTGF5b3V0U3RhdGUoKSk7XG4gIFx0fSxcblxuXHRnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBnZXRTaXRlTGF5b3V0U3RhdGUoKTtcblx0fSxcblxuXHRoYW5kbGVTZXRMYXlvdXQ6IGZ1bmN0aW9uKCBlICkge1xuXHRcdHRoaXMuc2V0U3RhdGUoeyBsYXlvdXQ6IGpRdWVyeShlLmN1cnJlbnRUYXJnZXQpLnZhbCgpIH0pO1xuXHR9LFxuXG5cdGhhbmRsZVN1Ym1pdDogZnVuY3Rpb24oIGUgKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFNldHVwUHJvZ3Jlc3NBY3Rpb25zLnN1Ym1pdExheW91dFN0ZXAodGhpcy5zdGF0ZS5sYXlvdXQpO1xuXHR9LFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2NsYXNzTmFtZTogXCJ3ZWxjb21lX19zZWN0aW9uXCIsIGlkOiBcIndlbGNvbWVfX2xheW91dFwifSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoM1wiLCBudWxsLCBcIkxldCdzIGxhdW5jaCBcIiwgUmVhY3QuY3JlYXRlRWxlbWVudChcImVtXCIsIG51bGwsIHRoaXMuc3RhdGUuc2l0ZV90aXRsZSkpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImg0XCIsIG51bGwsIFwiU2VsZWN0IGEgbGF5b3V0XCIpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge2NsYXNzTmFtZTogXCJzdGVwLWRlc2NyaXB0aW9uXCJ9LCBcIldvcmRQcmVzcyBjYW4gYmUgYSBibG9nLCBhIHdlYiBzaXRlIHdpdGggYSBoaWVyYXJjaHkgb2Ygc3RhdGljIHBhZ2VzLCBvciBhIGNvbWJpbmF0aW9uIG9mIHRoZSB0d28uXCIpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImZvcm1cIiwge29uU3VibWl0OiB0aGlzLmhhbmRsZVN1Ym1pdH0sIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiLCBudWxsLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7dHlwZTogXCJyYWRpb1wiLCBuYW1lOiBcInNpdGVfbGF5b3V0XCIsIHZhbHVlOiBcIndlYnNpdGVcIiwgY2hlY2tlZDogdGhpcy5zdGF0ZS5sYXlvdXQgPT09ICd3ZWJzaXRlJywgb25DaGFuZ2U6IHRoaXMuaGFuZGxlU2V0TGF5b3V0fSksIFwiIFN0YXRpYyBXZWJzaXRlXCIsIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge2NsYXNzTmFtZTogXCJkZXNjcmlwdGlvblwifSwgXCJBIHdlYiBzaXRlIHdpdGggYSBoaWVyYXJjaHkgb2YgcGFnZXNcIilcblx0XHRcdFx0XHQpLCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiYnJcIiwgbnVsbCksIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiLCBudWxsLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7dHlwZTogXCJyYWRpb1wiLCBuYW1lOiBcInNpdGVfbGF5b3V0XCIsIHZhbHVlOiBcInNpdGUtYmxvZ1wiLCBjaGVja2VkOiB0aGlzLnN0YXRlLmxheW91dCA9PT0gJ3NpdGUtYmxvZycsIG9uQ2hhbmdlOiB0aGlzLmhhbmRsZVNldExheW91dH0pLCBcIiBTdGF0aWMgV2Vic2l0ZSB3aXRoIGEgYmxvZ1wiLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHtjbGFzc05hbWU6IFwiZGVzY3JpcHRpb25cIn0sIFwiQSB3ZWIgc2l0ZSB3aXRoIHBhZ2VzIHRoYXQgYWxzbyBoYXMgYSBibG9nIG9yIG5ld3Mgc2VjdGlvblwiKVxuXHRcdFx0XHRcdCksIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJiclwiLCBudWxsKSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImxhYmVsXCIsIG51bGwsIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHt0eXBlOiBcInJhZGlvXCIsIG5hbWU6IFwic2l0ZV9sYXlvdXRcIiwgdmFsdWU6IFwiYmxvZ1wiLCBjaGVja2VkOiB0aGlzLnN0YXRlLmxheW91dCA9PT0gJ2Jsb2cnLCBvbkNoYW5nZTogdGhpcy5oYW5kbGVTZXRMYXlvdXR9KSwgXCIgSnVzdCBhIGJsb2dcIiwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCB7Y2xhc3NOYW1lOiBcImRlc2NyaXB0aW9uXCJ9LCBcIkEgd2ViIHNpdGUgdGhhdCB3aWxsIGNvbnN0YW50bHkgc2hvdyBuZXcgY29udGVudCAoYXJ0aWNsZXMsIHBob3RvcywgdmlkZW9zLCBldGMuKVwiKVxuXHRcdFx0XHRcdCksIFxuXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge2NsYXNzTmFtZTogXCJzdWJtaXRcIn0sIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHtjb2xvcjogXCJibHVlXCJ9LCBcIk5leHQgU3RlcCDihpJcIilcblx0XHRcdFx0XHQpXG5cdFx0XHRcdClcblx0XHRcdClcblx0XHQpO1xuXHR9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBMYXlvdXRTdGVwOyIsInZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93LlJlYWN0IDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbC5SZWFjdCA6IG51bGwpLFxuXHRTaXRlQWN0aW9ucyA9IHJlcXVpcmUoJy4uL2FjdGlvbnMvc2l0ZS1hY3Rpb25zJyksXG5cdFNpdGVTdG9yZSA9IHJlcXVpcmUoJy4uL3N0b3Jlcy9zaXRlLXN0b3JlJyksXG5cdEJ1dHRvbiA9IHJlcXVpcmUoJ0BhdXRvbWF0dGljL2RvcHMtcmVhY3QvanMvY29tcG9uZW50cy9idXR0b24nKSxcblx0U2V0dXBQcm9ncmVzc0FjdGlvbnMgPSByZXF1aXJlKCcuLi9hY3Rpb25zL3NldHVwLXByb2dyZXNzLWFjdGlvbnMnKTtcblxuZnVuY3Rpb24gZ2V0U2l0ZVRpdGxlU3RhdGUoKSB7XG5cdHJldHVybiB7XG5cdFx0dGl0bGU6IFNpdGVTdG9yZS5nZXRUaXRsZSgpLFxuXHRcdGRlc2NyaXB0aW9uOiBTaXRlU3RvcmUuZ2V0RGVzY3JpcHRpb24oKVxuXHR9O1xufVxuXG52YXIgU2l0ZVRpdGxlU3RlcCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtkaXNwbGF5TmFtZTogXCJTaXRlVGl0bGVTdGVwXCIsXG5cblx0Y29tcG9uZW50RGlkTW91bnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFNpdGVTdG9yZS5hZGRDaGFuZ2VMaXN0ZW5lcih0aGlzLl9vbkNoYW5nZSk7XG5cdH0sXG5cblx0Y29tcG9uZW50V2lsbFVubW91bnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFNpdGVTdG9yZS5yZW1vdmVDaGFuZ2VMaXN0ZW5lcih0aGlzLl9vbkNoYW5nZSk7XG5cdH0sXG5cblx0X29uQ2hhbmdlOiBmdW5jdGlvbigpIHtcbiAgICBcdHRoaXMuc2V0U3RhdGUoZ2V0U2l0ZVRpdGxlU3RhdGUoKSk7XG4gIFx0fSxcblxuXHRnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBnZXRTaXRlVGl0bGVTdGF0ZSgpO1xuXHR9LFxuXG5cdGhhbmRsZUNoYW5nZVRpdGxlOiBmdW5jdGlvbihlKSB7XG5cdFx0U2l0ZUFjdGlvbnMuc2V0VGl0bGUoZS5jdXJyZW50VGFyZ2V0LnZhbHVlKTtcblx0fSxcblxuXHRoYW5kbGVDaGFuZ2VEZXNjcmlwdGlvbjogZnVuY3Rpb24oZSkge1xuXHRcdFNpdGVBY3Rpb25zLnNldERlc2NyaXB0aW9uKGUuY3VycmVudFRhcmdldC52YWx1ZSk7XG5cdH0sXG5cblx0aGFuZGxlU3VibWl0OiBmdW5jdGlvbihlKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFNldHVwUHJvZ3Jlc3NBY3Rpb25zLnN1Ym1pdFRpdGxlU3RlcCgpO1xuXHR9LFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2NsYXNzTmFtZTogXCJ3ZWxjb21lX19zZWN0aW9uXCIsIGlkOiBcIndlbGNvbWVfX3NpdGUtdGl0bGVcIn0sIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgXCJMZXQncyBsYXVuY2ggeW91ciBuZXcgd2Vic2l0ZVwiKSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoNFwiLCBudWxsLCBcIlRpdGxlIGFuZCBEZXNjcmlwdGlvblwiKSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHtjbGFzc05hbWU6IFwic3RlcC1kZXNjcmlwdGlvblwifSwgXG5cdFx0XHRcdFx0XCJNYWtlIHlvdXIgc2l0ZSBzdGFuZCBvdXQgd2l0aCBhIGNhdGNoeSBuYW1lLlwiXG5cdFx0XHRcdCksIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZm9ybVwiLCB7b25TdWJtaXQ6IHRoaXMuaGFuZGxlU3VibWl0fSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInRhYmxlXCIsIHtjbGFzc05hbWU6IFwiZm9ybS10YWJsZVwifSwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwidGJvZHlcIiwgbnVsbCwgXG5cdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0clwiLCBudWxsLCBcblx0XHRcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwidGhcIiwgbnVsbCwgUmVhY3QuY3JlYXRlRWxlbWVudChcImxhYmVsXCIsIHtodG1sRm9yOiBcInNpdGVfdGl0bGVcIn0sIFwiU2l0ZSBUaXRsZVwiKSksIFxuXHRcdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0ZFwiLCBudWxsLCBcblx0XHRcdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7dHlwZTogXCJ0ZXh0XCIsIG5hbWU6IFwic2l0ZV90aXRsZVwiLCBpZDogXCJzaXRlLXRpdGxlXCIsIGF1dG9Db21wbGV0ZTogXCJvZmZcIiwgb25DaGFuZ2U6IHRoaXMuaGFuZGxlQ2hhbmdlVGl0bGUsIHZhbHVlOiB0aGlzLnN0YXRlLnRpdGxlLCBcblx0XHRcdFx0XHQgICAgICAgcGxhY2Vob2xkZXI6IFwiU2l0ZSBUaXRsZSAodGhpcyBjYW4gYmUgY2hhbmdlZCBsYXRlcilcIiwgcmVxdWlyZWQ6IHRydWV9KSwgXG5cdFx0XHRcdFx0ICAgICAgIFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHtjbGFzc05hbWU6IFwiZGVzY3JpcHRpb25cIn0sIFwiVGhlIG5hbWUgb2YgeW91ciBzaXRlLiBUaGlzIHRpdGxlIGFwcGVhcnMgYXQgdGhlIHRvcCBvZiBwYWdlcyBhbmQgaW4gc2VhcmNoIHJlc3VsdHMuXCIpXG5cdFx0XHRcdFx0ICAgICAgIFx0XHQpXG5cdFx0XHRcdFx0ICAgICAgXHQpLCBcblx0XHRcdFx0XHQgICAgICBcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0clwiLCBudWxsLCBcblx0XHRcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwidGhcIiwgbnVsbCwgUmVhY3QuY3JlYXRlRWxlbWVudChcImxhYmVsXCIsIHtodG1sRm9yOiBcInNpdGVfZGVzY3JpcHRpb25cIn0sIFwiU2l0ZSBEZXNjcmlwdGlvblwiKSksIFxuXHRcdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0ZFwiLCBudWxsLCBcblx0XHRcdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7dHlwZTogXCJ0ZXh0XCIsIG5hbWU6IFwic2l0ZV9kZXNjcmlwdGlvblwiLCBpZDogXCJzaXRlLWRlc2NyaXB0aW9uXCIsIGF1dG9Db21wbGV0ZTogXCJvZmZcIiwgb25DaGFuZ2U6IHRoaXMuaGFuZGxlQ2hhbmdlRGVzY3JpcHRpb24sIHZhbHVlOiB0aGlzLnN0YXRlLmRlc2NyaXB0aW9uLCBcblx0XHRcdFx0XHQgICAgICAgcGxhY2Vob2xkZXI6IFwiU2l0ZSBEZXNjcmlwdGlvblwiLCByZXF1aXJlZDogdHJ1ZX0pLCBcblx0XHRcdFx0XHQgICAgICAgXHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge2NsYXNzTmFtZTogXCJkZXNjcmlwdGlvblwifSwgXCJBIG1vdHRvIG9yIHRhZ2xpbmUuIFRoaXMgYXBwZWFycyBiZWxvdyB0aGUgdGl0bGUgb24geW91ciBzaXRlLCBhbmQgbmV4dCB0byB0aGUgdGl0bGUgaW4gc2VhcmNoIHJlc3VsdHMuIFRyeSB0byBiZSBicmllZiBhbmQgZGVzY3JpcHRpdmUsIGUuZy4gXFxcIllvdXIgb25saW5lIGJhaXQgYW5kIHRhY2tsZSBzdG9yZVxcXCJcIilcblx0XHRcdFx0XHQgICAgICAgXHRcdClcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdCksIFxuXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge2NsYXNzTmFtZTogXCJzdWJtaXRcIn0sIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHtjb2xvcjogXCJibHVlXCJ9LCBcIk5leHQgU3RlcCDihpJcIilcblx0XHRcdFx0XHQpXG5cdFx0XHRcdClcblx0XHRcdClcblx0XHQpO1xuXHR9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBTaXRlVGl0bGVTdGVwOyIsInZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93LlJlYWN0IDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbC5SZWFjdCA6IG51bGwpLFxuXHRTZXR1cFByb2dyZXNzU3RvcmUgPSByZXF1aXJlKCcuLi9zdG9yZXMvc2V0dXAtcHJvZ3Jlc3Mtc3RvcmUnKSxcblx0U2V0dXBQcm9ncmVzc0FjdGlvbnMgPSByZXF1aXJlKCcuLi9hY3Rpb25zL3NldHVwLXByb2dyZXNzLWFjdGlvbnMnKTtcblxuZnVuY3Rpb24gZ2V0U2V0dXBQcm9ncmVzcygpIHtcblx0cmV0dXJuIHtcblx0XHRjb21wbGV0ZWQ6IFNldHVwUHJvZ3Jlc3NTdG9yZS5nZXRDdXJyZW50U3RlcCgpLmNvbXBsZXRlZFxuXHR9O1xufVxuXG52YXIgU2tpcEJ1dHRvbiA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtkaXNwbGF5TmFtZTogXCJTa2lwQnV0dG9uXCIsXG5cblx0Y29tcG9uZW50RGlkTW91bnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFNldHVwUHJvZ3Jlc3NTdG9yZS5hZGRDaGFuZ2VMaXN0ZW5lcih0aGlzLl9vbkNoYW5nZSk7XG5cdH0sXG5cblx0Y29tcG9uZW50V2lsbFVubW91bnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFNldHVwUHJvZ3Jlc3NTdG9yZS5yZW1vdmVDaGFuZ2VMaXN0ZW5lcih0aGlzLl9vbkNoYW5nZSk7XG5cdH0sXG5cblx0X29uQ2hhbmdlOiBmdW5jdGlvbigpIHtcbiAgICBcdHRoaXMuc2V0U3RhdGUoZ2V0U2V0dXBQcm9ncmVzcygpKTtcbiAgXHR9LFxuXG4gIFx0Z2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZ2V0U2V0dXBQcm9ncmVzcygpO1xuXHR9LFxuXG5cdGhhbmRsZVNraXA6IGZ1bmN0aW9uIChlKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFNldHVwUHJvZ3Jlc3NBY3Rpb25zLnNraXBTdGVwKCk7XG5cdH0sXG5cblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgY29tcGxldGVkID0gKHRoaXMuc3RhdGUuY29tcGxldGVkKTtcblx0XHRpZiAoIGNvbXBsZXRlZCApIHtcblx0XHRcdHJldHVybiBudWxsO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIHtjbGFzc05hbWU6IFwic2tpcFwiLCBocmVmOiBcIiNcIiwgb25DbGljazogdGhpcy5oYW5kbGVTa2lwfSwgXCJOb3Qgbm93XCIpKTtcblx0XHR9XG5cdH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNraXBCdXR0b247IiwiXG52YXIgUmVhY3QgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdy5SZWFjdCA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwuUmVhY3QgOiBudWxsKTtcblxudmFyIFRvb2x0aXAgPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiVG9vbHRpcFwiLFxuXHRwcm9wVHlwZXM6IHtcblx0XHRsZWZ0OiBSZWFjdC5Qcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsICAvLyBlLmcuIDYwMFxuXHRcdHRvcDogUmVhY3QuUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLCAgIC8vZS5nLiAxNTdcblx0XHR3aWR0aDogUmVhY3QuUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLCAvL2UuZy4gMzIwXG5cdFx0dGl0bGU6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCwgIC8vIGUuZy4gRGlzdHJhY3Rpb24tRnJlZSBXcml0aW5nXG5cdH0sXG5cblx0aGFuZGxlRGlzbWlzczogZnVuY3Rpb24gKCBlICkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0fSxcblxuXHRjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24gKCkge1xuXHRcdHRoaXMuX3JlY29tcHV0ZVBvc2l0aW9uKCk7XG5cdH0sXG5cblx0Y29tcG9uZW50V2lsbFJlY2VpdmVQcm9wczogZnVuY3Rpb24gKCkge1xuXHRcdHRoaXMuX3JlY29tcHV0ZVBvc2l0aW9uKCk7XG5cdH0sXG5cblx0Z2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbiAoKSB7XG5cdFx0cmV0dXJuIHtcblx0XHRcdHJlYWxUb3A6IHRoaXMucHJvcHMudG9wXG5cdFx0fTtcblx0fSxcblxuXHRfcmVjb21wdXRlUG9zaXRpb246IGZ1bmN0aW9uICgpIHtcblx0XHR2YXIgJHdyYXBwZXIgPSBqUXVlcnkoUmVhY3QuZmluZERPTU5vZGUodGhpcy5yZWZzLndyYXBwZXIpKTtcblxuXHRcdHRoaXMuc2V0U3RhdGUoe1xuXHRcdFx0cmVhbFRvcDogdGhpcy5wcm9wcy50b3AgLSAoJHdyYXBwZXIub3V0ZXJIZWlnaHQoKS8yKVxuXHRcdH0pO1xuXHR9LFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge3JlZjogXCJ3cmFwcGVyXCIsIGNsYXNzTmFtZTogXCJ3cC1wb2ludGVyIHdwLXBvaW50ZXItbGVmdFwiLCBzdHlsZToge3Bvc2l0aW9uOiAnYWJzb2x1dGUnLCB3aWR0aDogdGhpcy5wcm9wcy53aWR0aCwgdG9wOiB0aGlzLnN0YXRlLnJlYWxUb3AsIGxlZnQ6IHRoaXMucHJvcHMubGVmdCwgekluZGV4OiA5OTk5fX0sIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IFwid3AtcG9pbnRlci1jb250ZW50XCJ9LCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgdGhpcy5wcm9wcy50aXRsZSksIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIG51bGwsIHRoaXMucHJvcHMuY2hpbGRyZW4pXG5cdFx0XHRcdCksIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IFwid3AtcG9pbnRlci1hcnJvd1wifSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiBcIndwLXBvaW50ZXItYXJyb3ctaW5uZXJcIn0pXG5cdFx0XHRcdClcblx0XHRcdClcblx0XHQpO1xuXHR9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBUb29sdGlwOyIsInZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93LlJlYWN0IDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbC5SZWFjdCA6IG51bGwpLFxuXHRQcm9ncmVzc0JhciA9IHJlcXVpcmUoJ0BhdXRvbWF0dGljL2RvcHMtcmVhY3QvanMvY29tcG9uZW50cy9wcm9ncmVzcy1iYXInKSxcblx0U2V0dXBQcm9ncmVzc0FjdGlvbnMgPSByZXF1aXJlKCcuLi9hY3Rpb25zL3NldHVwLXByb2dyZXNzLWFjdGlvbnMnKTtcblxudmFyIHN0ZXBTaGFwZSA9IFJlYWN0LlByb3BUeXBlcy5zaGFwZSh7XG5cdG5hbWU6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcblx0c2x1ZzogUmVhY3QuUHJvcFR5cGVzLnN0cmluZ1xufSk7XG5cbi8qKlxuICogVGhlIG1lbnUgd2hpY2ggYWxsb3dzIHRoZSB1c2VyIHRvIHN3aXRjaCBzdGVwc1xuICoqL1xudmFyIFdlbGNvbWVNZW51ID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiBcIldlbGNvbWVNZW51XCIsXG5cdFxuXHRwcm9wVHlwZXM6IHtcblx0XHRjdXJyZW50U3RlcDogc3RlcFNoYXBlLmlzUmVxdWlyZWQsXG5cdFx0Y2xpY2thYmxlOiBSZWFjdC5Qcm9wVHlwZXMuYm9vbCxcblx0XHRhbGxTdGVwczogUmVhY3QuUHJvcFR5cGVzLmFycmF5T2Yoc3RlcFNoYXBlKS5pc1JlcXVpcmVkLFxuXHRcdHByb2dyZXNzUGVyY2VudDogUmVhY3QuUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkXG5cdH0sXG5cblx0Z2V0RGVmYXVsdFByb3BzOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0Y2xpY2thYmxlOiB0cnVlXG5cdFx0fTtcblx0fSxcblxuXHRzZWxlY3RTdGVwOiBmdW5jdGlvbihlKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFxuXHRcdHZhciBzbHVnID0galF1ZXJ5KGUuY3VycmVudFRhcmdldCkuZGF0YSgnc3RlcC1zbHVnJyk7XG5cblx0XHRTZXR1cFByb2dyZXNzQWN0aW9ucy5zZXRDdXJyZW50U3RlcChzbHVnKTtcblx0fSxcblxuXHRyZW5kZXI6IGZ1bmN0aW9uKCkge1xuXG5cdFx0dmFyIG1lbnVJdGVtcyA9IHRoaXMucHJvcHMuYWxsU3RlcHMubWFwKGZ1bmN0aW9uICggc3RlcCApIHtcblx0XHRcdHZhciB0aXRsZSwgY3VycmVudCwgc3RhdHVzLCBtZW51VmlldztcblxuXHRcdFx0aWYgKCB0aGlzLnByb3BzLmNsaWNrYWJsZSAmJiB0aGlzLnByb3BzLmN1cnJlbnRTdGVwICkge1xuXHRcdFx0XHRjdXJyZW50ID0gKCB0aGlzLnByb3BzLmN1cnJlbnRTdGVwLnNsdWcgPT0gc3RlcC5zbHVnICk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggIXN0ZXAuc3RhdGljICYmIHRoaXMucHJvcHMuY2xpY2thYmxlICkge1xuXHRcdFx0XHR0aXRsZSA9IFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIHtocmVmOiBcIiNcIiwgXCJkYXRhLXN0ZXAtc2x1Z1wiOiBzdGVwLnNsdWcsIG9uQ2xpY2s6IHRoaXMuc2VsZWN0U3RlcH0sIHN0ZXAubmFtZSk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0aXRsZSA9IHN0ZXAubmFtZTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCBzdGVwLm1lbnVWaWV3ICYmIHRoaXMucHJvcHMuY2xpY2thYmxlICkge1xuXHRcdFx0XHRtZW51VmlldyA9IFJlYWN0LmNyZWF0ZUVsZW1lbnQoc3RlcC5tZW51VmlldywgbnVsbCk7XG5cdFx0XHR9XG5cblx0XHRcdHN0YXR1cyA9IHN0ZXAuY29tcGxldGVkID8gJ2NvbXBsZXRlZCcgOiAnJztcblx0XHRcdFxuXHRcdFx0cmV0dXJuIChcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIHtrZXk6IHN0ZXAuc2x1ZywgY2xhc3NOYW1lOiBzdGF0dXMgKyAoY3VycmVudCA/ICcgY3VycmVudCcgOiAnJyl9LCBcblx0XHRcdFx0XHR0aXRsZSwgXCIgXCIsIHN0ZXAuc2tpcHBlZCA/ICcoc2tpcHBlZCknIDogbnVsbCwgXG5cdFx0XHRcdFx0bWVudVZpZXdcblx0XHRcdFx0KVxuXHRcdFx0KTtcblx0XHR9LmJpbmQodGhpcykgKTtcblxuXHRcdHJldHVybiAoXG5cdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IFwiZ2V0dGluZy1zdGFydGVkX19zdGVwc1wifSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoM1wiLCBudWxsLCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBudWxsLCBcIllvdXIgUHJvZ3Jlc3NcIiksIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFByb2dyZXNzQmFyLCB7c3R5bGU6IHsgZmxvYXQ6ICdsZWZ0J30sIHByb2dyZXNzUGVyY2VudDogdGhpcy5wcm9wcy5wcm9ncmVzc1BlcmNlbnR9KVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KSwgXG5cdFx0XHRcdFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwib2xcIiwgbnVsbCwgXG5cdFx0XHRcdFx0bWVudUl0ZW1zXG5cdFx0XHRcdClcblx0XHRcdClcblx0XHQpO1xuXHR9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBXZWxjb21lTWVudTsiLCJ2YXIgUmVhY3QgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdy5SZWFjdCA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwuUmVhY3QgOiBudWxsKSxcblx0V2VsY29tZU1lbnUgPSByZXF1aXJlKCcuL3dlbGNvbWUtbWVudScpLFxuXHRTZXR1cFByb2dyZXNzU3RvcmUgPSByZXF1aXJlKCcuLi9zdG9yZXMvc2V0dXAtcHJvZ3Jlc3Mtc3RvcmUnKSxcblx0U2V0dXBQcm9ncmVzc0FjdGlvbnMgPSByZXF1aXJlKCcuLi9hY3Rpb25zL3NldHVwLXByb2dyZXNzLWFjdGlvbnMnKSxcblx0Rmxhc2ggPSByZXF1aXJlKCcuL2ZsYXNoJyksXG5cdEdldFN0YXJ0ZWQgPSByZXF1aXJlKCcuL2dldC1zdGFydGVkJyksXG5cdFNwaW5uZXJTdG9yZSA9IHJlcXVpcmUoJy4uL3N0b3Jlcy9zcGlubmVyLXN0b3JlJyksXG5cdFNwaW5uZXJBY3Rpb25zID0gcmVxdWlyZSgnLi4vYWN0aW9ucy9zcGlubmVyLWFjdGlvbnMnKSxcblx0RGF0YVN0b3JlID0gcmVxdWlyZSgnLi4vc3RvcmVzL2RhdGEtc3RvcmUnKTtcblxuZnVuY3Rpb24gZ2V0U2V0dXBQcm9ncmVzcygpIHtcblx0cmV0dXJuIHsgXG5cdFx0bmV3VXNlcjogU2V0dXBQcm9ncmVzc1N0b3JlLmlzTmV3VXNlcigpLCBcblx0XHRzaG93U3Bpbm5lcjogU3Bpbm5lclN0b3JlLnNob3dpbmcoKSwgXG5cdFx0c3Bpbm5lck1lc3NhZ2U6IFNwaW5uZXJTdG9yZS5nZXRNZXNzYWdlKCksIFxuXHRcdGN1cnJlbnRTdGVwOiBTZXR1cFByb2dyZXNzU3RvcmUuZ2V0Q3VycmVudFN0ZXAoKSwgXG5cdFx0YWxsU3RlcHM6IFNldHVwUHJvZ3Jlc3NTdG9yZS5nZXRBbGxTdGVwcygpLCBcblx0XHRwcm9ncmVzc1BlcmNlbnQ6IFNldHVwUHJvZ3Jlc3NTdG9yZS5nZXRQcm9ncmVzc1BlcmNlbnQoKSBcblx0fTtcbn1cblxuLy8gVE9ETzogdmlzdWFsIFwic2F2aW5nXCIgZm9yIHRoaXMuc3RhdGUuc2F2aW5nXG52YXIgV2VsY29tZVdpZGdldCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtkaXNwbGF5TmFtZTogXCJXZWxjb21lV2lkZ2V0XCIsXG5cdGNvbXBvbmVudERpZE1vdW50OiBmdW5jdGlvbigpIHtcblx0XHRTZXR1cFByb2dyZXNzU3RvcmUuYWRkQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuXHRcdFNwaW5uZXJTdG9yZS5hZGRDaGFuZ2VMaXN0ZW5lcih0aGlzLl9vblNwaW5uZXJDaGFuZ2UpO1xuXHRcdERhdGFTdG9yZS5hZGRDaGFuZ2VMaXN0ZW5lcih0aGlzLl9vbkRhdGFDaGFuZ2UpO1xuXHR9LFxuXG5cdGNvbXBvbmVudFdpbGxVbm1vdW50OiBmdW5jdGlvbigpIHtcblx0XHRTZXR1cFByb2dyZXNzU3RvcmUucmVtb3ZlQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuXHRcdFNwaW5uZXJTdG9yZS5yZW1vdmVDaGFuZ2VMaXN0ZW5lcih0aGlzLl9vblNwaW5uZXJDaGFuZ2UpO1xuXHRcdERhdGFTdG9yZS5yZW1vdmVDaGFuZ2VMaXN0ZW5lcih0aGlzLl9vbkRhdGFDaGFuZ2UpO1xuXHR9LFxuXG5cdF9vbkNoYW5nZTogZnVuY3Rpb24oKSB7XG4gICAgXHR0aGlzLnNldFN0YXRlKGdldFNldHVwUHJvZ3Jlc3MoKSk7XG4gIFx0fSxcblxuICBcdF9vblNwaW5uZXJDaGFuZ2U6IGZ1bmN0aW9uKCkge1xuICBcdFx0dGhpcy5zZXRTdGF0ZSh7IHNob3dTcGlubmVyOiBTcGlubmVyU3RvcmUuc2hvd2luZygpLCBzcGlubmVyTWVzc2FnZTogU3Bpbm5lclN0b3JlLmdldE1lc3NhZ2UoKSB9KTtcbiAgXHR9LFxuXG4gIFx0X29uRGF0YUNoYW5nZTogZnVuY3Rpb24oKSB7XG4gIFx0XHR0aGlzLnNldFN0YXRlKHsgc2F2aW5nOiBEYXRhU3RvcmUuaXNTYXZpbmcoKSB9KTtcbiAgXHR9LFxuXG5cdGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGdldFNldHVwUHJvZ3Jlc3MoKTtcblx0fSxcblxuXHRoYW5kbGVSZXNldDogZnVuY3Rpb24oIGUgKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFNldHVwUHJvZ3Jlc3NBY3Rpb25zLnJlc2V0RGF0YSgpO1xuXHR9LFxuXG5cdGhhbmRsZVNob3dTcGlubmVyOiBmdW5jdGlvbiAoIGUgKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFNwaW5uZXJBY3Rpb25zLnNob3coXCJUZXN0aW5nIHNwaW5uZXJcIik7XG5cdH0sXG5cblx0aGFuZGxlSGlkZVNwaW5uZXI6IGZ1bmN0aW9uICggZSApIHtcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0U3Bpbm5lckFjdGlvbnMuaGlkZSgpO1xuXHR9LFxuXG4gIFx0cmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgXHRcdHJldHVybiAoXG5cdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IFwiZ2V0dGluZy1zdGFydGVkXCJ9LCBcblx0XHRcdFx0dGhpcy5fcmVuZGVyRGVidWcoKSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2NsYXNzTmFtZTogXCJnZXR0aW5nLXN0YXJ0ZWRfX3dyYXBwZXJcIn0sIFxuXHRcdFx0XHRcdHRoaXMuX3JlbmRlclNwaW5uZXIoKSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiBcImdldHRpbmctc3RhcnRlZF9fc2VjdGlvbnNcIn0sIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChGbGFzaCwgbnVsbCksIFxuXHRcdFx0XHRcdFx0dGhpcy5fcmVuZGVyU2VjdGlvbigpXG5cdFx0XHRcdFx0KSwgXG5cblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFdlbGNvbWVNZW51LCB7Y2xpY2thYmxlOiAhdGhpcy5zdGF0ZS5uZXdVc2VyLCBjdXJyZW50U3RlcDogdGhpcy5zdGF0ZS5jdXJyZW50U3RlcCwgYWxsU3RlcHM6IHRoaXMuc3RhdGUuYWxsU3RlcHMsIHByb2dyZXNzUGVyY2VudDogdGhpcy5zdGF0ZS5wcm9ncmVzc1BlcmNlbnR9KSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiBcImNsZWFyXCJ9KVxuXHRcdFx0XHQpXG5cdFx0XHQpXG5cdFx0KTtcblx0fSxcblxuXHRfcmVuZGVyU2VjdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCB0aGlzLnN0YXRlLm5ld1VzZXIgKSB7XG4gIFx0XHRcdHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChHZXRTdGFydGVkLCBudWxsKSk7XG4gIFx0XHR9IGVsc2Uge1xuICBcdFx0XHRyZXR1cm4gdGhpcy5fcmVuZGVyQ3VycmVudFZpZXcoKTtcbiAgXHRcdH1cblx0fSxcblxuXHRfcmVuZGVyRGVidWc6IGZ1bmN0aW9uKCkge1xuXHRcdGlmICggSlBTLmRlYnVnICkge1xuICBcdFx0XHRyZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCwgXG4gIFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwge2hyZWY6IFwiI1wiLCBjbGFzc05hbWU6IFwiYnV0dG9uXCIsIG9uQ2xpY2s6IHRoaXMuaGFuZGxlUmVzZXR9LCBcIlJlc2V0IFdpemFyZFwiKSwgXG4gIFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwge2hyZWY6IFwiI1wiLCBjbGFzc05hbWU6IFwiYnV0dG9uXCIsIG9uQ2xpY2s6IHRoaXMuaGFuZGxlU2hvd1NwaW5uZXJ9LCBcIlNob3cgc3Bpbm5lclwiKSwgXG4gIFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwge2hyZWY6IFwiI1wiLCBjbGFzc05hbWU6IFwiYnV0dG9uXCIsIG9uQ2xpY2s6IHRoaXMuaGFuZGxlSGlkZVNwaW5uZXJ9LCBcIkhpZGUgc3Bpbm5lclwiKVxuICBcdFx0XHQpKTtcbiAgXHRcdH0gZWxzZSB7XG4gIFx0XHRcdHJldHVybiBudWxsO1xuICBcdFx0fVxuXHR9LFxuXG5cdF9yZW5kZXJTcGlubmVyOiBmdW5jdGlvbigpIHtcblx0XHRpZiAoIHRoaXMuc3RhdGUuc2hvd1NwaW5uZXIgKSB7XG4gIFx0XHRcdHJldHVybiAoXG4gIFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiBcImxvYWRpbmdcIn0sIFxuICBcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiBcImxvYWRpbmdfX21lc3NhZ2VcIn0sIFxuICBcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaW1nXCIsIHtzcmM6IFwiL3dwLWFkbWluL2ltYWdlcy9zcGlubmVyLTJ4LmdpZlwiLCB3aWR0aDogXCIxNnB4XCIsIGhlaWdodDogXCIxNnB4XCJ9KSwgXG4gIFx0XHRcdFx0XHRcdFwiwqDCoFwiLCB0aGlzLnN0YXRlLnNwaW5uZXJNZXNzYWdlXG4gIFx0XHRcdFx0XHQpXG4gIFx0XHRcdFx0KVxuICBcdFx0XHQpO1xuXG4gIFx0XHR9IGVsc2Uge1xuICBcdFx0XHRyZXR1cm4gbnVsbDtcbiAgXHRcdH1cblx0fSxcblxuXHRfcmVuZGVyQ3VycmVudFZpZXc6IGZ1bmN0aW9uKCkge1xuXHRcdGlmICggdGhpcy5zdGF0ZS5jdXJyZW50U3RlcCApIHtcbiAgXHRcdFx0cmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KHRoaXMuc3RhdGUuY3VycmVudFN0ZXAud2VsY29tZVZpZXcsIG51bGwpKTtcbiAgXHRcdH0gZWxzZSB7XG4gIFx0XHRcdHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImgzXCIsIG51bGwsIFwiTm90aGluZ1wiKSk7XG4gIFx0XHR9XG5cdH0sXG5cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFdlbGNvbWVXaWRnZXQ7IiwidmFyIGtleU1pcnJvciA9IHJlcXVpcmUoJ2tleW1pcnJvcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGtleU1pcnJvcih7XG5cdFNURVBfQ09NUExFVEU6IG51bGwsXG5cdFNURVBfR0VUX1NUQVJURUQ6IG51bGwsXG5cdFNURVBfU0VMRUNUOiBudWxsLFxuXHRTVEVQX05FWFQ6IG51bGwsXG5cdFNURVBfU0tJUDogbnVsbCxcblx0U0lURV9TRVRfVElUTEU6IG51bGwsXG5cdFNJVEVfU0VUX0RFU0NSSVBUSU9OOiBudWxsLFxuXHRTSVRFX1NBVkVfVElUTEVfQU5EX0RFU0NSSVBUSU9OOiBudWxsLFxuXHRTSVRFX1NFVF9USEVNRTogbnVsbCxcblx0U0lURV9JTlNUQUxMX1RIRU1FOiBudWxsLFxuXHRTSVRFX0pFVFBBQ0tfQ09ORklHVVJFRDogbnVsbCxcblx0U0lURV9KRVRQQUNLX01PRFVMRV9FTkFCTEVEOiBudWxsLFxuXHRTSVRFX0pFVFBBQ0tfTU9EVUxFX0RJU0FCTEVEOiBudWxsLFxuXHRTSVRFX0pFVFBBQ0tfSlVNUFNUQVJUX0VOQUJMRUQ6IG51bGwsXG5cdFNJVEVfSkVUUEFDS19BRERfTU9EVUxFUzogbnVsbCxcblx0U0lURV9TRVRfTEFZT1VUOiBudWxsLFxuXG5cdFNBVkVfU1RBUlRFRDogbnVsbCxcblx0U0FWRV9GSU5JU0hFRDogbnVsbCxcblxuXHRTRVRfRkxBU0g6IG51bGwsXG5cdFVOU0VUX0ZMQVNIOiBudWxsLFxuXHRGTEFTSF9TRVZFUklUWV9OT1RJQ0U6IG51bGwsXG5cdEZMQVNIX1NFVkVSSVRZX0VSUk9SOiBudWxsLFxuXG5cdFJFU0VUX0RBVEE6IG51bGwsXG5cblx0U0hPV19TUElOTkVSOiBudWxsLFxuXHRISURFX1NQSU5ORVI6IG51bGxcbn0pOyIsIm1vZHVsZS5leHBvcnRzID0ge1xuXHQvLyBzdGVwc1xuXHRTSVRFX1RJVExFX1NURVBfU0xVRzogJ3RpdGxlJyxcblx0TEFZT1VUX1NURVBfU0xVRzogJ2xheW91dCcsXG5cdFRSQUZGSUNfU1RFUF9TTFVHOiAndHJhZmZpYycsXG5cdFNUQVRTX01PTklUT1JJTkdfU1RFUF9TTFVHOiAnc3RhdHMtbW9uaXRvcmluZycsXG5cdERFU0lHTl9TVEVQX1NMVUc6ICdkZXNpZ24nLFxuXHRBRFZBTkNFRF9TVEVQX1NMVUc6ICdhZHZhbmNlZCcsXG5cdEpFVFBBQ0tfTU9EVUxFU19TVEVQX1NMVUc6ICdqZXRwYWNrJ1xufTsiLCIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBBcHBEaXNwYXRjaGVyXG4gKlxuICogQSBzaW5nbGV0b24gdGhhdCBvcGVyYXRlcyBhcyB0aGUgY2VudHJhbCBodWIgZm9yIGFwcGxpY2F0aW9uIHVwZGF0ZXMuXG4gKi9cblxudmFyIERpc3BhdGNoZXIgPSByZXF1aXJlKCdmbHV4JykuRGlzcGF0Y2hlcjtcblxubW9kdWxlLmV4cG9ydHMgPSBuZXcgRGlzcGF0Y2hlcigpOyIsInZhciBXZWxjb21lUGFuZWwgPSByZXF1aXJlKCcuL3dlbGNvbWUtcGFuZWwnKTtcblxuV2VsY29tZVBhbmVsKCk7IiwidmFyIEFwcERpc3BhdGNoZXIgPSByZXF1aXJlKCcuLi9kaXNwYXRjaGVyL2FwcC1kaXNwYXRjaGVyJyksXG5cdEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlcixcblx0SlBTQ29uc3RhbnRzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL2pldHBhY2stc3RhcnQtY29uc3RhbnRzJyk7XG5cbi8qXG4gKiBUaGlzIGlzIGEgcmVmY291bnRlZCBzYXZlIG1vbml0b3Igd2hpY2ggd2FybnMgaWYgeW91IHRyeSB0byBsZWF2ZSB0aGUgcGFnZSB3aGlsZSB0aGUgZGF0YSBpcyBzdGlsbCBzYXZpbmdcbiAqL1xuXG52YXIgX2N1cnJlbnRTYXZlcyA9IDAsIGpwc1RpbWVvdXQsIENIQU5HRV9FVkVOVCA9ICdjaGFuZ2UnO1xuXG5qUXVlcnkod2luZG93KS5vbignYmVmb3JldW5sb2FkJywgZnVuY3Rpb24oKSB7XG5cdGlmKERhdGFTdG9yZS5pc1NhdmluZygpKSB7XG5cdFx0anBzVGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG5cdCAgICAgICAgLy8gYWxlcnQoJ1lvdSBzdGF5ZWQnKTtcblx0ICAgICAgICAvLyBub29wXG5cdCAgICB9LCAxMDAwKTtcblx0ICAgIHJldHVybiBcIllvdXIgc2l0ZSBjaGFuZ2VzIGFyZSBzdGlsbCBzYXZpbmcuXCI7XG5cdH1cbn0pO1xuXG5qUXVlcnkod2luZG93KS5vbigndW5sb2FkJywgZnVuY3Rpb24oKSB7XG5cdGNsZWFyVGltZW91dChqcHNUaW1lb3V0KTtcbn0pO1xuXG5mdW5jdGlvbiBpbmNyZW1lbnRTYXZlQ291bnRlcigpIHtcblx0X2N1cnJlbnRTYXZlcyA9IF9jdXJyZW50U2F2ZXMgKyAxO1xufVxuXG5mdW5jdGlvbiBkZWNyZW1lbnRTYXZlQ291bnRlcigpIHtcblx0X2N1cnJlbnRTYXZlcyA9IF9jdXJyZW50U2F2ZXMgLSAxO1xufVxuXG52YXIgRGF0YVN0b3JlID0gXy5leHRlbmQoe30sIEV2ZW50RW1pdHRlci5wcm90b3R5cGUsIHtcblx0aXNTYXZpbmc6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBfY3VycmVudFNhdmVzID4gMDtcblx0fSxcblxuXHRhZGRDaGFuZ2VMaXN0ZW5lcjogZnVuY3Rpb24oY2FsbGJhY2spIHtcblx0XHR0aGlzLm9uKENIQU5HRV9FVkVOVCwgY2FsbGJhY2spO1xuXHR9LFxuXG5cdHJlbW92ZUNoYW5nZUxpc3RlbmVyOiBmdW5jdGlvbihjYWxsYmFjaykge1xuXHRcdHRoaXMucmVtb3ZlTGlzdGVuZXIoQ0hBTkdFX0VWRU5ULCBjYWxsYmFjayk7XG5cdH0sXG5cblx0ZW1pdENoYW5nZTogZnVuY3Rpb24oKSB7XG5cdCAgICB0aGlzLmVtaXQoQ0hBTkdFX0VWRU5UKTtcblx0fSxcbn0pO1xuXG5BcHBEaXNwYXRjaGVyLnJlZ2lzdGVyKGZ1bmN0aW9uKGFjdGlvbikge1xuXG4gIHN3aXRjaChhY3Rpb24uYWN0aW9uVHlwZSkge1xuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNBVkVfU1RBUlRFRDpcbiAgICBcdGluY3JlbWVudFNhdmVDb3VudGVyKCk7XG5cdFx0RGF0YVN0b3JlLmVtaXRDaGFuZ2UoKTtcblx0XHRicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNBVkVfRklOSVNIRUQ6XG4gICAgXHRkZWNyZW1lbnRTYXZlQ291bnRlcigpO1xuICAgICBcdERhdGFTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgIFx0YnJlYWs7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgLy8gbm8gb3BcbiAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gRGF0YVN0b3JlOyIsInZhciBBcHBEaXNwYXRjaGVyID0gcmVxdWlyZSgnLi4vZGlzcGF0Y2hlci9hcHAtZGlzcGF0Y2hlcicpLFxuXHRFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXIsXG5cdEpQU0NvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9qZXRwYWNrLXN0YXJ0LWNvbnN0YW50cycpO1xuXG52YXIgQ0hBTkdFX0VWRU5UID0gJ2NoYW5nZSc7XG52YXIgbWVzc2FnZSwgc2V2ZXJpdHk7XG5cbmZ1bmN0aW9uIHNldEZsYXNoKG5ld01lc3NhZ2UsIG5ld1NldmVyaXR5KSB7XG5cdG1lc3NhZ2UgPSBuZXdNZXNzYWdlO1xuXHRzZXZlcml0eSA9IG5ld1NldmVyaXR5O1xufVxuXG52YXIgRmxhc2hTdG9yZSA9IF8uZXh0ZW5kKHt9LCBFdmVudEVtaXR0ZXIucHJvdG90eXBlLCB7XG5cdGdldEZsYXNoOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgc2V2ZXJpdHlTdHJpbmc7XG5cblx0XHRzd2l0Y2goc2V2ZXJpdHkpIHtcblx0XHRcdGNhc2UgSlBTQ29uc3RhbnRzLkZMQVNIX1NFVkVSSVRZX0VSUk9SOlxuXHRcdFx0XHRzZXZlcml0eVN0cmluZyA9ICdlcnJvcic7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBKUFNDb25zdGFudHMuRkxBU0hfU0VWRVJJVFlfTk9USUNFOlxuXHRcdFx0XHRzZXZlcml0eVN0cmluZyA9ICdub3RpY2UnO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdC8vbm9vcFxuXHRcdH1cblx0XHRyZXR1cm4ge21lc3NhZ2U6IG1lc3NhZ2UsIHNldmVyaXR5OiBzZXZlcml0eVN0cmluZ307XG5cblx0fSxcblxuXHRhZGRDaGFuZ2VMaXN0ZW5lcjogZnVuY3Rpb24oY2FsbGJhY2spIHtcblx0XHR0aGlzLm9uKENIQU5HRV9FVkVOVCwgY2FsbGJhY2spO1xuXHR9LFxuXG5cdHJlbW92ZUNoYW5nZUxpc3RlbmVyOiBmdW5jdGlvbihjYWxsYmFjaykge1xuXHRcdHRoaXMucmVtb3ZlTGlzdGVuZXIoQ0hBTkdFX0VWRU5ULCBjYWxsYmFjayk7XG5cdH0sXG5cblx0ZW1pdENoYW5nZTogZnVuY3Rpb24oKSB7XG5cdCAgICB0aGlzLmVtaXQoQ0hBTkdFX0VWRU5UKTtcblx0fSxcbn0pO1xuXG5BcHBEaXNwYXRjaGVyLnJlZ2lzdGVyKGZ1bmN0aW9uKGFjdGlvbikge1xuXG4gIHN3aXRjaChhY3Rpb24uYWN0aW9uVHlwZSkge1xuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNFVF9GTEFTSDpcblx0XHRzZXRGbGFzaChhY3Rpb24ubWVzc2FnZSwgYWN0aW9uLnNldmVyaXR5KTtcblx0XHRGbGFzaFN0b3JlLmVtaXRDaGFuZ2UoKTtcblx0XHRicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlVOU0VUX0ZMQVNIOlxuICAgICBcdHNldEZsYXNoKG51bGwsIG51bGwpO1xuICAgICBcdEZsYXNoU3RvcmUuZW1pdENoYW5nZSgpO1xuICAgICBcdGJyZWFrO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIC8vIG5vIG9wXG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEZsYXNoU3RvcmU7IiwiLypcbiAqIFN0b3JlIHdoaWNoIG1hbmFnZXMgYW5kIHBlcnNpc3RzIHNldHVwIHdpemFyZCBwcm9ncmVzc1xuICovXG5cbnZhciBBcHBEaXNwYXRjaGVyID0gcmVxdWlyZSgnLi4vZGlzcGF0Y2hlci9hcHAtZGlzcGF0Y2hlcicpLFxuICBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXIsXG4gIEpQU0NvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9qZXRwYWNrLXN0YXJ0LWNvbnN0YW50cycpO1xuXG52YXIgQ0hBTkdFX0VWRU5UID0gJ2NoYW5nZSc7XG5cbnZhciBfc3RlcHMsIF9zdGFydGVkID0gSlBTLnN0YXJ0ZWQ7IFxuXG5mdW5jdGlvbiBzZXRTdGVwcyhzdGVwcykge1xuXG4gIC8vIHNldCB0aGUgY29tcGxldGlvbiBzdGF0dXMgb2YgZWFjaCBzdGVwIHRvIHRoZSBzYXZlZCB2YWx1ZXNcbiAgc3RlcHMuZm9yRWFjaCggZnVuY3Rpb24oc3RlcCkge1xuICAgIFxuICAgIC8vIGRlZmF1bHQgdmFsdWVzIGZvciBza2lwcGVkLCBjb21wbGV0ZWQgYW5kIHN0YXRpY1xuICAgIGlmICggdHlwZW9mKCBzdGVwLmNvbXBsZXRlZCApID09PSAndW5kZWZpbmVkJyApIHtcbiAgICAgIHN0ZXAuY29tcGxldGVkID0gKEpQUy5zdGVwX3N0YXR1c1tzdGVwLnNsdWddICYmIEpQUy5zdGVwX3N0YXR1c1tzdGVwLnNsdWddLmNvbXBsZXRlZCkgfHwgZmFsc2U7ICBcbiAgICB9XG5cbiAgICBpZiAoIHR5cGVvZiggc3RlcC5za2lwcGVkICkgPT09ICd1bmRlZmluZWQnICkge1xuICAgICAgc3RlcC5za2lwcGVkID0gKEpQUy5zdGVwX3N0YXR1c1tzdGVwLnNsdWddICYmIEpQUy5zdGVwX3N0YXR1c1tzdGVwLnNsdWddLnNraXBwZWQpIHx8IGZhbHNlOyAgXG4gICAgfVxuXG4gICAgaWYgKCB0eXBlb2YoIHN0ZXAuc3RhdGljICkgPT09ICd1bmRlZmluZWQnICkge1xuICAgICAgc3RlcC5zdGF0aWMgPSBmYWxzZTtcbiAgICB9XG5cbiAgICAvLyBkZWZhdWx0IHZhbHVlIGZvciBpbmNsdWRlSW5Qcm9ncmVzc1xuICAgIGlmICggdHlwZW9mKCBzdGVwLmluY2x1ZGVJblByb2dyZXNzICkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBzdGVwLmluY2x1ZGVJblByb2dyZXNzID0gdHJ1ZTtcbiAgICB9XG4gIH0pOyBcbiAgXG4gIF9zdGVwcyA9IHN0ZXBzO1xuICBcbiAgLy8gc2V0IGxvY2F0aW9uIHRvIGZpcnN0IHBlbmRpbmcgc3RlcCwgaWYgbm90IHNldFxuICBlbnN1cmVWYWxpZFN0ZXBTbHVnKCk7IFxufVxuXG5mdW5jdGlvbiBnZXRTdGFydGVkKCkge1xuICBfc3RhcnRlZCA9IHRydWU7XG4gIHNlbGVjdE5leHRQZW5kaW5nU3RlcCgpO1xufVxuXG5mdW5jdGlvbiBjb21wbGV0ZShzdGVwU2x1Zykge1xuICB2YXIgc3RlcCA9IGdldFN0ZXBGcm9tU2x1ZyhzdGVwU2x1Zyk7XG4gIHN0ZXAuY29tcGxldGVkID0gdHJ1ZTtcbiAgc3RlcC5za2lwcGVkID0gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIHNraXAoKSB7XG4gIHZhciBzdGVwU2x1ZyA9IGN1cnJlbnRTdGVwU2x1ZygpO1xuICB2YXIgc3RlcCA9IGdldFN0ZXBGcm9tU2x1ZyhzdGVwU2x1Zyk7XG4gIHN0ZXAuc2tpcHBlZCA9IHRydWU7XG4gIHNlbGVjdE5leHRQZW5kaW5nU3RlcCgpO1xufVxuXG5mdW5jdGlvbiBnZXRTdGVwRnJvbVNsdWcoIHN0ZXBTbHVnICkge1xuICB2YXIgY3VycmVudFN0ZXAgPSBudWxsO1xuICBfLmVhY2goIF9zdGVwcywgZnVuY3Rpb24oIHN0ZXAgKSB7XG4gICAgaWYoIHN0ZXAuc2x1ZyA9PT0gc3RlcFNsdWcgKSB7XG4gICAgICBjdXJyZW50U3RlcCA9IHN0ZXA7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGN1cnJlbnRTdGVwO1xufVxuXG5mdW5jdGlvbiBlbnN1cmVWYWxpZFN0ZXBTbHVnKCkge1xuICB2YXIgc3RlcFNsdWcgPSBjdXJyZW50U3RlcFNsdWcoKTtcbiAgaWYgKCAhICggc3RlcFNsdWcgJiYgZ2V0U3RlcEZyb21TbHVnKCBzdGVwU2x1ZyApICkgKSB7XG4gICAgc2VsZWN0TmV4dFBlbmRpbmdTdGVwKCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gc2VsZWN0TmV4dFBlbmRpbmdTdGVwKCkge1xuICB2YXIgcGVuZGluZ1N0ZXAgPSBfLmZpbmRXaGVyZSggX3N0ZXBzLCB7IGNvbXBsZXRlZDogZmFsc2UsIHNraXBwZWQ6IGZhbHNlIH0gKTtcbiAgaWYgKCBwZW5kaW5nU3RlcCAhPT0gbnVsbCApIHtcbiAgICBzZWxlY3QocGVuZGluZ1N0ZXAuc2x1Zyk7IC8vIGFsc28gc2V0cyB0aGUgd2luZG93IGxvY2F0aW9uIGhhc2hcbiAgfVxufVxuXG5mdW5jdGlvbiBjdXJyZW50U3RlcFNsdWcoKSB7XG4gIGlmICggd2luZG93LmxvY2F0aW9uLmhhc2guaW5kZXhPZignI3dlbGNvbWUvc3RlcHMnKSA9PT0gMCApIHtcbiAgICB2YXIgcGFydHMgPSB3aW5kb3cubG9jYXRpb24uaGFzaC5zcGxpdCgnLycpO1xuICAgIHZhciBzdGVwU2x1ZyA9IHBhcnRzW3BhcnRzLmxlbmd0aC0xXTtcbiAgICByZXR1cm4gc3RlcFNsdWc7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuZnVuY3Rpb24gc2VsZWN0KHN0ZXBTbHVnKSB7XG4gIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gJ3dlbGNvbWUvc3RlcHMvJytzdGVwU2x1Zztcbn1cblxuLy9yZXNldCBldmVyeXRoaW5nIGJhY2sgdG8gZGVmYXVsdHNcbmZ1bmN0aW9uIHJlc2V0KCkge1xuICBKUFMuc3RlcF9zdGF0dXMgPSB7fTtcbiAgXy53aGVyZSggX3N0ZXBzLCB7IHN0YXRpYzogZmFsc2V9ICkuZm9yRWFjaCggZnVuY3Rpb24gKCBzdGVwICkgeyBcbiAgICBzdGVwLmNvbXBsZXRlZCA9IGZhbHNlO1xuICAgIHN0ZXAuc2tpcHBlZCA9IGZhbHNlO1xuICB9ICk7XG4gIF9zdGFydGVkID0gZmFsc2U7XG59XG5cbnZhciBTZXR1cFByb2dyZXNzU3RvcmUgPSBfLmV4dGVuZCh7fSwgRXZlbnRFbWl0dGVyLnByb3RvdHlwZSwge1xuXG4gIGluaXQ6IGZ1bmN0aW9uKHN0ZXBzKSB7XG4gICAgc2V0U3RlcHMoc3RlcHMpO1xuICB9LFxuXG4gIGdldEFsbFN0ZXBzOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gX3N0ZXBzO1xuICB9LFxuXG4gIGlzTmV3VXNlcjogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuICFfc3RhcnRlZDtcbiAgfSxcblxuICBlbWl0Q2hhbmdlOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLmVtaXQoIENIQU5HRV9FVkVOVCApO1xuICB9LFxuXG4gIGdldEN1cnJlbnRTdGVwOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZ2V0U3RlcEZyb21TbHVnKCBjdXJyZW50U3RlcFNsdWcoKSApO1xuICB9LFxuXG4gIGdldFN0ZXBGcm9tU2x1ZzogZnVuY3Rpb24oc2x1Zykge1xuICAgIHJldHVybiBnZXRTdGVwRnJvbVNsdWcoIHNsdWcgKTtcbiAgfSxcblxuICBnZXRQcm9ncmVzc1BlcmNlbnQ6IGZ1bmN0aW9uKCkge1xuICBcdHZhciBudW1TdGVwcyA9IF8ud2hlcmUoIF9zdGVwcywgeyBpbmNsdWRlSW5Qcm9ncmVzczogdHJ1ZSB9ICkubGVuZ3RoO1xuICAgIHZhciBjb21wbGV0ZWRTdGVwcyA9IF8ud2hlcmUoIF9zdGVwcywgeyBpbmNsdWRlSW5Qcm9ncmVzczogdHJ1ZSwgY29tcGxldGVkOiB0cnVlIH0gKS5sZW5ndGg7XG4gICAgdmFyIHBlcmNlbnRDb21wbGV0ZSA9IChjb21wbGV0ZWRTdGVwcyAvIG51bVN0ZXBzKSAqIDkwICsgMTA7XG4gICAgdmFyIG91dHB1dCA9IE1hdGgucm91bmQocGVyY2VudENvbXBsZXRlIC8gMTApICogMTA7XG4gICAgcmV0dXJuIG91dHB1dDtcbiAgfSxcblxuICBhZGRDaGFuZ2VMaXN0ZW5lcjogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICB0aGlzLm9uKCBDSEFOR0VfRVZFTlQsIGNhbGxiYWNrICk7XG4gIH0sXG5cbiAgcmVtb3ZlQ2hhbmdlTGlzdGVuZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgdGhpcy5yZW1vdmVMaXN0ZW5lciggQ0hBTkdFX0VWRU5ULCBjYWxsYmFjayApO1xuICB9XG59KTtcblxuLy8gUmVnaXN0ZXIgY2FsbGJhY2sgdG8gaGFuZGxlIGFsbCB1cGRhdGVzXG5BcHBEaXNwYXRjaGVyLnJlZ2lzdGVyKGZ1bmN0aW9uKGFjdGlvbikge1xuICBcbiAgc3dpdGNoKGFjdGlvbi5hY3Rpb25UeXBlKSB7XG4gICAgY2FzZSBKUFNDb25zdGFudHMuU1RFUF9HRVRfU1RBUlRFRDpcbiAgICAgIGdldFN0YXJ0ZWQoKTtcbiAgICAgIFNldHVwUHJvZ3Jlc3NTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNURVBfU0VMRUNUOlxuICAgICAgc2VsZWN0KGFjdGlvbi5zbHVnKTtcbiAgICAgIFNldHVwUHJvZ3Jlc3NTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNURVBfTkVYVDpcbiAgICAgIHNlbGVjdE5leHRQZW5kaW5nU3RlcCgpO1xuICAgICAgU2V0dXBQcm9ncmVzc1N0b3JlLmVtaXRDaGFuZ2UoKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBKUFNDb25zdGFudHMuU1RFUF9DT01QTEVURTpcbiAgICAgIGNvbXBsZXRlKGFjdGlvbi5zbHVnKTtcbiAgICAgIFNldHVwUHJvZ3Jlc3NTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNURVBfQ09NUExFVEVfQU5EX05FWFQ6XG4gICAgICBjb21wbGV0ZShhY3Rpb24uc2x1Zyk7XG4gICAgICBzZWxlY3ROZXh0UGVuZGluZ1N0ZXAoKTtcbiAgICAgIFNldHVwUHJvZ3Jlc3NTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlJFU0VUX0RBVEE6XG4gICAgICByZXNldCgpO1xuICAgICAgU2V0dXBQcm9ncmVzc1N0b3JlLmVtaXRDaGFuZ2UoKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBKUFNDb25zdGFudHMuU1RFUF9TS0lQOlxuICAgICAgc2tpcCgpO1xuICAgICAgU2V0dXBQcm9ncmVzc1N0b3JlLmVtaXRDaGFuZ2UoKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIC8vIG5vIG9wXG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNldHVwUHJvZ3Jlc3NTdG9yZTsiLCIvKlxuICogU3RvcmUgd2hpY2ggbWFuYWdlcyBhbmQgcGVyc2lzdHMgc2l0ZSBpbmZvcm1hdGlvblxuICovXG5cbnZhciBBcHBEaXNwYXRjaGVyID0gcmVxdWlyZSgnLi4vZGlzcGF0Y2hlci9hcHAtZGlzcGF0Y2hlcicpLFxuICBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXIsXG4gIEpQU0NvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9qZXRwYWNrLXN0YXJ0LWNvbnN0YW50cycpLFxuICBXUEFqYXggPSByZXF1aXJlKCcuLi91dGlscy93cC1hamF4Jyk7XG5cbnZhciBDSEFOR0VfRVZFTlQgPSAnY2hhbmdlJztcblxudmFyIGxheW91dCA9IEpQUy5zdGVwcy5sYXlvdXQuY3VycmVudDtcblxuZnVuY3Rpb24gc2V0VGl0bGUobmV3VGl0bGUpIHtcblx0SlBTLmJsb2dpbmZvLm5hbWUgPSBuZXdUaXRsZTtcbn1cblxuZnVuY3Rpb24gc2V0RGVzY3JpcHRpb24obmV3RGVzY3JpcHRpb24pIHtcbiAgSlBTLmJsb2dpbmZvLmRlc2NyaXB0aW9uID0gbmV3RGVzY3JpcHRpb247IFxufVxuXG5mdW5jdGlvbiBzZXRBY3RpdmVUaGVtZShhY3RpdmVUaGVtZUlkKSB7XG4gIEpQUy50aGVtZXMuZm9yRWFjaCggZnVuY3Rpb24oIHRoZW1lICkge1xuICAgIGlmICggdGhlbWUuaWQgPT0gYWN0aXZlVGhlbWVJZCApIHtcbiAgICAgIHRoZW1lLmFjdGl2ZSA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoZW1lLmFjdGl2ZSA9IGZhbHNlO1xuICAgIH1cbiAgfSApO1xufVxuXG5mdW5jdGlvbiBpbnN0YWxsZWRUaGVtZSh0aGVtZSkge1xuICBKUFMudGhlbWVzLnVuc2hpZnQodGhlbWUpO1xuICBKUFMudGhlbWVzID0gSlBTLnRoZW1lcy5zbGljZSgwLCAzKTtcbn1cblxuZnVuY3Rpb24gc2V0SmV0cGFja01vZHVsZUFjdGl2YXRlZChzbHVnKSB7XG4gIGlmICggXy5pbmRleE9mKCBKUFMuamV0cGFjay5hY3RpdmVfbW9kdWxlcywgc2x1ZyApID09PSAtMSApIHtcbiAgICBKUFMuamV0cGFjay5hY3RpdmVfbW9kdWxlcy5wdXNoKHNsdWcpOyAgXG4gIH1cbn1cblxuZnVuY3Rpb24gc2V0SmV0cGFja01vZHVsZURlY3RpdmF0ZWQoc2x1Zykge1xuICB2YXIgaW5kZXggPSBfLmluZGV4T2YoIEpQUy5qZXRwYWNrLmFjdGl2ZV9tb2R1bGVzLCBzbHVnICk7XG4gIGlmICggaW5kZXggPj0gMCkge1xuICAgIEpQUy5qZXRwYWNrLmFjdGl2ZV9tb2R1bGVzLnNwbGljZShpbmRleCwgMSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gc2V0SmV0cGFja0FkZGl0aW9uYWxNb2R1bGVzKG1vZHVsZXMpIHtcbiAgSlBTLmpldHBhY2suYWRkaXRpb25hbF9tb2R1bGVzID0gXy5maWx0ZXIobW9kdWxlcywgZnVuY3Rpb24obW9kdWxlKSB7XG4gICAgcmV0dXJuIF8uaW5kZXhPZihKUFMuamV0cGFjay5qdW1wc3RhcnRfbW9kdWxlcy5tYXAoZnVuY3Rpb24obW9kKXtyZXR1cm4gbW9kLnNsdWc7fSksIG1vZHVsZS5zbHVnKSA9PSAtMTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHNldExheW91dChsYXlvdXROYW1lKSB7XG4gIGxheW91dCA9IGxheW91dE5hbWU7IC8vIFhYWCBUT0RPOiBnZXQgdGhpcyB2YWx1ZSBkeW5hbWljYWxseSBmcm9tIHRoZSBzZXJ2ZXIhXG59XG5cbmZ1bmN0aW9uIHNldEpldHBhY2tDb25maWd1cmVkKCkge1xuICBKUFMuamV0cGFjay5jb25maWd1cmVkID0gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gc2V0SmV0cGFja0p1bXBzdGFydEFjdGl2YXRlZCgpIHtcbiAgSlBTLmpldHBhY2suanVtcHN0YXJ0X21vZHVsZXMuZm9yRWFjaCggZnVuY3Rpb24oIG1vZHVsZSApIHtcbiAgICBzZXRKZXRwYWNrTW9kdWxlQWN0aXZhdGVkKCBtb2R1bGUuc2x1ZyApO1xuICB9KTtcbn1cblxudmFyIFNpdGVTdG9yZSA9IF8uZXh0ZW5kKHt9LCBFdmVudEVtaXR0ZXIucHJvdG90eXBlLCB7XG5cbiAgZ2V0VGl0bGU6IGZ1bmN0aW9uKCkge1xuICBcdHJldHVybiBKUFMuYmxvZ2luZm8ubmFtZTtcbiAgfSxcblxuICBnZXREZXNjcmlwdGlvbjogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIEpQUy5ibG9naW5mby5kZXNjcmlwdGlvbjtcbiAgfSxcblxuICBnZXRUaGVtZXM6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBKUFMudGhlbWVzO1xuICB9LFxuXG4gIGdldEFjdGl2ZVRoZW1lSWQ6IGZ1bmN0aW9uKCkge1xuICAgIGZvcih2YXIgaT0wOyBpIDwgSlBTLnRoZW1lcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHRoZW1lID0gSlBTLnRoZW1lc1tpXTtcbiAgICAgIGlmICggdGhlbWUuYWN0aXZlICkge1xuICAgICAgICByZXR1cm4gdGhlbWUuaWQ7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9LFxuXG4gIGdldEpldHBhY2tDb25maWd1cmVkOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gSlBTLmpldHBhY2suY29uZmlndXJlZDtcbiAgfSxcblxuICBnZXRBY3RpdmVNb2R1bGVTbHVnczogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIEpQUy5qZXRwYWNrLmFjdGl2ZV9tb2R1bGVzO1xuICB9LFxuXG4gIGlzSmV0cGFja01vZHVsZUVuYWJsZWQ6IGZ1bmN0aW9uKHNsdWcpIHtcbiAgICByZXR1cm4gKCBfLmluZGV4T2YoIEpQUy5qZXRwYWNrLmFjdGl2ZV9tb2R1bGVzLCBzbHVnICkgPj0gMCApO1xuICB9LFxuXG4gIGdldEpldHBhY2tBZGRpdGlvbmFsTW9kdWxlczogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIEpQUy5qZXRwYWNrLmFkZGl0aW9uYWxfbW9kdWxlcztcbiAgfSxcblxuICBnZXRKdW1wc3RhcnRNb2R1bGVTbHVnczogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIEpQUy5qZXRwYWNrLmp1bXBzdGFydF9tb2R1bGVzLm1hcChmdW5jdGlvbihtb2R1bGUpIHsgcmV0dXJuIG1vZHVsZS5zbHVnOyB9KTtcbiAgfSxcblxuICBnZXRKdW1wc3RhcnRNb2R1bGVzOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gSlBTLmpldHBhY2suanVtcHN0YXJ0X21vZHVsZXM7XG4gIH0sXG5cbiAgZ2V0UG9wdWxhclRoZW1lczogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIFdQQWpheC5wb3N0KEpQUy5zaXRlX2FjdGlvbnMuZ2V0X3BvcHVsYXJfdGhlbWVzKTtcbiAgfSxcblxuICBnZXRKZXRwYWNrSnVtcHN0YXJ0RW5hYmxlZDogZnVuY3Rpb24oKSB7XG4gICAgZm9yKHZhciBpPTA7IGkgPCBKUFMuamV0cGFjay5qdW1wc3RhcnRfbW9kdWxlcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIG1vZHVsZSA9IEpQUy5qZXRwYWNrLmp1bXBzdGFydF9tb2R1bGVzW2ldO1xuICAgICAgaWYgKCAhIHRoaXMuaXNKZXRwYWNrTW9kdWxlRW5hYmxlZCggbW9kdWxlLnNsdWcgKSApIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSxcblxuICBnZXRMYXlvdXQ6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBsYXlvdXQ7XG4gIH0sXG5cbiAgZW1pdENoYW5nZTogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5lbWl0KENIQU5HRV9FVkVOVCk7XG4gIH0sXG5cbiAgYWRkQ2hhbmdlTGlzdGVuZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgdGhpcy5vbihDSEFOR0VfRVZFTlQsIGNhbGxiYWNrKTtcbiAgfSxcblxuICByZW1vdmVDaGFuZ2VMaXN0ZW5lcjogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICB0aGlzLnJlbW92ZUxpc3RlbmVyKENIQU5HRV9FVkVOVCwgY2FsbGJhY2spO1xuICB9XG59KTtcblxuLy8gUmVnaXN0ZXIgY2FsbGJhY2sgdG8gaGFuZGxlIGFsbCB1cGRhdGVzXG5BcHBEaXNwYXRjaGVyLnJlZ2lzdGVyKGZ1bmN0aW9uKGFjdGlvbikge1xuXG4gIHN3aXRjaChhY3Rpb24uYWN0aW9uVHlwZSkge1xuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNJVEVfU0VUX1RJVExFOlxuICAgICAgc2V0VGl0bGUoYWN0aW9uLnRpdGxlKTtcbiAgICAgIFNpdGVTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNJVEVfU0VUX0RFU0NSSVBUSU9OOlxuICAgICAgc2V0RGVzY3JpcHRpb24oYWN0aW9uLmRlc2NyaXB0aW9uKTtcbiAgICAgIFNpdGVTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNJVEVfU0VUX1RIRU1FOlxuICAgICAgc2V0QWN0aXZlVGhlbWUoYWN0aW9uLnRoZW1lSWQpO1xuICAgICAgU2l0ZVN0b3JlLmVtaXRDaGFuZ2UoKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBKUFNDb25zdGFudHMuU0lURV9JTlNUQUxMX1RIRU1FOlxuICAgICAgaW5zdGFsbGVkVGhlbWUoYWN0aW9uLnRoZW1lKTtcbiAgICAgIFNpdGVTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNJVEVfSkVUUEFDS19DT05GSUdVUkVEOlxuICAgICAgc2V0SmV0cGFja0NvbmZpZ3VyZWQoKTtcbiAgICAgIFNpdGVTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNJVEVfSkVUUEFDS19BRERfTU9EVUxFUzpcbiAgICAgIHNldEpldHBhY2tBZGRpdGlvbmFsTW9kdWxlcyhhY3Rpb24ubW9kdWxlcyk7XG4gICAgICBTaXRlU3RvcmUuZW1pdENoYW5nZSgpO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIEpQU0NvbnN0YW50cy5TSVRFX0pFVFBBQ0tfTU9EVUxFX0VOQUJMRUQ6XG4gICAgICBzZXRKZXRwYWNrTW9kdWxlQWN0aXZhdGVkKGFjdGlvbi5zbHVnKTtcbiAgICAgIFNpdGVTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNJVEVfSkVUUEFDS19NT0RVTEVfRElTQUJMRUQ6XG4gICAgICBzZXRKZXRwYWNrTW9kdWxlRGVjdGl2YXRlZChhY3Rpb24uc2x1Zyk7XG4gICAgICBTaXRlU3RvcmUuZW1pdENoYW5nZSgpO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIEpQU0NvbnN0YW50cy5TSVRFX0pFVFBBQ0tfSlVNUFNUQVJUX0VOQUJMRUQ6IFxuICAgICAgc2V0SmV0cGFja0p1bXBzdGFydEFjdGl2YXRlZCgpO1xuICAgICAgU2l0ZVN0b3JlLmVtaXRDaGFuZ2UoKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBKUFNDb25zdGFudHMuU0lURV9TRVRfTEFZT1VUOlxuICAgICAgc2V0TGF5b3V0KGFjdGlvbi5sYXlvdXQpO1xuICAgICAgU2l0ZVN0b3JlLmVtaXRDaGFuZ2UoKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIC8vIG5vIG9wXG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNpdGVTdG9yZTsiLCJ2YXIgQXBwRGlzcGF0Y2hlciA9IHJlcXVpcmUoJy4uL2Rpc3BhdGNoZXIvYXBwLWRpc3BhdGNoZXInKSxcblx0RXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyLFxuXHRKUFNDb25zdGFudHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvamV0cGFjay1zdGFydC1jb25zdGFudHMnKTtcblxudmFyIENIQU5HRV9FVkVOVCA9ICdjaGFuZ2UnO1xuXG52YXIgc3Bpbm5lckVuYWJsZWQgPSBmYWxzZSxcblx0c3Bpbm5lck1lc3NhZ2UgPSBudWxsO1xuXG5mdW5jdGlvbiBzaG93KG1lc3NhZ2UpIHtcblx0c3Bpbm5lckVuYWJsZWQgPSB0cnVlO1xuXHRzcGlubmVyTWVzc2FnZSA9IG1lc3NhZ2U7XG59XG5cbmZ1bmN0aW9uIGhpZGUoKSB7XG5cdHNwaW5uZXJFbmFibGVkID0gZmFsc2U7XG5cdHNwaW5uZXJNZXNzYWdlID0gbnVsbDtcbn1cblxudmFyIFNwaW5uZXJTdG9yZSA9IF8uZXh0ZW5kKHt9LCBFdmVudEVtaXR0ZXIucHJvdG90eXBlLCB7XG5cdHNob3dpbmc6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBzcGlubmVyRW5hYmxlZDtcblx0fSxcblxuXHRnZXRNZXNzYWdlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gc3Bpbm5lck1lc3NhZ2U7XG5cdH0sXG5cblx0YWRkQ2hhbmdlTGlzdGVuZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG5cdFx0dGhpcy5vbiggQ0hBTkdFX0VWRU5ULCBjYWxsYmFjayApO1xuXHR9LFxuXG5cdHJlbW92ZUNoYW5nZUxpc3RlbmVyOiBmdW5jdGlvbihjYWxsYmFjaykge1xuXHRcdHRoaXMucmVtb3ZlTGlzdGVuZXIoIENIQU5HRV9FVkVOVCwgY2FsbGJhY2sgKTtcblx0fSxcblxuXHRlbWl0Q2hhbmdlOiBmdW5jdGlvbigpIHtcblx0ICAgIHRoaXMuZW1pdCggQ0hBTkdFX0VWRU5UICk7XG5cdH0sXG59KTtcblxuQXBwRGlzcGF0Y2hlci5yZWdpc3RlcihmdW5jdGlvbihhY3Rpb24pIHtcblxuICBzd2l0Y2goYWN0aW9uLmFjdGlvblR5cGUpIHtcbiAgICBjYXNlIEpQU0NvbnN0YW50cy5TSE9XX1NQSU5ORVI6XG5cdFx0c2hvdyhhY3Rpb24ubWVzc2FnZSk7XG5cdFx0U3Bpbm5lclN0b3JlLmVtaXRDaGFuZ2UoKTtcblx0XHRicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLkhJREVfU1BJTk5FUjpcbiAgICAgXHRoaWRlKCk7XG4gICAgIFx0U3Bpbm5lclN0b3JlLmVtaXRDaGFuZ2UoKTtcbiAgICAgXHRicmVhaztcblxuICAgIGRlZmF1bHQ6XG4gICAgICAvLyBubyBvcFxuICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBTcGlubmVyU3RvcmU7IiwiLypcbiAqIEEgc2ltcGxlIHdyYXBwZXIgZm9yIGNhbGxzIHRvIFdQJ3MgXCJhamF4dXJsXCIuXG4gKlxuICogVGhpcyBleGlzdHMgYmVjYXVzZSBXUCdzIHdwX3NlbmRfanNvbl9lcnJvciBkb2Vzbid0IGFjdHVhbGx5IHNlbmQgYW4gZXJyb3IgY29kZSwgYnV0IHJhdGhlclxuICogYSAyMDAgT0sgcmVzcG9uc2Ugd2l0aCBhIHN0cnVjdHVyZSBsaWtlIHRoaXM6XG4gKiB7c3VjY2VzczogZmFsc2UsIGRhdGE6IFwic29tZXRoaW5nIHdlbnQgd3JvbmdcIn1cbiAqXG4gKiBTbyB0aGlzIGNsYXNzIHNtb290aGVzIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gNTB4IGVycm9ycyBhbmQgV1AncyBlcnJvciBvYmplY3QuXG4gKlxuICogRm9yIGNvbnZlbmllbmNlLCB0aGlzIHJldHVybnMgYSBqUXVlcnkuRGVmZXJyZWQgb2JqZWN0IHdoaWNoIGNhbiBoYXZlIC5kb25lKCkgXG4gKiBhbmQgLmZhaWwoKSBtZXRob2RzIGNoYWluZWQgb250byBpdCwgc2ltaWxhciB0byBqUXVlcnkucG9zdCdzIFwic3VjY2Vzc1wiIGFuZCBcImZhaWxcIlxuICpcbiAqIEFsc28sIGl0IGFjY2VwdHMgYW4gXCJhY3Rpb25cIiBwYXJhbSBpbnN0ZWFkIG9mIGEgVVJMLCBzaW5jZSBhbGwgV1AgYWpheCByZXF1ZXN0c1xuICogYWN0dWFsbHkgZ28gdmlhIHRoZSBzYW1lIFVSTCB3aXRoIGRpZmZlcmVudCBwYXJhbWV0ZXJzLCBhbmQgaXQgaW52b2tlcyBjYWxsYmFja3Mgd2l0aFxuICoganVzdCB0aGUgXCJkYXRhXCIgcG9ydGlvbiBvZiBXUCdzIGFqYXggcGF5bG9hZCwgcmF0aGVyIHRoYW4gdGhlIHdob2xlIHN0cnVjdHVyZS5cbiAqIFxuICoqL1xuXG52YXIgRGF0YUFjdGlvbnMgPSByZXF1aXJlKCcuLi9hY3Rpb25zL2RhdGEtYWN0aW9ucycpO1xuXG52YXIgV1BBamF4ID0gKGZ1bmN0aW9uKCkge1xuXG5cdHJldHVybiB7XG5cdFx0cG9zdDogZnVuY3Rpb24oYWN0aW9uLCBwYXlsb2FkKSB7XG5cdFx0XHRwYXlsb2FkID0gdHlwZW9mIHBheWxvYWQgIT09ICd1bmRlZmluZWQnID8gcGF5bG9hZCA6IHt9O1xuXHRcdFx0dmFyIGRhdGEgPSBfLmV4dGVuZChwYXlsb2FkLCB7YWN0aW9uOiBhY3Rpb24sIG5vbmNlOiBKUFMubm9uY2V9KTtcblx0XHRcdFxuXHRcdFx0dmFyIGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCk7XG5cblx0XHRcdERhdGFBY3Rpb25zLnJlcXVlc3RTdGFydGVkKCk7XG5cblx0XHRcdGpRdWVyeS5wb3N0KCBhamF4dXJsLCBkYXRhIClcblx0XHRcdFx0LnN1Y2Nlc3MoIGZ1bmN0aW9uKCByZXNwb25zZSApIHtcblx0XHRcdFx0XHRpZiAoICEgcmVzcG9uc2Uuc3VjY2VzcyApIHtcblx0XHRcdFx0XHRcdGRlZmVycmVkLnJlamVjdChyZXNwb25zZS5kYXRhKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0ZGVmZXJyZWQucmVzb2x2ZShyZXNwb25zZS5kYXRhKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pXG5cdFx0XHRcdC5mYWlsKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRkZWZlcnJlZC5yZWplY3QoXCJTZXJ2ZXIgZXJyb3JcIik7XG5cdFx0XHRcdH0pXG5cdFx0XHRcdC5hbHdheXMoIGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHREYXRhQWN0aW9ucy5yZXF1ZXN0RmluaXNoZWQoKTtcblx0XHRcdFx0fSk7XHRcblxuXHRcdFx0cmV0dXJuIGRlZmVycmVkO1xuXHRcdH1cblx0fTtcblxufSkoKTtcblxubW9kdWxlLmV4cG9ydHMgPSBXUEFqYXg7IiwidmFyIFJlYWN0ID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3cuUmVhY3QgOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsLlJlYWN0IDogbnVsbCksXG4gICAgV2VsY29tZVdpZGdldCA9IHJlcXVpcmUoJy4vY29tcG9uZW50cy93ZWxjb21lLXdpZGdldCcpLFxuICAgIFBhdGhzID0gcmVxdWlyZSgnLi9jb25zdGFudHMvamV0cGFjay1zdGFydC1wYXRocycpLFxuICAgIFNldHVwUHJvZ3Jlc3NTdG9yZSA9IHJlcXVpcmUoJy4vc3RvcmVzL3NldHVwLXByb2dyZXNzLXN0b3JlJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gICAgalF1ZXJ5KGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XG5cbiAgICBcdFNldHVwUHJvZ3Jlc3NTdG9yZS5pbml0KFtcbiAgICBcdFx0Ly8gTk9URTogWW91IGNhbiBoYXZlIFwic3RhdGljOiB0cnVlXCIgdG8gaW5jbHVkZSB1bi1jbGlja2FibGUgXG4gICAgXHRcdC8vIHByZWZpbGxlZCBzdGVwcyB0aGF0IGFjdCBhcyB0aG91Z2ggdGhleSd2ZSBhbHJlYWR5IGJlZW4gY29tcGxldGVkXG5cdFx0XHQvLyB7XG5cdFx0XHQvLyBcdG5hbWU6IFwiU2lnbiB1cFwiLFxuXHRcdFx0Ly8gXHRjb21wbGV0ZWQ6IHRydWUsXG5cdFx0XHQvLyBcdHN0YXRpYzogdHJ1ZVxuXHRcdFx0Ly8gfSxcblx0XHRcdHtcblx0XHRcdFx0bmFtZTogJ1NpdGUgdGl0bGUnLFxuXHRcdFx0XHRzbHVnOiBQYXRocy5TSVRFX1RJVExFX1NURVBfU0xVRyxcblx0XHRcdFx0d2VsY29tZVZpZXc6IHJlcXVpcmUoJy4vY29tcG9uZW50cy9zaXRlLXRpdGxlLXN0ZXAnKVxuXHRcdFx0fSxcblx0XHRcdHtcblx0XHRcdFx0bmFtZTogJ1BpY2sgYSBsYXlvdXQnLFxuXHRcdFx0XHRzbHVnOiBQYXRocy5MQVlPVVRfU1RFUF9TTFVHLFxuXHRcdFx0XHR3ZWxjb21lVmlldzogcmVxdWlyZSgnLi9jb21wb25lbnRzL2xheW91dC1zdGVwJylcblx0XHRcdH0sXG5cdFx0XHR7IFxuXHRcdFx0XHRuYW1lOiBcIlBpY2sgYSBkZXNpZ25cIiwgXG5cdFx0XHRcdHNsdWc6IFBhdGhzLkRFU0lHTl9TVEVQX1NMVUcsXG5cdFx0XHRcdHdlbGNvbWVWaWV3OiByZXF1aXJlKCcuL2NvbXBvbmVudHMvZGVzaWduLXN0ZXAnKSwgXG5cdFx0XHR9LFxuXHRcdFx0e1xuXHRcdFx0XHRuYW1lOiAnRW5hYmxlIEpldHBhY2snLFxuXHRcdFx0XHRzbHVnOiBQYXRocy5KRVRQQUNLX01PRFVMRVNfU1RFUF9TTFVHLFxuXHRcdFx0XHR3ZWxjb21lVmlldzogcmVxdWlyZSgnLi9jb21wb25lbnRzL2pldHBhY2stanVtcHN0YXJ0LXN0ZXAnKSxcblx0XHRcdFx0bWVudVZpZXc6IHJlcXVpcmUoJy4vY29tcG9uZW50cy9qZXRwYWNrLWp1bXBzdGFydC1tZW51Jylcblx0XHRcdH0sXG5cdFx0XHR7IFxuXHRcdFx0XHRuYW1lOiBcIkFkdmFuY2VkIHNldHRpbmdzXCIsIFxuXHRcdFx0XHRzbHVnOiBQYXRocy5BRFZBTkNFRF9TVEVQX1NMVUcsXG5cdFx0XHRcdHdlbGNvbWVWaWV3OiByZXF1aXJlKCcuL2NvbXBvbmVudHMvYWR2YW5jZWQtc2V0dGluZ3Mtc3RlcCcpLFxuXHRcdFx0XHRpbmNsdWRlSW5Qcm9ncmVzczogZmFsc2Vcblx0XHRcdH1cblx0XHRdKTtcblxuICAgICAgICBSZWFjdC5yZW5kZXIoXG4gICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChXZWxjb21lV2lkZ2V0LCB7fSksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqcHMtd2VsY29tZS1wYW5lbCcpXG4gICAgICAgICk7XG4gICAgfSk7XG59OyIsInZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93LlJlYWN0IDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbC5SZWFjdCA6IG51bGwpLFxuXHRzdHlsZXMgPSByZXF1aXJlKCcuLi9zdHlsZXMnKSxcblx0UmFkaXVtID0gcmVxdWlyZSgncmFkaXVtJyk7XG5cbnZhciBCdXR0b24gPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiQnV0dG9uXCIsXG5cblx0cHJvcFR5cGVzOiB7XG5cdFx0c2l6ZTogUmVhY3QuUHJvcFR5cGVzLm9uZU9mKFsndGlueScsICdub3JtYWwnLCAnYmlnJ10pLFxuXHRcdGNvbG9yOiBSZWFjdC5Qcm9wVHlwZXMub25lT2YoWydncmF5JywgJ2JsdWUnLCAnZ3JlZW4nXSksXG5cdFx0dGhlbWU6IFJlYWN0LlByb3BUeXBlcy5vbmVPZihbJ3dwJywgJ2pldHBhY2snXSksXG5cdFx0aW5saW5lOiBSZWFjdC5Qcm9wVHlwZXMuYm9vbCxcblx0XHRvbkNsaWNrOiBSZWFjdC5Qcm9wVHlwZXMuZnVuYyxcblx0XHRocmVmOiBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nXG5cdH0sXG5cblx0Z2V0RGVmYXVsdFByb3BzOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4geyBzaXplOiAnbm9ybWFsJywgaW5saW5lOiB0cnVlLCBjb2xvcjogJ2dyYXknLCB0aGVtZTogJ3dwJyB9O1xuXHR9LFxuXG5cdGhhbmRsZUNhbGxiYWNrSHJlZjogZnVuY3Rpb24oZSkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHR3aW5kb3cubG9jYXRpb24gPSB0aGlzLnByb3BzLmhyZWY7XG5cdH0sXG5cblx0c3R5bGVzOiB7XG5cdFx0YmFzaWM6IHtcblx0XHRcdGJvcmRlclJhZGl1czogMyxcblx0XHRcdGJveFNoYWRvdzogJ2luc2V0IDAgMXB4IDAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpJyxcblx0XHRcdGJvcmRlcldpZHRoOiAxLFxuXHRcdFx0Ym9yZGVyU3R5bGU6ICdzb2xpZCcsXG5cdFx0XHRjdXJzb3I6ICdwb2ludGVyJyxcblx0XHRcdGRpc3BsYXk6ICdibG9jaycsXG5cdFx0XHRmb250U2l6ZTogMTQsXG5cdFx0XHRmb250V2VpZ2h0OiAnYm9sZCcsXG5cdFx0XHRwYWRkaW5nOiAnMTBweCAyMHB4Jyxcblx0XHRcdHRleHRBbGlnbjogJ2NlbnRlcicsXG5cdFx0XHR0ZXh0RGVjb3JhdGlvbjogJ25vbmUnLFxuXHRcdFx0Ly8gdGV4dFRyYW5zZm9ybTogJ3VwcGVyY2FzZScsXG5cdFx0XHRXZWJraXRGb250U21vb3RoaW5nOiAnYW50aWFsaWFzZWQnLFxuXHRcdFx0dHJhbnNpdGlvbjogJ2JhY2tncm91bmQgMC4ycydcblx0XHR9LFxuXG5cdFx0c2l6ZXM6IHtcblx0XHRcdHRpbnk6IHtcblx0XHRcdFx0Zm9udFNpemU6IDEwLFxuXHRcdFx0XHRwYWRkaW5nOiAnMnB4IDEwcHgnLFxuXHRcdFx0fSxcblx0XHRcdG5vcm1hbDoge1xuXHRcdFx0XHRmb250U2l6ZTogMTMsXG5cdFx0XHRcdHBhZGRpbmc6ICc1cHggMTBweCdcblx0XHRcdH0sXG5cdFx0XHRiaWc6IHtcblx0XHRcdFx0Zm9udFNpemU6IDE2LFxuXHRcdFx0XHRwYWRkaW5nOiAnMjBweCA0MHB4J1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRjb2xvcnM6IHtcblx0XHRcdGdyYXk6IHtcblx0XHRcdFx0YmFja2dyb3VuZDogJ2xpbmVhci1ncmFkaWVudCgjZmZmLCAjZjlmOWY5KScsXG5cdFx0XHRcdGJvcmRlckNvbG9yOiBzdHlsZXMuY29sb3JzLmxpZ2h0R3JheSxcblx0XHRcdFx0Y29sb3I6IHN0eWxlcy5jb2xvcnMuZGFya0dyYXksXG5cdFx0XHRcdCc6aG92ZXInOiB7XG5cdFx0XHRcdFx0Y29sb3I6IHN0eWxlcy5jb2xvcnMuZ3JheVxuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXHRcdFx0Ymx1ZToge1xuXHRcdFx0XHRiYWNrZ3JvdW5kOiBzdHlsZXMuY29sb3JzLmJsdWUsXG5cdFx0XHRcdGJvcmRlckNvbG9yOiAncmdiYSgwLDAsMCwwLjYpJyxcblx0XHRcdFx0Y29sb3I6ICd3aGl0ZScsXG5cdFx0XHRcdCc6aG92ZXInOiB7XG5cdFx0XHRcdFx0YmFja2dyb3VuZDogc3R5bGVzLmNvbG9ycy5saWdodGVyQmx1ZSxcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdGdyZWVuOiB7XG5cdFx0XHRcdGJhY2tncm91bmQ6IHN0eWxlcy5jb2xvcnMuZ3JlZW4sXG5cdFx0XHRcdGNvbG9yOiAnd2hpdGUnLFxuXHRcdFx0XHRib3JkZXJDb2xvcjogJ3JnYmEoMCwwLDAsMC42KScsXG5cdFx0XHRcdCc6aG92ZXInOiB7XG5cdFx0XHRcdFx0YmFja2dyb3VuZDogc3R5bGVzLmNvbG9ycy5saWdodGVyR3JlZW4sXG5cdFx0XHRcdH1cblxuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHR0aGVtZXM6IHtcblx0XHRcdHdwOiB7fSxcblx0XHRcdGpldHBhY2s6IHtcblx0XHRcdFx0cGFkZGluZzogJzE4cHggMjRweCAxNXB4Jyxcblx0XHRcdFx0Zm9udDogJzQwMCAyMHB4LzEgXCJPcGVuIFNhbnNcIiwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmJyxcblx0XHRcdFx0Ym9yZGVyUmFkaXVzOiA2LFxuXHRcdFx0XHRib3JkZXI6ICdub25lJyxcblx0XHRcdFx0Ym94U2hhZG93OiAnMCA2cHggMCAjM2U2YzIwLDAgNnB4IDNweCByZ2JhKDAsMCwwLDAuNCknXG5cdFx0XHR9XG5cdFx0fSxcblx0XHRcblx0XHRpbmxpbmU6IHtcblx0XHRcdGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snXG5cdFx0fSxcblxuXHRcdGRpc2FibGVkOiB7XG5cdFx0XHRiYWNrZ3JvdW5kOiAnI2Y5ZjlmOScsXG5cdFx0XHRib3JkZXJDb2xvcjogc3R5bGVzLmNvbG9ycy5saWdodEdyYXksXG5cdFx0XHRjb2xvcjogc3R5bGVzLmNvbG9ycy5saWdodEdyYXksXG5cdFx0XHQnOmhvdmVyJzoge1xuXHRcdFx0XHRiYWNrZ3JvdW5kOiAnI2Y5ZjlmOScsXG5cdFx0XHRcdGJvcmRlckNvbG9yOiBzdHlsZXMuY29sb3JzLmxpZ2h0R3JheSxcblx0XHRcdFx0Y29sb3I6IHN0eWxlcy5jb2xvcnMubGlnaHRHcmF5LFxuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHRyZW5kZXI6IGZ1bmN0aW9uKCkge1xuXG5cdFx0dmFyICRfXzA9ICAgICAgICAgIHRoaXMucHJvcHMsc2l6ZT0kX18wLnNpemUsY29sb3I9JF9fMC5jb2xvcixpbmxpbmU9JF9fMC5pbmxpbmUsb25DbGljaz0kX18wLm9uQ2xpY2ssdGhlbWU9JF9fMC50aGVtZSxocmVmPSRfXzAuaHJlZixvdGhlcj0oZnVuY3Rpb24oc291cmNlLCBleGNsdXNpb24pIHt2YXIgcmVzdCA9IHt9O3ZhciBoYXNPd24gPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O2lmIChzb3VyY2UgPT0gbnVsbCkge3Rocm93IG5ldyBUeXBlRXJyb3IoKTt9Zm9yICh2YXIga2V5IGluIHNvdXJjZSkge2lmIChoYXNPd24uY2FsbChzb3VyY2UsIGtleSkgJiYgIWhhc093bi5jYWxsKGV4Y2x1c2lvbiwga2V5KSkge3Jlc3Rba2V5XSA9IHNvdXJjZVtrZXldO319cmV0dXJuIHJlc3Q7fSkoJF9fMCx7c2l6ZToxLGNvbG9yOjEsaW5saW5lOjEsb25DbGljazoxLHRoZW1lOjEsaHJlZjoxfSk7XG5cblx0XHR2YXIgY2FsbGJhY2s7XG5cblx0XHR2YXIgY29tYmluZWRTdHlsZSA9IFtcblx0XHRcdHRoaXMuc3R5bGVzLmJhc2ljLCBcblx0XHRcdHRoaXMuc3R5bGVzLnNpemVzW3NpemVdLFxuXHRcdFx0dGhpcy5zdHlsZXMuY29sb3JzW2NvbG9yXSxcblx0XHRcdHRoaXMuc3R5bGVzLnRoZW1lc1t0aGVtZV0sXG5cdFx0XHR0aGlzLnByb3BzLmRpc2FibGVkICYmIHRoaXMuc3R5bGVzLmRpc2FibGVkLFxuXHRcdFx0aW5saW5lICYmIHRoaXMuc3R5bGVzLmlubGluZSxcblx0XHRcdHRoaXMucHJvcHMuc3R5bGVcblx0XHRdO1xuXG5cdFx0aWYgKCBocmVmICYmICFvbkNsaWNrKSB7XG5cdFx0XHRjYWxsYmFjayA9IHRoaXMuaGFuZGxlQ2FsbGJhY2tIcmVmO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRjYWxsYmFjayA9IG9uQ2xpY2s7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIChcblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwgUmVhY3QuX19zcHJlYWQoe30sICBvdGhlciwge3N0eWxlOiBjb21iaW5lZFN0eWxlLCBvbkNsaWNrOiBjYWxsYmFjaywgb25Nb3VzZU92ZXI6IHRoaXMuaGFuZGxlTW91c2VPdmVyLCBvbk1vdXNlT3V0OiB0aGlzLmhhbmRsZU1vdXNlT3V0fSksIFxuXHRcdFx0XHR0aGlzLnByb3BzLmNoaWxkcmVuXG5cdFx0XHQpXG5cdFx0KTtcblx0fVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gUmFkaXVtKEJ1dHRvbik7IiwidmFyIFJlYWN0ID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3cuUmVhY3QgOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsLlJlYWN0IDogbnVsbCksXG5cdFJhZGl1bSA9IHJlcXVpcmUoJ3JhZGl1bScpO1xuXG4vKipcbiAqIFNob3cgcHJvZ3Jlc3MgdGhyb3VnaCB0aGUgc3RlcHNcbiAqIE5PVEU6IHByb2dyZXNzUGVyY2VudCBNVVNUIGJlIHJvdW5kZWQgdG8gdGhlIG5lYXJlc3QgMTAsIGkuZS4gMTAsIDIwLCAzMCwgNDAuLi4xMDBcbiAqIFRoaXMgaXMgcmVxdWlyZWQgZm9yIHRoZSBDU1MgdG8gd29yayAod2lsbCBmaXggbGF0ZXIuLi4pXG4gKiovXG52YXIgUHJvZ3Jlc3NCYXIgPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiUHJvZ3Jlc3NCYXJcIixcblxuXHRwcm9wVHlwZXM6IHtcblx0XHRzdHlsZTogUmVhY3QuUHJvcFR5cGVzLm9iamVjdCxcblx0XHRwcm9ncmVzc1BlcmNlbnQ6IFJlYWN0LlByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZFxuXHR9LFxuXG5cdHN0eWxlczoge1xuXHRcdHdyYXBwZXI6IHtcblx0XHRcdGZvbnRXZWlnaHQ6IDQwMCxcblx0XHRcdGZvbnRTaXplOiAnODAlJ1xuXHRcdH0sXG5cdFx0cHJvZ3Jlc3M6IHtcblx0XHRcdGJhY2tncm91bmQ6ICcjNGFiODY2Jyxcblx0XHRcdHdpZHRoOiAnMCUnLFxuXHRcdFx0dHJhbnNpdGlvbjogJ3dpZHRoIDAuNXMnLFxuXHRcdFx0ZGlzcGxheTogJ2Jsb2NrJyxcblx0XHRcdGhlaWdodDogJzEwMCUnXG5cdFx0fSxcblx0XHRiYXI6IHtcblx0XHRcdGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuXHRcdFx0d2lkdGg6IDgwLFxuXHRcdFx0aGVpZ2h0OiAxMixcblx0XHRcdG1hcmdpbjogJzAgOHB4IC0ycHggMCcsXG5cdFx0XHRwYWRkaW5nOiAyLFxuXHRcdFx0Ym9yZGVyUmFkaXVzOiAyLFxuXHRcdFx0YmFja2dyb3VuZDogJyNmNWY1ZjUnXG5cdFx0fVxuXHR9LFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0Ly8gdmFyIGNsYXNzZXMgPSAnZ2V0dGluZy1zdGFydGVkX19wcm9ncmVzcyBwcm9ncmVzc18nK3RoaXMucHJvcHMucHJvZ3Jlc3NQZXJjZW50O1xuXHRcdHJldHVybiAoXG5cdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtzdHlsZTogW3RoaXMuc3R5bGVzLndyYXBwZXIsIHRoaXMucHJvcHMuc3R5bGVdfSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge3N0eWxlOiB0aGlzLnN0eWxlcy5iYXJ9LCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7c3R5bGU6IFt0aGlzLnN0eWxlcy5wcm9ncmVzcywgeyB3aWR0aDogdGhpcy5wcm9wcy5wcm9ncmVzc1BlcmNlbnQrJyUnIH1dfSlcblx0XHRcdFx0KSwgXG5cdFx0XHRcdHRoaXMucHJvcHMucHJvZ3Jlc3NQZXJjZW50LCBcIiUgY29tcGxldGVcIlxuXHRcdFx0KVxuXHRcdCk7XG5cdH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJhZGl1bShQcm9ncmVzc0Jhcik7IiwibW9kdWxlLmV4cG9ydHMgPSB7XG5cdC8vbGF5b3V0XG5cdHJpZ2h0OiB7IGZsb2F0OiAncmlnaHQnIH0sXG5cdFxuXHRsZWZ0OiB7IGZsb2F0OiAnbGVmdCcgfSxcblx0XG5cdHRoaXJkOiB7IHdpZHRoOiAnMzMlJyB9LFxuXG5cdGZ1bGw6IHsgd2lkdGg6ICcxMDAlJyB9LFxuXG5cdGhhbGY6IHsgd2lkdGg6ICc0OCUnIH0sXG5cblx0aGlkZGVuOiB7IGRpc3BsYXk6ICdub25lJyB9LFxuXG5cdGNsZWFyOiB7XG5cdFx0Y2xlYXI6ICdib3RoJywgXG5cdFx0ZGlzcGxheTogJ2Jsb2NrJyBcblx0fSxcblxuXHQvL2FjY291bnQgc3RhdHVzIGluZGljYXRvclxuXHRhY2NvdW50U3RhdHVzOiB7XG5cdFx0dGV4dFRyYW5zZm9ybTogJ2NhcGl0YWxpemUnXG5cdH0sXG5cblx0YWNjb3VudFN0YXR1c05vdGljb246IHtcblx0XHRib3JkZXJSYWRpdXM6IFwiNTAlXCIsXG5cdFx0d2lkdGg6IDE2LFxuXHRcdGhlaWdodDogMTYsXG5cdFx0bWFyZ2luUmlnaHQ6IDEwLFxuXHRcdGNvbG9yOiAnI2ZmZicsXG5cdFx0YmFja2dyb3VuZDogJyM4MWJmMTYnXG5cdH0sXG5cblx0Ly9ib3ggd2lkZ2V0XG5cdGJveDoge1xuXHRcdGJvcmRlclJhZGl1czogMixcblx0XHRwYWRkaW5nOiAnNXB4IDEwcHgnLFxuXHRcdGJhY2tncm91bmQ6ICcjZjVmNWY1J1xuXHR9LFxuXG5cdC8vYmFzaWMgc3R5bGluZyAtIGZvbnRzIGFuZCBjb2xvcnNcblx0bGlnaHQ6IHsgY29sb3I6ICcjOTk5JyB9LFxuXHRjb2xvcnM6IHtcblx0XHRha2lzbWV0R3JlZW46ICcjNWU4ZTE0Jyxcblx0XHRibHVlOiAnIzAyOWRkNicsXG5cdFx0bGlnaHRlckJsdWU6ICcjMTNBRUU3Jyxcblx0XHRibGFjazogJyMzMzMnLFxuXHRcdGRhcmtHcmF5OiAnIzQ0NCcsXG5cdFx0Z3JheTogJyM3ODc4NzgnLFxuXHRcdGxpZ2h0R3JheTogJyNiYmInLFxuXHRcdHZlcnlMaWdodEdyYXk6ICcjZWVlJyxcblx0XHRvZmZXaGl0ZTogJyNmOWY5ZjknLFxuXHRcdGFjY291bnRBY3RpdmU6ICcjODFiZjE2Jyxcblx0XHRhY2NvdW50SW5hY3RpdmU6ICcjYmJiJyxcblx0XHRncmVlbjogJyM1MThkMmEnLFxuXHRcdGxpZ2h0ZXJHcmVlbjogJyM1Nzk3MmQnXG5cdH0sXG5cblx0Zm9udHM6IHtcblx0XHRzYW5zOiAnT3BlbiBTYW5zLCBcIk9wZW4gU2Fuc1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWYnLFxuXHRcdHNlcmlmOiAnTWVycml3ZWF0aGVyLCBHZW9yZ2lhLCBzZXJpZicsXG5cdFx0bW9ubzogJ1wiQ291cmllciBOZXdcIiwgQ291cmllciwgbW9ub3NwYWNlJ1xuXHR9LFxuXG5cdC8vZm9ybXNcblx0aW5wdXQ6IHtcblx0XHR3aWR0aDogXCIxMDAlXCIsXG5cdFx0Ym94U2hhZG93OiAnbm9uZScsXG5cdFx0YmFja2dyb3VuZDogJyNmZmYnLFxuXHRcdGJvcmRlcjogJzFweCBzb2xpZCAjZDVkNWQ1Jyxcblx0XHRmb250U2l6ZTogMTIsXG5cdFx0cGFkZGluZzogJzhweCAxMHB4J1xuXHR9LFxuXG5cdHNlbGVjdDoge1xuXHRcdGJvcmRlclJhZGl1czogMyxcblx0XHRiYWNrZ3JvdW5kQ29sb3I6ICcjZmZmJyxcblx0XHRmb250U2l6ZTogMTIsXG5cdFx0aGVpZ2h0OiAzNSxcblx0XHR3aWR0aDogJzEwMCUnLFxuXHRcdGJvcmRlcjogJzFweCBzb2xpZCAjZDVkNWQ1Jyxcblx0XHRwYWRkaW5nOiAnM3B4IDVweCcsXG5cdFx0bWluV2lkdGg6IDBcblx0fSxcblxuXHRjaGVja2JveDoge1xuXHRcdG1hcmdpblJpZ2h0OiAxMFxuXHR9LFxuXG5cdGVycm9yRmllbGQ6IHtcblx0XHRib3JkZXI6ICcxcHggc29saWQgI2RkM2QzNidcblx0fSxcblx0XG5cdGVycm9yTGFiZWw6IHtcblx0XHRib3JkZXI6ICcxcHggc29saWQgI2RkM2QzNicsXG5cdFx0Y29sb3I6ICcjYTAwJyxcblx0XHRkaXNwbGF5OiAnYmxvY2snLFxuXHRcdGZvbnRTaXplOiAxMixcblx0XHRtYXJnaW46ICc1cHggMCAwIDAnLFxuXHRcdHBhZGRpbmc6IDVcblx0fVxufTsiLCIndXNlIHN0cmljdCc7XG5cbnZhciBjcmVhdGVNYXJrdXBGb3JTdHlsZXMgPSByZXF1aXJlKCcuLi9jcmVhdGUtbWFya3VwLWZvci1zdHlsZXMnKTtcbnZhciBQcmVmaXhlciA9IHJlcXVpcmUoJy4uL3ByZWZpeGVyJyk7XG5cbnZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93LlJlYWN0IDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbC5SZWFjdCA6IG51bGwpO1xuXG52YXIgYnVpbGRDc3NTdHJpbmcgPSBmdW5jdGlvbiBidWlsZENzc1N0cmluZyhzZWxlY3RvciwgcnVsZXMpIHtcbiAgaWYgKCFzZWxlY3RvciB8fCAhcnVsZXMpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgcHJlZml4ZWRSdWxlcyA9IFByZWZpeGVyLmdldFByZWZpeGVkU3R5bGUocnVsZXMsICdjc3MnKTtcbiAgdmFyIHNlcmlhbGl6ZWRSdWxlcyA9IGNyZWF0ZU1hcmt1cEZvclN0eWxlcyhwcmVmaXhlZFJ1bGVzKTtcblxuICByZXR1cm4gc2VsZWN0b3IgKyAneycgKyBzZXJpYWxpemVkUnVsZXMgKyAnfSc7XG59O1xuXG52YXIgU3R5bGUgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gIGRpc3BsYXlOYW1lOiAnU3R5bGUnLFxuXG4gIHByb3BUeXBlczoge1xuICAgIHJ1bGVzOiBSZWFjdC5Qcm9wVHlwZXMub2JqZWN0LFxuICAgIHNjb3BlU2VsZWN0b3I6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmdcbiAgfSxcblxuICBnZXREZWZhdWx0UHJvcHM6IGZ1bmN0aW9uIGdldERlZmF1bHRQcm9wcygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc2NvcGVTZWxlY3RvcjogJydcbiAgICB9O1xuICB9LFxuXG4gIF9idWlsZFN0eWxlczogZnVuY3Rpb24gX2J1aWxkU3R5bGVzKHN0eWxlcykge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICByZXR1cm4gT2JqZWN0LmtleXMoc3R5bGVzKS5yZWR1Y2UoZnVuY3Rpb24gKGFjY3VtdWxhdG9yLCBzZWxlY3Rvcikge1xuICAgICAgdmFyIHJ1bGVzID0gc3R5bGVzW3NlbGVjdG9yXTtcblxuICAgICAgaWYgKHNlbGVjdG9yID09PSAnbWVkaWFRdWVyaWVzJykge1xuICAgICAgICBhY2N1bXVsYXRvciArPSBfdGhpcy5fYnVpbGRNZWRpYVF1ZXJ5U3RyaW5nKHJ1bGVzKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBjb21wbGV0ZVNlbGVjdG9yID0gKF90aGlzLnByb3BzLnNjb3BlU2VsZWN0b3IgPyBfdGhpcy5wcm9wcy5zY29wZVNlbGVjdG9yICsgJyAnIDogJycpICsgc2VsZWN0b3I7XG4gICAgICAgIGFjY3VtdWxhdG9yICs9IGJ1aWxkQ3NzU3RyaW5nKGNvbXBsZXRlU2VsZWN0b3IsIHJ1bGVzKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGFjY3VtdWxhdG9yO1xuICAgIH0sICcnKTtcbiAgfSxcblxuICBfYnVpbGRNZWRpYVF1ZXJ5U3RyaW5nOiBmdW5jdGlvbiBfYnVpbGRNZWRpYVF1ZXJ5U3RyaW5nKG1lZGlhUXVlcnlPYmopIHtcbiAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgIHZhciBjb250ZXh0TWVkaWFRdWVyaWVzID0gdGhpcy5fZ2V0Q29udGV4dE1lZGlhUXVlcmllcygpO1xuICAgIHZhciBtZWRpYVF1ZXJ5U3RyaW5nID0gJyc7XG5cbiAgICBPYmplY3Qua2V5cyhtZWRpYVF1ZXJ5T2JqKS5mb3JFYWNoKGZ1bmN0aW9uIChxdWVyeSkge1xuICAgICAgdmFyIGNvbXBsZXRlUXVlcnkgPSBjb250ZXh0TWVkaWFRdWVyaWVzW3F1ZXJ5XSA/IGNvbnRleHRNZWRpYVF1ZXJpZXNbcXVlcnldIDogcXVlcnk7XG4gICAgICBtZWRpYVF1ZXJ5U3RyaW5nICs9ICdAbWVkaWEgJyArIGNvbXBsZXRlUXVlcnkgKyAneycgKyBfdGhpczIuX2J1aWxkU3R5bGVzKG1lZGlhUXVlcnlPYmpbcXVlcnldKSArICd9JztcbiAgICB9KTtcblxuICAgIHJldHVybiBtZWRpYVF1ZXJ5U3RyaW5nO1xuICB9LFxuXG4gIF9nZXRDb250ZXh0TWVkaWFRdWVyaWVzOiBmdW5jdGlvbiBfZ2V0Q29udGV4dE1lZGlhUXVlcmllcygpIHtcbiAgICB2YXIgY29udGV4dE1lZGlhUXVlcmllcyA9IHt9O1xuICAgIGlmICh0aGlzLmNvbnRleHQgJiYgdGhpcy5jb250ZXh0Lm1lZGlhUXVlcmllcykge1xuICAgICAgT2JqZWN0LmtleXModGhpcy5jb250ZXh0Lm1lZGlhUXVlcmllcykuZm9yRWFjaCgoZnVuY3Rpb24gKHF1ZXJ5KSB7XG4gICAgICAgIGNvbnRleHRNZWRpYVF1ZXJpZXNbcXVlcnldID0gdGhpcy5jb250ZXh0Lm1lZGlhUXVlcmllc1txdWVyeV0ubWVkaWE7XG4gICAgICB9KS5iaW5kKHRoaXMpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY29udGV4dE1lZGlhUXVlcmllcztcbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICBpZiAoIXRoaXMucHJvcHMucnVsZXMpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHZhciBzdHlsZXMgPSB0aGlzLl9idWlsZFN0eWxlcyh0aGlzLnByb3BzLnJ1bGVzKTtcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KCdzdHlsZScsIHsgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHsgX19odG1sOiBzdHlsZXMgfSB9KTtcbiAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gU3R5bGU7IiwiLyogQGZsb3cgKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgRXhlY3V0aW9uRW52aXJvbm1lbnQgPSByZXF1aXJlKCdleGVudicpO1xuXG52YXIgX21hdGNoTWVkaWFGdW5jdGlvbiA9IEV4ZWN1dGlvbkVudmlyb25tZW50LmNhblVzZURPTSAmJiB3aW5kb3cgJiYgd2luZG93Lm1hdGNoTWVkaWE7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBjYW5NYXRjaE1lZGlhOiBmdW5jdGlvbiBjYW5NYXRjaE1lZGlhKCkge1xuICAgIHJldHVybiB0eXBlb2YgX21hdGNoTWVkaWFGdW5jdGlvbiA9PT0gJ2Z1bmN0aW9uJztcbiAgfSxcblxuICBtYXRjaE1lZGlhOiBmdW5jdGlvbiBtYXRjaE1lZGlhKHF1ZXJ5KSB7XG4gICAgcmV0dXJuIF9tYXRjaE1lZGlhRnVuY3Rpb24ocXVlcnkpO1xuICB9LFxuXG4gIHNldE1hdGNoTWVkaWE6IGZ1bmN0aW9uIHNldE1hdGNoTWVkaWEobmV4dE1hdGNoTWVkaWFGdW5jdGlvbikge1xuICAgIF9tYXRjaE1lZGlhRnVuY3Rpb24gPSBuZXh0TWF0Y2hNZWRpYUZ1bmN0aW9uO1xuICB9XG59OyIsIi8qIEBmbG93ICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGNyZWF0ZU1hcmt1cEZvclN0eWxlcyA9IGZ1bmN0aW9uIGNyZWF0ZU1hcmt1cEZvclN0eWxlcyhzdHlsZSwgc3BhY2VzKSB7XG4gIHNwYWNlcyA9IHNwYWNlcyB8fCAnJztcbiAgcmV0dXJuIE9iamVjdC5rZXlzKHN0eWxlKS5tYXAoZnVuY3Rpb24gKHByb3BlcnR5KSB7XG4gICAgcmV0dXJuIHNwYWNlcyArIHByb3BlcnR5ICsgJzogJyArIHN0eWxlW3Byb3BlcnR5XSArICc7JztcbiAgfSkuam9pbignXFxuJyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZU1hcmt1cEZvclN0eWxlczsiLCIvKiBAZmxvdyAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSAoZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCd2YWx1ZScgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0pKCk7XG5cbnZhciBfZ2V0ID0gZnVuY3Rpb24gZ2V0KF94LCBfeDIsIF94MykgeyB2YXIgX2FnYWluID0gdHJ1ZTsgX2Z1bmN0aW9uOiB3aGlsZSAoX2FnYWluKSB7IHZhciBvYmplY3QgPSBfeCwgcHJvcGVydHkgPSBfeDIsIHJlY2VpdmVyID0gX3gzOyBkZXNjID0gcGFyZW50ID0gZ2V0dGVyID0gdW5kZWZpbmVkOyBfYWdhaW4gPSBmYWxzZTsgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgcHJvcGVydHkpOyBpZiAoZGVzYyA9PT0gdW5kZWZpbmVkKSB7IHZhciBwYXJlbnQgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Yob2JqZWN0KTsgaWYgKHBhcmVudCA9PT0gbnVsbCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9IGVsc2UgeyBfeCA9IHBhcmVudDsgX3gyID0gcHJvcGVydHk7IF94MyA9IHJlY2VpdmVyOyBfYWdhaW4gPSB0cnVlOyBjb250aW51ZSBfZnVuY3Rpb247IH0gfSBlbHNlIGlmICgndmFsdWUnIGluIGRlc2MpIHsgcmV0dXJuIGRlc2MudmFsdWU7IH0gZWxzZSB7IHZhciBnZXR0ZXIgPSBkZXNjLmdldDsgaWYgKGdldHRlciA9PT0gdW5kZWZpbmVkKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gcmV0dXJuIGdldHRlci5jYWxsKHJlY2VpdmVyKTsgfSB9IH07XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcignQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uJyk7IH0gfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSAnZnVuY3Rpb24nICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcignU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCAnICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciByZXNvbHZlU3R5bGVzID0gcmVxdWlyZSgnLi9yZXNvbHZlLXN0eWxlcy5qcycpO1xuXG52YXIgZW5oYW5jZVdpdGhSYWRpdW0gPSBmdW5jdGlvbiBlbmhhbmNlV2l0aFJhZGl1bShDb21wb3NlZENvbXBvbmVudCkge1xuICB2YXIgZGlzcGxheU5hbWUgPSBDb21wb3NlZENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb3NlZENvbXBvbmVudC5uYW1lIHx8ICdDb21wb25lbnQnO1xuXG4gIHZhciBSYWRpdW1FbmhhbmNlciA9IChmdW5jdGlvbiAoX0NvbXBvc2VkQ29tcG9uZW50KSB7XG4gICAgZnVuY3Rpb24gUmFkaXVtRW5oYW5jZXIoKSB7XG4gICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmFkaXVtRW5oYW5jZXIpO1xuXG4gICAgICBfZ2V0KE9iamVjdC5nZXRQcm90b3R5cGVPZihSYWRpdW1FbmhhbmNlci5wcm90b3R5cGUpLCAnY29uc3RydWN0b3InLCB0aGlzKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXG4gICAgICB0aGlzLnN0YXRlID0gdGhpcy5zdGF0ZSB8fCB7fTtcbiAgICAgIHRoaXMuc3RhdGUuX3JhZGl1bVN0eWxlU3RhdGUgPSB7fTtcbiAgICB9XG5cbiAgICBfaW5oZXJpdHMoUmFkaXVtRW5oYW5jZXIsIF9Db21wb3NlZENvbXBvbmVudCk7XG5cbiAgICBfY3JlYXRlQ2xhc3MoUmFkaXVtRW5oYW5jZXIsIFt7XG4gICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgdmFyIHJlbmRlcmVkRWxlbWVudCA9IF9nZXQoT2JqZWN0LmdldFByb3RvdHlwZU9mKFJhZGl1bUVuaGFuY2VyLnByb3RvdHlwZSksICdyZW5kZXInLCB0aGlzKS5jYWxsKHRoaXMpO1xuICAgICAgICByZXR1cm4gcmVzb2x2ZVN0eWxlcyh0aGlzLCByZW5kZXJlZEVsZW1lbnQpO1xuICAgICAgfVxuICAgIH0sIHtcbiAgICAgIGtleTogJ2NvbXBvbmVudFdpbGxVbm1vdW50JyxcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgICAgaWYgKF9nZXQoT2JqZWN0LmdldFByb3RvdHlwZU9mKFJhZGl1bUVuaGFuY2VyLnByb3RvdHlwZSksICdjb21wb25lbnRXaWxsVW5tb3VudCcsIHRoaXMpKSB7XG4gICAgICAgICAgX2dldChPYmplY3QuZ2V0UHJvdG90eXBlT2YoUmFkaXVtRW5oYW5jZXIucHJvdG90eXBlKSwgJ2NvbXBvbmVudFdpbGxVbm1vdW50JywgdGhpcykuY2FsbCh0aGlzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLl9yYWRpdW1Nb3VzZVVwTGlzdGVuZXIpIHtcbiAgICAgICAgICB0aGlzLl9yYWRpdW1Nb3VzZVVwTGlzdGVuZXIucmVtb3ZlKCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5fcmFkaXVtTWVkaWFRdWVyeUxpc3RlbmVyc0J5UXVlcnkpIHtcbiAgICAgICAgICBPYmplY3Qua2V5cyh0aGlzLl9yYWRpdW1NZWRpYVF1ZXJ5TGlzdGVuZXJzQnlRdWVyeSkuZm9yRWFjaChmdW5jdGlvbiAocXVlcnkpIHtcbiAgICAgICAgICAgIHRoaXMuX3JhZGl1bU1lZGlhUXVlcnlMaXN0ZW5lcnNCeVF1ZXJ5W3F1ZXJ5XS5yZW1vdmUoKTtcbiAgICAgICAgICB9LCB0aGlzKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBSYWRpdW1FbmhhbmNlcjtcbiAgfSkoQ29tcG9zZWRDb21wb25lbnQpO1xuXG4gIFJhZGl1bUVuaGFuY2VyLmRpc3BsYXlOYW1lID0gJ1JhZGl1bSgnICsgZGlzcGxheU5hbWUgKyAnKSc7XG5cbiAgcmV0dXJuIFJhZGl1bUVuaGFuY2VyO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBlbmhhbmNlV2l0aFJhZGl1bTsiLCIvKiBAZmxvdyAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBWQUxJRF9LRVlTID0gWyc6YWN0aXZlJywgJzpmb2N1cycsICc6aG92ZXInXTtcblxudmFyIGdldFN0YXRlID0gZnVuY3Rpb24gZ2V0U3RhdGUoc3RhdGUsIGVsZW1lbnRLZXksIHZhbHVlKSB7XG4gIGVsZW1lbnRLZXkgPSBlbGVtZW50S2V5IHx8ICdtYWluJztcblxuICBpZiAoVkFMSURfS0VZUy5pbmRleE9mKHZhbHVlKSA9PT0gLTEpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1JhZGl1bS5nZXRTdGF0ZSBpbnZhbGlkIHZhbHVlIHBhcmFtOiBgJyArIHZhbHVlICsgJ2AnKTtcbiAgfVxuXG4gIHJldHVybiAhIShzdGF0ZSAmJiBzdGF0ZS5fcmFkaXVtU3R5bGVTdGF0ZSAmJiBzdGF0ZS5fcmFkaXVtU3R5bGVTdGF0ZVtlbGVtZW50S2V5XSAmJiBzdGF0ZS5fcmFkaXVtU3R5bGVTdGF0ZVtlbGVtZW50S2V5XVt2YWx1ZV0pIHx8IGZhbHNlO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBnZXRTdGF0ZTsiLCIndXNlIHN0cmljdCc7XG5cbnZhciBFbmhhbmNlciA9IHJlcXVpcmUoJy4vZW5oYW5jZXInKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQ29tcG9zZWRDb21wb25lbnQpIHtcbiAgcmV0dXJuIEVuaGFuY2VyKENvbXBvc2VkQ29tcG9uZW50KTtcbn07XG5tb2R1bGUuZXhwb3J0cy5TdHlsZSA9IHJlcXVpcmUoJy4vY29tcG9uZW50cy9zdHlsZScpO1xubW9kdWxlLmV4cG9ydHMuZ2V0U3RhdGUgPSByZXF1aXJlKCcuL2dldC1zdGF0ZScpO1xubW9kdWxlLmV4cG9ydHMua2V5ZnJhbWVzID0gcmVxdWlyZSgnLi9rZXlmcmFtZXMnKTtcbm1vZHVsZS5leHBvcnRzLkNvbmZpZyA9IHJlcXVpcmUoJy4vY29uZmlnJyk7IiwiLyogQGZsb3cgKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgY3JlYXRlTWFya3VwRm9yU3R5bGVzID0gcmVxdWlyZSgnLi9jcmVhdGUtbWFya3VwLWZvci1zdHlsZXMnKTtcbnZhciBQcmVmaXhlciA9IHJlcXVpcmUoJy4vcHJlZml4ZXInKTtcblxudmFyIEV4ZWN1dGlvbkVudmlyb25tZW50ID0gcmVxdWlyZSgnZXhlbnYnKTtcblxudmFyIGlzQW5pbWF0aW9uU3VwcG9ydGVkID0gRXhlY3V0aW9uRW52aXJvbm1lbnQuY2FuVXNlRE9NICYmIFByZWZpeGVyLmdldFByZWZpeGVkUHJvcGVydHlOYW1lKCdhbmltYXRpb24nKSAhPT0gZmFsc2U7XG5cbnZhciBhbmltYXRpb25JbmRleCA9IDE7XG52YXIgYW5pbWF0aW9uU3R5bGVTaGVldCA9IG51bGw7XG52YXIga2V5ZnJhbWVzUHJlZml4ZWQgPSBudWxsO1xuXG5pZiAoaXNBbmltYXRpb25TdXBwb3J0ZWQpIHtcbiAgYW5pbWF0aW9uU3R5bGVTaGVldCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoYW5pbWF0aW9uU3R5bGVTaGVldCk7XG5cbiAgLy8gVGVzdCBpZiBwcmVmaXggbmVlZGVkIGZvciBrZXlmcmFtZXMgKGNvcGllZCBmcm9tIFByZWZpeEZyZWUpXG4gIGtleWZyYW1lc1ByZWZpeGVkID0gJ2tleWZyYW1lcyc7XG4gIGFuaW1hdGlvblN0eWxlU2hlZXQudGV4dENvbnRlbnQgPSAnQGtleWZyYW1lcyB7fSc7XG4gIGlmICghYW5pbWF0aW9uU3R5bGVTaGVldC5zaGVldC5jc3NSdWxlcy5sZW5ndGgpIHtcbiAgICBrZXlmcmFtZXNQcmVmaXhlZCA9IFByZWZpeGVyLmNzc1ByZWZpeCArICdrZXlmcmFtZXMnO1xuICB9XG59XG5cbi8vIFNpbXBsZSBhbmltYXRpb24gaGVscGVyIHRoYXQgaW5qZWN0cyBDU1MgaW50byBhIHN0eWxlIG9iamVjdCBjb250YWluaW5nIHRoZVxuLy8ga2V5ZnJhbWVzLCBhbmQgcmV0dXJucyBhIHN0cmluZyB3aXRoIHRoZSBnZW5lcmF0ZWQgYW5pbWF0aW9uIG5hbWUuXG52YXIga2V5ZnJhbWVzID0gZnVuY3Rpb24ga2V5ZnJhbWVzKGtleWZyYW1lUnVsZXMpIHtcbiAgdmFyIG5hbWUgPSAnQW5pbWF0aW9uJyArIGFuaW1hdGlvbkluZGV4O1xuICBhbmltYXRpb25JbmRleCArPSAxO1xuXG4gIGlmICghaXNBbmltYXRpb25TdXBwb3J0ZWQpIHtcbiAgICByZXR1cm4gbmFtZTtcbiAgfVxuXG4gIHZhciBydWxlID0gJ0AnICsga2V5ZnJhbWVzUHJlZml4ZWQgKyAnICcgKyBuYW1lICsgJyB7XFxuJyArIE9iamVjdC5rZXlzKGtleWZyYW1lUnVsZXMpLm1hcChmdW5jdGlvbiAocGVyY2VudGFnZSkge1xuICAgIHZhciBwcm9wcyA9IGtleWZyYW1lUnVsZXNbcGVyY2VudGFnZV07XG4gICAgdmFyIHByZWZpeGVkUHJvcHMgPSBQcmVmaXhlci5nZXRQcmVmaXhlZFN0eWxlKHByb3BzLCAnY3NzJyk7XG4gICAgdmFyIHNlcmlhbGl6ZWRQcm9wcyA9IGNyZWF0ZU1hcmt1cEZvclN0eWxlcyhwcmVmaXhlZFByb3BzLCAnICAnKTtcbiAgICByZXR1cm4gJyAgJyArIHBlcmNlbnRhZ2UgKyAnIHtcXG4gICcgKyBzZXJpYWxpemVkUHJvcHMgKyAnXFxuICB9JztcbiAgfSkuam9pbignXFxuJykgKyAnXFxufVxcbic7XG5cbiAgLy8gZm9yIGZsb3dcbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgaWYgKCFhbmltYXRpb25TdHlsZVNoZWV0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdrZXlmcmFtZXMgbm90IGluaXRpYWxpemVkIHByb3Blcmx5Jyk7XG4gIH1cblxuICBhbmltYXRpb25TdHlsZVNoZWV0LnNoZWV0Lmluc2VydFJ1bGUocnVsZSwgYW5pbWF0aW9uU3R5bGVTaGVldC5zaGVldC5jc3NSdWxlcy5sZW5ndGgpO1xuICByZXR1cm4gbmFtZTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ga2V5ZnJhbWVzOyIsIi8qIEBmbG93ICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIF9jYWxsYmFja3MgPSBbXTtcbnZhciBfbW91c2VVcExpc3RlbmVySXNBY3RpdmUgPSBmYWxzZTtcblxudmFyIF9oYW5kbGVNb3VzZVVwID0gZnVuY3Rpb24gX2hhbmRsZU1vdXNlVXAoZXYpIHtcbiAgX2NhbGxiYWNrcy5mb3JFYWNoKGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrKGV2KTtcbiAgfSk7XG59O1xuXG52YXIgc3Vic2NyaWJlID0gZnVuY3Rpb24gc3Vic2NyaWJlKGNhbGxiYWNrKSB7XG4gIGlmIChfY2FsbGJhY2tzLmluZGV4T2YoY2FsbGJhY2spID09PSAtMSkge1xuICAgIF9jYWxsYmFja3MucHVzaChjYWxsYmFjayk7XG4gIH1cblxuICBpZiAoIV9tb3VzZVVwTGlzdGVuZXJJc0FjdGl2ZSkge1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgX2hhbmRsZU1vdXNlVXApO1xuICAgIF9tb3VzZVVwTGlzdGVuZXJJc0FjdGl2ZSA9IHRydWU7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgdmFyIGluZGV4ID0gX2NhbGxiYWNrcy5pbmRleE9mKGNhbGxiYWNrKTtcbiAgICAgIF9jYWxsYmFja3Muc3BsaWNlKGluZGV4LCAxKTtcblxuICAgICAgaWYgKF9jYWxsYmFja3MubGVuZ3RoID09PSAwICYmIF9tb3VzZVVwTGlzdGVuZXJJc0FjdGl2ZSkge1xuICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIF9oYW5kbGVNb3VzZVVwKTtcbiAgICAgICAgX21vdXNlVXBMaXN0ZW5lcklzQWN0aXZlID0gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHN1YnNjcmliZTogc3Vic2NyaWJlXG59OyIsIi8qKlxuICogQmFzZWQgb24gaHR0cHM6Ly9naXRodWIuY29tL2pzc3R5bGVzL2Nzcy12ZW5kb3IsIGJ1dCB3aXRob3V0IGhhdmluZyB0b1xuICogY29udmVydCBiZXR3ZWVuIGRpZmZlcmVudCBjYXNlcyBhbGwgdGhlIHRpbWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgRXhlY3V0aW9uRW52aXJvbm1lbnQgPSByZXF1aXJlKCdleGVudicpO1xudmFyIGFycmF5RmluZCA9IHJlcXVpcmUoJ2FycmF5LWZpbmQnKTtcblxudmFyIGluZm9CeUNzc1ByZWZpeCA9IHtcbiAgJy1tb3otJzoge1xuICAgIGNzc1ByZWZpeDogJy1tb3otJyxcbiAgICBqc1ByZWZpeDogJ01veicsXG4gICAgYWx0ZXJuYXRpdmVQcm9wZXJ0aWVzOiB7XG4gICAgICAvLyBPTEQgLSBGaXJlZm94IDE5LVxuICAgICAgZmxleDogW3sgY3NzOiAnLW1vei1ib3gtZmxleCcsIGpzOiAnTW96Qm94RmxleCcgfV0sXG4gICAgICBvcmRlcjogW3sgY3NzOiAnLW1vei1ib3gtb3JkaW5hbC1ncm91cCcsIGpzOiAnTW96Qm94T3JkaW5hbEdyb3VwJyB9XVxuICAgIH0sXG4gICAgYWx0ZXJuYXRpdmVWYWx1ZXM6IHtcbiAgICAgIGRpc3BsYXk6IHtcbiAgICAgICAgLy8gT0xEIC0gRmlyZWZveCAxOS1cbiAgICAgICAgZmxleDogWyctbW96LWJveCddXG4gICAgICB9XG4gICAgfVxuICB9LFxuICAnLW1zLSc6IHtcbiAgICBjc3NQcmVmaXg6ICctbXMtJyxcbiAgICBqc1ByZWZpeDogJ21zJyxcbiAgICBhbHRlcm5hdGl2ZVZhbHVlczoge1xuICAgICAgZGlzcGxheToge1xuICAgICAgICAvLyBUV0VFTkVSIC0gSUUgMTBcbiAgICAgICAgZmxleDogWyctbXMtZmxleGJveCddLFxuICAgICAgICBvcmRlcjogWyctbXMtZmxleC1vcmRlciddXG4gICAgICB9XG4gICAgfVxuICB9LFxuICAnLW8tJzoge1xuICAgIGNzc1ByZWZpeDogJy1vLScsXG4gICAganNQcmVmaXg6ICdPJ1xuICB9LFxuICAnLXdlYmtpdC0nOiB7XG4gICAgY3NzUHJlZml4OiAnLXdlYmtpdC0nLFxuICAgIGpzUHJlZml4OiAnV2Via2l0JyxcbiAgICBhbHRlcm5hdGl2ZVByb3BlcnRpZXM6IHtcbiAgICAgIC8vIE9MRCAtIGlPUyA2LSwgU2FmYXJpIDMuMS02XG4gICAgICBmbGV4OiBbeyBjc3M6ICctd2Via2l0LWJveC1mbGV4JywganM6ICdXZWJraXRCb3hGbGV4JyB9XSxcbiAgICAgIG9yZGVyOiBbeyBjc3M6ICctd2Via2l0LWJveC1vcmRpbmFsLWdyb3VwJywganM6ICdXZWJraXRCb3hPcmRpbmFsR3JvdXAnIH1dXG4gICAgfSxcbiAgICBhbHRlcm5hdGl2ZVZhbHVlczoge1xuICAgICAgZGlzcGxheToge1xuICAgICAgICBmbGV4OiBbJy13ZWJraXQtYm94J10gLy8gT0xEIC0gaU9TIDYtLCBTYWZhcmkgMy4xLTZcbiAgICAgIH1cbiAgICB9XG4gIH1cbn07XG5cbi8qKlxuICogQ1NTIHByb3BlcnRpZXMgd2hpY2ggYWNjZXB0IG51bWJlcnMgYnV0IGFyZSBub3QgaW4gdW5pdHMgb2YgXCJweFwiLlxuICogQ29waWVkIGZyb20gUmVhY3QgY29yZSBKdW5lIDIyLCAyMDE1LlxuICogaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2Jsb2IvXG4gKiBiYTgxYjYwYWQ4ZTkzYjc0N2JlNDJhMDNiNzk3MDY1OTMyYzQ5Yzk2L1xuICogc3JjL3JlbmRlcmVycy9kb20vc2hhcmVkL0NTU1Byb3BlcnR5LmpzXG4gKi9cbnZhciBpc1VuaXRsZXNzTnVtYmVyID0ge1xuICBib3hGbGV4OiB0cnVlLFxuICBib3hGbGV4R3JvdXA6IHRydWUsXG4gIGNvbHVtbkNvdW50OiB0cnVlLFxuICBmbGV4OiB0cnVlLFxuICBmbGV4R3JvdzogdHJ1ZSxcbiAgZmxleFBvc2l0aXZlOiB0cnVlLFxuICBmbGV4U2hyaW5rOiB0cnVlLFxuICBmbGV4TmVnYXRpdmU6IHRydWUsXG4gIGZvbnRXZWlnaHQ6IHRydWUsXG4gIGxpbmVDbGFtcDogdHJ1ZSxcbiAgbGluZUhlaWdodDogdHJ1ZSxcbiAgb3BhY2l0eTogdHJ1ZSxcbiAgb3JkZXI6IHRydWUsXG4gIG9ycGhhbnM6IHRydWUsXG4gIHRhYlNpemU6IHRydWUsXG4gIHdpZG93czogdHJ1ZSxcbiAgekluZGV4OiB0cnVlLFxuICB6b29tOiB0cnVlLFxuXG4gIC8vIFNWRy1yZWxhdGVkIHByb3BlcnRpZXNcbiAgZmlsbE9wYWNpdHk6IHRydWUsXG4gIHN0cm9rZURhc2hvZmZzZXQ6IHRydWUsXG4gIHN0cm9rZU9wYWNpdHk6IHRydWUsXG4gIHN0cm9rZVdpZHRoOiB0cnVlXG59O1xuXG52YXIgZG9tU3R5bGUgPSB7fTtcbnZhciBwcmVmaXhlZFByb3BlcnR5Q2FjaGUgPSB7fTtcbnZhciBwcmVmaXhlZFZhbHVlQ2FjaGUgPSB7fTtcbnZhciBwcmVmaXhJbmZvID0ge1xuICBjc3NQcmVmaXg6ICcnLFxuICBqc1ByZWZpeDogJydcbn07XG5cbmlmIChFeGVjdXRpb25FbnZpcm9ubWVudC5jYW5Vc2VET00pIHtcbiAgZG9tU3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJykuc3R5bGU7XG5cbiAgLy8gQmFzZWQgb24gaHR0cDovL2Rhdmlkd2Fsc2gubmFtZS92ZW5kb3ItcHJlZml4XG4gIHZhciB3aW5kb3dTdHlsZXMgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsICcnKTtcbiAgdmFyIHByZWZpeE1hdGNoID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwod2luZG93U3R5bGVzKS5qb2luKCcnKS5tYXRjaCgvLShtb3p8d2Via2l0fG1zfG8pLS8pO1xuICB2YXIgY3NzVmVuZG9yUHJlZml4ID0gcHJlZml4TWF0Y2ggJiYgcHJlZml4TWF0Y2hbMF07XG5cbiAgcHJlZml4SW5mbyA9IGluZm9CeUNzc1ByZWZpeFtjc3NWZW5kb3JQcmVmaXhdIHx8IHByZWZpeEluZm87XG59XG5cbnZhciBfY2FtZWxDYXNlUmVnZXggPSAvKFthLXpdKT8oW0EtWl0pL2c7XG52YXIgX2NhbWVsQ2FzZVJlcGxhY2VyID0gZnVuY3Rpb24gX2NhbWVsQ2FzZVJlcGxhY2VyKG1hdGNoLCBwMSwgcDIpIHtcbiAgcmV0dXJuIHAxICsgJy0nICsgcDIudG9Mb3dlckNhc2UoKTtcbn07XG52YXIgX2NhbWVsQ2FzZVRvRGFzaENhc2UgPSBmdW5jdGlvbiBfY2FtZWxDYXNlVG9EYXNoQ2FzZShzKSB7XG4gIHJldHVybiBzLnJlcGxhY2UoX2NhbWVsQ2FzZVJlZ2V4LCBfY2FtZWxDYXNlUmVwbGFjZXIpO1xufTtcblxudmFyIGdldFByZWZpeGVkUHJvcGVydHlOYW1lID0gZnVuY3Rpb24gZ2V0UHJlZml4ZWRQcm9wZXJ0eU5hbWUocHJvcGVydHkpIHtcbiAgaWYgKHByZWZpeGVkUHJvcGVydHlDYWNoZS5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZWRQcm9wZXJ0eUNhY2hlW3Byb3BlcnR5XTtcbiAgfVxuXG4gIHZhciB1bnByZWZpeGVkID0ge1xuICAgIGNzczogX2NhbWVsQ2FzZVRvRGFzaENhc2UocHJvcGVydHkpLFxuICAgIGpzOiBwcm9wZXJ0eSxcbiAgICBpc0RlZmF1bHRGb3JTZXJ2ZXI6IHRydWVcbiAgfTtcblxuICAvLyBUcnkgdGhlIHByZWZpeGVkIHZlcnNpb24gZmlyc3QuIENocm9tZSBpbiBwYXJ0aWN1bGFyIGhhcyB0aGUgYGZpbHRlcmAgYW5kXG4gIC8vIGB3ZWJraXRGaWx0ZXJgIHByb3BlcnRpZXMgYXZhaWxhbGJlIG9uIHRoZSBzdHlsZSBvYmplY3QsIGJ1dCBvbmx5IHRoZVxuICAvLyBwcmVmaXhlZCB2ZXJzaW9uIGFjdHVhbGx5IHdvcmtzLlxuICB2YXIgcG9zc2libGVQcm9wZXJ0eU5hbWVzID0gW1xuICAvLyBQcmVmaXhlZFxuICB7XG4gICAgY3NzOiBwcmVmaXhJbmZvLmNzc1ByZWZpeCArIF9jYW1lbENhc2VUb0Rhc2hDYXNlKHByb3BlcnR5KSxcbiAgICBqczogcHJlZml4SW5mby5qc1ByZWZpeCArIHByb3BlcnR5WzBdLnRvVXBwZXJDYXNlKCkgKyBwcm9wZXJ0eS5zbGljZSgxKVxuICB9LCB1bnByZWZpeGVkXTtcblxuICAvLyBBbHRlcm5hdGl2ZSBwcm9wZXJ0eSBuYW1lc1xuICBpZiAocHJlZml4SW5mby5hbHRlcm5hdGl2ZVByb3BlcnRpZXMgJiYgcHJlZml4SW5mby5hbHRlcm5hdGl2ZVByb3BlcnRpZXNbcHJvcGVydHldKSB7XG4gICAgcG9zc2libGVQcm9wZXJ0eU5hbWVzID0gcG9zc2libGVQcm9wZXJ0eU5hbWVzLmNvbmNhdChwcmVmaXhJbmZvLmFsdGVybmF0aXZlUHJvcGVydGllc1twcm9wZXJ0eV0pO1xuICB9XG5cbiAgdmFyIHdvcmtpbmdQcm9wZXJ0eSA9IGFycmF5RmluZChwb3NzaWJsZVByb3BlcnR5TmFtZXMsIGZ1bmN0aW9uIChwb3NzaWJsZVByb3BlcnR5TmFtZSkge1xuICAgIGlmIChwb3NzaWJsZVByb3BlcnR5TmFtZS5qcyBpbiBkb21TdHlsZSkge1xuICAgICAgcmV0dXJuIHBvc3NpYmxlUHJvcGVydHlOYW1lO1xuICAgIH1cbiAgfSkgfHwgZmFsc2U7XG5cbiAgcmV0dXJuIHByZWZpeGVkUHJvcGVydHlDYWNoZVtwcm9wZXJ0eV0gPSB3b3JraW5nUHJvcGVydHk7XG59O1xuXG4vLyBSZWFjdCBpcyBwbGFubmluZyB0byBkZXByZWNhdGUgYWRkaW5nIHB4IGF1dG9tYXRpY2FsbHlcbi8vIChodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvaXNzdWVzLzE4NzMpLCBhbmQgaWYgdGhleSBkbywgdGhpc1xuLy8gc2hvdWxkIGNoYW5nZSB0byBhIHdhcm5pbmcgb3IgYmUgcmVtb3ZlZCBpbiBmYXZvciBvZiBSZWFjdCdzIHdhcm5pbmcuXG4vLyBTYW1lIGdvZXMgZm9yIGJlbG93LlxudmFyIF9hZGRQaXhlbFN1ZmZpeFRvVmFsdWVJZk5lZWRlZCA9IGZ1bmN0aW9uIF9hZGRQaXhlbFN1ZmZpeFRvVmFsdWVJZk5lZWRlZChvcmlnaW5hbFByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodmFsdWUgIT09IDAgJiYgIWlzTmFOKHZhbHVlKSAmJiAhaXNVbml0bGVzc051bWJlcltvcmlnaW5hbFByb3BlcnR5XSkge1xuICAgIHJldHVybiB2YWx1ZSArICdweCc7XG4gIH1cbiAgcmV0dXJuIHZhbHVlO1xufTtcblxudmFyIF9nZXRQcmVmaXhlZFZhbHVlID0gZnVuY3Rpb24gX2dldFByZWZpeGVkVmFsdWUocHJvcGVydHksIHZhbHVlLCBvcmlnaW5hbFByb3BlcnR5KSB7XG4gIGlmICghQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAvLyBkb24ndCB0ZXN0IG51bWJlcnMgKHB1cmUgb3Igc3RyaW5neSksIGJ1dCBkbyBhZGQgJ3B4JyBwcmVmaXggaWYgbmVlZGVkXG4gICAgaWYgKCFpc05hTih2YWx1ZSkpIHtcbiAgICAgIHJldHVybiBfYWRkUGl4ZWxTdWZmaXhUb1ZhbHVlSWZOZWVkZWQob3JpZ2luYWxQcm9wZXJ0eSwgdmFsdWUpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnKSB7XG4gICAgICB2YWx1ZSA9IHZhbHVlLnRvU3RyaW5nKCk7XG4gICAgfVxuXG4gICAgLy8gZG9uJ3QgdGVzdCBudW1iZXJzIHdpdGggdW5pdHMgKGUuZy4gMTBlbSlcbiAgICBpZiAoIWlzTmFOKHBhcnNlSW50KHZhbHVlLCAxMCkpKSB7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICB9XG5cbiAgdmFyIGNhY2hlS2V5ID0gQXJyYXkuaXNBcnJheSh2YWx1ZSkgPyB2YWx1ZS5qb2luKCcgfHwgJykgOiBwcm9wZXJ0eSArIHZhbHVlO1xuXG4gIGlmIChwcmVmaXhlZFZhbHVlQ2FjaGUuaGFzT3duUHJvcGVydHkoY2FjaGVLZXkpKSB7XG4gICAgcmV0dXJuIHByZWZpeGVkVmFsdWVDYWNoZVtjYWNoZUtleV07XG4gIH1cblxuICB2YXIgcG9zc2libGVWYWx1ZXM7XG4gIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgIC8vIEFkZCBweCBmb3IgdGhlIHNhbWUgdmFsdWVzIFJlYWN0IHdvdWxkLCBvdGhlcndpc2UgdGhlIHRlc3RpbmcgYmVsb3cgd2lsbFxuICAgIC8vIGZhaWwgYW5kIGl0IHdpbGwgdHJ5IHRvIGZhbGxiYWNrLlxuICAgIHBvc3NpYmxlVmFsdWVzID0gdmFsdWUubWFwKGZ1bmN0aW9uICh2KSB7XG4gICAgICByZXR1cm4gX2FkZFBpeGVsU3VmZml4VG9WYWx1ZUlmTmVlZGVkKG9yaWdpbmFsUHJvcGVydHksIHYpO1xuICAgIH0pO1xuXG4gICAgLy8gQWRkIHByZWZpeGVkIHZlcnNpb25zXG4gICAgcG9zc2libGVWYWx1ZXMgPSBwb3NzaWJsZVZhbHVlcy5jb25jYXQodmFsdWUuZmlsdGVyKGZ1bmN0aW9uICh2KSB7XG4gICAgICByZXR1cm4gIWlzTmFOKHYpO1xuICAgIH0pIC8vIERvbid0IHByZWZpeCBudW1iZXJzXG4gICAgLm1hcChmdW5jdGlvbiAodikge1xuICAgICAgcmV0dXJuIHByZWZpeEluZm8uY3NzUHJlZml4ICsgdjtcbiAgICB9KSk7XG4gIH0gZWxzZSB7XG4gICAgcG9zc2libGVWYWx1ZXMgPSBbXG4gICAgLy8gVW5wcmVmaXhlZFxuICAgIHZhbHVlLFxuICAgIC8vIFByZWZpeGVkXG4gICAgcHJlZml4SW5mby5jc3NQcmVmaXggKyB2YWx1ZV07XG4gIH1cblxuICAvLyBBbHRlcm5hdGl2ZSB2YWx1ZXNcbiAgaWYgKHByZWZpeEluZm8uYWx0ZXJuYXRpdmVWYWx1ZXMgJiYgcHJlZml4SW5mby5hbHRlcm5hdGl2ZVZhbHVlc1tvcmlnaW5hbFByb3BlcnR5XSAmJiBwcmVmaXhJbmZvLmFsdGVybmF0aXZlVmFsdWVzW29yaWdpbmFsUHJvcGVydHldW3ZhbHVlXSkge1xuICAgIHBvc3NpYmxlVmFsdWVzID0gcG9zc2libGVWYWx1ZXMuY29uY2F0KHByZWZpeEluZm8uYWx0ZXJuYXRpdmVWYWx1ZXNbb3JpZ2luYWxQcm9wZXJ0eV1bdmFsdWVdKTtcbiAgfVxuXG4gIC8vIFRlc3QgcG9zc2libGUgdmFsdWUgaW4gb3JkZXJcbiAgdmFyIHdvcmtpbmdWYWx1ZSA9IGFycmF5RmluZChwb3NzaWJsZVZhbHVlcywgZnVuY3Rpb24gKHBvc3NpYmxlVmFsdWUpIHtcbiAgICBkb21TdHlsZVtwcm9wZXJ0eV0gPSAnJztcbiAgICBkb21TdHlsZVtwcm9wZXJ0eV0gPSBwb3NzaWJsZVZhbHVlO1xuXG4gICAgLy8gTm90ZSB0aGF0IHdlIGp1c3QgbWFrZSBzdXJlIGl0IGlzIG5vdCBhbiBlbXB0eSBzdHJpbmcuIEJyb3dzZXJzIHdpbGxcbiAgICAvLyBzb21ldGltZXMgcmV3cml0ZSB2YWx1ZXMsIGJ1dCBzdGlsbCBhY2NlcHQgdGhlbS4gVGhleSB3aWxsIHNldCB0aGUgdmFsdWVcbiAgICAvLyB0byBhbiBlbXB0eSBzdHJpbmcgaWYgbm90IHN1cHBvcnRlZC5cbiAgICAvLyBFLmcuIGZvciBib3JkZXIsIFwic29saWQgMXB4IGJsYWNrXCIgYmVjb21lcyBcIjFweCBzb2xpZCBibGFja1wiXG4gICAgLy8gICAgICBidXQgXCJmb29iYXJcIiBiZWNvbWVzIFwiXCIsIHNpbmNlIGl0IGlzIG5vdCBzdXBwb3J0ZWQuXG4gICAgcmV0dXJuICEhZG9tU3R5bGVbcHJvcGVydHldO1xuICB9KTtcblxuICBpZiAod29ya2luZ1ZhbHVlKSB7XG4gICAgcHJlZml4ZWRWYWx1ZUNhY2hlW2NhY2hlS2V5XSA9IHdvcmtpbmdWYWx1ZTtcbiAgfSBlbHNlIHtcbiAgICAvLyBVbnN1cHBvcnRlZCwgYXNzdW1lIHVucHJlZml4ZWQgd29ya3MsIGJ1dCB3YXJuXG4gICAgcHJlZml4ZWRWYWx1ZUNhY2hlW2NhY2hlS2V5XSA9IHZhbHVlO1xuXG4gICAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqL1xuICAgIGlmIChjb25zb2xlICYmIGNvbnNvbGUud2Fybikge1xuICAgICAgY29uc29sZS53YXJuKCdVbnN1cHBvcnRlZCBDU1MgdmFsdWUgXCInICsgdmFsdWUgKyAnXCIgZm9yIHByb3BlcnR5IFwiJyArIHByb3BlcnR5ICsgJ1wiJyk7XG4gICAgfVxuICAgIC8qIGVzbGludC1lbmFibGUgbm8tY29uc29sZSAqL1xuICB9XG5cbiAgcmV0dXJuIHByZWZpeGVkVmFsdWVDYWNoZVtjYWNoZUtleV07XG59O1xuXG4vLyBSZXR1cm5zIGEgbmV3IHN0eWxlIG9iamVjdCB3aXRoIHZlbmRvciBwcmVmaXhlcyBhZGRlZCB0byBwcm9wZXJ0eSBuYW1lc1xuLy8gYW5kIHZhbHVlcy5cbnZhciBnZXRQcmVmaXhlZFN0eWxlID0gZnVuY3Rpb24gZ2V0UHJlZml4ZWRTdHlsZShzdHlsZSwgbW9kZSAvKiAnY3NzJyBvciAnanMnICovKSB7XG4gIG1vZGUgPSBtb2RlIHx8ICdqcyc7XG5cbiAgaWYgKCFFeGVjdXRpb25FbnZpcm9ubWVudC5jYW5Vc2VET00pIHtcbiAgICByZXR1cm4gT2JqZWN0LmtleXMoc3R5bGUpLnJlZHVjZShmdW5jdGlvbiAobmV3U3R5bGUsIGtleSkge1xuICAgICAgdmFyIHZhbHVlID0gc3R5bGVba2V5XTtcbiAgICAgIHZhciBuZXdLZXkgPSBtb2RlID09PSAnY3NzJyA/IF9jYW1lbENhc2VUb0Rhc2hDYXNlKGtleSkgOiBrZXk7XG4gICAgICB2YXIgbmV3VmFsdWUgPSBBcnJheS5pc0FycmF5KHZhbHVlKSA/IHZhbHVlWzBdIDogdmFsdWU7XG4gICAgICBuZXdTdHlsZVtuZXdLZXldID0gbmV3VmFsdWU7XG4gICAgICByZXR1cm4gbmV3U3R5bGU7XG4gICAgfSwge30pO1xuICB9XG5cbiAgdmFyIHByZWZpeGVkU3R5bGUgPSB7fTtcbiAgT2JqZWN0LmtleXMoc3R5bGUpLmZvckVhY2goZnVuY3Rpb24gKHByb3BlcnR5KSB7XG4gICAgdmFyIHZhbHVlID0gc3R5bGVbcHJvcGVydHldO1xuXG4gICAgdmFyIG5ld1Byb3BlcnR5ID0gZ2V0UHJlZml4ZWRQcm9wZXJ0eU5hbWUocHJvcGVydHkpO1xuICAgIGlmIChuZXdQcm9wZXJ0eSA9PT0gZmFsc2UpIHtcbiAgICAgIC8vIElnbm9yZSB1bnN1cHBvcnRlZCBwcm9wZXJ0aWVzXG4gICAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovXG4gICAgICBpZiAoY29uc29sZSAmJiBjb25zb2xlLndhcm4pIHtcbiAgICAgICAgY29uc29sZS53YXJuKCdVbnN1cHBvcnRlZCBDU1MgcHJvcGVydHkgXCInICsgcHJvcGVydHkgKyAnXCInKTtcbiAgICAgIH1cbiAgICAgIC8qIGVzbGludC1lbmFibGUgbm8tY29uc29sZSAqL1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBuZXdWYWx1ZSA9IF9nZXRQcmVmaXhlZFZhbHVlKG5ld1Byb3BlcnR5LmpzLCB2YWx1ZSwgcHJvcGVydHkpO1xuXG4gICAgcHJlZml4ZWRTdHlsZVtuZXdQcm9wZXJ0eVttb2RlXV0gPSBuZXdWYWx1ZTtcbiAgfSk7XG4gIHJldHVybiBwcmVmaXhlZFN0eWxlO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdldFByZWZpeGVkUHJvcGVydHlOYW1lOiBnZXRQcmVmaXhlZFByb3BlcnR5TmFtZSxcbiAgZ2V0UHJlZml4ZWRTdHlsZTogZ2V0UHJlZml4ZWRTdHlsZSxcbiAgY3NzUHJlZml4OiBwcmVmaXhJbmZvLmNzc1ByZWZpeCxcbiAganNQcmVmaXg6IHByZWZpeEluZm8uanNQcmVmaXhcbn07IiwiLyogQGZsb3cgKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgTW91c2VVcExpc3RlbmVyID0gcmVxdWlyZSgnLi9tb3VzZS11cC1saXN0ZW5lcicpO1xudmFyIGdldFN0YXRlID0gcmVxdWlyZSgnLi9nZXQtc3RhdGUnKTtcbnZhciBQcmVmaXhlciA9IHJlcXVpcmUoJy4vcHJlZml4ZXInKTtcbnZhciBDb25maWcgPSByZXF1aXJlKCcuL2NvbmZpZycpO1xuXG52YXIgRXhlY3V0aW9uRW52aXJvbm1lbnQgPSByZXF1aXJlKCdleGVudicpO1xudmFyIFJlYWN0ID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3cuUmVhY3QgOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsLlJlYWN0IDogbnVsbCk7XG52YXIgb2JqZWN0QXNzaWduID0gcmVxdWlyZSgnb2JqZWN0LWFzc2lnbicpO1xuXG4vLyBiYWJlbC1lc2xpbnQgMy4xLjcgZmFpbHMgaGVyZSBmb3Igc29tZSByZWFzb24sIGVycm9yOlxuLy8gICAwOjAgIGVycm9yICBDYW5ub3QgY2FsbCBtZXRob2QgJ2lzU2VxdWVuY2VFeHByZXNzaW9uJyBvZiB1bmRlZmluZWRcbi8vXG4vLyBkZWNsYXJlIGNsYXNzIFJhZGl1bUNvbXBvbmVudCBleHRlbmRzIFJlYWN0Q29tcG9uZW50IHtcbi8vICAgX2xhc3RNb3VzZURvd246IG51bWJlcixcbi8vICAgX3JhZGl1bU1lZGlhUXVlcnlMaXN0ZW5lcnNCeVF1ZXJ5OiBPYmplY3Q8c3RyaW5nLCB7cmVtb3ZlOiAoKSA9PiB2b2lkfT4sXG4vLyAgIF9yYWRpdW1Nb3VzZVVwTGlzdGVuZXI6IHtyZW1vdmU6ICgpID0+IHZvaWR9LFxuLy8gfVxuXG52YXIgbWVkaWFRdWVyeUxpc3RCeVF1ZXJ5U3RyaW5nID0ge307XG5cbnZhciBfaXNTcGVjaWFsS2V5ID0gZnVuY3Rpb24gX2lzU3BlY2lhbEtleShrZXkpIHtcbiAgcmV0dXJuIGtleVswXSA9PT0gJzonIHx8IGtleVswXSA9PT0gJ0AnO1xufTtcblxudmFyIF9nZXRTdHlsZVN0YXRlID0gZnVuY3Rpb24gX2dldFN0eWxlU3RhdGUoY29tcG9uZW50LCBrZXksIHZhbHVlKSB7XG4gIHJldHVybiBnZXRTdGF0ZShjb21wb25lbnQuc3RhdGUsIGtleSwgdmFsdWUpO1xufTtcblxudmFyIF9zZXRTdHlsZVN0YXRlID0gZnVuY3Rpb24gX3NldFN0eWxlU3RhdGUoY29tcG9uZW50LCBrZXksIG5ld1N0YXRlKSB7XG4gIHZhciBleGlzdGluZyA9IGNvbXBvbmVudC5zdGF0ZSAmJiBjb21wb25lbnQuc3RhdGUuX3JhZGl1bVN0eWxlU3RhdGUgfHwge307XG4gIHZhciBzdGF0ZSA9IHsgX3JhZGl1bVN0eWxlU3RhdGU6IG9iamVjdEFzc2lnbih7fSwgZXhpc3RpbmcpIH07XG4gIHN0YXRlLl9yYWRpdW1TdHlsZVN0YXRlW2tleV0gPSBzdGF0ZS5fcmFkaXVtU3R5bGVTdGF0ZVtrZXldIHx8IHt9O1xuICBvYmplY3RBc3NpZ24oc3RhdGUuX3JhZGl1bVN0eWxlU3RhdGVba2V5XSwgbmV3U3RhdGUpO1xuICBjb21wb25lbnQuc2V0U3RhdGUoc3RhdGUpO1xufTtcblxuLy8gTWVyZ2Ugc3R5bGUgb2JqZWN0cy4gU3BlY2lhbCBjYXNpbmcgZm9yIHByb3BzIHN0YXJ0aW5nIHdpdGggJzsnOyB0aGUgdmFsdWVzXG4vLyBzaG91bGQgYmUgb2JqZWN0cywgYW5kIGFyZSBtZXJnZWQgd2l0aCBvdGhlcnMgb2YgdGhlIHNhbWUgbmFtZSAoaW5zdGVhZCBvZlxuLy8gb3ZlcndyaXRpbmcpLlxudmFyIF9tZXJnZVN0eWxlcyA9IGZ1bmN0aW9uIF9tZXJnZVN0eWxlcyhzdHlsZXMpIHtcbiAgdmFyIHJlc3VsdCA9IHt9O1xuXG4gIHN0eWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChzdHlsZSkge1xuICAgIGlmICghc3R5bGUgfHwgdHlwZW9mIHN0eWxlICE9PSAnb2JqZWN0JyB8fCBBcnJheS5pc0FycmF5KHN0eWxlKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIE9iamVjdC5rZXlzKHN0eWxlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIGlmIChfaXNTcGVjaWFsS2V5KGtleSkgJiYgcmVzdWx0W2tleV0pIHtcbiAgICAgICAgcmVzdWx0W2tleV0gPSBfbWVyZ2VTdHlsZXMoW3Jlc3VsdFtrZXldLCBzdHlsZVtrZXldXSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHRba2V5XSA9IHN0eWxlW2tleV07XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xuXG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG52YXIgX21vdXNlVXAgPSBmdW5jdGlvbiBfbW91c2VVcChjb21wb25lbnQpIHtcbiAgT2JqZWN0LmtleXMoY29tcG9uZW50LnN0YXRlLl9yYWRpdW1TdHlsZVN0YXRlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICBpZiAoX2dldFN0eWxlU3RhdGUoY29tcG9uZW50LCBrZXksICc6YWN0aXZlJykpIHtcbiAgICAgIF9zZXRTdHlsZVN0YXRlKGNvbXBvbmVudCwga2V5LCB7ICc6YWN0aXZlJzogZmFsc2UgfSk7XG4gICAgfVxuICB9KTtcbn07XG5cbnZhciBfb25NZWRpYVF1ZXJ5Q2hhbmdlID0gZnVuY3Rpb24gX29uTWVkaWFRdWVyeUNoYW5nZShjb21wb25lbnQsIHF1ZXJ5LCBtZWRpYVF1ZXJ5TGlzdCkge1xuICB2YXIgc3RhdGUgPSB7fTtcbiAgc3RhdGVbcXVlcnldID0gbWVkaWFRdWVyeUxpc3QubWF0Y2hlcztcbiAgX3NldFN0eWxlU3RhdGUoY29tcG9uZW50LCAnX2FsbCcsIHN0YXRlKTtcbn07XG5cbnZhciBfcmVzb2x2ZU1lZGlhUXVlcnlTdHlsZXMgPSBmdW5jdGlvbiBfcmVzb2x2ZU1lZGlhUXVlcnlTdHlsZXMoY29tcG9uZW50LCBzdHlsZSkge1xuICBpZiAoIUNvbmZpZy5jYW5NYXRjaE1lZGlhKCkpIHtcbiAgICByZXR1cm4gc3R5bGU7XG4gIH1cblxuICBPYmplY3Qua2V5cyhzdHlsZSkuZmlsdGVyKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgcmV0dXJuIG5hbWVbMF0gPT09ICdAJztcbiAgfSkubWFwKGZ1bmN0aW9uIChxdWVyeSkge1xuICAgIHZhciBtZWRpYVF1ZXJ5U3R5bGVzID0gc3R5bGVbcXVlcnldO1xuICAgIHF1ZXJ5ID0gcXVlcnkucmVwbGFjZSgnQG1lZGlhICcsICcnKTtcblxuICAgIC8vIENyZWF0ZSBhIGdsb2JhbCBNZWRpYVF1ZXJ5TGlzdCBpZiBvbmUgZG9lc24ndCBhbHJlYWR5IGV4aXN0XG4gICAgdmFyIG1xbCA9IG1lZGlhUXVlcnlMaXN0QnlRdWVyeVN0cmluZ1txdWVyeV07XG4gICAgaWYgKCFtcWwpIHtcbiAgICAgIG1lZGlhUXVlcnlMaXN0QnlRdWVyeVN0cmluZ1txdWVyeV0gPSBtcWwgPSBDb25maWcubWF0Y2hNZWRpYShxdWVyeSk7XG4gICAgfVxuXG4gICAgLy8gS2VlcCB0cmFjayBvZiB3aGljaCBrZXlzIGFscmVhZHkgaGF2ZSBsaXN0ZW5lcnNcbiAgICBpZiAoIWNvbXBvbmVudC5fcmFkaXVtTWVkaWFRdWVyeUxpc3RlbmVyc0J5UXVlcnkpIHtcbiAgICAgIGNvbXBvbmVudC5fcmFkaXVtTWVkaWFRdWVyeUxpc3RlbmVyc0J5UXVlcnkgPSB7fTtcbiAgICB9XG5cbiAgICBpZiAoIWNvbXBvbmVudC5fcmFkaXVtTWVkaWFRdWVyeUxpc3RlbmVyc0J5UXVlcnlbcXVlcnldKSB7XG4gICAgICB2YXIgbGlzdGVuZXIgPSBfb25NZWRpYVF1ZXJ5Q2hhbmdlLmJpbmQobnVsbCwgY29tcG9uZW50LCBxdWVyeSk7XG4gICAgICBtcWwuYWRkTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgICAgY29tcG9uZW50Ll9yYWRpdW1NZWRpYVF1ZXJ5TGlzdGVuZXJzQnlRdWVyeVtxdWVyeV0gPSB7XG4gICAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgICAgIG1xbC5yZW1vdmVMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gQXBwbHkgbWVkaWEgcXVlcnkgc3RhdGVzXG4gICAgaWYgKG1xbC5tYXRjaGVzKSB7XG4gICAgICBzdHlsZSA9IF9tZXJnZVN0eWxlcyhbc3R5bGUsIG1lZGlhUXVlcnlTdHlsZXNdKTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBzdHlsZTtcbn07XG5cbi8vXG4vLyBUaGUgbnVjbGV1cyBvZiBSYWRpdW0uIHJlc29sdmVTdHlsZXMgaXMgY2FsbGVkIG9uIHRoZSByZW5kZXJlZCBlbGVtZW50c1xuLy8gYmVmb3JlIHRoZXkgYXJlIHJldHVybmVkIGluIHJlbmRlci4gSXQgaXRlcmF0ZXMgb3ZlciB0aGUgZWxlbWVudHMgYW5kXG4vLyBjaGlsZHJlbiwgcmV3cml0aW5nIHByb3BzIHRvIGFkZCBldmVudCBoYW5kbGVycyByZXF1aXJlZCB0byBjYXB0dXJlIHVzZXJcbi8vIGludGVyYWN0aW9ucyAoZS5nLiBtb3VzZSBvdmVyKS4gSXQgYWxzbyByZXBsYWNlcyB0aGUgc3R5bGUgcHJvcCBiZWNhdXNlIGl0XG4vLyBhZGRzIGluIHRoZSB2YXJpb3VzIGludGVyYWN0aW9uIHN0eWxlcyAoZS5nLiA6aG92ZXIpLlxuLy9cbnZhciByZXNvbHZlU3R5bGVzID0gZnVuY3Rpb24gcmVzb2x2ZVN0eWxlcyhjb21wb25lbnQsIC8vIFJlYWN0Q29tcG9uZW50LCBmbG93K2VzbGludCBjb21wbGFpbmluZ1xucmVuZGVyZWRFbGVtZW50LCAvLyBSZWFjdEVsZW1lbnRcbmV4aXN0aW5nS2V5TWFwKSB7XG4gIC8vIFJlYWN0RWxlbWVudFxuICBleGlzdGluZ0tleU1hcCA9IGV4aXN0aW5nS2V5TWFwIHx8IHt9O1xuXG4gIGlmICghcmVuZGVyZWRFbGVtZW50KSB7XG4gICAgcmV0dXJuIHJlbmRlcmVkRWxlbWVudDtcbiAgfVxuXG4gIC8vIFJlY3Vyc2Ugb3ZlciBjaGlsZHJlbiBmaXJzdCBpbiBjYXNlIHdlIGJhaWwgZWFybHkuIE5vdGUgdGhhdCBjaGlsZHJlbiBvbmx5XG4gIC8vIGluY2x1ZGUgdGhvc2UgcmVuZGVyZWQgaW4gYHRoaXNgIGNvbXBvbmVudC4gQ2hpbGQgbm9kZXMgaW4gb3RoZXIgY29tcG9uZW50c1xuICAvLyB3aWxsIG5vdCBiZSBoZXJlLCBzbyBlYWNoIGNvbXBvbmVudCBuZWVkcyB0byB1c2UgUmFkaXVtLlxuICB2YXIgbmV3Q2hpbGRyZW4gPSBudWxsO1xuICB2YXIgb2xkQ2hpbGRyZW4gPSByZW5kZXJlZEVsZW1lbnQucHJvcHMuY2hpbGRyZW47XG4gIGlmIChvbGRDaGlsZHJlbikge1xuICAgIHZhciBjaGlsZHJlblR5cGUgPSB0eXBlb2Ygb2xkQ2hpbGRyZW47XG4gICAgaWYgKGNoaWxkcmVuVHlwZSA9PT0gJ3N0cmluZycgfHwgY2hpbGRyZW5UeXBlID09PSAnbnVtYmVyJykge1xuICAgICAgLy8gRG9uJ3QgZG8gYW55dGhpbmcgd2l0aCBhIHNpbmdsZSBwcmltaXRpdmUgY2hpbGRcbiAgICAgIG5ld0NoaWxkcmVuID0gb2xkQ2hpbGRyZW47XG4gICAgfSBlbHNlIGlmIChSZWFjdC5DaGlsZHJlbi5jb3VudChvbGRDaGlsZHJlbikgPT09IDEgJiYgb2xkQ2hpbGRyZW4udHlwZSkge1xuICAgICAgLy8gSWYgYSBSZWFjdCBFbGVtZW50IGlzIGFuIG9ubHkgY2hpbGQsIGRvbid0IHdyYXAgaXQgaW4gYW4gYXJyYXkgZm9yXG4gICAgICAvLyBSZWFjdC5DaGlsZHJlbi5tYXAoKSBmb3IgUmVhY3QuQ2hpbGRyZW4ub25seSgpIGNvbXBhdGliaWxpdHkuXG4gICAgICB2YXIgb25seUNoaWxkID0gUmVhY3QuQ2hpbGRyZW4ub25seShvbGRDaGlsZHJlbik7XG4gICAgICBuZXdDaGlsZHJlbiA9IHJlc29sdmVTdHlsZXMoY29tcG9uZW50LCBvbmx5Q2hpbGQsIGV4aXN0aW5nS2V5TWFwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbmV3Q2hpbGRyZW4gPSBSZWFjdC5DaGlsZHJlbi5tYXAob2xkQ2hpbGRyZW4sIGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgICBpZiAoUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpKSB7XG4gICAgICAgICAgcmV0dXJuIHJlc29sdmVTdHlsZXMoY29tcG9uZW50LCBjaGlsZCwgZXhpc3RpbmdLZXlNYXApO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGNoaWxkO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgLy8gQmFpbCBlYXJseSBpZiBlbGVtZW50IGlzIG5vdCBhIHNpbXBsZSBSZWFjdERPTUVsZW1lbnQuXG4gIGlmICghUmVhY3QuaXNWYWxpZEVsZW1lbnQocmVuZGVyZWRFbGVtZW50KSB8fCB0eXBlb2YgcmVuZGVyZWRFbGVtZW50LnR5cGUgIT09ICdzdHJpbmcnKSB7XG4gICAgaWYgKG9sZENoaWxkcmVuID09PSBuZXdDaGlsZHJlbikge1xuICAgICAgcmV0dXJuIHJlbmRlcmVkRWxlbWVudDtcbiAgICB9XG5cbiAgICByZXR1cm4gUmVhY3QuY2xvbmVFbGVtZW50KHJlbmRlcmVkRWxlbWVudCwgcmVuZGVyZWRFbGVtZW50LnByb3BzLCBuZXdDaGlsZHJlbik7XG4gIH1cblxuICB2YXIgcHJvcHMgPSByZW5kZXJlZEVsZW1lbnQucHJvcHM7XG4gIHZhciBzdHlsZSA9IHByb3BzLnN0eWxlO1xuICB2YXIgbmV3UHJvcHMgPSB7fTtcblxuICAvLyBDb252ZW5pZW50IHN5bnRheCBmb3IgbXVsdGlwbGUgc3R5bGVzOiBgc3R5bGU9e1tzdHlsZTEsIHN0eWxlMiwgZXRjXX1gXG4gIC8vIElnbm9yZXMgbm9uLW9iamVjdHMsIHNvIHlvdSBjYW4gZG8gYHRoaXMuc3RhdGUuaXNDb29sICYmIHN0eWxlcy5jb29sYC5cbiAgaWYgKEFycmF5LmlzQXJyYXkoc3R5bGUpKSB7XG4gICAgc3R5bGUgPSBfbWVyZ2VTdHlsZXMoc3R5bGUpO1xuICB9XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBXYXJuIGlmIHlvdSB1c2UgbG9uZ2hhbmQgYW5kIHNob3J0aGFuZCBwcm9wZXJ0aWVzIGluIHRoZSBzYW1lIHN0eWxlXG4gICAgLy8gb2JqZWN0LlxuICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0NTUy9TaG9ydGhhbmRfcHJvcGVydGllc1xuXG4gICAgdmFyIHNob3J0aGFuZFByb3BzID0gWydiYWNrZ3JvdW5kJywgJ2JvcmRlcicsICdib3JkZXJCb3R0b20nLCAnYm9yZGVyQ29sb3InLCAnYm9yZGVyTGVmdCcsICdib3JkZXJSYWRpdXMnLCAnYm9yZGVyUmlnaHQnLCAnYm9yZGVyU3R5bGUnLCAnYm9yZGVyVG9wJywgJ2JvcmRlcldpZHRoJywgJ2ZvbnQnLCAnbGlzdFN0eWxlJywgJ21hcmdpbicsICdwYWRkaW5nJywgJ3RyYW5zZm9ybScsICd0cmFuc2l0aW9uJ107XG5cbiAgICB2YXIgY2hlY2tQcm9wcyA9IGZ1bmN0aW9uIGNoZWNrUHJvcHMocykge1xuICAgICAgaWYgKHR5cGVvZiBzICE9PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMocyk7XG4gICAgICBzaG9ydGhhbmRQcm9wcy5mb3JFYWNoKGZ1bmN0aW9uIChzaG9ydGhhbmQpIHtcbiAgICAgICAgaWYgKHNbc2hvcnRoYW5kXSAmJiBrZXlzLnNvbWUoZnVuY3Rpb24gKGspIHtcbiAgICAgICAgICByZXR1cm4gayAhPT0gc2hvcnRoYW5kICYmIGsuaW5kZXhPZihzaG9ydGhhbmQpID09PSAwO1xuICAgICAgICB9KSkge1xuICAgICAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbiAgICAgICAgICBjb25zb2xlLndhcm4oJ1JhZGl1bTogcHJvcGVydHkgXCInICsgc2hvcnRoYW5kICsgJ1wiIGluIHN0eWxlIG9iamVjdCcsIHN0eWxlLCAnOiBkbyBub3QgbWl4IGxvbmdoYW5kIGFuZCAnICsgJ3Nob3J0aGFuZCBwcm9wZXJ0aWVzIGluIHRoZSBzYW1lIHN0eWxlIG9iamVjdC4gU2VlICcgKyAnaHR0cHM6Ly9naXRodWIuY29tL0Zvcm1pZGFibGVMYWJzL3JhZGl1bS9pc3N1ZXMvOTUgZm9yIG1vcmUgJyArICdpbmZvcm1hdGlvbi4nKTtcbiAgICAgICAgICAvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbnNvbGUgKi9cbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIGtleXMuZm9yRWFjaChmdW5jdGlvbiAoaykge1xuICAgICAgICByZXR1cm4gY2hlY2tQcm9wcyhzW2tdKTtcbiAgICAgIH0pO1xuICAgIH07XG4gICAgY2hlY2tQcm9wcyhzdHlsZSk7XG4gIH1cblxuICAvLyBCYWlsIGVhcmx5IGlmIG5vIGludGVyYWN0aXZlIHN0eWxlcy5cbiAgaWYgKCFzdHlsZSB8fCAhT2JqZWN0LmtleXMoc3R5bGUpLnNvbWUoX2lzU3BlY2lhbEtleSkpIHtcbiAgICBpZiAoc3R5bGUpIHtcbiAgICAgIC8vIFN0aWxsIHBlcmZvcm0gdmVuZG9yIHByZWZpeGluZywgdGhvdWdoLlxuICAgICAgbmV3UHJvcHMuc3R5bGUgPSBQcmVmaXhlci5nZXRQcmVmaXhlZFN0eWxlKHN0eWxlKTtcbiAgICAgIHJldHVybiBSZWFjdC5jbG9uZUVsZW1lbnQocmVuZGVyZWRFbGVtZW50LCBuZXdQcm9wcywgbmV3Q2hpbGRyZW4pO1xuICAgIH0gZWxzZSBpZiAobmV3Q2hpbGRyZW4pIHtcbiAgICAgIHJldHVybiBSZWFjdC5jbG9uZUVsZW1lbnQocmVuZGVyZWRFbGVtZW50LCB7fSwgbmV3Q2hpbGRyZW4pO1xuICAgIH1cblxuICAgIHJldHVybiByZW5kZXJlZEVsZW1lbnQ7XG4gIH1cblxuICAvLyBXZSBuZWVkIGEgdW5pcXVlIGtleSB0byBjb3JyZWxhdGUgc3RhdGUgY2hhbmdlcyBkdWUgdG8gdXNlciBpbnRlcmFjdGlvblxuICAvLyB3aXRoIHRoZSByZW5kZXJlZCBlbGVtZW50LCBzbyB3ZSBrbm93IHRvIGFwcGx5IHRoZSBwcm9wZXIgaW50ZXJhY3RpdmVcbiAgLy8gc3R5bGVzLlxuICB2YXIgb3JpZ2luYWxLZXkgPSByZW5kZXJlZEVsZW1lbnQucmVmIHx8IHJlbmRlcmVkRWxlbWVudC5rZXk7XG4gIHZhciBrZXkgPSBvcmlnaW5hbEtleSB8fCAnbWFpbic7XG5cbiAgaWYgKGV4aXN0aW5nS2V5TWFwW2tleV0pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1JhZGl1bSByZXF1aXJlcyBlYWNoIGVsZW1lbnQgd2l0aCBpbnRlcmFjdGl2ZSBzdHlsZXMgdG8gaGF2ZSBhIHVuaXF1ZSAnICsgJ2tleSwgc2V0IHVzaW5nIGVpdGhlciB0aGUgcmVmIG9yIGtleSBwcm9wLiAnICsgKG9yaWdpbmFsS2V5ID8gJ0tleSBcIicgKyBvcmlnaW5hbEtleSArICdcIiBpcyBhIGR1cGxpY2F0ZS4nIDogJ011bHRpcGxlIGVsZW1lbnRzIGhhdmUgbm8ga2V5IHNwZWNpZmllZC4nKSk7XG4gIH1cblxuICBleGlzdGluZ0tleU1hcFtrZXldID0gdHJ1ZTtcblxuICAvLyBNZWRpYSBxdWVyaWVzIGNhbiBjb250YWluIHBzZXVkbyBzdHlsZXMsIGxpa2UgOmhvdmVyXG4gIHN0eWxlID0gX3Jlc29sdmVNZWRpYVF1ZXJ5U3R5bGVzKGNvbXBvbmVudCwgc3R5bGUpO1xuXG4gIHZhciBuZXdTdHlsZSA9IHt9O1xuICBPYmplY3Qua2V5cyhzdHlsZSkuZm9yRWFjaChmdW5jdGlvbiAoc3R5bGVLZXkpIHtcbiAgICBpZiAoIV9pc1NwZWNpYWxLZXkoc3R5bGVLZXkpKSB7XG4gICAgICBuZXdTdHlsZVtzdHlsZUtleV0gPSBzdHlsZVtzdHlsZUtleV07XG4gICAgfVxuICB9KTtcblxuICAvLyBPbmx5IGFkZCBoYW5kbGVycyBpZiBuZWNlc3NhcnlcbiAgaWYgKHN0eWxlWyc6aG92ZXInXSB8fCBzdHlsZVsnOmFjdGl2ZSddKSB7XG4gICAgLy8gQWx3YXlzIGNhbGwgdGhlIGV4aXN0aW5nIGhhbmRsZXIgaWYgb25lIGlzIGFscmVhZHkgZGVmaW5lZC5cbiAgICAvLyBUaGlzIGNvZGUsIGFuZCB0aGUgdmVyeSBzaW1pbGFyIG9uZXMgYmVsb3csIGNvdWxkIGJlIGFic3RyYWN0ZWQgYSBiaXRcbiAgICAvLyBtb3JlLCBidXQgaXQgaHVydHMgcmVhZGFiaWxpdHkgSU1PLlxuICAgIHZhciBleGlzdGluZ09uTW91c2VFbnRlciA9IHByb3BzLm9uTW91c2VFbnRlcjtcbiAgICBuZXdQcm9wcy5vbk1vdXNlRW50ZXIgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgZXhpc3RpbmdPbk1vdXNlRW50ZXIgJiYgZXhpc3RpbmdPbk1vdXNlRW50ZXIoZSk7XG4gICAgICBfc2V0U3R5bGVTdGF0ZShjb21wb25lbnQsIGtleSwgeyAnOmhvdmVyJzogdHJ1ZSB9KTtcbiAgICB9O1xuXG4gICAgdmFyIGV4aXN0aW5nT25Nb3VzZUxlYXZlID0gcHJvcHMub25Nb3VzZUxlYXZlO1xuICAgIG5ld1Byb3BzLm9uTW91c2VMZWF2ZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICBleGlzdGluZ09uTW91c2VMZWF2ZSAmJiBleGlzdGluZ09uTW91c2VMZWF2ZShlKTtcbiAgICAgIF9zZXRTdHlsZVN0YXRlKGNvbXBvbmVudCwga2V5LCB7ICc6aG92ZXInOiBmYWxzZSB9KTtcbiAgICB9O1xuICB9XG5cbiAgaWYgKHN0eWxlWyc6YWN0aXZlJ10pIHtcbiAgICB2YXIgZXhpc3RpbmdPbk1vdXNlRG93biA9IHByb3BzLm9uTW91c2VEb3duO1xuICAgIG5ld1Byb3BzLm9uTW91c2VEb3duID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgIGV4aXN0aW5nT25Nb3VzZURvd24gJiYgZXhpc3RpbmdPbk1vdXNlRG93bihlKTtcbiAgICAgIGNvbXBvbmVudC5fbGFzdE1vdXNlRG93biA9IERhdGUubm93KCk7XG4gICAgICBfc2V0U3R5bGVTdGF0ZShjb21wb25lbnQsIGtleSwgeyAnOmFjdGl2ZSc6IHRydWUgfSk7XG4gICAgfTtcbiAgfVxuXG4gIGlmIChzdHlsZVsnOmZvY3VzJ10pIHtcbiAgICB2YXIgZXhpc3RpbmdPbkZvY3VzID0gcHJvcHMub25Gb2N1cztcbiAgICBuZXdQcm9wcy5vbkZvY3VzID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgIGV4aXN0aW5nT25Gb2N1cyAmJiBleGlzdGluZ09uRm9jdXMoZSk7XG4gICAgICBfc2V0U3R5bGVTdGF0ZShjb21wb25lbnQsIGtleSwgeyAnOmZvY3VzJzogdHJ1ZSB9KTtcbiAgICB9O1xuXG4gICAgdmFyIGV4aXN0aW5nT25CbHVyID0gcHJvcHMub25CbHVyO1xuICAgIG5ld1Byb3BzLm9uQmx1ciA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICBleGlzdGluZ09uQmx1ciAmJiBleGlzdGluZ09uQmx1cihlKTtcbiAgICAgIF9zZXRTdHlsZVN0YXRlKGNvbXBvbmVudCwga2V5LCB7ICc6Zm9jdXMnOiBmYWxzZSB9KTtcbiAgICB9O1xuICB9XG5cbiAgLy8gTWVyZ2UgdGhlIHN0eWxlcyBpbiB0aGUgb3JkZXIgdGhleSB3ZXJlIGRlZmluZWRcbiAgdmFyIGludGVyYWN0aW9uU3R5bGVzID0gT2JqZWN0LmtleXMoc3R5bGUpLmZpbHRlcihmdW5jdGlvbiAobmFtZSkge1xuICAgIHJldHVybiBuYW1lID09PSAnOmFjdGl2ZScgJiYgX2dldFN0eWxlU3RhdGUoY29tcG9uZW50LCBrZXksICc6YWN0aXZlJykgfHwgbmFtZSA9PT0gJzpob3ZlcicgJiYgX2dldFN0eWxlU3RhdGUoY29tcG9uZW50LCBrZXksICc6aG92ZXInKSB8fCBuYW1lID09PSAnOmZvY3VzJyAmJiBfZ2V0U3R5bGVTdGF0ZShjb21wb25lbnQsIGtleSwgJzpmb2N1cycpO1xuICB9KS5tYXAoZnVuY3Rpb24gKG5hbWUpIHtcbiAgICByZXR1cm4gc3R5bGVbbmFtZV07XG4gIH0pO1xuXG4gIGlmIChpbnRlcmFjdGlvblN0eWxlcy5sZW5ndGgpIHtcbiAgICBuZXdTdHlsZSA9IF9tZXJnZVN0eWxlcyhbbmV3U3R5bGVdLmNvbmNhdChpbnRlcmFjdGlvblN0eWxlcykpO1xuICB9XG5cbiAgaWYgKHN0eWxlWyc6YWN0aXZlJ10gJiYgIWNvbXBvbmVudC5fcmFkaXVtTW91c2VVcExpc3RlbmVyICYmIEV4ZWN1dGlvbkVudmlyb25tZW50LmNhblVzZUV2ZW50TGlzdGVuZXJzKSB7XG4gICAgY29tcG9uZW50Ll9yYWRpdW1Nb3VzZVVwTGlzdGVuZXIgPSBNb3VzZVVwTGlzdGVuZXIuc3Vic2NyaWJlKF9tb3VzZVVwLmJpbmQobnVsbCwgY29tcG9uZW50KSk7XG4gIH1cblxuICBuZXdQcm9wcy5zdHlsZSA9IFByZWZpeGVyLmdldFByZWZpeGVkU3R5bGUobmV3U3R5bGUpO1xuXG4gIHJldHVybiBSZWFjdC5jbG9uZUVsZW1lbnQocmVuZGVyZWRFbGVtZW50LCBuZXdQcm9wcywgbmV3Q2hpbGRyZW4pO1xufTtcblxuLy8gRXhwb3NpbmcgbWV0aG9kcyBmb3IgdGVzdHMgaXMgdWdseSwgYnV0IHRoZSBhbHRlcm5hdGl2ZSwgcmUtcmVxdWlyaW5nIHRoZVxuLy8gbW9kdWxlIGVhY2ggdGltZSwgaXMgdG9vIHNsb3dcbnJlc29sdmVTdHlsZXMuX19jbGVhclN0YXRlRm9yVGVzdHMgPSBmdW5jdGlvbiAoKSB7XG4gIG1lZGlhUXVlcnlMaXN0QnlRdWVyeVN0cmluZyA9IHt9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSByZXNvbHZlU3R5bGVzOyIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gZmluZChhcnJheSwgcHJlZGljYXRlLCBjb250ZXh0KSB7XG4gIGlmICh0eXBlb2YgQXJyYXkucHJvdG90eXBlLmZpbmQgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gYXJyYXkuZmluZChwcmVkaWNhdGUsIGNvbnRleHQpO1xuICB9XG5cbiAgY29udGV4dCA9IGNvbnRleHQgfHwgdGhpcztcbiAgdmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aDtcbiAgdmFyIGk7XG5cbiAgaWYgKHR5cGVvZiBwcmVkaWNhdGUgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKHByZWRpY2F0ZSArICcgaXMgbm90IGEgZnVuY3Rpb24nKTtcbiAgfVxuXG4gIGZvciAoaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgIGlmIChwcmVkaWNhdGUuY2FsbChjb250ZXh0LCBhcnJheVtpXSwgaSwgYXJyYXkpKSB7XG4gICAgICByZXR1cm4gYXJyYXlbaV07XG4gICAgfVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZmluZDtcbiIsIi8qIVxuICBDb3B5cmlnaHQgKGMpIDIwMTUgSmVkIFdhdHNvbi5cbiAgQmFzZWQgb24gY29kZSB0aGF0IGlzIENvcHlyaWdodCAyMDEzLTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qL1xuXG4oZnVuY3Rpb24gKCkge1xuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGNhblVzZURPTSA9ICEhKFxuXHRcdHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmXG5cdFx0d2luZG93LmRvY3VtZW50ICYmXG5cdFx0d2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnRcblx0KTtcblxuXHR2YXIgRXhlY3V0aW9uRW52aXJvbm1lbnQgPSB7XG5cblx0XHRjYW5Vc2VET006IGNhblVzZURPTSxcblxuXHRcdGNhblVzZVdvcmtlcnM6IHR5cGVvZiBXb3JrZXIgIT09ICd1bmRlZmluZWQnLFxuXG5cdFx0Y2FuVXNlRXZlbnRMaXN0ZW5lcnM6XG5cdFx0XHRjYW5Vc2VET00gJiYgISEod2luZG93LmFkZEV2ZW50TGlzdGVuZXIgfHwgd2luZG93LmF0dGFjaEV2ZW50KSxcblxuXHRcdGNhblVzZVZpZXdwb3J0OiBjYW5Vc2VET00gJiYgISF3aW5kb3cuc2NyZWVuXG5cblx0fTtcblxuXHRpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZGVmaW5lLmFtZCA9PT0gJ29iamVjdCcgJiYgZGVmaW5lLmFtZCkge1xuXHRcdGRlZmluZShmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZXR1cm4gRXhlY3V0aW9uRW52aXJvbm1lbnQ7XG5cdFx0fSk7XG5cdH0gZWxzZSBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcblx0XHRtb2R1bGUuZXhwb3J0cyA9IEV4ZWN1dGlvbkVudmlyb25tZW50O1xuXHR9IGVsc2Uge1xuXHRcdHdpbmRvdy5FeGVjdXRpb25FbnZpcm9ubWVudCA9IEV4ZWN1dGlvbkVudmlyb25tZW50O1xuXHR9XG5cbn0oKSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIFRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09IG51bGwpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBvd25FbnVtZXJhYmxlS2V5cyhvYmopIHtcblx0dmFyIGtleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhvYmopO1xuXG5cdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0a2V5cyA9IGtleXMuY29uY2F0KE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqKSk7XG5cdH1cblxuXHRyZXR1cm4ga2V5cy5maWx0ZXIoZnVuY3Rpb24gKGtleSkge1xuXHRcdHJldHVybiBwcm9wSXNFbnVtZXJhYmxlLmNhbGwob2JqLCBrZXkpO1xuXHR9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIGtleXM7XG5cdHZhciB0byA9IFRvT2JqZWN0KHRhcmdldCk7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gYXJndW1lbnRzW3NdO1xuXHRcdGtleXMgPSBvd25FbnVtZXJhYmxlS2V5cyhPYmplY3QoZnJvbSkpO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR0b1trZXlzW2ldXSA9IGZyb21ba2V5c1tpXV07XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cy5EaXNwYXRjaGVyID0gcmVxdWlyZSgnLi9saWIvRGlzcGF0Y2hlcicpXG4iLCIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIERpc3BhdGNoZXJcbiAqIEB0eXBlY2hlY2tzXG4gKi9cblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBpbnZhcmlhbnQgPSByZXF1aXJlKCcuL2ludmFyaWFudCcpO1xuXG52YXIgX2xhc3RJRCA9IDE7XG52YXIgX3ByZWZpeCA9ICdJRF8nO1xuXG4vKipcbiAqIERpc3BhdGNoZXIgaXMgdXNlZCB0byBicm9hZGNhc3QgcGF5bG9hZHMgdG8gcmVnaXN0ZXJlZCBjYWxsYmFja3MuIFRoaXMgaXNcbiAqIGRpZmZlcmVudCBmcm9tIGdlbmVyaWMgcHViLXN1YiBzeXN0ZW1zIGluIHR3byB3YXlzOlxuICpcbiAqICAgMSkgQ2FsbGJhY2tzIGFyZSBub3Qgc3Vic2NyaWJlZCB0byBwYXJ0aWN1bGFyIGV2ZW50cy4gRXZlcnkgcGF5bG9hZCBpc1xuICogICAgICBkaXNwYXRjaGVkIHRvIGV2ZXJ5IHJlZ2lzdGVyZWQgY2FsbGJhY2suXG4gKiAgIDIpIENhbGxiYWNrcyBjYW4gYmUgZGVmZXJyZWQgaW4gd2hvbGUgb3IgcGFydCB1bnRpbCBvdGhlciBjYWxsYmFja3MgaGF2ZVxuICogICAgICBiZWVuIGV4ZWN1dGVkLlxuICpcbiAqIEZvciBleGFtcGxlLCBjb25zaWRlciB0aGlzIGh5cG90aGV0aWNhbCBmbGlnaHQgZGVzdGluYXRpb24gZm9ybSwgd2hpY2hcbiAqIHNlbGVjdHMgYSBkZWZhdWx0IGNpdHkgd2hlbiBhIGNvdW50cnkgaXMgc2VsZWN0ZWQ6XG4gKlxuICogICB2YXIgZmxpZ2h0RGlzcGF0Y2hlciA9IG5ldyBEaXNwYXRjaGVyKCk7XG4gKlxuICogICAvLyBLZWVwcyB0cmFjayBvZiB3aGljaCBjb3VudHJ5IGlzIHNlbGVjdGVkXG4gKiAgIHZhciBDb3VudHJ5U3RvcmUgPSB7Y291bnRyeTogbnVsbH07XG4gKlxuICogICAvLyBLZWVwcyB0cmFjayBvZiB3aGljaCBjaXR5IGlzIHNlbGVjdGVkXG4gKiAgIHZhciBDaXR5U3RvcmUgPSB7Y2l0eTogbnVsbH07XG4gKlxuICogICAvLyBLZWVwcyB0cmFjayBvZiB0aGUgYmFzZSBmbGlnaHQgcHJpY2Ugb2YgdGhlIHNlbGVjdGVkIGNpdHlcbiAqICAgdmFyIEZsaWdodFByaWNlU3RvcmUgPSB7cHJpY2U6IG51bGx9XG4gKlxuICogV2hlbiBhIHVzZXIgY2hhbmdlcyB0aGUgc2VsZWN0ZWQgY2l0eSwgd2UgZGlzcGF0Y2ggdGhlIHBheWxvYWQ6XG4gKlxuICogICBmbGlnaHREaXNwYXRjaGVyLmRpc3BhdGNoKHtcbiAqICAgICBhY3Rpb25UeXBlOiAnY2l0eS11cGRhdGUnLFxuICogICAgIHNlbGVjdGVkQ2l0eTogJ3BhcmlzJ1xuICogICB9KTtcbiAqXG4gKiBUaGlzIHBheWxvYWQgaXMgZGlnZXN0ZWQgYnkgYENpdHlTdG9yZWA6XG4gKlxuICogICBmbGlnaHREaXNwYXRjaGVyLnJlZ2lzdGVyKGZ1bmN0aW9uKHBheWxvYWQpIHtcbiAqICAgICBpZiAocGF5bG9hZC5hY3Rpb25UeXBlID09PSAnY2l0eS11cGRhdGUnKSB7XG4gKiAgICAgICBDaXR5U3RvcmUuY2l0eSA9IHBheWxvYWQuc2VsZWN0ZWRDaXR5O1xuICogICAgIH1cbiAqICAgfSk7XG4gKlxuICogV2hlbiB0aGUgdXNlciBzZWxlY3RzIGEgY291bnRyeSwgd2UgZGlzcGF0Y2ggdGhlIHBheWxvYWQ6XG4gKlxuICogICBmbGlnaHREaXNwYXRjaGVyLmRpc3BhdGNoKHtcbiAqICAgICBhY3Rpb25UeXBlOiAnY291bnRyeS11cGRhdGUnLFxuICogICAgIHNlbGVjdGVkQ291bnRyeTogJ2F1c3RyYWxpYSdcbiAqICAgfSk7XG4gKlxuICogVGhpcyBwYXlsb2FkIGlzIGRpZ2VzdGVkIGJ5IGJvdGggc3RvcmVzOlxuICpcbiAqICAgIENvdW50cnlTdG9yZS5kaXNwYXRjaFRva2VuID0gZmxpZ2h0RGlzcGF0Y2hlci5yZWdpc3RlcihmdW5jdGlvbihwYXlsb2FkKSB7XG4gKiAgICAgaWYgKHBheWxvYWQuYWN0aW9uVHlwZSA9PT0gJ2NvdW50cnktdXBkYXRlJykge1xuICogICAgICAgQ291bnRyeVN0b3JlLmNvdW50cnkgPSBwYXlsb2FkLnNlbGVjdGVkQ291bnRyeTtcbiAqICAgICB9XG4gKiAgIH0pO1xuICpcbiAqIFdoZW4gdGhlIGNhbGxiYWNrIHRvIHVwZGF0ZSBgQ291bnRyeVN0b3JlYCBpcyByZWdpc3RlcmVkLCB3ZSBzYXZlIGEgcmVmZXJlbmNlXG4gKiB0byB0aGUgcmV0dXJuZWQgdG9rZW4uIFVzaW5nIHRoaXMgdG9rZW4gd2l0aCBgd2FpdEZvcigpYCwgd2UgY2FuIGd1YXJhbnRlZVxuICogdGhhdCBgQ291bnRyeVN0b3JlYCBpcyB1cGRhdGVkIGJlZm9yZSB0aGUgY2FsbGJhY2sgdGhhdCB1cGRhdGVzIGBDaXR5U3RvcmVgXG4gKiBuZWVkcyB0byBxdWVyeSBpdHMgZGF0YS5cbiAqXG4gKiAgIENpdHlTdG9yZS5kaXNwYXRjaFRva2VuID0gZmxpZ2h0RGlzcGF0Y2hlci5yZWdpc3RlcihmdW5jdGlvbihwYXlsb2FkKSB7XG4gKiAgICAgaWYgKHBheWxvYWQuYWN0aW9uVHlwZSA9PT0gJ2NvdW50cnktdXBkYXRlJykge1xuICogICAgICAgLy8gYENvdW50cnlTdG9yZS5jb3VudHJ5YCBtYXkgbm90IGJlIHVwZGF0ZWQuXG4gKiAgICAgICBmbGlnaHREaXNwYXRjaGVyLndhaXRGb3IoW0NvdW50cnlTdG9yZS5kaXNwYXRjaFRva2VuXSk7XG4gKiAgICAgICAvLyBgQ291bnRyeVN0b3JlLmNvdW50cnlgIGlzIG5vdyBndWFyYW50ZWVkIHRvIGJlIHVwZGF0ZWQuXG4gKlxuICogICAgICAgLy8gU2VsZWN0IHRoZSBkZWZhdWx0IGNpdHkgZm9yIHRoZSBuZXcgY291bnRyeVxuICogICAgICAgQ2l0eVN0b3JlLmNpdHkgPSBnZXREZWZhdWx0Q2l0eUZvckNvdW50cnkoQ291bnRyeVN0b3JlLmNvdW50cnkpO1xuICogICAgIH1cbiAqICAgfSk7XG4gKlxuICogVGhlIHVzYWdlIG9mIGB3YWl0Rm9yKClgIGNhbiBiZSBjaGFpbmVkLCBmb3IgZXhhbXBsZTpcbiAqXG4gKiAgIEZsaWdodFByaWNlU3RvcmUuZGlzcGF0Y2hUb2tlbiA9XG4gKiAgICAgZmxpZ2h0RGlzcGF0Y2hlci5yZWdpc3RlcihmdW5jdGlvbihwYXlsb2FkKSB7XG4gKiAgICAgICBzd2l0Y2ggKHBheWxvYWQuYWN0aW9uVHlwZSkge1xuICogICAgICAgICBjYXNlICdjb3VudHJ5LXVwZGF0ZSc6XG4gKiAgICAgICAgICAgZmxpZ2h0RGlzcGF0Y2hlci53YWl0Rm9yKFtDaXR5U3RvcmUuZGlzcGF0Y2hUb2tlbl0pO1xuICogICAgICAgICAgIEZsaWdodFByaWNlU3RvcmUucHJpY2UgPVxuICogICAgICAgICAgICAgZ2V0RmxpZ2h0UHJpY2VTdG9yZShDb3VudHJ5U3RvcmUuY291bnRyeSwgQ2l0eVN0b3JlLmNpdHkpO1xuICogICAgICAgICAgIGJyZWFrO1xuICpcbiAqICAgICAgICAgY2FzZSAnY2l0eS11cGRhdGUnOlxuICogICAgICAgICAgIEZsaWdodFByaWNlU3RvcmUucHJpY2UgPVxuICogICAgICAgICAgICAgRmxpZ2h0UHJpY2VTdG9yZShDb3VudHJ5U3RvcmUuY291bnRyeSwgQ2l0eVN0b3JlLmNpdHkpO1xuICogICAgICAgICAgIGJyZWFrO1xuICogICAgIH1cbiAqICAgfSk7XG4gKlxuICogVGhlIGBjb3VudHJ5LXVwZGF0ZWAgcGF5bG9hZCB3aWxsIGJlIGd1YXJhbnRlZWQgdG8gaW52b2tlIHRoZSBzdG9yZXMnXG4gKiByZWdpc3RlcmVkIGNhbGxiYWNrcyBpbiBvcmRlcjogYENvdW50cnlTdG9yZWAsIGBDaXR5U3RvcmVgLCB0aGVuXG4gKiBgRmxpZ2h0UHJpY2VTdG9yZWAuXG4gKi9cblxuICBmdW5jdGlvbiBEaXNwYXRjaGVyKCkge1xuICAgIHRoaXMuJERpc3BhdGNoZXJfY2FsbGJhY2tzID0ge307XG4gICAgdGhpcy4kRGlzcGF0Y2hlcl9pc1BlbmRpbmcgPSB7fTtcbiAgICB0aGlzLiREaXNwYXRjaGVyX2lzSGFuZGxlZCA9IHt9O1xuICAgIHRoaXMuJERpc3BhdGNoZXJfaXNEaXNwYXRjaGluZyA9IGZhbHNlO1xuICAgIHRoaXMuJERpc3BhdGNoZXJfcGVuZGluZ1BheWxvYWQgPSBudWxsO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlZ2lzdGVycyBhIGNhbGxiYWNrIHRvIGJlIGludm9rZWQgd2l0aCBldmVyeSBkaXNwYXRjaGVkIHBheWxvYWQuIFJldHVybnNcbiAgICogYSB0b2tlbiB0aGF0IGNhbiBiZSB1c2VkIHdpdGggYHdhaXRGb3IoKWAuXG4gICAqXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrXG4gICAqIEByZXR1cm4ge3N0cmluZ31cbiAgICovXG4gIERpc3BhdGNoZXIucHJvdG90eXBlLnJlZ2lzdGVyPWZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgdmFyIGlkID0gX3ByZWZpeCArIF9sYXN0SUQrKztcbiAgICB0aGlzLiREaXNwYXRjaGVyX2NhbGxiYWNrc1tpZF0gPSBjYWxsYmFjaztcbiAgICByZXR1cm4gaWQ7XG4gIH07XG5cbiAgLyoqXG4gICAqIFJlbW92ZXMgYSBjYWxsYmFjayBiYXNlZCBvbiBpdHMgdG9rZW4uXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBpZFxuICAgKi9cbiAgRGlzcGF0Y2hlci5wcm90b3R5cGUudW5yZWdpc3Rlcj1mdW5jdGlvbihpZCkge1xuICAgIGludmFyaWFudChcbiAgICAgIHRoaXMuJERpc3BhdGNoZXJfY2FsbGJhY2tzW2lkXSxcbiAgICAgICdEaXNwYXRjaGVyLnVucmVnaXN0ZXIoLi4uKTogYCVzYCBkb2VzIG5vdCBtYXAgdG8gYSByZWdpc3RlcmVkIGNhbGxiYWNrLicsXG4gICAgICBpZFxuICAgICk7XG4gICAgZGVsZXRlIHRoaXMuJERpc3BhdGNoZXJfY2FsbGJhY2tzW2lkXTtcbiAgfTtcblxuICAvKipcbiAgICogV2FpdHMgZm9yIHRoZSBjYWxsYmFja3Mgc3BlY2lmaWVkIHRvIGJlIGludm9rZWQgYmVmb3JlIGNvbnRpbnVpbmcgZXhlY3V0aW9uXG4gICAqIG9mIHRoZSBjdXJyZW50IGNhbGxiYWNrLiBUaGlzIG1ldGhvZCBzaG91bGQgb25seSBiZSB1c2VkIGJ5IGEgY2FsbGJhY2sgaW5cbiAgICogcmVzcG9uc2UgdG8gYSBkaXNwYXRjaGVkIHBheWxvYWQuXG4gICAqXG4gICAqIEBwYXJhbSB7YXJyYXk8c3RyaW5nPn0gaWRzXG4gICAqL1xuICBEaXNwYXRjaGVyLnByb3RvdHlwZS53YWl0Rm9yPWZ1bmN0aW9uKGlkcykge1xuICAgIGludmFyaWFudChcbiAgICAgIHRoaXMuJERpc3BhdGNoZXJfaXNEaXNwYXRjaGluZyxcbiAgICAgICdEaXNwYXRjaGVyLndhaXRGb3IoLi4uKTogTXVzdCBiZSBpbnZva2VkIHdoaWxlIGRpc3BhdGNoaW5nLidcbiAgICApO1xuICAgIGZvciAodmFyIGlpID0gMDsgaWkgPCBpZHMubGVuZ3RoOyBpaSsrKSB7XG4gICAgICB2YXIgaWQgPSBpZHNbaWldO1xuICAgICAgaWYgKHRoaXMuJERpc3BhdGNoZXJfaXNQZW5kaW5nW2lkXSkge1xuICAgICAgICBpbnZhcmlhbnQoXG4gICAgICAgICAgdGhpcy4kRGlzcGF0Y2hlcl9pc0hhbmRsZWRbaWRdLFxuICAgICAgICAgICdEaXNwYXRjaGVyLndhaXRGb3IoLi4uKTogQ2lyY3VsYXIgZGVwZW5kZW5jeSBkZXRlY3RlZCB3aGlsZSAnICtcbiAgICAgICAgICAnd2FpdGluZyBmb3IgYCVzYC4nLFxuICAgICAgICAgIGlkXG4gICAgICAgICk7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaW52YXJpYW50KFxuICAgICAgICB0aGlzLiREaXNwYXRjaGVyX2NhbGxiYWNrc1tpZF0sXG4gICAgICAgICdEaXNwYXRjaGVyLndhaXRGb3IoLi4uKTogYCVzYCBkb2VzIG5vdCBtYXAgdG8gYSByZWdpc3RlcmVkIGNhbGxiYWNrLicsXG4gICAgICAgIGlkXG4gICAgICApO1xuICAgICAgdGhpcy4kRGlzcGF0Y2hlcl9pbnZva2VDYWxsYmFjayhpZCk7XG4gICAgfVxuICB9O1xuXG4gIC8qKlxuICAgKiBEaXNwYXRjaGVzIGEgcGF5bG9hZCB0byBhbGwgcmVnaXN0ZXJlZCBjYWxsYmFja3MuXG4gICAqXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBwYXlsb2FkXG4gICAqL1xuICBEaXNwYXRjaGVyLnByb3RvdHlwZS5kaXNwYXRjaD1mdW5jdGlvbihwYXlsb2FkKSB7XG4gICAgaW52YXJpYW50KFxuICAgICAgIXRoaXMuJERpc3BhdGNoZXJfaXNEaXNwYXRjaGluZyxcbiAgICAgICdEaXNwYXRjaC5kaXNwYXRjaCguLi4pOiBDYW5ub3QgZGlzcGF0Y2ggaW4gdGhlIG1pZGRsZSBvZiBhIGRpc3BhdGNoLidcbiAgICApO1xuICAgIHRoaXMuJERpc3BhdGNoZXJfc3RhcnREaXNwYXRjaGluZyhwYXlsb2FkKTtcbiAgICB0cnkge1xuICAgICAgZm9yICh2YXIgaWQgaW4gdGhpcy4kRGlzcGF0Y2hlcl9jYWxsYmFja3MpIHtcbiAgICAgICAgaWYgKHRoaXMuJERpc3BhdGNoZXJfaXNQZW5kaW5nW2lkXSkge1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuJERpc3BhdGNoZXJfaW52b2tlQ2FsbGJhY2soaWQpO1xuICAgICAgfVxuICAgIH0gZmluYWxseSB7XG4gICAgICB0aGlzLiREaXNwYXRjaGVyX3N0b3BEaXNwYXRjaGluZygpO1xuICAgIH1cbiAgfTtcblxuICAvKipcbiAgICogSXMgdGhpcyBEaXNwYXRjaGVyIGN1cnJlbnRseSBkaXNwYXRjaGluZy5cbiAgICpcbiAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICovXG4gIERpc3BhdGNoZXIucHJvdG90eXBlLmlzRGlzcGF0Y2hpbmc9ZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuJERpc3BhdGNoZXJfaXNEaXNwYXRjaGluZztcbiAgfTtcblxuICAvKipcbiAgICogQ2FsbCB0aGUgY2FsbGJhY2sgc3RvcmVkIHdpdGggdGhlIGdpdmVuIGlkLiBBbHNvIGRvIHNvbWUgaW50ZXJuYWxcbiAgICogYm9va2tlZXBpbmcuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBpZFxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIERpc3BhdGNoZXIucHJvdG90eXBlLiREaXNwYXRjaGVyX2ludm9rZUNhbGxiYWNrPWZ1bmN0aW9uKGlkKSB7XG4gICAgdGhpcy4kRGlzcGF0Y2hlcl9pc1BlbmRpbmdbaWRdID0gdHJ1ZTtcbiAgICB0aGlzLiREaXNwYXRjaGVyX2NhbGxiYWNrc1tpZF0odGhpcy4kRGlzcGF0Y2hlcl9wZW5kaW5nUGF5bG9hZCk7XG4gICAgdGhpcy4kRGlzcGF0Y2hlcl9pc0hhbmRsZWRbaWRdID0gdHJ1ZTtcbiAgfTtcblxuICAvKipcbiAgICogU2V0IHVwIGJvb2trZWVwaW5nIG5lZWRlZCB3aGVuIGRpc3BhdGNoaW5nLlxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gcGF5bG9hZFxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIERpc3BhdGNoZXIucHJvdG90eXBlLiREaXNwYXRjaGVyX3N0YXJ0RGlzcGF0Y2hpbmc9ZnVuY3Rpb24ocGF5bG9hZCkge1xuICAgIGZvciAodmFyIGlkIGluIHRoaXMuJERpc3BhdGNoZXJfY2FsbGJhY2tzKSB7XG4gICAgICB0aGlzLiREaXNwYXRjaGVyX2lzUGVuZGluZ1tpZF0gPSBmYWxzZTtcbiAgICAgIHRoaXMuJERpc3BhdGNoZXJfaXNIYW5kbGVkW2lkXSA9IGZhbHNlO1xuICAgIH1cbiAgICB0aGlzLiREaXNwYXRjaGVyX3BlbmRpbmdQYXlsb2FkID0gcGF5bG9hZDtcbiAgICB0aGlzLiREaXNwYXRjaGVyX2lzRGlzcGF0Y2hpbmcgPSB0cnVlO1xuICB9O1xuXG4gIC8qKlxuICAgKiBDbGVhciBib29ra2VlcGluZyB1c2VkIGZvciBkaXNwYXRjaGluZy5cbiAgICpcbiAgICogQGludGVybmFsXG4gICAqL1xuICBEaXNwYXRjaGVyLnByb3RvdHlwZS4kRGlzcGF0Y2hlcl9zdG9wRGlzcGF0Y2hpbmc9ZnVuY3Rpb24oKSB7XG4gICAgdGhpcy4kRGlzcGF0Y2hlcl9wZW5kaW5nUGF5bG9hZCA9IG51bGw7XG4gICAgdGhpcy4kRGlzcGF0Y2hlcl9pc0Rpc3BhdGNoaW5nID0gZmFsc2U7XG4gIH07XG5cblxubW9kdWxlLmV4cG9ydHMgPSBEaXNwYXRjaGVyO1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgaW52YXJpYW50XG4gKi9cblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogVXNlIGludmFyaWFudCgpIHRvIGFzc2VydCBzdGF0ZSB3aGljaCB5b3VyIHByb2dyYW0gYXNzdW1lcyB0byBiZSB0cnVlLlxuICpcbiAqIFByb3ZpZGUgc3ByaW50Zi1zdHlsZSBmb3JtYXQgKG9ubHkgJXMgaXMgc3VwcG9ydGVkKSBhbmQgYXJndW1lbnRzXG4gKiB0byBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHdoYXQgYnJva2UgYW5kIHdoYXQgeW91IHdlcmVcbiAqIGV4cGVjdGluZy5cbiAqXG4gKiBUaGUgaW52YXJpYW50IG1lc3NhZ2Ugd2lsbCBiZSBzdHJpcHBlZCBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGludmFyaWFudFxuICogd2lsbCByZW1haW4gdG8gZW5zdXJlIGxvZ2ljIGRvZXMgbm90IGRpZmZlciBpbiBwcm9kdWN0aW9uLlxuICovXG5cbnZhciBpbnZhcmlhbnQgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYSwgYiwgYywgZCwgZSwgZikge1xuICBpZiAoZmFsc2UpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW52YXJpYW50IHJlcXVpcmVzIGFuIGVycm9yIG1lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG4gIH1cblxuICBpZiAoIWNvbmRpdGlvbikge1xuICAgIHZhciBlcnJvcjtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICAnTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgJyArXG4gICAgICAgICdmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLidcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhcmdzID0gW2EsIGIsIGMsIGQsIGUsIGZdO1xuICAgICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICAnSW52YXJpYW50IFZpb2xhdGlvbjogJyArXG4gICAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHsgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107IH0pXG4gICAgICApO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBpbnZhcmlhbnQ7XG4iLCIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuZnVuY3Rpb24gRXZlbnRFbWl0dGVyKCkge1xuICB0aGlzLl9ldmVudHMgPSB0aGlzLl9ldmVudHMgfHwge307XG4gIHRoaXMuX21heExpc3RlbmVycyA9IHRoaXMuX21heExpc3RlbmVycyB8fCB1bmRlZmluZWQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50RW1pdHRlcjtcblxuLy8gQmFja3dhcmRzLWNvbXBhdCB3aXRoIG5vZGUgMC4xMC54XG5FdmVudEVtaXR0ZXIuRXZlbnRFbWl0dGVyID0gRXZlbnRFbWl0dGVyO1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLl9ldmVudHMgPSB1bmRlZmluZWQ7XG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLl9tYXhMaXN0ZW5lcnMgPSB1bmRlZmluZWQ7XG5cbi8vIEJ5IGRlZmF1bHQgRXZlbnRFbWl0dGVycyB3aWxsIHByaW50IGEgd2FybmluZyBpZiBtb3JlIHRoYW4gMTAgbGlzdGVuZXJzIGFyZVxuLy8gYWRkZWQgdG8gaXQuIFRoaXMgaXMgYSB1c2VmdWwgZGVmYXVsdCB3aGljaCBoZWxwcyBmaW5kaW5nIG1lbW9yeSBsZWFrcy5cbkV2ZW50RW1pdHRlci5kZWZhdWx0TWF4TGlzdGVuZXJzID0gMTA7XG5cbi8vIE9idmlvdXNseSBub3QgYWxsIEVtaXR0ZXJzIHNob3VsZCBiZSBsaW1pdGVkIHRvIDEwLiBUaGlzIGZ1bmN0aW9uIGFsbG93c1xuLy8gdGhhdCB0byBiZSBpbmNyZWFzZWQuIFNldCB0byB6ZXJvIGZvciB1bmxpbWl0ZWQuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnNldE1heExpc3RlbmVycyA9IGZ1bmN0aW9uKG4pIHtcbiAgaWYgKCFpc051bWJlcihuKSB8fCBuIDwgMCB8fCBpc05hTihuKSlcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ24gbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlcicpO1xuICB0aGlzLl9tYXhMaXN0ZW5lcnMgPSBuO1xuICByZXR1cm4gdGhpcztcbn07XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuZW1pdCA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgdmFyIGVyLCBoYW5kbGVyLCBsZW4sIGFyZ3MsIGksIGxpc3RlbmVycztcblxuICBpZiAoIXRoaXMuX2V2ZW50cylcbiAgICB0aGlzLl9ldmVudHMgPSB7fTtcblxuICAvLyBJZiB0aGVyZSBpcyBubyAnZXJyb3InIGV2ZW50IGxpc3RlbmVyIHRoZW4gdGhyb3cuXG4gIGlmICh0eXBlID09PSAnZXJyb3InKSB7XG4gICAgaWYgKCF0aGlzLl9ldmVudHMuZXJyb3IgfHxcbiAgICAgICAgKGlzT2JqZWN0KHRoaXMuX2V2ZW50cy5lcnJvcikgJiYgIXRoaXMuX2V2ZW50cy5lcnJvci5sZW5ndGgpKSB7XG4gICAgICBlciA9IGFyZ3VtZW50c1sxXTtcbiAgICAgIGlmIChlciBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgIHRocm93IGVyOyAvLyBVbmhhbmRsZWQgJ2Vycm9yJyBldmVudFxuICAgICAgfVxuICAgICAgdGhyb3cgVHlwZUVycm9yKCdVbmNhdWdodCwgdW5zcGVjaWZpZWQgXCJlcnJvclwiIGV2ZW50LicpO1xuICAgIH1cbiAgfVxuXG4gIGhhbmRsZXIgPSB0aGlzLl9ldmVudHNbdHlwZV07XG5cbiAgaWYgKGlzVW5kZWZpbmVkKGhhbmRsZXIpKVxuICAgIHJldHVybiBmYWxzZTtcblxuICBpZiAoaXNGdW5jdGlvbihoYW5kbGVyKSkge1xuICAgIHN3aXRjaCAoYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgLy8gZmFzdCBjYXNlc1xuICAgICAgY2FzZSAxOlxuICAgICAgICBoYW5kbGVyLmNhbGwodGhpcyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAyOlxuICAgICAgICBoYW5kbGVyLmNhbGwodGhpcywgYXJndW1lbnRzWzFdKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIDM6XG4gICAgICAgIGhhbmRsZXIuY2FsbCh0aGlzLCBhcmd1bWVudHNbMV0sIGFyZ3VtZW50c1syXSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgLy8gc2xvd2VyXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgICAgICBhcmdzID0gbmV3IEFycmF5KGxlbiAtIDEpO1xuICAgICAgICBmb3IgKGkgPSAxOyBpIDwgbGVuOyBpKyspXG4gICAgICAgICAgYXJnc1tpIC0gMV0gPSBhcmd1bWVudHNbaV07XG4gICAgICAgIGhhbmRsZXIuYXBwbHkodGhpcywgYXJncyk7XG4gICAgfVxuICB9IGVsc2UgaWYgKGlzT2JqZWN0KGhhbmRsZXIpKSB7XG4gICAgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBhcmdzID0gbmV3IEFycmF5KGxlbiAtIDEpO1xuICAgIGZvciAoaSA9IDE7IGkgPCBsZW47IGkrKylcbiAgICAgIGFyZ3NbaSAtIDFdID0gYXJndW1lbnRzW2ldO1xuXG4gICAgbGlzdGVuZXJzID0gaGFuZGxlci5zbGljZSgpO1xuICAgIGxlbiA9IGxpc3RlbmVycy5sZW5ndGg7XG4gICAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSsrKVxuICAgICAgbGlzdGVuZXJzW2ldLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmFkZExpc3RlbmVyID0gZnVuY3Rpb24odHlwZSwgbGlzdGVuZXIpIHtcbiAgdmFyIG07XG5cbiAgaWYgKCFpc0Z1bmN0aW9uKGxpc3RlbmVyKSlcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ2xpc3RlbmVyIG11c3QgYmUgYSBmdW5jdGlvbicpO1xuXG4gIGlmICghdGhpcy5fZXZlbnRzKVxuICAgIHRoaXMuX2V2ZW50cyA9IHt9O1xuXG4gIC8vIFRvIGF2b2lkIHJlY3Vyc2lvbiBpbiB0aGUgY2FzZSB0aGF0IHR5cGUgPT09IFwibmV3TGlzdGVuZXJcIiEgQmVmb3JlXG4gIC8vIGFkZGluZyBpdCB0byB0aGUgbGlzdGVuZXJzLCBmaXJzdCBlbWl0IFwibmV3TGlzdGVuZXJcIi5cbiAgaWYgKHRoaXMuX2V2ZW50cy5uZXdMaXN0ZW5lcilcbiAgICB0aGlzLmVtaXQoJ25ld0xpc3RlbmVyJywgdHlwZSxcbiAgICAgICAgICAgICAgaXNGdW5jdGlvbihsaXN0ZW5lci5saXN0ZW5lcikgP1xuICAgICAgICAgICAgICBsaXN0ZW5lci5saXN0ZW5lciA6IGxpc3RlbmVyKTtcblxuICBpZiAoIXRoaXMuX2V2ZW50c1t0eXBlXSlcbiAgICAvLyBPcHRpbWl6ZSB0aGUgY2FzZSBvZiBvbmUgbGlzdGVuZXIuIERvbid0IG5lZWQgdGhlIGV4dHJhIGFycmF5IG9iamVjdC5cbiAgICB0aGlzLl9ldmVudHNbdHlwZV0gPSBsaXN0ZW5lcjtcbiAgZWxzZSBpZiAoaXNPYmplY3QodGhpcy5fZXZlbnRzW3R5cGVdKSlcbiAgICAvLyBJZiB3ZSd2ZSBhbHJlYWR5IGdvdCBhbiBhcnJheSwganVzdCBhcHBlbmQuXG4gICAgdGhpcy5fZXZlbnRzW3R5cGVdLnB1c2gobGlzdGVuZXIpO1xuICBlbHNlXG4gICAgLy8gQWRkaW5nIHRoZSBzZWNvbmQgZWxlbWVudCwgbmVlZCB0byBjaGFuZ2UgdG8gYXJyYXkuXG4gICAgdGhpcy5fZXZlbnRzW3R5cGVdID0gW3RoaXMuX2V2ZW50c1t0eXBlXSwgbGlzdGVuZXJdO1xuXG4gIC8vIENoZWNrIGZvciBsaXN0ZW5lciBsZWFrXG4gIGlmIChpc09iamVjdCh0aGlzLl9ldmVudHNbdHlwZV0pICYmICF0aGlzLl9ldmVudHNbdHlwZV0ud2FybmVkKSB7XG4gICAgdmFyIG07XG4gICAgaWYgKCFpc1VuZGVmaW5lZCh0aGlzLl9tYXhMaXN0ZW5lcnMpKSB7XG4gICAgICBtID0gdGhpcy5fbWF4TGlzdGVuZXJzO1xuICAgIH0gZWxzZSB7XG4gICAgICBtID0gRXZlbnRFbWl0dGVyLmRlZmF1bHRNYXhMaXN0ZW5lcnM7XG4gICAgfVxuXG4gICAgaWYgKG0gJiYgbSA+IDAgJiYgdGhpcy5fZXZlbnRzW3R5cGVdLmxlbmd0aCA+IG0pIHtcbiAgICAgIHRoaXMuX2V2ZW50c1t0eXBlXS53YXJuZWQgPSB0cnVlO1xuICAgICAgY29uc29sZS5lcnJvcignKG5vZGUpIHdhcm5pbmc6IHBvc3NpYmxlIEV2ZW50RW1pdHRlciBtZW1vcnkgJyArXG4gICAgICAgICAgICAgICAgICAgICdsZWFrIGRldGVjdGVkLiAlZCBsaXN0ZW5lcnMgYWRkZWQuICcgK1xuICAgICAgICAgICAgICAgICAgICAnVXNlIGVtaXR0ZXIuc2V0TWF4TGlzdGVuZXJzKCkgdG8gaW5jcmVhc2UgbGltaXQuJyxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZXZlbnRzW3R5cGVdLmxlbmd0aCk7XG4gICAgICBpZiAodHlwZW9mIGNvbnNvbGUudHJhY2UgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgLy8gbm90IHN1cHBvcnRlZCBpbiBJRSAxMFxuICAgICAgICBjb25zb2xlLnRyYWNlKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLm9uID0gRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5hZGRMaXN0ZW5lcjtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vbmNlID0gZnVuY3Rpb24odHlwZSwgbGlzdGVuZXIpIHtcbiAgaWYgKCFpc0Z1bmN0aW9uKGxpc3RlbmVyKSlcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ2xpc3RlbmVyIG11c3QgYmUgYSBmdW5jdGlvbicpO1xuXG4gIHZhciBmaXJlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGcoKSB7XG4gICAgdGhpcy5yZW1vdmVMaXN0ZW5lcih0eXBlLCBnKTtcblxuICAgIGlmICghZmlyZWQpIHtcbiAgICAgIGZpcmVkID0gdHJ1ZTtcbiAgICAgIGxpc3RlbmVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfVxuICB9XG5cbiAgZy5saXN0ZW5lciA9IGxpc3RlbmVyO1xuICB0aGlzLm9uKHR5cGUsIGcpO1xuXG4gIHJldHVybiB0aGlzO1xufTtcblxuLy8gZW1pdHMgYSAncmVtb3ZlTGlzdGVuZXInIGV2ZW50IGlmZiB0aGUgbGlzdGVuZXIgd2FzIHJlbW92ZWRcbkV2ZW50RW1pdHRlci5wcm90b3R5cGUucmVtb3ZlTGlzdGVuZXIgPSBmdW5jdGlvbih0eXBlLCBsaXN0ZW5lcikge1xuICB2YXIgbGlzdCwgcG9zaXRpb24sIGxlbmd0aCwgaTtcblxuICBpZiAoIWlzRnVuY3Rpb24obGlzdGVuZXIpKVxuICAgIHRocm93IFR5cGVFcnJvcignbGlzdGVuZXIgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7XG5cbiAgaWYgKCF0aGlzLl9ldmVudHMgfHwgIXRoaXMuX2V2ZW50c1t0eXBlXSlcbiAgICByZXR1cm4gdGhpcztcblxuICBsaXN0ID0gdGhpcy5fZXZlbnRzW3R5cGVdO1xuICBsZW5ndGggPSBsaXN0Lmxlbmd0aDtcbiAgcG9zaXRpb24gPSAtMTtcblxuICBpZiAobGlzdCA9PT0gbGlzdGVuZXIgfHxcbiAgICAgIChpc0Z1bmN0aW9uKGxpc3QubGlzdGVuZXIpICYmIGxpc3QubGlzdGVuZXIgPT09IGxpc3RlbmVyKSkge1xuICAgIGRlbGV0ZSB0aGlzLl9ldmVudHNbdHlwZV07XG4gICAgaWYgKHRoaXMuX2V2ZW50cy5yZW1vdmVMaXN0ZW5lcilcbiAgICAgIHRoaXMuZW1pdCgncmVtb3ZlTGlzdGVuZXInLCB0eXBlLCBsaXN0ZW5lcik7XG5cbiAgfSBlbHNlIGlmIChpc09iamVjdChsaXN0KSkge1xuICAgIGZvciAoaSA9IGxlbmd0aDsgaS0tID4gMDspIHtcbiAgICAgIGlmIChsaXN0W2ldID09PSBsaXN0ZW5lciB8fFxuICAgICAgICAgIChsaXN0W2ldLmxpc3RlbmVyICYmIGxpc3RbaV0ubGlzdGVuZXIgPT09IGxpc3RlbmVyKSkge1xuICAgICAgICBwb3NpdGlvbiA9IGk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChwb3NpdGlvbiA8IDApXG4gICAgICByZXR1cm4gdGhpcztcblxuICAgIGlmIChsaXN0Lmxlbmd0aCA9PT0gMSkge1xuICAgICAgbGlzdC5sZW5ndGggPSAwO1xuICAgICAgZGVsZXRlIHRoaXMuX2V2ZW50c1t0eXBlXTtcbiAgICB9IGVsc2Uge1xuICAgICAgbGlzdC5zcGxpY2UocG9zaXRpb24sIDEpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9ldmVudHMucmVtb3ZlTGlzdGVuZXIpXG4gICAgICB0aGlzLmVtaXQoJ3JlbW92ZUxpc3RlbmVyJywgdHlwZSwgbGlzdGVuZXIpO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUFsbExpc3RlbmVycyA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgdmFyIGtleSwgbGlzdGVuZXJzO1xuXG4gIGlmICghdGhpcy5fZXZlbnRzKVxuICAgIHJldHVybiB0aGlzO1xuXG4gIC8vIG5vdCBsaXN0ZW5pbmcgZm9yIHJlbW92ZUxpc3RlbmVyLCBubyBuZWVkIHRvIGVtaXRcbiAgaWYgKCF0aGlzLl9ldmVudHMucmVtb3ZlTGlzdGVuZXIpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMClcbiAgICAgIHRoaXMuX2V2ZW50cyA9IHt9O1xuICAgIGVsc2UgaWYgKHRoaXMuX2V2ZW50c1t0eXBlXSlcbiAgICAgIGRlbGV0ZSB0aGlzLl9ldmVudHNbdHlwZV07XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvLyBlbWl0IHJlbW92ZUxpc3RlbmVyIGZvciBhbGwgbGlzdGVuZXJzIG9uIGFsbCBldmVudHNcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApIHtcbiAgICBmb3IgKGtleSBpbiB0aGlzLl9ldmVudHMpIHtcbiAgICAgIGlmIChrZXkgPT09ICdyZW1vdmVMaXN0ZW5lcicpIGNvbnRpbnVlO1xuICAgICAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoa2V5KTtcbiAgICB9XG4gICAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoJ3JlbW92ZUxpc3RlbmVyJyk7XG4gICAgdGhpcy5fZXZlbnRzID0ge307XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBsaXN0ZW5lcnMgPSB0aGlzLl9ldmVudHNbdHlwZV07XG5cbiAgaWYgKGlzRnVuY3Rpb24obGlzdGVuZXJzKSkge1xuICAgIHRoaXMucmVtb3ZlTGlzdGVuZXIodHlwZSwgbGlzdGVuZXJzKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBMSUZPIG9yZGVyXG4gICAgd2hpbGUgKGxpc3RlbmVycy5sZW5ndGgpXG4gICAgICB0aGlzLnJlbW92ZUxpc3RlbmVyKHR5cGUsIGxpc3RlbmVyc1tsaXN0ZW5lcnMubGVuZ3RoIC0gMV0pO1xuICB9XG4gIGRlbGV0ZSB0aGlzLl9ldmVudHNbdHlwZV07XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmxpc3RlbmVycyA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgdmFyIHJldDtcbiAgaWYgKCF0aGlzLl9ldmVudHMgfHwgIXRoaXMuX2V2ZW50c1t0eXBlXSlcbiAgICByZXQgPSBbXTtcbiAgZWxzZSBpZiAoaXNGdW5jdGlvbih0aGlzLl9ldmVudHNbdHlwZV0pKVxuICAgIHJldCA9IFt0aGlzLl9ldmVudHNbdHlwZV1dO1xuICBlbHNlXG4gICAgcmV0ID0gdGhpcy5fZXZlbnRzW3R5cGVdLnNsaWNlKCk7XG4gIHJldHVybiByZXQ7XG59O1xuXG5FdmVudEVtaXR0ZXIubGlzdGVuZXJDb3VudCA9IGZ1bmN0aW9uKGVtaXR0ZXIsIHR5cGUpIHtcbiAgdmFyIHJldDtcbiAgaWYgKCFlbWl0dGVyLl9ldmVudHMgfHwgIWVtaXR0ZXIuX2V2ZW50c1t0eXBlXSlcbiAgICByZXQgPSAwO1xuICBlbHNlIGlmIChpc0Z1bmN0aW9uKGVtaXR0ZXIuX2V2ZW50c1t0eXBlXSkpXG4gICAgcmV0ID0gMTtcbiAgZWxzZVxuICAgIHJldCA9IGVtaXR0ZXIuX2V2ZW50c1t0eXBlXS5sZW5ndGg7XG4gIHJldHVybiByZXQ7XG59O1xuXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuZnVuY3Rpb24gaXNOdW1iZXIoYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnbnVtYmVyJztcbn1cblxuZnVuY3Rpb24gaXNPYmplY3QoYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnb2JqZWN0JyAmJiBhcmcgIT09IG51bGw7XG59XG5cbmZ1bmN0aW9uIGlzVW5kZWZpbmVkKGFyZykge1xuICByZXR1cm4gYXJnID09PSB2b2lkIDA7XG59XG4iLCIvLyBzaGltIGZvciB1c2luZyBwcm9jZXNzIGluIGJyb3dzZXJcblxudmFyIHByb2Nlc3MgPSBtb2R1bGUuZXhwb3J0cyA9IHt9O1xudmFyIHF1ZXVlID0gW107XG52YXIgZHJhaW5pbmcgPSBmYWxzZTtcbnZhciBjdXJyZW50UXVldWU7XG52YXIgcXVldWVJbmRleCA9IC0xO1xuXG5mdW5jdGlvbiBjbGVhblVwTmV4dFRpY2soKSB7XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBpZiAoY3VycmVudFF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBxdWV1ZSA9IGN1cnJlbnRRdWV1ZS5jb25jYXQocXVldWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICB9XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBkcmFpblF1ZXVlKCk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBkcmFpblF1ZXVlKCkge1xuICAgIGlmIChkcmFpbmluZykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciB0aW1lb3V0ID0gc2V0VGltZW91dChjbGVhblVwTmV4dFRpY2spO1xuICAgIGRyYWluaW5nID0gdHJ1ZTtcblxuICAgIHZhciBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgd2hpbGUobGVuKSB7XG4gICAgICAgIGN1cnJlbnRRdWV1ZSA9IHF1ZXVlO1xuICAgICAgICBxdWV1ZSA9IFtdO1xuICAgICAgICB3aGlsZSAoKytxdWV1ZUluZGV4IDwgbGVuKSB7XG4gICAgICAgICAgICBjdXJyZW50UXVldWVbcXVldWVJbmRleF0ucnVuKCk7XG4gICAgICAgIH1cbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgICAgICBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgfVxuICAgIGN1cnJlbnRRdWV1ZSA9IG51bGw7XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG59XG5cbnByb2Nlc3MubmV4dFRpY2sgPSBmdW5jdGlvbiAoZnVuKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYXJnc1tpIC0gMV0gPSBhcmd1bWVudHNbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcXVldWUucHVzaChuZXcgSXRlbShmdW4sIGFyZ3MpKTtcbiAgICBpZiAoIWRyYWluaW5nKSB7XG4gICAgICAgIHNldFRpbWVvdXQoZHJhaW5RdWV1ZSwgMCk7XG4gICAgfVxufTtcblxuLy8gdjggbGlrZXMgcHJlZGljdGlibGUgb2JqZWN0c1xuZnVuY3Rpb24gSXRlbShmdW4sIGFycmF5KSB7XG4gICAgdGhpcy5mdW4gPSBmdW47XG4gICAgdGhpcy5hcnJheSA9IGFycmF5O1xufVxuSXRlbS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZnVuLmFwcGx5KG51bGwsIHRoaXMuYXJyYXkpO1xufTtcbnByb2Nlc3MudGl0bGUgPSAnYnJvd3Nlcic7XG5wcm9jZXNzLmJyb3dzZXIgPSB0cnVlO1xucHJvY2Vzcy5lbnYgPSB7fTtcbnByb2Nlc3MuYXJndiA9IFtdO1xucHJvY2Vzcy52ZXJzaW9uID0gJyc7IC8vIGVtcHR5IHN0cmluZyB0byBhdm9pZCByZWdleHAgaXNzdWVzXG5wcm9jZXNzLnZlcnNpb25zID0ge307XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5wcm9jZXNzLm9uID0gbm9vcDtcbnByb2Nlc3MuYWRkTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5vbmNlID0gbm9vcDtcbnByb2Nlc3Mub2ZmID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBub29wO1xucHJvY2Vzcy5lbWl0ID0gbm9vcDtcblxucHJvY2Vzcy5iaW5kaW5nID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xuXG4vLyBUT0RPKHNodHlsbWFuKVxucHJvY2Vzcy5jd2QgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAnLycgfTtcbnByb2Nlc3MuY2hkaXIgPSBmdW5jdGlvbiAoZGlyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5wcm9jZXNzLnVtYXNrID0gZnVuY3Rpb24oKSB7IHJldHVybiAwOyB9O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxMy0yMDE0IEZhY2Vib29rLCBJbmMuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKlxuICovXG5cblwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIENvbnN0cnVjdHMgYW4gZW51bWVyYXRpb24gd2l0aCBrZXlzIGVxdWFsIHRvIHRoZWlyIHZhbHVlLlxuICpcbiAqIEZvciBleGFtcGxlOlxuICpcbiAqICAgdmFyIENPTE9SUyA9IGtleU1pcnJvcih7Ymx1ZTogbnVsbCwgcmVkOiBudWxsfSk7XG4gKiAgIHZhciBteUNvbG9yID0gQ09MT1JTLmJsdWU7XG4gKiAgIHZhciBpc0NvbG9yVmFsaWQgPSAhIUNPTE9SU1tteUNvbG9yXTtcbiAqXG4gKiBUaGUgbGFzdCBsaW5lIGNvdWxkIG5vdCBiZSBwZXJmb3JtZWQgaWYgdGhlIHZhbHVlcyBvZiB0aGUgZ2VuZXJhdGVkIGVudW0gd2VyZVxuICogbm90IGVxdWFsIHRvIHRoZWlyIGtleXMuXG4gKlxuICogICBJbnB1dDogIHtrZXkxOiB2YWwxLCBrZXkyOiB2YWwyfVxuICogICBPdXRwdXQ6IHtrZXkxOiBrZXkxLCBrZXkyOiBrZXkyfVxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBvYmpcbiAqIEByZXR1cm4ge29iamVjdH1cbiAqL1xudmFyIGtleU1pcnJvciA9IGZ1bmN0aW9uKG9iaikge1xuICB2YXIgcmV0ID0ge307XG4gIHZhciBrZXk7XG4gIGlmICghKG9iaiBpbnN0YW5jZW9mIE9iamVjdCAmJiAhQXJyYXkuaXNBcnJheShvYmopKSkge1xuICAgIHRocm93IG5ldyBFcnJvcigna2V5TWlycm9yKC4uLik6IEFyZ3VtZW50IG11c3QgYmUgYW4gb2JqZWN0LicpO1xuICB9XG4gIGZvciAoa2V5IGluIG9iaikge1xuICAgIGlmICghb2JqLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICByZXRba2V5XSA9IGtleTtcbiAgfVxuICByZXR1cm4gcmV0O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBrZXlNaXJyb3I7XG4iXX0=
