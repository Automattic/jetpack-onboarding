(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var AppDispatcher=require("../dispatcher/app-dispatcher"),JPSConstants=require("../constants/jetpack-start-constants"),DataActions={requestStarted:function(){AppDispatcher.dispatch({actionType:JPSConstants.SAVE_STARTED})},requestFinished:function(){AppDispatcher.dispatch({actionType:JPSConstants.SAVE_FINISHED})}};module.exports=DataActions;

},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23}],2:[function(require,module,exports){
var AppDispatcher=require("../dispatcher/app-dispatcher"),JPSConstants=require("../constants/jetpack-start-constants"),FlashActions={notice:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SET_FLASH,message:t,severity:JPSConstants.FLASH_SEVERITY_NOTICE})},error:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SET_FLASH,message:t,severity:JPSConstants.FLASH_SEVERITY_ERROR})},unset:function(){AppDispatcher.dispatch({actionType:JPSConstants.UNSET_FLASH})}};module.exports=FlashActions;

},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23}],3:[function(require,module,exports){
var AppDispatcher=require("../dispatcher/app-dispatcher"),JPSConstants=require("../constants/jetpack-start-constants"),Paths=require("../constants/jetpack-start-paths"),FlashActions=require("./flash-actions"),SiteActions=require("./site-actions"),WPAjax=require("../utils/wp-ajax"),SpinnerActions=require("./spinner-actions"),SetupProgressStore=require("../stores/setup-progress-store"),SiteStore=require("../stores/site-store"),SetupProgressActions={resetData:function(){WPAjax.post(JPS.site_actions.reset_data).fail(function(t){FlashActions.error("Failed to save data: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.RESET_DATA})},completeStep:function(t,e){var s=SetupProgressStore.getStepFromSlug(t);return AppDispatcher.dispatch({actionType:JPSConstants.STEP_COMPLETE,slug:t}),this._recordComplete(s,e)},completeAndNextStep:function(t,e){SpinnerActions.show("Loading"),this.completeStep(t,e).always(function(){AppDispatcher.dispatch({actionType:JPSConstants.STEP_NEXT}),SpinnerActions.hide()})},_recordComplete:function(t,e){return"undefined"==typeof e&&(e={}),e.completion=SetupProgressStore.getProgressPercent(),WPAjax.post(JPS.step_actions.complete,{step:t.slug,data:e}).fail(function(t){FlashActions.error(t)})},skipStep:function(){FlashActions.unset();var t=SetupProgressStore.getCurrentStep();t.skipped?AppDispatcher.dispatch({actionType:JPSConstants.STEP_SKIP}):(SpinnerActions.show("Loading"),WPAjax.post(JPS.step_actions.skip,{step:t.slug}).fail(function(t){FlashActions.error(t)}).always(function(){SpinnerActions.hide(),AppDispatcher.dispatch({actionType:JPSConstants.STEP_SKIP})}))},getStarted:function(){SpinnerActions.show("Loading"),WPAjax.post(JPS.step_actions.start).fail(function(t){FlashActions.error(t)}).always(function(){SpinnerActions.hide(),AppDispatcher.dispatch({actionType:JPSConstants.STEP_GET_STARTED})})},disableJPS:function(){SpinnerActions.show(""),WPAjax.post(JPS.step_actions.disable).fail(function(t){FlashActions.error(t)}).always(function(){window.location.reload()})},setCurrentStep:function(t){FlashActions.unset(),AppDispatcher.dispatch({actionType:JPSConstants.STEP_SELECT,slug:t})},selectNextStep:function(){FlashActions.unset(),AppDispatcher.dispatch({actionType:JPSConstants.STEP_NEXT})},submitTitleStep:function(){SiteActions.saveTitleAndDescription().done(function(){this.completeAndNextStep(Paths.SITE_TITLE_STEP_SLUG)}.bind(this))},submitLayoutStep:function(t){SiteActions.setLayout(t).done(function(){this.completeAndNextStep(Paths.LAYOUT_STEP_SLUG)}.bind(this))},submitJetpackJumpstart:function(){SiteActions.enableJumpstart().done(function(){this.completeStep(Paths.JETPACK_MODULES_STEP_SLUG)}.bind(this))},setActiveTheme:function(t){SiteActions.setActiveTheme(t).done(function(){this.completeStep(Paths.DESIGN_STEP_SLUG,{themeId:t.id})}.bind(this))},saveDesignStep:function(){this.completeAndNextStep(Paths.DESIGN_STEP_SLUG,{themeId:SiteStore.getActiveThemeId()})}};module.exports=SetupProgressActions;

},{"../constants/jetpack-start-constants":21,"../constants/jetpack-start-paths":22,"../dispatcher/app-dispatcher":23,"../stores/setup-progress-store":27,"../stores/site-store":28,"../utils/wp-ajax":31,"./flash-actions":2,"./site-actions":4,"./spinner-actions":5}],4:[function(require,module,exports){
var AppDispatcher=require("../dispatcher/app-dispatcher"),JPSConstants=require("../constants/jetpack-start-constants"),SiteStore=require("../stores/site-store"),FlashActions=require("./flash-actions.js"),SpinnerActions=require("./spinner-actions.js"),WPAjax=require("../utils/wp-ajax"),SiteActions={setTitle:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SITE_SET_TITLE,title:t})},setDescription:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SITE_SET_DESCRIPTION,description:t})},saveTitleAndDescription:function(){var t=SiteStore.getTitle(),e=SiteStore.getDescription();return WPAjax.post(JPS.site_actions.set_title,{title:t,description:e}).fail(function(t){FlashActions.error("Error setting title: "+t)}),jQuery("#wp-admin-bar-site-name .ab-item").html(t),AppDispatcher.dispatch({actionType:JPSConstants.SITE_SAVE_TITLE_AND_DESCRIPTION,title:t}),jQuery.Deferred().resolve()},_installTheme:function(t){return t.installed?jQuery.Deferred().resolve():(SpinnerActions.show("Installing '"+t.name+"'"),WPAjax.post(JPS.site_actions.install_theme,{themeId:t.id}).done(function(){t.installed=!0,AppDispatcher.dispatch({actionType:JPSConstants.SITE_INSTALL_THEME,theme:t})}).fail(function(t){FlashActions.error("Server error installing theme: "+t)}).always(function(){SpinnerActions.hide()}))},_activateTheme:function(t){WPAjax.post(JPS.site_actions.set_theme,{themeId:t.id}).fail(function(t){FlashActions.error("Server error setting theme: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.SITE_SET_THEME,themeId:t.id})},setActiveTheme:function(t){return this._installTheme(t).done(function(){this._activateTheme(t)}.bind(this)),jQuery.Deferred().resolve()},setLayout:function(t){return WPAjax.post(JPS.site_actions.set_layout,{layout:t}).fail(function(t){FlashActions.error("Error setting layout: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.SITE_SET_LAYOUT,layout:t}),jQuery.Deferred().resolve()},configureJetpack:function(t){return SpinnerActions.show("Connecting to WordPress.com"),WPAjax.post(JPS.site_actions.configure_jetpack,{return_to_step:t}).done(function(t){AppDispatcher.dispatch({actionType:JPSConstants.SITE_JETPACK_CONFIGURED}),t.next?window.location.replace(t.next):SpinnerActions.hide()}).fail(function(t){FlashActions.error("Error enabling Jetpack: "+t),SpinnerActions.hide()})},activateJetpackModule:function(t){return WPAjax.post(JPS.site_actions.activate_jetpack_modules,{modules:[t]}).fail(function(t){FlashActions.error("Error activating Jetpack module: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.SITE_JETPACK_MODULE_ENABLED,slug:t}),jQuery.Deferred().resolve()},deactivateJetpackModule:function(t){return WPAjax.post(JPS.site_actions.deactivate_jetpack_modules,{modules:[t]}).fail(function(t){FlashActions.error("Error deactivating Jetpack module: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.SITE_JETPACK_MODULE_DISABLED,slug:t}),jQuery.Deferred().resolve()},loadAllJetpackModules:function(){return 0===SiteStore.getJetpackAdditionalModules().length?WPAjax.post(JPS.site_actions.list_jetpack_modules).done(function(t){AppDispatcher.dispatch({actionType:JPSConstants.SITE_JETPACK_ADD_MODULES,modules:t})}).fail(function(t){FlashActions.error("Error fetching all Jetpack modules: "+t)}):jQuery.Deferred().resolve()},enableJumpstart:function(){return WPAjax.post(JPS.site_actions.activate_jetpack_modules,{modules:SiteStore.getJumpstartModuleSlugs()}).fail(function(t){FlashActions.error("Error activating Jetpack modules: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.SITE_JETPACK_JUMPSTART_ENABLED}),jQuery.Deferred().resolve()}};module.exports=SiteActions;

},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23,"../stores/site-store":28,"../utils/wp-ajax":31,"./flash-actions.js":2,"./spinner-actions.js":5}],5:[function(require,module,exports){
var AppDispatcher=require("../dispatcher/app-dispatcher"),JPSConstants=require("../constants/jetpack-start-constants"),SpinnerActions={show:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SHOW_SPINNER,message:t})},hide:function(){AppDispatcher.dispatch({actionType:JPSConstants.HIDE_SPINNER})},showAsync:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SHOW_ASYNC_SPINNER,message:t})},hideAsync:function(){AppDispatcher.dispatch({actionType:JPSConstants.HIDE_ASYNC_SPINNER})}};module.exports=SpinnerActions;

},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23}],6:[function(require,module,exports){
(function (global){
function getSiteState(){return{site_title:SiteStore.getTitle()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Button=require("@automattic/dops-react/js/components/button"),SiteStore=require("../stores/site-store"),WelcomeSection=require("./welcome-section"),SettingsItem=React.createClass({displayName:"SettingsItem",styles:{item:{padding:"1em",marginBottom:"1em",listStyle:"none",background:"#f5f5f5",border:"1px solid #ddd"},heading:{margin:0,fontSize:"1.2em",fontWeight:800}},render:function(){return React.createElement("li",{style:this.styles.item},React.createElement("h5",{style:this.styles.heading},this.props.title),this.props.children)}}),AdvancedSettingsStep=React.createClass({displayName:"AdvancedSettingsStep",styles:{wrapper:{marginLeft:0}},getInitialState:function(){return getSiteState()},componentDidMount:function(){SiteStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SiteStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getSiteState())},render:function(){return React.createElement(WelcomeSection,null,React.createElement("h3",null,"Let's launch ",React.createElement("em",null,this.state.site_title)),React.createElement("h4",null,"Advanced settings"),React.createElement("ul",{style:this.styles.wrapper},React.createElement(SettingsItem,{title:"Fine-tune your site's layout and appearance"},"Customize your site’s colors, fonts, sidebars and other settings.",React.createElement("br",null),React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.customize_url},"Customize my site"),"  ",React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.themes_url},"Browse and add themes")),("blog"==SiteStore.getLayout()||"site-blog"==SiteStore.getLayout())&&React.createElement(SettingsItem,{title:"Create your first blog post"},'An epic essay or just "Hello World!"',React.createElement("br",null),React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.new_blog_post_url},"Write a new blog post"),"  ",React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.manage_posts_url},"Manage posts")),React.createElement(SettingsItem,{title:"Create a static page"},'"About me", "Our Services" or anything else you can imagine.',React.createElement("br",null),React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.new_page_url},"Create a new page"),"  ",React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.manage_pages_url},"Manage pages")),React.createElement(SettingsItem,{title:"Extend your site's functionality"},"WordPress offers thousands of plugins from Jetpack and the WordPress community.",React.createElement("br",null),React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.plugins_url},"Manage plugins"),"  ",SiteStore.getJetpackConfigured()&&React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.jetpack_modules_url},"Manage Jetpack modules")),React.createElement(SettingsItem,{title:"Learn more"},React.createElement("a",{href:"https://codex.wordpress.org/First_Steps_With_WordPress"},"First Steps with WordPress")," - an online guide from the creators of WordPress")))}});module.exports=AdvancedSettingsStep;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../stores/site-store":28,"./welcome-section":19,"@automattic/dops-react/js/components/button":33}],7:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,ContentBox=React.createClass({displayName:"ContentBox",render:function(){return React.createElement("div",{className:"welcome__content_box"},this.props.children,React.createElement("div",{className:"clear"}))}});module.exports=ContentBox;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],8:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Dashicon=React.createClass({displayName:"Dashicon",propTypes:{name:React.PropTypes.string.isRequired,style:React.PropTypes.object,onMouseOver:React.PropTypes.func,onMouseOut:React.PropTypes.func},render:function(){return React.createElement("span",{style:this.props.style,onMouseOver:this.props.onMouseOver,onMouseOut:this.props.onMouseOut,className:"dashicons dashicons-"+this.props.name},this.props.children)}});module.exports=Dashicon;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],9:[function(require,module,exports){
(function (global){
function getThemeState(){return{themes:SiteStore.getThemes(),site_title:SiteStore.getTitle()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SiteStore=require("../stores/site-store"),SetupProgressActions=require("../actions/setup-progress-actions"),Tooltip=require("./tooltip"),WelcomeSection=require("./welcome-section"),ContentBox=require("./content-box"),styles=require("../styles"),Button=require("@automattic/dops-react/js/components/button"),DesignStep=React.createClass({displayName:"DesignStep",componentDidMount:function(){SiteStore.addChangeListener(this._onChange),this._loadPopularThemes()},componentWillUnmount:function(){SiteStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getThemeState())},getInitialState:function(){var e=getThemeState();return e.popularThemes=[],e},handleActivateTheme:function(e){e.preventDefault(),this.setState({tooltipTheme:null,tooltipPosition:null});var t=jQuery(e.currentTarget),n=t.data("theme-id"),o=this.findTheme(n),a=!o.installed,i=SetupProgressActions.setActiveTheme(o);a&&i.done(function(){this._loadPopularThemes()}.bind(this))},findTheme:function(e){return _.findWhere(this.state.themes,{id:e})||_.findWhere(this.state.popularThemes,{id:e})},handleContinue:function(e){e.preventDefault(),SetupProgressActions.saveDesignStep()},handleShowTooltip:function(e){e.preventDefault();var t=jQuery(e.currentTarget),n=this.findTheme(t.data("theme-id")),o=t.position(),a=t.outerWidth(),i=t.outerHeight(),l={top:o.top+i/2,left:o.left+a};this.setState({tooltipTheme:n,tooltipPosition:l})},handleHideTooltip:function(e){e.preventDefault(),this.setState({tooltipTheme:null,tooltipPosition:null})},handleGetPopularThemes:function(e){e.preventDefault(),this._loadPopularThemes()},_loadPopularThemes:function(){SiteStore.getPopularThemes().done(function(e){this.setState({popularThemes:e})}.bind(this))},render:function(){return React.createElement(WelcomeSection,{id:"welcome__design"},React.createElement("h3",null,"Let's launch ",React.createElement("em",null,this.state.site_title)),React.createElement("h4",null,"Pick a design"),React.createElement("p",{style:styles.content},'A "theme" controls the design of your site - colours, fonts and layout.'),React.createElement("p",{style:styles.content},"Click any theme below to choose it for your site. And don't worry - you can easily change this later."),React.createElement("p",{className:"submit"},React.createElement(Button,{color:"blue",onClick:this.handleContinue},"Next Step →")),React.createElement(ContentBox,null,React.createElement("h3",null,"Installed themes"),React.createElement("div",{className:"theme-browser rendered"},this._renderThemeList())),React.createElement(ContentBox,null,React.createElement("h3",null,"Popular themes from WordPress.org",React.createElement(Button,{color:"blue",style:{"float":"right"},onClick:this.handleGetPopularThemes},"Load more themes")),React.createElement("div",{className:"theme-browser rendered"},this._renderPopularThemeList())),React.createElement("div",{style:{clear:"both"}}),this.state.tooltipTheme&&this._renderTooltip())},_renderTooltip:function(){var e=this.state.tooltipTheme,t=this.state.tooltipPosition;return React.createElement(Tooltip,{left:t.left,top:t.top,width:320,title:e.name},React.createElement("p",null,"By ",e.author),React.createElement("p",{dangerouslySetInnerHTML:{__html:_.unescape(e.description)}}))},_renderTheme:function(e){return React.createElement("div",{key:e.id,className:"theme"+(e.active?" active":""),"data-theme-id":e.id,onClick:this.handleActivateTheme,onMouseEnter:this.handleShowTooltip,onMouseLeave:this.handleHideTooltip,"aria-describedby":e.id+"-action "+e.id+"-name"},e.screenshot?React.createElement("div",{className:"theme-screenshot"},React.createElement("img",{src:e.screenshot,alt:""})):React.createElement("div",{className:"theme-screenshot blank"}),!e.active&&React.createElement("span",{className:"more-details"},e.installed?"Click to select":"Click to install"),React.createElement("h3",{className:"theme-name",id:e.id+"-name"},React.createElement("span",null,e.active?"Selected:":"")," ",e.name))},_renderPopularThemeList:function(){return this.state.popularThemes.map(this._renderTheme)},_renderThemeList:function(){return this.state.themes.map(this._renderTheme)}});module.exports=DesignStep;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../stores/site-store":28,"../styles":30,"./content-box":7,"./tooltip":17,"./welcome-section":19,"@automattic/dops-react/js/components/button":33}],10:[function(require,module,exports){
(function (global){
function getFlashState(){return FlashStore.getFlash()}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,FlashStore=require("../stores/flash-store"),Flash=React.createClass({displayName:"Flash",componentDidMount:function(){FlashStore.addChangeListener(this._onChange)},componentWillUnmount:function(){FlashStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getFlashState())},getInitialState:function(){return getFlashState()},render:function(){return this.state.message?React.createElement("div",{className:this.state.severity+" updated"},this.state.message):null}});module.exports=Flash;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../stores/flash-store":26}],11:[function(require,module,exports){
(function (global){
function getSetupState(){return{}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SetupProgressStore=require("../stores/setup-progress-store"),SetupProgressActions=require("../actions/setup-progress-actions"),Button=require("@automattic/dops-react/js/components/button"),m=require("@automattic/dops-react/js/utils/m"),Radium=require("radium"),GetStarted=React.createClass({displayName:"GetStarted",componentDidMount:function(){SetupProgressStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SetupProgressStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getSetupState())},getInitialState:function(){return getSetupState()},handleGetStarted:function(e){e.preventDefault(),SetupProgressActions.getStarted()},handleNoThanks:function(e){e.preventDefault(),SetupProgressActions.disableJPS()},_isIE8:function(){jQuery("html").is(".ie8")},styles:{wrapper:{textAlign:"center",backgroundRepeat:"no-repeat",backgroundPosition:"center bottom",backgroundSize:"520px auto",position:"fixed",top:0,left:160,width:"100%",height:"100%",backgroundColor:"#fff",paddingTop:100,zIndex:999,"@media (max-width: 960px)":{left:36},"@media (max-width: 782px)":{left:0}},wrapperIE8:{backgroundImage:"none"},innerwrapper:{margin:"0 0 0 -160px","@media (max-width: 960px)":{margin:"0 0 0 -36px"},"@media (max-width: 782px)":{margin:"0"}},subhead:{margin:"20px 0 15px",color:"#666",fontSize:18,lineHeight:1.6,textAlign:"center","@media (max-width: 600px)":{marginBottom:15,fontSize:15},"@media (max-width: 320px)":{fontSize:13}},button:{borderRadius:6,fontFamily:"proxima-nova, 'Open Sans', Helvetica, sans-serif",fontSize:16,lineHeight:1,padding:"0.64286em 0.85714em 0.53571em"},greenButton:{borderWidth:"1px",borderStyle:"solid",borderColor:"rgb(62, 108, 32)",background:"rgb(81, 141, 42)",boxShadow:"rgb(62, 108, 32) 0px 3px 0px, rgba(0, 0, 0, 0.4) 0px 4px 3px",color:"#fff",":hover":{color:"#fff",background:"rgb(129, 168, 68)",borderColor:"rgb(129, 168, 68)"}},grayButton:{background:"linear-gradient(rgb(255, 255, 255), rgb(249, 249, 249))",boxShadow:"rgb(150, 150, 150) 0px 3px 0px, rgba(0, 0, 0, 0.4) 0px 4px 3px",color:"#333"}},render:function(){return React.createElement("div",{key:"welcome-intro",style:[this.styles.wrapper,this._isIE8()&&this.styles.wrapperIE8]},React.createElement("div",{key:"welcome-intro-innerwrapper",style:this.styles.innerwrapper},React.createElement("h3",{style:{fontSize:30,marginTop:30}},"Welcome to WordPress"),React.createElement("p",{style:this.styles.subhead},"Would you like help launching your site?"),React.createElement("p",null,React.createElement(Button,{style:m(this.styles.button,this.styles.greenButton),onClick:this.handleGetStarted},"Yes"),"   ",React.createElement(Button,{style:m(this.styles.button,this.styles.grayButton),onClick:this.handleNoThanks},"No thanks"))))}});module.exports=Radium(GetStarted);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../stores/setup-progress-store":27,"@automattic/dops-react/js/components/button":33,"@automattic/dops-react/js/utils/m":37,"radium":51}],12:[function(require,module,exports){
(function (global){
function getJetpackProgress(){return{jetpackConfigured:SiteStore.getJetpackConfigured()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SiteStore=require("../stores/site-store"),SiteActions=require("../actions/site-actions"),Paths=require("../constants/jetpack-start-paths"),JetpackJumpstartMenu=React.createClass({displayName:"JetpackJumpstartMenu",componentDidMount:function(){SiteStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SiteStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getJetpackProgress())},getInitialState:function(){return getJetpackProgress()},handleClickConnect:function(e){e.preventDefault(),SiteActions.configureJetpack(Paths.JETPACK_MODULES_STEP_SLUG)},style:{color:"black",fontSize:12,marginTop:5,marginLeft:20},primaryConnectBtn:{marginTop:10,marginBottom:20},render:function(){return React.createElement("div",{style:this.style},this.state.jetpackConfigured?React.createElement("div",null):React.createElement("div",null,"Boost traffic, enhance security, and improve performance with a connection to WordPress.com",React.createElement("br",null),React.createElement("a",{className:"button button-primary button-large",style:this.primaryConnectBtn,href:"#",onClick:this.handleClickConnect},"Connect to WordPress.com")))}});module.exports=JetpackJumpstartMenu;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/site-actions":4,"../constants/jetpack-start-paths":22,"../stores/site-store":28}],13:[function(require,module,exports){
(function (global){
function getJetpackState(){return{site_title:SiteStore.getTitle(),jetpackConfigured:SiteStore.getJetpackConfigured(),jumpstartEnabled:SiteStore.getJetpackJumpstartEnabled(),modulesEnabled:SiteStore.getActiveModuleSlugs()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Radium=require("radium"),SkipButton=require("./skip-button"),SiteStore=require("../stores/site-store"),SiteActions=require("../actions/site-actions"),Paths=require("../constants/jetpack-start-paths"),ContentBox=require("./content-box"),styles=require("../styles"),WelcomeSection=require("./welcome-section"),SetupProgressActions=require("../actions/setup-progress-actions"),SpinnerStore=require("../stores/spinner-store"),Button=require("@automattic/dops-react/js/components/button"),JetpackLogo=React.createClass({displayName:"JetpackLogo",styles:{jetpackLogoWrapper:{display:"block",textAlign:"center",height:70,color:"white",marginLeft:5,backgroundColor:"#81a844"},jetpackLogo:{display:"inline-block",position:"relative",width:214,marginRight:6,background:"url("+JPS.jetpack.logo_url+") center center no-repeat",backgroundSize:"183px auto",color:"#fff",fontWeight:"normal",padding:"5px 0px"},jetpackLogoName:{textIndent:-9999,visibility:"hidden"}},render:function(){return React.createElement("span",{style:[this.styles.jetpackLogoWrapper,this.props.style]},"Powered by",React.createElement("br",null),React.createElement("a",{href:"/wp-admin/admin.php?page=jetpack",title:"Jetpack",style:this.styles.jetpackLogo},React.createElement("span",{style:this.styles.jetpackLogoName},"Jetpack")))}});JetpackLogo=Radium(JetpackLogo);var JetpackJumpstart=React.createClass({displayName:"JetpackJumpstart",styles:{jetpackLogo:{"float":"right","@media (max-width: 782px)":{"float":"none",marginLeft:0}},jumpstartModule:{"float":"left",position:"relative",height:160,padding:10,"@media (min-width: 782px)":{width:"33%"}},jumpstartModuleDesc:{display:"block",marginTop:5,lineHeight:"150%"},overlayContent:{marginTop:10,marginBottom:10},overlayBefore:{display:"block",position:"absolute",width:"100%",height:"100%",backgroundColor:"rgba(0,0,0,0.2)"},overlay:{position:"absolute",top:0,left:0,width:"100%",height:"100%",minHeight:"100%",zIndex:700},overlayBody:{textAlign:"center",position:"absolute",borderRadius:3,boxShadow:"0 0 4px rgba(0,0,0,0.2)",zIndex:800,left:"50%",top:"50%",padding:15,transform:"translate(-50%,-50%)",width:"70%",backgroundColor:"#fff"},moreLink:{textAlign:"center"}},componentDidMount:function(){SiteStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SiteStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getJetpackState())},getInitialState:function(){var e=getJetpackState();return e.showMoreModules=!1,e},handleJetpackConnect:function(e){e.preventDefault(),SiteActions.configureJetpack(Paths.JETPACK_MODULES_STEP_SLUG)},handleChangeModuleStatus:function(e){var t=jQuery(e.currentTarget),a=t.data("module-slug");SiteStore.isJetpackModuleEnabled(a)?SiteActions.deactivateJetpackModule(a):SiteActions.activateJetpackModule(a)},handleEnableAllModules:function(e){e.preventDefault(),SiteActions.enableJumpstart()},handleNext:function(e){e.preventDefault(),SetupProgressActions.completeAndNextStep(Paths.JETPACK_MODULES_STEP_SLUG)},handleShowMoreModules:function(e){e.preventDefault(),SiteActions.loadAllJetpackModules().done(function(){this.setState({showMoreModules:!0})}.bind(this))},handleShowFewerModules:function(e){e.preventDefault(),this.setState({showMoreModules:!1})},_renderModule:function(e){var t=SiteStore.isJetpackModuleEnabled(e.slug),a="jp-module-"+e.slug;return React.createElement("div",{key:"modules-"+e.slug,style:this.styles.jumpstartModule},React.createElement("input",{id:a,type:"checkbox",checked:t,"data-module-slug":e.slug,onChange:this.handleChangeModuleStatus}),React.createElement("label",{htmlFor:a},React.createElement("strong",null,e.name)),React.createElement("div",{style:this.styles.jumpstartModuleDesc},React.createElement("div",{dangerouslySetInnerHTML:{__html:e.description}}),t&&e.configure_url&&React.createElement("div",null,React.createElement("a",{target:"_configure",href:e.configure_url},"configure"))))},render:function(){var e,t,a;this.state.jetpackConfigured||SpinnerStore.showing()||(e=React.createElement("div",{style:this.styles.overlayBefore}),t=React.createElement("div",{style:this.styles.overlay}),a=React.createElement("div",{style:this.styles.overlayBody},React.createElement("p",{style:this.styles.overlayContent},"These modules require a WordPress.com account - it's free!"),React.createElement(Button,{color:"green",size:"big",theme:"jetpack",onClick:this.handleJetpackConnect},"Connect to WordPress.com"),React.createElement("p",{style:this.styles.overlayContent},React.createElement(SkipButton,null))));var o=SiteStore.getJumpstartModules().map(this._renderModule),n=SiteStore.getJetpackAdditionalModules().map(this._renderModule);return React.createElement(WelcomeSection,null,React.createElement("h3",null,"Let's launch ",React.createElement("em",null,this.state.site_title)),React.createElement("h4",null,"Enable Jetpack features"),this.state.jetpackConfigured&&React.createElement("div",null,React.createElement(JetpackLogo,{style:this.styles.jetpackLogo}),React.createElement("p",{style:styles.content},"Congratulations! You've enabled Jetpack and unlocked dozens of powerful features."),React.createElement("p",{style:styles.content},"Check the boxes below to enable our most popular features."),React.createElement("div",{className:"clear"})),React.createElement("div",{className:"welcome__connect"},React.createElement("div",{style:{position:"relative"}},e,t,a,this.state.jetpackConfigured&&React.createElement("div",{className:"submit"},React.createElement(Button,{style:{"float":"right"},color:"blue",onClick:this.handleNext},"Next Step →"),React.createElement("div",{className:"clear"})),React.createElement(ContentBox,null,React.createElement("h3",null,"Popular features   ",React.createElement(Button,{disabled:this.state.jumpstartEnabled,color:"blue",onClick:this.handleEnableAllModules},this.state.jumpstartEnabled?"Enabled All":"Enable all (recommended)")),o),this.state.showMoreModules?React.createElement("p",{style:this.styles.moreLink},React.createElement("a",{href:"#",onClick:this.handleShowFewerModules},"hide additional features")):React.createElement("p",{style:this.styles.moreLink},React.createElement("a",{href:"#",onClick:this.handleShowMoreModules},"show additional features")),this.state.showMoreModules&&React.createElement(ContentBox,null,React.createElement("h3",null,"Additional modules"),n))))}});module.exports=Radium(JetpackJumpstart);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../actions/site-actions":4,"../constants/jetpack-start-paths":22,"../stores/site-store":28,"../stores/spinner-store":29,"../styles":30,"./content-box":7,"./skip-button":16,"./welcome-section":19,"@automattic/dops-react/js/components/button":33,"radium":51}],14:[function(require,module,exports){
(function (global){
function getSiteLayoutState(){return{site_title:SiteStore.getTitle(),layout:SiteStore.getLayout()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SiteStore=require("../stores/site-store"),Button=require("@automattic/dops-react/js/components/button"),WelcomeSection=require("./welcome-section"),styles=require("../styles"),SetupProgressActions=require("../actions/setup-progress-actions"),LayoutStep=React.createClass({displayName:"LayoutStep",componentDidMount:function(){SiteStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SiteStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getSiteLayoutState())},getInitialState:function(){return getSiteLayoutState()},handleSetLayout:function(e){this.setState({layout:jQuery(e.currentTarget).val()})},handleSubmit:function(e){e.preventDefault(),SetupProgressActions.submitLayoutStep(this.state.layout)},render:function(){return React.createElement(WelcomeSection,{id:"welcome__layout"},React.createElement("h3",null,"Let's launch ",React.createElement("em",null,this.state.site_title)),React.createElement("h4",null,"Select a Layout"),React.createElement("p",{style:styles.content},"WordPress can be a blog, a web site with a hierarchy of static pages, or a combination of the two."),React.createElement("form",{onSubmit:this.handleSubmit},React.createElement("label",null,React.createElement("input",{type:"radio",name:"site_layout",value:"website",checked:"website"===this.state.layout,onChange:this.handleSetLayout})," Static Website",React.createElement("p",{className:"description"},"A web site with a hierarchy of pages")),React.createElement("br",null),React.createElement("label",null,React.createElement("input",{type:"radio",name:"site_layout",value:"site-blog",checked:"site-blog"===this.state.layout,onChange:this.handleSetLayout})," Static Website with a blog",React.createElement("p",{className:"description"},"A web site with pages that also has a blog or news section")),React.createElement("br",null),React.createElement("label",null,React.createElement("input",{type:"radio",name:"site_layout",value:"blog",checked:"blog"===this.state.layout,onChange:this.handleSetLayout})," Just a blog",React.createElement("p",{className:"description"},"A web site that will constantly show new content (articles, photos, videos, etc.)")),React.createElement("p",{className:"submit"},React.createElement(Button,{color:"blue"},"Next Step →"))))}});module.exports=LayoutStep;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../stores/site-store":28,"../styles":30,"./welcome-section":19,"@automattic/dops-react/js/components/button":33}],15:[function(require,module,exports){
(function (global){
function getSiteTitleState(){return{title:SiteStore.getTitle(),description:SiteStore.getDescription()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SiteActions=require("../actions/site-actions"),SiteStore=require("../stores/site-store"),WelcomeSection=require("./welcome-section"),styles=require("../styles"),Button=require("@automattic/dops-react/js/components/button"),SetupProgressActions=require("../actions/setup-progress-actions"),SiteTitleStep=React.createClass({displayName:"SiteTitleStep",componentDidMount:function(){SiteStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SiteStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getSiteTitleState())},getInitialState:function(){return getSiteTitleState()},handleChangeTitle:function(e){SiteActions.setTitle(e.currentTarget.value)},handleChangeDescription:function(e){SiteActions.setDescription(e.currentTarget.value)},handleSubmit:function(e){e.preventDefault(),SetupProgressActions.submitTitleStep()},render:function(){return React.createElement(WelcomeSection,{id:"welcome__site-title"},React.createElement("h3",null,"Let's launch your new website"),React.createElement("h4",null,"Enter a Title and Description"),React.createElement("p",{style:styles.content},"Make your site stand out with a catchy name."),React.createElement("form",{onSubmit:this.handleSubmit},React.createElement("table",{className:"form-table"},React.createElement("tbody",null,React.createElement("tr",null,React.createElement("th",null,React.createElement("label",{htmlFor:"site_title"},"Site Title")),React.createElement("td",null,React.createElement("input",{type:"text",name:"site_title",id:"site-title",autoComplete:"off",onChange:this.handleChangeTitle,value:this.state.title,placeholder:"Site Title (this can be changed later)",required:!0}),React.createElement("p",{className:"description"},"The name of your site. This title appears at the top of pages and in search results."))),React.createElement("tr",null,React.createElement("th",null,React.createElement("label",{htmlFor:"site_description"},"Site Description")),React.createElement("td",null,React.createElement("input",{type:"text",name:"site_description",id:"site-description",autoComplete:"off",onChange:this.handleChangeDescription,value:this.state.description,placeholder:"Site Description",required:!0}),React.createElement("p",{className:"description"},'A motto or tagline. This appears below the title on your site, and next to the title in search results. Try to be brief and descriptive, e.g. "Your online bait and tackle store"'))))),React.createElement("p",{className:"submit"},React.createElement(Button,{color:"blue"},"Next Step →"))))}});module.exports=SiteTitleStep;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../actions/site-actions":4,"../stores/site-store":28,"../styles":30,"./welcome-section":19,"@automattic/dops-react/js/components/button":33}],16:[function(require,module,exports){
(function (global){
function getSetupProgress(){return{completed:SetupProgressStore.getCurrentStep().completed}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SetupProgressStore=require("../stores/setup-progress-store"),SetupProgressActions=require("../actions/setup-progress-actions"),SkipButton=React.createClass({displayName:"SkipButton",style:{color:"#bbb",fontSize:"90%",marginLeft:20,borderBottom:"1px dotted #bbb"},componentDidMount:function(){SetupProgressStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SetupProgressStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getSetupProgress())},getInitialState:function(){return getSetupProgress()},handleSkip:function(e){e.preventDefault(),SetupProgressActions.skipStep()},render:function(){var e=this.state.completed;return e?null:React.createElement("a",{style:this.style,href:"#",onClick:this.handleSkip},"Not now")}});module.exports=SkipButton;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../stores/setup-progress-store":27}],17:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Tooltip=React.createClass({displayName:"Tooltip",propTypes:{left:React.PropTypes.number.isRequired,top:React.PropTypes.number.isRequired,width:React.PropTypes.number.isRequired,title:React.PropTypes.string.isRequired},handleDismiss:function(e){e.preventDefault()},componentDidMount:function(){this._recomputePosition()},componentWillReceiveProps:function(){this._recomputePosition()},getInitialState:function(){return{realTop:this.props.top}},_recomputePosition:function(){var e=jQuery(React.findDOMNode(this.refs.wrapper));this.setState({realTop:this.props.top-e.outerHeight()/2})},render:function(){return React.createElement("div",{ref:"wrapper",className:"wp-pointer wp-pointer-left",style:{position:"absolute",width:this.props.width,top:this.state.realTop,left:this.props.left,zIndex:9999}},React.createElement("div",{className:"wp-pointer-content"},React.createElement("h3",null,this.props.title),React.createElement("p",null,this.props.children)),React.createElement("div",{className:"wp-pointer-arrow"},React.createElement("div",{className:"wp-pointer-arrow-inner"})))}});module.exports=Tooltip;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],18:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Radium=require("radium"),ProgressBar=require("@automattic/dops-react/js/components/progress-bar"),SetupProgressActions=require("../actions/setup-progress-actions"),Dashicon=require("./dashicon"),stepShape=React.PropTypes.shape({name:React.PropTypes.string.isRequired,slug:React.PropTypes.string}),WelcomeMenu=React.createClass({displayName:"WelcomeMenu",propTypes:{currentStep:stepShape.isRequired,clickable:React.PropTypes.bool,allSteps:React.PropTypes.arrayOf(stepShape).isRequired,progressPercent:React.PropTypes.number.isRequired},getDefaultProps:function(){return{clickable:!0}},styles:{wrapper:{"float":"right",width:"28%",height:"100%",background:"#fafafa",border:"1px solid #eee"},title:{margin:0,padding:12,overflow:"hidden",background:"#444",color:"#fff",fontSize:12,textTransform:"uppercase"},list:{margin:"13px 10px",listStyle:"none","@media (max-width: 600px)":{margin:"5px 4px"}},menuItem:{marginBottom:6,position:"relative",color:"#333",lineHeight:1.7,"@media (max-width: 782px)":{fontSize:"small"},"@media (max-width: 600px)":{fontSize:"smaller"}},menuItemCompleted:{color:"#4AB866"},icon:{fontSize:16,top:3,position:"relative"},menuItemLink:{color:"inherit",borderBottom:"1px dashed"},menuItemCurrent:{color:"#0074A2"}},selectStep:function(e){e.preventDefault();var t=jQuery(e.currentTarget).data("step-slug");SetupProgressActions.setCurrentStep(t)},render:function(){var e=this.props.allSteps.map(function(e){var t,r,s,a;return this.props.clickable&&this.props.currentStep&&(r=this.props.currentStep.slug==e.slug),t=!e["static"]&&this.props.clickable?React.createElement("a",{href:"#",style:this.styles.menuItemLink,"data-step-slug":e.slug,onClick:this.selectStep},e.name):e.name,e.menuView&&this.props.clickable&&(s=React.createElement(e.menuView,null)),a=e.completed?"yes":"arrow-right-alt2",React.createElement("li",{key:e.slug,style:[this.styles.menuItem,e.completed&&this.styles.menuItemCompleted,r&&this.styles.menuItemCurrent]},React.createElement(Dashicon,{style:this.styles.icon,name:a}),t," ",e.skipped?"(skipped)":null,s)}.bind(this));return React.createElement("div",{style:[this.styles.wrapper,this.props.style]},React.createElement("h3",{style:this.styles.title},React.createElement("span",{style:{"float":"left",marginRight:10}},"Your Progress"),React.createElement("div",null,React.createElement(ProgressBar,{style:{"float":"left"},progressPercent:this.props.progressPercent}))),React.createElement("ol",{style:this.styles.list},e))}});module.exports=Radium(WelcomeMenu);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"./dashicon":8,"@automattic/dops-react/js/components/progress-bar":34,"radium":51}],19:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,WelcomeSection=React.createClass({displayName:"WelcomeSection",render:function(){var e=this.props,t=function(e,t){var o={},r=Object.prototype.hasOwnProperty;if(null==e)throw new TypeError;for(var n in e)r.call(e,n)&&!r.call(t,n)&&(o[n]=e[n]);return o}(e,{});return React.createElement("div",React.__spread({},t,{className:"welcome__section"}),this.props.children)}});module.exports=WelcomeSection;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],20:[function(require,module,exports){
(function (global){
function getSetupProgress(){return{newUser:SetupProgressStore.isNewUser(),showSpinner:SpinnerStore.showing(),spinnerMessage:SpinnerStore.getMessage(),currentStep:SetupProgressStore.getCurrentStep(),allSteps:SetupProgressStore.getAllSteps(),progressPercent:SetupProgressStore.getProgressPercent()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,WelcomeMenu=require("./welcome-menu"),SetupProgressStore=require("../stores/setup-progress-store"),Reset=require("@automattic/dops-react/js/components/reset"),SetupProgressActions=require("../actions/setup-progress-actions"),Flash=require("./flash"),styles=require("../styles"),GetStarted=require("./get-started"),SpinnerStore=require("../stores/spinner-store"),SpinnerActions=require("../actions/spinner-actions"),DataStore=require("../stores/data-store"),WelcomeWidget=React.createClass({displayName:"WelcomeWidget",styles:{wrapper:{position:"relative"},loadingOverlay:{position:"absolute",top:0,left:0,width:"100%",height:"100%",minHeight:"100%",zIndex:999,backgroundColor:"rgba(255,255,255,0.6)"},loadingMessage:{position:"absolute",width:"50%",minWidth:300,borderRadius:2,padding:20,border:"1px solid black",backgroundColor:"white",textAlign:"center",left:"50%",top:100,transform:"translate(-50%,-50%)"},container:{"float":"left",width:"70%",padding:"0 10px"},menu:{marginTop:25}},componentDidMount:function(){SetupProgressStore.addChangeListener(this._onChange),SpinnerStore.addChangeListener(this._onSpinnerChange),DataStore.addChangeListener(this._onDataChange)},componentWillUnmount:function(){SetupProgressStore.removeChangeListener(this._onChange),SpinnerStore.removeChangeListener(this._onSpinnerChange),DataStore.removeChangeListener(this._onDataChange)},_onChange:function(){this.setState(getSetupProgress())},_onSpinnerChange:function(){this.setState({showSpinner:SpinnerStore.showing(),spinnerMessage:SpinnerStore.getMessage()})},_onDataChange:function(){this.setState({saving:DataStore.isSaving()})},getInitialState:function(){return getSetupProgress()},handleReset:function(e){e.preventDefault(),SetupProgressActions.resetData()},handleShowSpinner:function(e){e.preventDefault(),SpinnerActions.show("Testing spinner")},handleHideSpinner:function(e){e.preventDefault(),SpinnerActions.hide()},render:function(){return React.createElement(Reset,{css:styles.css},this._renderDebug(),React.createElement("div",{style:this.styles.wrapper},this._renderSpinner(),React.createElement("div",{style:this.styles.container},React.createElement(Flash,null),this._renderSection()),React.createElement(WelcomeMenu,{style:this.styles.menu,clickable:!this.state.newUser,currentStep:this.state.currentStep,allSteps:this.state.allSteps,progressPercent:this.state.progressPercent}),React.createElement("div",{className:"clear"})))},_renderSection:function(){return this.state.newUser?React.createElement(GetStarted,null):this._renderCurrentView()},_renderDebug:function(){return null},_renderSpinner:function(){return this.state.showSpinner?React.createElement("div",{style:this.styles.loadingOverlay},React.createElement("div",{style:this.styles.loadingMessage},React.createElement("img",{src:JPS.base_url+"/img/spinner-2x.gif",width:"16px",height:"16px"}),"  ",this.state.spinnerMessage)):null},_renderCurrentView:function(){return this.state.currentStep?React.createElement(this.state.currentStep.welcomeView,null):React.createElement("h3",null,"Nothing")}});module.exports=WelcomeWidget;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../actions/spinner-actions":5,"../stores/data-store":25,"../stores/setup-progress-store":27,"../stores/spinner-store":29,"../styles":30,"./flash":10,"./get-started":11,"./welcome-menu":18,"@automattic/dops-react/js/components/reset":35}],21:[function(require,module,exports){
var keyMirror=require("keymirror");module.exports=keyMirror({STEP_COMPLETE:null,STEP_GET_STARTED:null,STEP_SELECT:null,STEP_NEXT:null,STEP_SKIP:null,SITE_SET_TITLE:null,SITE_SET_DESCRIPTION:null,SITE_SAVE_TITLE_AND_DESCRIPTION:null,SITE_SET_THEME:null,SITE_INSTALL_THEME:null,SITE_JETPACK_CONFIGURED:null,SITE_JETPACK_MODULE_ENABLED:null,SITE_JETPACK_MODULE_DISABLED:null,SITE_JETPACK_JUMPSTART_ENABLED:null,SITE_JETPACK_ADD_MODULES:null,SITE_SET_LAYOUT:null,SAVE_STARTED:null,SAVE_FINISHED:null,SET_FLASH:null,UNSET_FLASH:null,FLASH_SEVERITY_NOTICE:null,FLASH_SEVERITY_ERROR:null,RESET_DATA:null,SHOW_SPINNER:null,HIDE_SPINNER:null});

},{"keymirror":43}],22:[function(require,module,exports){
module.exports={SITE_TITLE_STEP_SLUG:"title",LAYOUT_STEP_SLUG:"layout",TRAFFIC_STEP_SLUG:"traffic",STATS_MONITORING_STEP_SLUG:"stats-monitoring",DESIGN_STEP_SLUG:"design",ADVANCED_STEP_SLUG:"advanced",JETPACK_MODULES_STEP_SLUG:"jetpack"};

},{}],23:[function(require,module,exports){
var Dispatcher=require("flux").Dispatcher;module.exports=new Dispatcher;

},{"flux":40}],24:[function(require,module,exports){
var WelcomePanel=require("./welcome-panel");WelcomePanel();

},{"./welcome-panel":32}],25:[function(require,module,exports){
function incrementSaveCounter(){_currentSaves+=1}function decrementSaveCounter(){_currentSaves-=1}var AppDispatcher=require("../dispatcher/app-dispatcher"),EventEmitter=require("events").EventEmitter,JPSConstants=require("../constants/jetpack-start-constants"),_currentSaves=0,jpsTimeout,CHANGE_EVENT="change";jQuery(window).on("beforeunload",function(){return DataStore.isSaving()?(jpsTimeout=setTimeout(function(){},1e3),"Your site changes are still saving."):void 0}),jQuery(window).on("unload",function(){clearTimeout(jpsTimeout)});var DataStore=_.extend({},EventEmitter.prototype,{isSaving:function(){return _currentSaves>0},addChangeListener:function(e){this.on(CHANGE_EVENT,e)},removeChangeListener:function(e){this.removeListener(CHANGE_EVENT,e)},emitChange:function(){this.emit(CHANGE_EVENT)}});AppDispatcher.register(function(e){switch(e.actionType){case JPSConstants.SAVE_STARTED:incrementSaveCounter(),DataStore.emitChange();break;case JPSConstants.SAVE_FINISHED:decrementSaveCounter(),DataStore.emitChange()}}),module.exports=DataStore;

},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23,"events":38}],26:[function(require,module,exports){
function setFlash(e,t){message=e,severity=t}var AppDispatcher=require("../dispatcher/app-dispatcher"),EventEmitter=require("events").EventEmitter,JPSConstants=require("../constants/jetpack-start-constants"),CHANGE_EVENT="change",message,severity,FlashStore=_.extend({},EventEmitter.prototype,{getFlash:function(){var e;switch(severity){case JPSConstants.FLASH_SEVERITY_ERROR:e="error";break;case JPSConstants.FLASH_SEVERITY_NOTICE:e="notice"}return{message:message,severity:e}},addChangeListener:function(e){this.on(CHANGE_EVENT,e)},removeChangeListener:function(e){this.removeListener(CHANGE_EVENT,e)},emitChange:function(){this.emit(CHANGE_EVENT)}});AppDispatcher.register(function(e){switch(e.actionType){case JPSConstants.SET_FLASH:setFlash(e.message,e.severity),FlashStore.emitChange();break;case JPSConstants.UNSET_FLASH:setFlash(null,null),FlashStore.emitChange()}}),module.exports=FlashStore;

},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23,"events":38}],27:[function(require,module,exports){
function setSteps(e){e.forEach(function(e){"undefined"==typeof e.completed&&(e.completed=JPS.step_status[e.slug]&&JPS.step_status[e.slug].completed||!1),"undefined"==typeof e.skipped&&(e.skipped=JPS.step_status[e.slug]&&JPS.step_status[e.slug].skipped||!1),"undefined"==typeof e["static"]&&(e["static"]=!1),"undefined"==typeof e.neverSkip&&(e.neverSkip=!1),"undefined"==typeof e.includeInProgress&&(e.includeInProgress=!0)}),_steps=e,ensureValidStepSlug()}function setStarted(){_started=!0,selectNextPendingStep()}function complete(e){var t=getStepFromSlug(e);t.completed=!0,t.skipped=!1}function skip(){var e=currentStepSlug(),t=getStepFromSlug(e);t.skipped=!0,selectNextPendingStep()}function getStepFromSlug(e){var t=null;return _.each(_steps,function(n){n.slug===e&&(t=n)}),t}function ensureValidStepSlug(){var e=currentStepSlug();if(!e||!getStepFromSlug(e)){var t=getNextPendingStep();null!==t&&(window.location.hash="welcome/steps/"+t.slug)}}function selectNextPendingStep(){var e=getNextPendingStep();null!==e&&select(e.slug)}function getNextPendingStep(){var e=currentStepIndex();return e&&_steps[e+1]&&_steps[e+1].neverSkip===!0?_steps[e+1]:_.findWhere(_steps,{completed:!1,skipped:!1})}function currentStepSlug(){if(0===window.location.hash.indexOf("#welcome/steps")){var e=window.location.hash.split("/"),t=e[e.length-1];return t}return null}function currentStepIndex(){for(var e=currentStepSlug(),t=0;t<_steps.length;t++)if(_steps[t].slug===e)return t;return!1}function select(e){window.location.hash="welcome/steps/"+e,WPAjax.post(JPS.step_actions.view,{step:e},{quiet:!0})}function reset(){JPS.step_status={},_.where(_steps,{"static":!1}).forEach(function(e){e.completed=!1,e.skipped=!1}),_started=!1}var AppDispatcher=require("../dispatcher/app-dispatcher"),EventEmitter=require("events").EventEmitter,JPSConstants=require("../constants/jetpack-start-constants"),WPAjax=require("../utils/wp-ajax"),CHANGE_EVENT="change",_steps,_started=JPS.started,SetupProgressStore=_.extend({},EventEmitter.prototype,{init:function(e){setSteps(e)},getAllSteps:function(){return _steps},isNewUser:function(){return!_started},emitChange:function(){this.emit(CHANGE_EVENT)},getCurrentStep:function(){return getStepFromSlug(currentStepSlug())},getNextPendingStep:function(){return getNextPendingStep()},getStepFromSlug:function(e){return getStepFromSlug(e)},getProgressPercent:function(){var e=_.where(_steps,{includeInProgress:!0}).length,t=_.where(_steps,{includeInProgress:!0,completed:!0}).length,n=t/e*90+10,s=10*Math.round(n/10);return s},addChangeListener:function(e){this.on(CHANGE_EVENT,e)},removeChangeListener:function(e){this.removeListener(CHANGE_EVENT,e)}});AppDispatcher.register(function(e){switch(e.actionType){case JPSConstants.STEP_GET_STARTED:setStarted(),SetupProgressStore.emitChange();break;case JPSConstants.STEP_SELECT:select(e.slug),SetupProgressStore.emitChange();break;case JPSConstants.STEP_NEXT:selectNextPendingStep(),SetupProgressStore.emitChange();break;case JPSConstants.STEP_COMPLETE:complete(e.slug),SetupProgressStore.emitChange();break;case JPSConstants.RESET_DATA:reset(),SetupProgressStore.emitChange();break;case JPSConstants.STEP_SKIP:skip(),SetupProgressStore.emitChange()}}),module.exports=SetupProgressStore;

},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23,"../utils/wp-ajax":31,"events":38}],28:[function(require,module,exports){
function setTitle(e){JPS.bloginfo.name=e}function setDescription(e){JPS.bloginfo.description=e}function setActiveTheme(e){JPS.themes.forEach(function(t){t.id==e?t.active=!0:t.active=!1})}function installedTheme(e){JPS.themes.unshift(e),JPS.themes=JPS.themes.slice(0,3)}function setJetpackModuleActivated(e){-1===_.indexOf(JPS.jetpack.active_modules,e)&&JPS.jetpack.active_modules.push(e)}function setJetpackModuleDectivated(e){var t=_.indexOf(JPS.jetpack.active_modules,e);t>=0&&JPS.jetpack.active_modules.splice(t,1)}function setJetpackAdditionalModules(e){JPS.jetpack.additional_modules=_.filter(e,function(e){return-1==_.indexOf(JPS.jetpack.jumpstart_modules.map(function(e){return e.slug}),e.slug)})}function setLayout(e){layout=e}function setJetpackConfigured(){JPS.jetpack.configured=!0}function setJetpackJumpstartActivated(){JPS.jetpack.jumpstart_modules.forEach(function(e){setJetpackModuleActivated(e.slug)})}var AppDispatcher=require("../dispatcher/app-dispatcher"),EventEmitter=require("events").EventEmitter,JPSConstants=require("../constants/jetpack-start-constants"),WPAjax=require("../utils/wp-ajax"),CHANGE_EVENT="change",layout=JPS.steps.layout.current,SiteStore=_.extend({},EventEmitter.prototype,{getTitle:function(){return JPS.bloginfo.name},getDescription:function(){return JPS.bloginfo.description},getThemes:function(){return JPS.themes},getActiveThemeId:function(){for(var e=0;e<JPS.themes.length;e++){var t=JPS.themes[e];if(t.active)return t.id}return null},getJetpackConfigured:function(){return JPS.jetpack.configured},getActiveModuleSlugs:function(){return JPS.jetpack.active_modules},isJetpackModuleEnabled:function(e){return _.indexOf(JPS.jetpack.active_modules,e)>=0},getJetpackAdditionalModules:function(){return JPS.jetpack.additional_modules},getJumpstartModuleSlugs:function(){return JPS.jetpack.jumpstart_modules.map(function(e){return e.slug})},getJumpstartModules:function(){return JPS.jetpack.jumpstart_modules},getPopularThemes:function(){return WPAjax.post(JPS.site_actions.get_popular_themes,{},{quiet:!0})},getJetpackJumpstartEnabled:function(){for(var e=0;e<JPS.jetpack.jumpstart_modules.length;e++){var t=JPS.jetpack.jumpstart_modules[e];if(!this.isJetpackModuleEnabled(t.slug))return!1}return!0},getLayout:function(){return layout},emitChange:function(){this.emit(CHANGE_EVENT)},addChangeListener:function(e){this.on(CHANGE_EVENT,e)},removeChangeListener:function(e){this.removeListener(CHANGE_EVENT,e)}});AppDispatcher.register(function(e){switch(e.actionType){case JPSConstants.SITE_SET_TITLE:setTitle(e.title),SiteStore.emitChange();break;case JPSConstants.SITE_SET_DESCRIPTION:setDescription(e.description),SiteStore.emitChange();break;case JPSConstants.SITE_SET_THEME:setActiveTheme(e.themeId),SiteStore.emitChange();break;case JPSConstants.SITE_INSTALL_THEME:installedTheme(e.theme),SiteStore.emitChange();break;case JPSConstants.SITE_JETPACK_CONFIGURED:setJetpackConfigured(),SiteStore.emitChange();break;case JPSConstants.SITE_JETPACK_ADD_MODULES:setJetpackAdditionalModules(e.modules),SiteStore.emitChange();break;case JPSConstants.SITE_JETPACK_MODULE_ENABLED:setJetpackModuleActivated(e.slug),SiteStore.emitChange();break;case JPSConstants.SITE_JETPACK_MODULE_DISABLED:setJetpackModuleDectivated(e.slug),SiteStore.emitChange();break;case JPSConstants.SITE_JETPACK_JUMPSTART_ENABLED:setJetpackJumpstartActivated(),SiteStore.emitChange();break;case JPSConstants.SITE_SET_LAYOUT:setLayout(e.layout),SiteStore.emitChange()}}),module.exports=SiteStore;

},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23,"../utils/wp-ajax":31,"events":38}],29:[function(require,module,exports){
function show(e){spinnerEnabled=!0,spinnerMessage=e}function hide(){spinnerEnabled=!1,spinnerMessage=null}var AppDispatcher=require("../dispatcher/app-dispatcher"),EventEmitter=require("events").EventEmitter,JPSConstants=require("../constants/jetpack-start-constants"),CHANGE_EVENT="change",spinnerEnabled=!1,spinnerMessage=null,SpinnerStore=_.extend({},EventEmitter.prototype,{showing:function(){return spinnerEnabled},getMessage:function(){return spinnerMessage},addChangeListener:function(e){this.on(CHANGE_EVENT,e)},removeChangeListener:function(e){this.removeListener(CHANGE_EVENT,e)},emitChange:function(){this.emit(CHANGE_EVENT)}});AppDispatcher.register(function(e){switch(e.actionType){case JPSConstants.SHOW_SPINNER:show(e.message),SpinnerStore.emitChange();break;case JPSConstants.HIDE_SPINNER:hide(),SpinnerStore.emitChange()}}),module.exports=SpinnerStore;

},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23,"events":38}],30:[function(require,module,exports){
module.exports={h3:{fontWeight:"normal"},content:{fontSize:"larger",color:"#777",lineHeight:1.5,margin:"1em 0"},css:{h4:{marginBottom:10},h5:{marginTop:0,fontSize:"1em",fontWeight:400},"input, select":{margin:1,padding:"3px 5px"},'input[type="text"]':{width:"100%"},".submit":{margin:"0px !important",padding:"5px 5px !important",backgroundColor:"#EEE",textAlign:"right"}}};

},{}],31:[function(require,module,exports){
var DataActions=require("../actions/data-actions"),WPAjax=function(){return{post:function(e,t,n){n="undefined"!=typeof n?n:{},t="undefined"!=typeof t?t:{};var a=_.extend(t,{action:e,nonce:JPS.nonce}),r=jQuery.Deferred();return n.quiet||DataActions.requestStarted(),jQuery.post(ajaxurl,a).success(function(e){e.success?r.resolve(e.data):r.reject(e.data)}).fail(function(){r.reject("Server error")}).always(function(){n.quiet||DataActions.requestFinished()}),r}}}();module.exports=WPAjax;

},{"../actions/data-actions":1}],32:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,WelcomeWidget=require("./components/welcome-widget"),Paths=require("./constants/jetpack-start-paths"),SetupProgressStore=require("./stores/setup-progress-store");module.exports=function(){jQuery(document).ready(function(){SetupProgressStore.init([{name:"Site title",slug:Paths.SITE_TITLE_STEP_SLUG,welcomeView:require("./components/site-title-step")},{name:"Pick a layout",slug:Paths.LAYOUT_STEP_SLUG,welcomeView:require("./components/layout-step")},{name:"Pick a design",slug:Paths.DESIGN_STEP_SLUG,welcomeView:require("./components/design-step")},{name:"Enable Jetpack",slug:Paths.JETPACK_MODULES_STEP_SLUG,neverSkip:!0,welcomeView:require("./components/jetpack-jumpstart-step"),menuView:require("./components/jetpack-jumpstart-menu")},{name:"Advanced settings",slug:Paths.ADVANCED_STEP_SLUG,welcomeView:require("./components/advanced-settings-step"),includeInProgress:!1}]),React.render(React.createElement(WelcomeWidget,{}),document.getElementById("jps-welcome-panel"))})};

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./components/advanced-settings-step":6,"./components/design-step":9,"./components/jetpack-jumpstart-menu":12,"./components/jetpack-jumpstart-step":13,"./components/layout-step":14,"./components/site-title-step":15,"./components/welcome-widget":20,"./constants/jetpack-start-paths":22,"./stores/setup-progress-store":27}],33:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,styles=require("../styles"),Radium=require("radium"),Button=React.createClass({displayName:"Button",propTypes:{size:React.PropTypes.oneOf(["tiny","normal","big"]),color:React.PropTypes.oneOf(["gray","blue","green"]),theme:React.PropTypes.oneOf(["wp","jetpack"]),inline:React.PropTypes.bool,onClick:React.PropTypes.func,disabled:React.PropTypes.bool,href:React.PropTypes.string},getDefaultProps:function(){return{size:"normal",inline:!0,color:"gray",theme:"wp",disabled:!1}},handleCallbackHref:function(e){e.preventDefault(),window.location=this.props.href},styles:{basic:{borderRadius:3,boxShadow:"inset 0 1px 0 rgba(255, 255, 255, 0.3)",borderWidth:1,borderStyle:"solid",cursor:"pointer",display:"block",fontSize:14,fontWeight:"bold",padding:"10px 20px",textAlign:"center",textDecoration:"none",WebkitFontSmoothing:"antialiased",transition:"background 0.2s"},sizes:{tiny:{fontSize:10,padding:"2px 10px"},normal:{fontSize:13,padding:"5px 10px"},big:{fontSize:16,padding:"20px 40px"}},colors:{gray:{background:"linear-gradient(#fff, #f9f9f9)",borderColor:styles.colors.lightGray,color:styles.colors.darkGray,":hover":{color:styles.colors.gray}},blue:{background:styles.colors.blue,borderColor:"rgba(0,0,0,0.6)",color:"white",":hover":{background:styles.colors.lighterBlue}},green:{background:styles.colors.green,color:"white",borderColor:"rgba(0,0,0,0.6)",":hover":{background:styles.colors.lighterGreen}}},themes:{wp:{},jetpack:{padding:"18px 24px 15px",borderRadius:6,borderStyle:"none",boxShadow:"0 6px 0 #3e6c20,0 6px 3px rgba(0,0,0,0.4)"}},inline:{display:"inline-block"},disabled:{background:"#f9f9f9",borderColor:styles.colors.lightGray,color:styles.colors.lightGray,":hover":{background:"#f9f9f9",borderColor:styles.colors.lightGray,color:styles.colors.lightGray}}},render:function(){var e,o=this.props,r=o.size,t=o.color,l=o.inline,s=o.onClick,i=o.theme,n=o.href,a=function(e,o){var r={},t=Object.prototype.hasOwnProperty;if(null==e)throw new TypeError;for(var l in e)t.call(e,l)&&!t.call(o,l)&&(r[l]=e[l]);return r}(o,{size:1,color:1,inline:1,onClick:1,theme:1,href:1}),c=[this.styles.basic,this.styles.sizes[r],this.styles.colors[t],this.styles.themes[i],this.props.disabled&&this.styles.disabled,l&&this.styles.inline,this.props.style];return e=n&&!s?this.handleCallbackHref:s,React.createElement("button",React.__spread({},a,{style:c,onClick:e,onMouseOver:this.handleMouseOver,onMouseOut:this.handleMouseOut}),this.props.children)}});module.exports=Radium(Button);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../styles":36,"radium":51}],34:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Radium=require("radium"),ProgressBar=React.createClass({displayName:"ProgressBar",propTypes:{style:React.PropTypes.object,progressPercent:React.PropTypes.number.isRequired},styles:{wrapper:{fontWeight:400,fontSize:"80%"},progress:{background:"#4ab866",width:"0%",transition:"width 0.5s",display:"block",height:"100%"},bar:{display:"inline-block",width:80,height:12,margin:"0 8px -2px 0",padding:2,borderRadius:2,background:"#f5f5f5"}},render:function(){return React.createElement("div",{style:[this.styles.wrapper,this.props.style]},React.createElement("div",{style:this.styles.bar},React.createElement("span",{style:[this.styles.progress,{width:this.props.progressPercent+"%"}]})),this.props.progressPercent,"% complete")}});module.exports=Radium(ProgressBar);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"radium":51}],35:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Radium=require("radium"),m=require("../utils/m"),idCounter=0,Reset=React.createClass({displayName:"Reset",propTypes:{css:React.PropTypes.object},style:{resets:{"*":{boxSizing:"border-box"},"div, ul, ol, li, h1, h2, h3, h4, h5, h6, form, fieldset, legend, input, button, textarea, p, blockquote, th, td":{margin:0,padding:0},img:{border:"none",maxWidth:"100%"},td:{verticalAlign:"top"},".slideDown-enter":{overflowY:"hidden",maxHeight:0,transition:"all .5s ease-out"},".slideDown-enter-active":{overflowY:"hidden",maxHeight:400},".slideDown-leave":{overflowY:"hidden",maxHeight:400,transition:"all .5s ease-out"},".slideDown-leave-active":{overflowY:"hidden",maxHeight:0},".slideRTL-enter":{position:"absolute",left:"100%",transition:"all .2s linear"},".slideRTL-enter-active":{position:"absolute",left:"0%"},".slideRTL-leave":{position:"absolute",left:"0%",transition:"all .2s linear"},".slideRTL-leave-active":{position:"absolute",left:"-100%"},".slideLTR-enter":{position:"absolute",left:"-100%",transition:"all .2s linear"},".slideLTR-enter-active":{position:"absolute",left:"0%"},".slideLTR-leave":{position:"absolute",left:"0%",transition:"all .2s linear"},".slideLTR-leave-active":{position:"absolute",left:"100%"}}},render:function(){var e=this.props,t=function(e,t){var i={},l=Object.prototype.hasOwnProperty;if(null==e)throw new TypeError;for(var o in e)l.call(e,o)&&!l.call(t,o)&&(i[o]=e[o]);return i}(e,{}),i=this._generateId();return React.createElement("div",React.__spread({id:i},t),React.createElement(Radium.Style,{scopeSelector:"#"+i,rules:m(this.style.resets,this.props.css)}),this.props.children)},_generateId:function(){return"dopsid"+idCounter++}});module.exports=Reset;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../utils/m":37,"radium":51}],36:[function(require,module,exports){
var styles={right:{"float":"right"},left:{"float":"left"},third:{width:"33%"},full:{width:"100%"},half:{width:"48%"},hidden:{display:"none"},clear:{clear:"both",display:"block"},accountStatus:{textTransform:"capitalize"},accountStatusNoticon:{borderRadius:"50%",width:16,height:16,marginRight:10,color:"#fff",background:"#81bf16"},box:{borderRadius:2,padding:"5px 10px",background:"#f5f5f5"},light:{color:"#999"},colors:{akismetGreen:"#5e8e14",blue:"#029dd6",lighterBlue:"#13AEE7",black:"#333",darkGray:"#444",gray:"#787878",lightGray:"#bbb",veryLightGray:"#eee",offWhite:"#f9f9f9",accountActive:"#81bf16",accountInactive:"#bbb",green:"#518d2a",lighterGreen:"#57972d"},fonts:{sans:'Open Sans, "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif',serif:"Merriweather, Georgia, serif",mono:'"Courier New", Courier, monospace'},input:{width:"100%",boxShadow:"none",background:"#fff",border:"1px solid #d5d5d5",fontSize:12,padding:"8px 10px"},select:{borderRadius:3,backgroundColor:"#fff",fontSize:12,height:35,width:"100%",border:"1px solid #d5d5d5",padding:"3px 5px",minWidth:0},checkbox:{marginRight:10},errorField:{border:"1px solid #dd3d36"},errorLabel:{border:"1px solid #dd3d36",color:"#a00",display:"block",fontSize:12,margin:"5px 0 0 0",padding:5}};styles.css={"> *":{font:"14px/1.5 "+styles.fonts.sans,color:styles.colors.black},a:{color:styles.colors.blue,textDecoration:"none"},"a:hover":{textDecoration:"underline"},h1:{fontSize:34},h2:{color:styles.colors.gray,fontSize:16},h3:{fontSize:18},"h1, h2, h3":{fontFamily:styles.fonts.serif,fontWeight:500}},module.exports=styles;

},{}],37:[function(require,module,exports){
module.exports=function(){for(var e={},r=0;r<arguments.length;++r)arguments[r]&&jQuery.extend(e,arguments[r]);return e};

},{}],38:[function(require,module,exports){
function EventEmitter(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function isFunction(e){return"function"==typeof e}function isNumber(e){return"number"==typeof e}function isObject(e){return"object"==typeof e&&null!==e}function isUndefined(e){return void 0===e}module.exports=EventEmitter,EventEmitter.EventEmitter=EventEmitter,EventEmitter.prototype._events=void 0,EventEmitter.prototype._maxListeners=void 0,EventEmitter.defaultMaxListeners=10,EventEmitter.prototype.setMaxListeners=function(e){if(!isNumber(e)||0>e||isNaN(e))throw TypeError("n must be a positive number");return this._maxListeners=e,this},EventEmitter.prototype.emit=function(e){var t,n,s,i,r,o;if(this._events||(this._events={}),"error"===e&&(!this._events.error||isObject(this._events.error)&&!this._events.error.length)){if(t=arguments[1],t instanceof Error)throw t;throw TypeError('Uncaught, unspecified "error" event.')}if(n=this._events[e],isUndefined(n))return!1;if(isFunction(n))switch(arguments.length){case 1:n.call(this);break;case 2:n.call(this,arguments[1]);break;case 3:n.call(this,arguments[1],arguments[2]);break;default:for(s=arguments.length,i=new Array(s-1),r=1;s>r;r++)i[r-1]=arguments[r];n.apply(this,i)}else if(isObject(n)){for(s=arguments.length,i=new Array(s-1),r=1;s>r;r++)i[r-1]=arguments[r];for(o=n.slice(),s=o.length,r=0;s>r;r++)o[r].apply(this,i)}return!0},EventEmitter.prototype.addListener=function(e,t){var n;if(!isFunction(t))throw TypeError("listener must be a function");if(this._events||(this._events={}),this._events.newListener&&this.emit("newListener",e,isFunction(t.listener)?t.listener:t),this._events[e]?isObject(this._events[e])?this._events[e].push(t):this._events[e]=[this._events[e],t]:this._events[e]=t,isObject(this._events[e])&&!this._events[e].warned){var n;n=isUndefined(this._maxListeners)?EventEmitter.defaultMaxListeners:this._maxListeners,n&&n>0&&this._events[e].length>n&&(this._events[e].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[e].length),"function"==typeof console.trace&&console.trace())}return this},EventEmitter.prototype.on=EventEmitter.prototype.addListener,EventEmitter.prototype.once=function(e,t){function n(){this.removeListener(e,n),s||(s=!0,t.apply(this,arguments))}if(!isFunction(t))throw TypeError("listener must be a function");var s=!1;return n.listener=t,this.on(e,n),this},EventEmitter.prototype.removeListener=function(e,t){var n,s,i,r;if(!isFunction(t))throw TypeError("listener must be a function");if(!this._events||!this._events[e])return this;if(n=this._events[e],i=n.length,s=-1,n===t||isFunction(n.listener)&&n.listener===t)delete this._events[e],this._events.removeListener&&this.emit("removeListener",e,t);else if(isObject(n)){for(r=i;r-->0;)if(n[r]===t||n[r].listener&&n[r].listener===t){s=r;break}if(0>s)return this;1===n.length?(n.length=0,delete this._events[e]):n.splice(s,1),this._events.removeListener&&this.emit("removeListener",e,t)}return this},EventEmitter.prototype.removeAllListeners=function(e){var t,n;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[e]&&delete this._events[e],this;if(0===arguments.length){for(t in this._events)"removeListener"!==t&&this.removeAllListeners(t);return this.removeAllListeners("removeListener"),this._events={},this}if(n=this._events[e],isFunction(n))this.removeListener(e,n);else for(;n.length;)this.removeListener(e,n[n.length-1]);return delete this._events[e],this},EventEmitter.prototype.listeners=function(e){var t;return t=this._events&&this._events[e]?isFunction(this._events[e])?[this._events[e]]:this._events[e].slice():[]},EventEmitter.listenerCount=function(e,t){var n;return n=e._events&&e._events[t]?isFunction(e._events[t])?1:e._events[t].length:0};

},{}],39:[function(require,module,exports){
function cleanUpNextTick(){draining=!1,currentQueue.length?queue=currentQueue.concat(queue):queueIndex=-1,queue.length&&drainQueue()}function drainQueue(){if(!draining){var e=setTimeout(cleanUpNextTick);draining=!0;for(var n=queue.length;n;){for(currentQueue=queue,queue=[];++queueIndex<n;)currentQueue[queueIndex].run();queueIndex=-1,n=queue.length}currentQueue=null,draining=!1,clearTimeout(e)}}function Item(e,n){this.fun=e,this.array=n}function noop(){}var process=module.exports={},queue=[],draining=!1,currentQueue,queueIndex=-1;process.nextTick=function(e){var n=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)n[r-1]=arguments[r];queue.push(new Item(e,n)),1!==queue.length||draining||setTimeout(drainQueue,0)},Item.prototype.run=function(){this.fun.apply(null,this.array)},process.title="browser",process.browser=!0,process.env={},process.argv=[],process.version="",process.versions={},process.on=noop,process.addListener=noop,process.once=noop,process.off=noop,process.removeListener=noop,process.removeAllListeners=noop,process.emit=noop,process.binding=function(e){throw new Error("process.binding is not supported")},process.cwd=function(){return"/"},process.chdir=function(e){throw new Error("process.chdir is not supported")},process.umask=function(){return 0};

},{}],40:[function(require,module,exports){
module.exports.Dispatcher=require("./lib/Dispatcher");

},{"./lib/Dispatcher":41}],41:[function(require,module,exports){
(function (process){
"use strict";function _classCallCheck(i,t){if(!(i instanceof t))throw new TypeError("Cannot call a class as a function")}exports.__esModule=!0;var invariant=require("fbjs/lib/invariant"),_prefix="ID_",Dispatcher=function(){function i(){_classCallCheck(this,i),this._callbacks={},this._isDispatching=!1,this._isHandled={},this._isPending={},this._lastID=1}return i.prototype.register=function(i){var t=_prefix+this._lastID++;return this._callbacks[t]=i,t},i.prototype.unregister=function(i){this._callbacks[i]?void 0:"production"!==process.env.NODE_ENV?invariant(!1,"Dispatcher.unregister(...): `%s` does not map to a registered callback.",i):invariant(!1),delete this._callbacks[i]},i.prototype.waitFor=function(i){this._isDispatching?void 0:"production"!==process.env.NODE_ENV?invariant(!1,"Dispatcher.waitFor(...): Must be invoked while dispatching."):invariant(!1);for(var t=0;t<i.length;t++){var s=i[t];this._isPending[s]?this._isHandled[s]?void 0:"production"!==process.env.NODE_ENV?invariant(!1,"Dispatcher.waitFor(...): Circular dependency detected while waiting for `%s`.",s):invariant(!1):(this._callbacks[s]?void 0:"production"!==process.env.NODE_ENV?invariant(!1,"Dispatcher.waitFor(...): `%s` does not map to a registered callback.",s):invariant(!1),this._invokeCallback(s))}},i.prototype.dispatch=function(i){this._isDispatching?"production"!==process.env.NODE_ENV?invariant(!1,"Dispatch.dispatch(...): Cannot dispatch in the middle of a dispatch."):invariant(!1):void 0,this._startDispatching(i);try{for(var t in this._callbacks)this._isPending[t]||this._invokeCallback(t)}finally{this._stopDispatching()}},i.prototype.isDispatching=function(){return this._isDispatching},i.prototype._invokeCallback=function(i){this._isPending[i]=!0,this._callbacks[i](this._pendingPayload),this._isHandled[i]=!0},i.prototype._startDispatching=function(i){for(var t in this._callbacks)this._isPending[t]=!1,this._isHandled[t]=!1;this._pendingPayload=i,this._isDispatching=!0},i.prototype._stopDispatching=function(){delete this._pendingPayload,this._isDispatching=!1},i}();module.exports=Dispatcher;

}).call(this,require('_process'))

},{"_process":39,"fbjs/lib/invariant":42}],42:[function(require,module,exports){
(function (process){
"use strict";var invariant=function(r,e,n,i,o,a,t,s){if("production"!==process.env.NODE_ENV&&void 0===e)throw new Error("invariant requires an error message argument");if(!r){var u;if(void 0===e)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var v=[n,i,o,a,t,s],d=0;u=new Error("Invariant Violation: "+e.replace(/%s/g,function(){return v[d++]}))}throw u.framesToPop=1,u}};module.exports=invariant;

}).call(this,require('_process'))

},{"_process":39}],43:[function(require,module,exports){
"use strict";var keyMirror=function(r){var e,o={};if(!(r instanceof Object)||Array.isArray(r))throw new Error("keyMirror(...): Argument must be an object.");for(e in r)r.hasOwnProperty(e)&&(o[e]=e);return o};module.exports=keyMirror;

},{}],44:[function(require,module,exports){
(function (global){
"use strict";var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Style=require("./style.js"),printStyles=require("../print-styles.js"),PrintStyle=React.createClass({displayName:"PrintStyle",getInitialState:function(){return this._getStylesState()},componentDidMount:function(){this.subscription=printStyles.subscribe(this._onChange)},componentWillUnmount:function(){this.subscription.remove()},_onChange:function(){this.setState(this._getStylesState())},_getStylesState:function(){return{styles:printStyles.getPrintStyles()}},render:function(){return React.createElement(Style,{rules:{mediaQueries:{print:this.state.styles}}})}});module.exports=PrintStyle;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../print-styles.js":55,"./style.js":45}],45:[function(require,module,exports){
(function (global){
"use strict";var createMarkupForStyles=require("../create-markup-for-styles"),Prefixer=require("../prefixer"),React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,buildCssString=function(e,t,r){if(t&&r){var i=Prefixer.getPrefixedStyle(e,r,"css"),s=createMarkupForStyles(i);return t+"{"+s+"}"}},Style=React.createClass({displayName:"Style",propTypes:{rules:React.PropTypes.object,scopeSelector:React.PropTypes.string},getDefaultProps:function(){return{scopeSelector:""}},_buildStyles:function(e){var t=this;return Object.keys(e).reduce(function(r,i){var s=e[i];if("mediaQueries"===i)r+=t._buildMediaQueryString(s);else{var n=(t.props.scopeSelector?t.props.scopeSelector+" ":"")+i;r+=buildCssString(t,n,s)}return r},"")},_buildMediaQueryString:function(e){var t=this,r=this._getContextMediaQueries(),i="";return Object.keys(e).forEach(function(s){var n=r[s]?r[s]:s;i+="@media "+n+"{"+t._buildStyles(e[s])+"}"}),i},_getContextMediaQueries:function(){var e={};return this.context&&this.context.mediaQueries&&Object.keys(this.context.mediaQueries).forEach(function(t){e[t]=this.context.mediaQueries[t].media}.bind(this)),e},render:function(){if(!this.props.rules)return null;var e=this._buildStyles(this.props.rules);return React.createElement("style",{dangerouslySetInnerHTML:{__html:e}})}});module.exports=Style;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../create-markup-for-styles":47,"../prefixer":54}],46:[function(require,module,exports){
"use strict";var ExecutionEnvironment=require("exenv"),_matchMediaFunction=ExecutionEnvironment.canUseDOM&&window&&window.matchMedia&&function(n){return window.matchMedia(n)};module.exports={canMatchMedia:function(){return"function"==typeof _matchMediaFunction},matchMedia:function(n){return _matchMediaFunction(n)},setMatchMedia:function(n){_matchMediaFunction=n}};

},{"exenv":58}],47:[function(require,module,exports){
"use strict";var createMarkupForStyles=function(e,r){return r=r||"",Object.keys(e).map(function(t){return r+t+": "+e[t]+";"}).join("\n")};module.exports=createMarkupForStyles;

},{}],48:[function(require,module,exports){
"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}var _createClass=function(){function t(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(e,r,o){return r&&t(e.prototype,r),o&&t(e,o),e}}(),_get=function(t,e,r){for(var o=!0;o;){var n=t,i=e,s=r;a=u=l=void 0,o=!1,null===n&&(n=Function.prototype);var a=Object.getOwnPropertyDescriptor(n,i);if(void 0!==a){if("value"in a)return a.value;var l=a.get;return void 0===l?void 0:l.call(s)}var u=Object.getPrototypeOf(n);if(null===u)return void 0;t=u,e=i,r=s,o=!0}},resolveStyles=require("./resolve-styles.js"),printStyles=require("./print-styles.js"),enhanceWithRadium=function(t){var e=function(t){function e(){_classCallCheck(this,e),_get(Object.getPrototypeOf(e.prototype),"constructor",this).apply(this,arguments),this.state=this.state||{},this.state._radiumStyleState={},e.printStyleClass&&(this.printStyleClass=e.printStyleClass)}return _inherits(e,t),_createClass(e,[{key:"render",value:function(){var t=_get(Object.getPrototypeOf(e.prototype),"render",this).call(this);return resolveStyles(this,t)}},{key:"componentWillUnmount",value:function(){_get(Object.getPrototypeOf(e.prototype),"componentWillUnmount",this)&&_get(Object.getPrototypeOf(e.prototype),"componentWillUnmount",this).call(this),this._radiumMouseUpListener&&this._radiumMouseUpListener.remove(),this._radiumMediaQueryListenersByQuery&&Object.keys(this._radiumMediaQueryListenersByQuery).forEach(function(t){this._radiumMediaQueryListenersByQuery[t].remove()},this)}}]),e}(t);return Object.getOwnPropertyNames(t.prototype).forEach(function(r){if(!e.prototype.hasOwnProperty(r)){var o=Object.getOwnPropertyDescriptor(t.prototype,r);Object.defineProperty(e.prototype,r,o)}}),e.displayName=t.displayName||t.name||"Component",e.printStyleClass=printStyles.addPrintStyles(e),e};module.exports=enhanceWithRadium;

},{"./print-styles.js":55,"./resolve-styles.js":56}],49:[function(require,module,exports){
"use strict";var getStateKey=function(t){return null===t||void 0===t?"main":t.toString()};module.exports=getStateKey;

},{}],50:[function(require,module,exports){
"use strict";var getStateKey=require("./get-state-key"),VALID_KEYS=[":active",":focus",":hover"],getState=function(t,e,a){if(-1===VALID_KEYS.indexOf(a))throw new Error("Radium.getState invalid value param: `"+a+"`");var r=getStateKey(e);return!!(t&&t._radiumStyleState&&t._radiumStyleState[r]&&t._radiumStyleState[r][a])};module.exports=getState;

},{"./get-state-key":49}],51:[function(require,module,exports){
"use strict";var Enhancer=require("./enhancer");module.exports=function(e){return Enhancer(e)},module.exports.Style=require("./components/style"),module.exports.PrintStyleSheet=require("./components/print-style-sheet"),module.exports.getState=require("./get-state"),module.exports.keyframes=require("./keyframes"),module.exports.Config=require("./config");

},{"./components/print-style-sheet":44,"./components/style":45,"./config":46,"./enhancer":48,"./get-state":50,"./keyframes":52}],52:[function(require,module,exports){
"use strict";var createMarkupForStyles=require("./create-markup-for-styles"),Prefixer=require("./prefixer"),ExecutionEnvironment=require("exenv"),isAnimationSupported=ExecutionEnvironment.canUseDOM&&Prefixer.getPrefixedPropertyName("animation")!==!1,animationIndex=1,animationStyleSheet=null,keyframesPrefixed="keyframes";isAnimationSupported&&(animationStyleSheet=document.createElement("style"),document.head.appendChild(animationStyleSheet),animationStyleSheet.textContent="@keyframes {}",animationStyleSheet.sheet.cssRules.length||(keyframesPrefixed=Prefixer.cssPrefix+"keyframes"));var keyframes=function(e,t){var n="Animation"+animationIndex;if(animationIndex+=1,!isAnimationSupported)return n;var r="@"+keyframesPrefixed+" "+n+" {\n"+Object.keys(e).map(function(n){var r=e[n],i=Prefixer.getPrefixedStyle(t,r,"css"),a=createMarkupForStyles(i,"  ");return"  "+n+" {\n  "+a+"\n  }"}).join("\n")+"\n}\n";if(!animationStyleSheet)throw new Error("keyframes not initialized properly");return animationStyleSheet.sheet.insertRule(r,animationStyleSheet.sheet.cssRules.length),n};module.exports=keyframes;

},{"./create-markup-for-styles":47,"./prefixer":54,"exenv":58}],53:[function(require,module,exports){
"use strict";var _callbacks=[],_mouseUpListenerIsActive=!1,_handleMouseUp=function(e){_callbacks.forEach(function(s){s(e)})},subscribe=function(e){return-1===_callbacks.indexOf(e)&&_callbacks.push(e),_mouseUpListenerIsActive||(window.addEventListener("mouseup",_handleMouseUp),_mouseUpListenerIsActive=!0),{remove:function(){var s=_callbacks.indexOf(e);_callbacks.splice(s,1),0===_callbacks.length&&_mouseUpListenerIsActive&&(window.removeEventListener("mouseup",_handleMouseUp),_mouseUpListenerIsActive=!1)}}};module.exports={subscribe:subscribe};

},{}],54:[function(require,module,exports){
(function (process){
"use strict";var ExecutionEnvironment=require("exenv"),arrayFind=require("array-find"),VENDOR_PREFIX_REGEX=/-(moz|webkit|ms|o)-/,vendorPrefixes=["Webkit","ms","Moz","O"],infoByCssPrefix={"-moz-":{cssPrefix:"-moz-",jsPrefix:"Moz",alternativeProperties:{alignItems:[{css:"-moz-box-align",js:"MozBoxAlign"}],flex:[{css:"-moz-box-flex",js:"MozBoxFlex"}],flexDirection:[{css:"-moz-box-orient",js:"MozBoxOrient"}],justifyContent:[{css:"-moz-box-pack",js:"MozBoxPack"}],order:[{css:"-moz-box-ordinal-group",js:"MozBoxOrdinalGroup"}]},alternativeValues:{alignItems:{"flex-start":["start"],"flex-end":["end"]},display:{flex:["-moz-box"]},flexDirection:{column:["vertical"],row:["horizontal"]},justifyContent:{"flex-start":["start"],"flex-end":["end"],"space-between":["justify"]}}},"-ms-":{cssPrefix:"-ms-",jsPrefix:"ms",alternativeProperties:{alignContent:[{css:"-ms-flex-line-pack",js:"msFlexLinePack"}],alignItems:[{css:"-ms-flex-align",js:"msFlexAlign"}],alignSelf:[{css:"-ms-flex-align-item",js:"msFlexAlignItem"}],justifyContent:[{css:"-ms-flex-pack",js:"msFlexPack"}],order:[{css:"-ms-flex-order",js:"msFlexOrder"}]},alternativeValues:{alignContent:{"flex-start":["start"],"flex-end":["end"],"space-between":["justify"],"space-around":["distribute"]},alignItems:{"flex-start":["start"],"flex-end":["end"]},alignSelf:{"flex-start":["start"],"flex-end":["end"]},display:{flex:["-ms-flexbox"],"inline-flex":["-ms-inline-flexbox"]},justifyContent:{"flex-start":["start"],"flex-end":["end"],"space-between":["justify"],"space-around":["distribute"]}}},"-o-":{cssPrefix:"-o-",jsPrefix:"O"},"-webkit-":{cssPrefix:"-webkit-",jsPrefix:"Webkit",alternativeProperties:{alignItems:[{css:"-webkit-box-align",js:"WebkitBoxAlign"}],flex:[{css:"-webkit-box-flex",js:"MozBoxFlex"}],flexDirection:[{css:"-webkit-box-orient",js:"WebkitBoxOrient"}],justifyContent:[{css:"-webkit-box-pack",js:"WebkitBoxPack"}],order:[{css:"-webkit-box-ordinal-group",js:"WebkitBoxOrdinalGroup"}]},alternativeValues:{alignItems:{"flex-start":["start"],"flex-end":["end"]},display:{flex:["-webkit-box"]},flexDirection:{row:["horizontal"],column:["vertical"]},justifyContent:{"flex-start":["start"],"flex-end":["end"],"space-between":["justify"]}}}},isUnitlessNumber={boxFlex:!0,boxFlexGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,strokeDashoffset:!0,strokeOpacity:!0,strokeWidth:!0},domStyle={},prefixedPropertyCache={},prefixedValueCache={},prefixInfo={cssPrefix:"",jsPrefix:""};if(ExecutionEnvironment.canUseDOM){domStyle=document.createElement("p").style,void 0===domStyle["float"]&&(domStyle["float"]="");for(var prefixMatch,windowStyles=window.getComputedStyle(document.documentElement,""),i=0;i<windowStyles.length&&!(prefixMatch=windowStyles[i].match(VENDOR_PREFIX_REGEX));i++);var cssVendorPrefix=prefixMatch&&prefixMatch[0];prefixInfo=cssVendorPrefix&&infoByCssPrefix[cssVendorPrefix]?infoByCssPrefix[cssVendorPrefix]:prefixInfo}var _camelCaseRegex=/([a-z])?([A-Z])/g,_camelCaseReplacer=function(e,r,t){return r+"-"+t.toLowerCase()},_camelCaseToDashCase=function(e){return e.replace(_camelCaseRegex,_camelCaseReplacer)},getPrefixedPropertyName=function(e){if(prefixedPropertyCache.hasOwnProperty(e))return prefixedPropertyCache[e];var r={css:_camelCaseToDashCase(e),js:e,isDefaultForServer:!0},t=[{css:prefixInfo.cssPrefix+_camelCaseToDashCase(e),js:prefixInfo.jsPrefix+e[0].toUpperCase()+e.slice(1)},r];prefixInfo.alternativeProperties&&prefixInfo.alternativeProperties[e]&&(t=t.concat(prefixInfo.alternativeProperties[e]));var i=arrayFind(t,function(e){return e.js in domStyle?e:void 0})||!1;return prefixedPropertyCache[e]=i},_getUnprefixedProperty=function(e){var r=e;return vendorPrefixes.some(function(t){return 0===e.indexOf(t)?(r=r.replace(t,""),r=r.charAt(0).toLowerCase()+r.slice(1),!0):void 0}),r},_addPixelSuffixToValueIfNeeded=function(e,r){var t=_getUnprefixedProperty(e);return 0===r||isNaN(r)||isUnitlessNumber[t]?r:r+"px"},_getPrefixedValue=function(e,r,t,i){if(!Array.isArray(t)){if(!isNaN(t)&&null!==t)return _addPixelSuffixToValueIfNeeded(i,t);if("string"!=typeof t){if(null===t||void 0===t)return t;t=t.toString()}if(!isNaN(parseInt(t,10)))return t}var s=Array.isArray(t)?t.join(" || "):r+t;if(prefixedValueCache.hasOwnProperty(s))return prefixedValueCache[s];var n;Array.isArray(t)?(n=t.map(function(e){return _addPixelSuffixToValueIfNeeded(i,e)}),n=n.concat(t.filter(function(e){return!isNaN(e)}).map(function(e){return prefixInfo.cssPrefix+e}))):n=[t,prefixInfo.cssPrefix+t],prefixInfo.alternativeValues&&prefixInfo.alternativeValues[i]&&prefixInfo.alternativeValues[i][t]&&(n=n.concat(prefixInfo.alternativeValues[i][t]));var o=arrayFind(n,function(e){return domStyle[r]="",domStyle[r]=e,!!domStyle[r]});if(o)prefixedValueCache[s]=o;else if(prefixedValueCache[s]=t,"production"!==process.env.NODE_ENV&&console&&console.warn){var a=e?' in component "'+e.constructor.displayName+'"':"";console.warn('Unsupported CSS value "'+t+'" for property "'+r+'$"'+a)}return prefixedValueCache[s]},getPrefixedStyle=function(e,r){var t=arguments.length<=2||void 0===arguments[2]?"js":arguments[2];if(!ExecutionEnvironment.canUseDOM)return Object.keys(r).reduce(function(e,i){var s=r[i],n="css"===t?_camelCaseToDashCase(i):i,o=Array.isArray(s)?s[0]:s;return e[n]=o,e},{});var i={};return Object.keys(r).forEach(function(s){var n=r[s],o=getPrefixedPropertyName(s);if(o!==!1||"production"===process.env.NODE_ENV){var a=_getPrefixedValue(e,o.js,n,s);i[o[t]]=a}else if(console&&console.warn){var f=e?' in component "'+e.constructor.displayName+'"':"";console.warn('Unsupported CSS property "'+s+'$"'+f)}}),i};module.exports={getPrefixedPropertyName:getPrefixedPropertyName,getPrefixedStyle:getPrefixedStyle,cssPrefix:prefixInfo.cssPrefix,jsPrefix:prefixInfo.jsPrefix};

}).call(this,require('_process'))

},{"_process":39,"array-find":57,"exenv":58}],55:[function(require,module,exports){
"use strict";var allPrintStyles={},listeners=[],subscribe=function(t){return-1===listeners.indexOf(t)&&listeners.push(t),{remove:function(){var e=listeners.indexOf(t);e>-1&&listeners.splice(e,1)}}},_emitChange=function(){listeners.forEach(function(t){return t()})},_appendImportantToEachValue=function(t){var e={};return Object.keys(t).forEach(function(n){var r=t[n];r+=" !important",e[n]=r}),e},addPrintStyles=function(t){if(t.printStyles){var e={};return Object.keys(t.printStyles).forEach(function(n){var r=t.printStyles[n],i="Radium-"+t.displayName+"-"+n;allPrintStyles["."+i]=_appendImportantToEachValue(r),e[n]=i}),_emitChange(),e}},getPrintStyles=function(){return allPrintStyles};module.exports={addPrintStyles:addPrintStyles,getPrintStyles:getPrintStyles,subscribe:subscribe};

},{}],56:[function(require,module,exports){
(function (process,global){
"use strict";var _extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o])}return e},MouseUpListener=require("./mouse-up-listener"),getState=require("./get-state"),getStateKey=require("./get-state-key"),Prefixer=require("./prefixer"),Config=require("./config"),ExecutionEnvironment=require("exenv"),React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,mediaQueryListByQueryString={},_isSpecialKey=function(e){return":"===e[0]||"@"===e[0]},_getStyleState=function(e,t,r){return getState(e.state,t,r)},_setStyleState=function(e,t,r){var o=e._lastRadiumState||e.state&&e.state._radiumStyleState||{},n={_radiumStyleState:_extends({},o)};n._radiumStyleState[t]=_extends({},n._radiumStyleState[t],r),e._lastRadiumState=n._radiumStyleState,e.setState(n)},_mergeStyles=function e(t){var r={};return t.forEach(function(t){t&&"object"==typeof t&&!Array.isArray(t)&&Object.keys(t).forEach(function(o){_isSpecialKey(o)&&r[o]?r[o]=e([r[o],t[o]]):r[o]=t[o]})}),r},_mouseUp=function(e){Object.keys(e.state._radiumStyleState).forEach(function(t){_getStyleState(e,t,":active")&&_setStyleState(e,t,{":active":!1})})},_onMediaQueryChange=function(e,t,r){var o={};o[t]=r.matches,_setStyleState(e,"_all",o)},_resolveMediaQueryStyles=function(e,t){return Config.canMatchMedia()?(Object.keys(t).filter(function(e){return"@"===e[0]}).map(function(r){var o=t[r];r=r.replace("@media ","");var n=mediaQueryListByQueryString[r];if(n||(mediaQueryListByQueryString[r]=n=Config.matchMedia(r)),e._radiumMediaQueryListenersByQuery||(e._radiumMediaQueryListenersByQuery={}),!e._radiumMediaQueryListenersByQuery[r]){var i=_onMediaQueryChange.bind(null,e,r);n.addListener(i),e._radiumMediaQueryListenersByQuery[r]={remove:function(){n.removeListener(i)}}}n.matches&&(t=_mergeStyles([t,o]))}),t):t},_cloneElement=function(e,t,r){return"string"==typeof e.type&&(t=_extends({},t,{_radiumDidResolveStyles:!0})),React.cloneElement(e,t,r)},resolveStyles=function t(e,r,o){if(o=o||{},!r||r.props&&r.props._radiumDidResolveStyles)return r;var n=r.props.children,i=n;if(n){var a=typeof n;if("string"===a||"number"===a)i=n;else if("function"===a)i=function(){var r=n.apply(this,arguments);return React.isValidElement(r)?t(e,r,o):r};else if(1===React.Children.count(n)&&n.type){var s=React.Children.only(n);i=t(e,s,o)}else i=React.Children.map(n,function(r){return React.isValidElement(r)?t(e,r,o):r})}var u=r.props,d={};Object.keys(u).forEach(function(r){if("children"!==r){var n=u[r];React.isValidElement(n)&&(d[r]=t(e,n,o))}});var c=Object.keys(d).length>0;if(!React.isValidElement(r)||"string"!=typeof r.type)return n!==i||c?_cloneElement(r,c?d:{},i):r;var l=u.style;if(Array.isArray(l)&&(l=_mergeStyles(l)),"production"!==process.env.NODE_ENV){var y={background:["backgroundAttachment","backgroundBlendMode","backgroundClip","backgroundColor","backgroundImage","backgroundOrigin","backgroundPosition","backgroundPositionX","backgroundPositionY","backgroundRepeat","backgroundRepeatX","backgroundRepeatY","backgroundSize"],border:["borderBottom","borderBottomColor","borderBottomStyle","borderBottomWidth","borderColor","borderLeft","borderLeftColor","borderLeftStyle","borderLeftWidth","borderRight","borderRightColor","borderRightStyle","borderRightWidth","borderStyle","borderTop","borderTopColor","borderTopStyle","borderTopWidth","borderWidth"],borderImage:["borderImageOutset","borderImageRepeat","borderImageSlice","borderImageSource","borderImageWidth"],borderRadius:["borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius"],font:["fontFamily","fontKerning","fontSize","fontStretch","fontStyle","fontVariant","fontVariantLigatures","fontWeight","lineHeight"],listStyle:["listStyleImage","listStylePosition","listStyleType"],margin:["marginBottom","marginLeft","marginRight","marginTop"],padding:["paddingBottom","paddingLeft","paddingRight","paddingTop"],transition:["transitionDelay","transitionDuration","transitionProperty","transitionTimingFunction"]},f=function k(t){if("object"==typeof t&&t){var r=Object.keys(t);r.forEach(function(t){y[t]&&y[t].some(function(e){return-1!==r.indexOf(e)})&&"production"!==process.env.NODE_ENV&&console.warn('Radium: property "'+t+'" in style object',l,": do not mix longhand and shorthand properties in the same style object. Check the render method of "+e.constructor.displayName+".","See https://github.com/FormidableLabs/radium/issues/95 for more information.")}),r.forEach(function(e){return k(t[e])})}};f(l)}if(!l||!Object.keys(l).some(_isSpecialKey))return l?(d.style=Prefixer.getPrefixedStyle(e,l),_cloneElement(r,d,i)):i||c?_cloneElement(r,d,i):r;var m=r.ref||r.key,g=getStateKey(m);if(o[g])throw new Error("Radium requires each element with interactive styles to have a unique key, set using either the ref or key prop. "+(m?'Key "'+m+'" is a duplicate.':"Multiple elements have no key specified."));o[g]=!0,l=_resolveMediaQueryStyles(e,l);var S={};if(Object.keys(l).forEach(function(e){_isSpecialKey(e)||(S[e]=l[e])}),l[":hover"]||l[":active"]){var p=u.onMouseEnter;d.onMouseEnter=function(t){p&&p(t),_setStyleState(e,g,{":hover":!0})};var b=u.onMouseLeave;d.onMouseLeave=function(t){b&&b(t),_setStyleState(e,g,{":hover":!1})}}if(l[":active"]){var h=u.onMouseDown;d.onMouseDown=function(t){h&&h(t),e._lastMouseDown=Date.now(),_setStyleState(e,g,{":active":!0})}}if(l[":focus"]){var v=u.onFocus;d.onFocus=function(t){v&&v(t),_setStyleState(e,g,{":focus":!0})};var _=u.onBlur;d.onBlur=function(t){_&&_(t),_setStyleState(e,g,{":focus":!1})}}var R=Object.keys(l).filter(function(t){return":active"===t&&_getStyleState(e,g,":active")||":hover"===t&&_getStyleState(e,g,":hover")||":focus"===t&&_getStyleState(e,g,":focus")}).map(function(e){return l[e]});return R.length&&(S=_mergeStyles([S].concat(R))),l[":active"]&&!e._radiumMouseUpListener&&ExecutionEnvironment.canUseEventListeners&&(e._radiumMouseUpListener=MouseUpListener.subscribe(_mouseUp.bind(null,e))),d.style=Prefixer.getPrefixedStyle(e,S),_cloneElement(r,d,i)};resolveStyles.__clearStateForTests=function(){mediaQueryListByQueryString={}},module.exports=resolveStyles;

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./config":46,"./get-state":50,"./get-state-key":49,"./mouse-up-listener":53,"./prefixer":54,"_process":39,"exenv":58}],57:[function(require,module,exports){
"use strict";function find(n,t,r){if("function"==typeof Array.prototype.find)return n.find(t,r);r=r||this;var f,i=n.length;if("function"!=typeof t)throw new TypeError(t+" is not a function");for(f=0;i>f;f++)if(t.call(r,n[f],f,n))return n[f]}module.exports=find;

},{}],58:[function(require,module,exports){
!function(){"use strict";var e=!("undefined"==typeof window||!window.document||!window.document.createElement),n={canUseDOM:e,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:e&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:e&&!!window.screen};"function"==typeof define&&"object"==typeof define.amd&&define.amd?define(function(){return n}):"undefined"!=typeof module&&module.exports?module.exports=n:window.ExecutionEnvironment=n}();

},{}]},{},[24])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2FjdGlvbnMvZGF0YS1hY3Rpb25zLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9hY3Rpb25zL2ZsYXNoLWFjdGlvbnMuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2FjdGlvbnMvc2V0dXAtcHJvZ3Jlc3MtYWN0aW9ucy5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9jbGllbnQvYWN0aW9ucy9zaXRlLWFjdGlvbnMuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2FjdGlvbnMvc3Bpbm5lci1hY3Rpb25zLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9jb21wb25lbnRzL2FkdmFuY2VkLXNldHRpbmdzLXN0ZXAuanN4IiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9jb21wb25lbnRzL2NvbnRlbnQtYm94LmpzeCIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9jbGllbnQvY29tcG9uZW50cy9kYXNoaWNvbi5qc3giLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2NvbXBvbmVudHMvZGVzaWduLXN0ZXAuanN4IiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9jb21wb25lbnRzL2ZsYXNoLmpzeCIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9jbGllbnQvY29tcG9uZW50cy9nZXQtc3RhcnRlZC5qc3giLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2NvbXBvbmVudHMvamV0cGFjay1qdW1wc3RhcnQtbWVudS5qc3giLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2NvbXBvbmVudHMvamV0cGFjay1qdW1wc3RhcnQtc3RlcC5qc3giLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2NvbXBvbmVudHMvbGF5b3V0LXN0ZXAuanN4IiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9jb21wb25lbnRzL3NpdGUtdGl0bGUtc3RlcC5qc3giLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2NvbXBvbmVudHMvc2tpcC1idXR0b24uanN4IiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9jb21wb25lbnRzL3Rvb2x0aXAuanN4IiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9jb21wb25lbnRzL3dlbGNvbWUtbWVudS5qc3giLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2NvbXBvbmVudHMvd2VsY29tZS1zZWN0aW9uLmpzeCIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9jbGllbnQvY29tcG9uZW50cy93ZWxjb21lLXdpZGdldC5qc3giLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2NvbnN0YW50cy9qZXRwYWNrLXN0YXJ0LWNvbnN0YW50cy5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9jbGllbnQvY29uc3RhbnRzL2pldHBhY2stc3RhcnQtcGF0aHMuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2Rpc3BhdGNoZXIvYXBwLWRpc3BhdGNoZXIuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2pldHBhY2stc3RhcnQuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L3N0b3Jlcy9kYXRhLXN0b3JlLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9zdG9yZXMvZmxhc2gtc3RvcmUuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L3N0b3Jlcy9zZXR1cC1wcm9ncmVzcy1zdG9yZS5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9jbGllbnQvc3RvcmVzL3NpdGUtc3RvcmUuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L3N0b3Jlcy9zcGlubmVyLXN0b3JlLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9zdHlsZXMuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L3V0aWxzL3dwLWFqYXguanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L3dlbGNvbWUtcGFuZWwuanN4IiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9AYXV0b21hdHRpYy9kb3BzLXJlYWN0L2pzL2NvbXBvbmVudHMvYnV0dG9uLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9AYXV0b21hdHRpYy9kb3BzLXJlYWN0L2pzL2NvbXBvbmVudHMvcHJvZ3Jlc3MtYmFyLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9AYXV0b21hdHRpYy9kb3BzLXJlYWN0L2pzL2NvbXBvbmVudHMvcmVzZXQuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL0BhdXRvbWF0dGljL2RvcHMtcmVhY3QvanMvc3R5bGVzLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9AYXV0b21hdHRpYy9kb3BzLXJlYWN0L2pzL3V0aWxzL20uanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2V2ZW50cy9ldmVudHMuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvZmx1eC9pbmRleC5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvZmx1eC9saWIvRGlzcGF0Y2hlci5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvZmx1eC9ub2RlX21vZHVsZXMvZmJqcy9saWIvaW52YXJpYW50LmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9rZXltaXJyb3IvaW5kZXguanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL3JhZGl1bS9saWIvY29tcG9uZW50cy9wcmludC1zdHlsZS1zaGVldC5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvcmFkaXVtL2xpYi9jb21wb25lbnRzL3N0eWxlLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9yYWRpdW0vbGliL2NvbmZpZy5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvcmFkaXVtL2xpYi9jcmVhdGUtbWFya3VwLWZvci1zdHlsZXMuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL3JhZGl1bS9saWIvZW5oYW5jZXIuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL3JhZGl1bS9saWIvZ2V0LXN0YXRlLWtleS5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvcmFkaXVtL2xpYi9nZXQtc3RhdGUuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL3JhZGl1bS9saWIvaW5kZXguanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL3JhZGl1bS9saWIva2V5ZnJhbWVzLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9yYWRpdW0vbGliL21vdXNlLXVwLWxpc3RlbmVyLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9yYWRpdW0vbGliL3ByZWZpeGVyLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9yYWRpdW0vbGliL3ByaW50LXN0eWxlcy5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvcmFkaXVtL2xpYi9yZXNvbHZlLXN0eWxlcy5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvcmFkaXVtL25vZGVfbW9kdWxlcy9hcnJheS1maW5kL2ZpbmQuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL3JhZGl1bS9ub2RlX21vZHVsZXMvZXhlbnYvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQSxHQUFJLGVBQWdCLFFBQVEsZ0NBQzNCLGFBQWUsUUFBUSx3Q0FFcEIsYUFDSCxlQUFnQixXQUNmLGNBQWMsVUFDYixXQUFZLGFBQWEsZ0JBSTNCLGdCQUFpQixXQUNoQixjQUFjLFVBQ2IsV0FBWSxhQUFhLGlCQUs1QixRQUFPLFFBQVU7OztBQ2pCakIsR0FBSSxlQUFnQixRQUFRLGdDQUMzQixhQUFlLFFBQVEsd0NBRXBCLGNBQ0gsT0FBUSxTQUFTLEdBQ2hCLGNBQWMsVUFDYixXQUFZLGFBQWEsVUFDekIsUUFBUyxFQUNULFNBQVUsYUFBYSx5QkFJekIsTUFBTyxTQUFTLEdBQ2YsY0FB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LElBQUksV0FBVSxFQUFZLHFCQUdsQyxLQUFLLEVBQUksRUFBTyxFQUFKLEVBQVksSUFDdEIsR0FBSSxFQUFVLEtBQUssRUFBUyxFQUFNLEdBQUksRUFBRyxHQUN2QyxNQUFPLEdBQU0sR0FLbkIsT0FBTyxRQUFVOzs7Q0NoQmhCLFdBQ0EsWUFFQSxJQUFJLEtBQ2UsbUJBQVgsVUFDUCxPQUFPLFdBQ1AsT0FBTyxTQUFTLGVBR2IsR0FFSCxVQUFXLEVBRVgsY0FBaUMsbUJBQVgsUUFFdEIscUJBQ0MsTUFBZ0IsT0FBTyxtQkFBb0IsT0FBTyxhQUVuRCxlQUFnQixLQUFlLE9BQU8sT0FJakIsbUJBQVgsU0FBK0MsZ0JBQWYsUUFBTyxLQUFvQixPQUFPLElBQzVFLE9BQU8sV0FDTixNQUFPLEtBRW9CLG1CQUFYLFNBQTBCLE9BQU8sUUFDbEQsT0FBTyxRQUFVLEVBRWpCLE9BQU8scUJBQXVCIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsInZhciBBcHBEaXNwYXRjaGVyID0gcmVxdWlyZSgnLi4vZGlzcGF0Y2hlci9hcHAtZGlzcGF0Y2hlcicpLFxuXHRKUFNDb25zdGFudHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvamV0cGFjay1zdGFydC1jb25zdGFudHMnKTtcblxudmFyIERhdGFBY3Rpb25zID0ge1xuXHRyZXF1ZXN0U3RhcnRlZDogZnVuY3Rpb24oKSB7XG5cdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU0FWRV9TVEFSVEVEXG5cdFx0fSk7XG5cdH0sXG5cblx0cmVxdWVzdEZpbmlzaGVkOiBmdW5jdGlvbigpIHtcblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TQVZFX0ZJTklTSEVEXG5cdFx0fSk7XG5cdH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRGF0YUFjdGlvbnM7IiwidmFyIEFwcERpc3BhdGNoZXIgPSByZXF1aXJlKCcuLi9kaXNwYXRjaGVyL2FwcC1kaXNwYXRjaGVyJyksXG5cdEpQU0NvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9qZXRwYWNrLXN0YXJ0LWNvbnN0YW50cycpO1xuXG52YXIgRmxhc2hBY3Rpb25zID0ge1xuXHRub3RpY2U6IGZ1bmN0aW9uKG1zZykge1xuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlNFVF9GTEFTSCxcblx0XHRcdG1lc3NhZ2U6IG1zZyxcblx0XHRcdHNldmVyaXR5OiBKUFNDb25zdGFudHMuRkxBU0hfU0VWRVJJVFlfTk9USUNFXG5cdFx0fSk7XG5cdH0sXG5cblx0ZXJyb3I6IGZ1bmN0aW9uKG1zZykge1xuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlNFVF9GTEFTSCxcblx0XHRcdG1lc3NhZ2U6IG1zZyxcblx0XHRcdHNldmVyaXR5OiBKUFNDb25zdGFudHMuRkxBU0hfU0VWRVJJVFlfRVJST1Jcblx0XHR9KTtcblx0fSxcblxuXHR1bnNldDogZnVuY3Rpb24oKSB7XG5cdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuVU5TRVRfRkxBU0hcblx0XHR9KTtcblx0fVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBGbGFzaEFjdGlvbnM7IiwidmFyIEFwcERpc3BhdGNoZXIgPSByZXF1aXJlKCcuLi9kaXNwYXRjaGVyL2FwcC1kaXNwYXRjaGVyJyksXG5cdEpQU0NvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9qZXRwYWNrLXN0YXJ0LWNvbnN0YW50cycpLFxuXHRQYXRocyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9qZXRwYWNrLXN0YXJ0LXBhdGhzJyksXG5cdEZsYXNoQWN0aW9ucyA9IHJlcXVpcmUoJy4vZmxhc2gtYWN0aW9ucycpLFxuXHRTaXRlQWN0aW9ucyA9IHJlcXVpcmUoJy4vc2l0ZS1hY3Rpb25zJyksXG5cdFdQQWpheCA9IHJlcXVpcmUoJy4uL3V0aWxzL3dwLWFqYXgnKSxcblx0U3Bpbm5lckFjdGlvbnMgPSByZXF1aXJlKCcuL3NwaW5uZXItYWN0aW9ucycpLFxuXHRTZXR1cFByb2dyZXNzU3RvcmUgPSByZXF1aXJlKCcuLi9zdG9yZXMvc2V0dXAtcHJvZ3Jlc3Mtc3RvcmUnKSxcblx0U2l0ZVN0b3JlID0gcmVxdWlyZSgnLi4vc3RvcmVzL3NpdGUtc3RvcmUnKTtcblxudmFyIFNldHVwUHJvZ3Jlc3NBY3Rpb25zID0ge1xuXHRyZXNldERhdGE6IGZ1bmN0aW9uKCkge1xuXHRcdFdQQWpheC5cblx0XHRwb3N0KEpQUy5zaXRlX2FjdGlvbnMucmVzZXRfZGF0YSkuXG5cdFx0ZmFpbChmdW5jdGlvbihtc2cpIHtcblx0XHRcdEZsYXNoQWN0aW9ucy5lcnJvcihcIkZhaWxlZCB0byBzYXZlIGRhdGE6IFwiICsgbXNnKTtcblx0XHR9KTtcblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5SRVNFVF9EQVRBXG5cdFx0fSk7XG5cdH0sXG5cblx0Y29tcGxldGVTdGVwOiBmdW5jdGlvbihzbHVnLCBtZXRhKSB7XG5cdFx0dmFyIHN0ZXAgPSBTZXR1cFByb2dyZXNzU3RvcmUuZ2V0U3RlcEZyb21TbHVnKHNsdWcpO1xuXG5cdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU1RFUF9DT01QTEVURSxcblx0XHRcdHNsdWc6IHNsdWdcblx0XHR9KTtcblxuXHRcdC8vIE5PVEU6IHRoaXMgbmVlZHMgdG8gY29tZSBhZnRlciB0aGUgZGlzcGF0Y2gsIHNvIHRoYXQgdGhlIGNvbXBsZXRpb24gJSBcblx0XHQvLyBpcyBhbHJlYWR5IHVwZGF0ZWQgYW5kIGNhbiBiZSBpbmNsdWRlZCBpbiB0aGUgbWV0YWRhdGFcblx0XHRyZXR1cm4gdGhpcy5fcmVjb3JkQ29tcGxldGUoc3RlcCwgbWV0YSk7XG5cdH0sXG5cblx0Y29tcGxldGVBbmROZXh0U3RlcDogZnVuY3Rpb24oc2x1ZywgbWV0YSkge1xuXHRcdFNwaW5uZXJBY3Rpb25zLnNob3coXCJMb2FkaW5nXCIpO1xuXHRcdHRoaXMuY29tcGxldGVTdGVwKHNsdWcsIG1ldGEpLmFsd2F5cyhmdW5jdGlvbigpIHtcblx0XHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU1RFUF9ORVhUXG5cdFx0XHR9KTtcblx0XHRcdFNwaW5uZXJBY3Rpb25zLmhpZGUoKTtcblx0XHR9KTtcblx0fSxcblxuXHRfcmVjb3JkQ29tcGxldGU6IGZ1bmN0aW9uKHN0ZXAsIG1ldGEpIHtcblx0XHRpZiAodHlwZW9mKG1ldGEpID09PSAndW5kZWZpbmVkJykge1xuXHRcdFx0bWV0YSA9IHt9O1xuXHRcdH1cblxuXHRcdG1ldGEuY29tcGxldGlvbiA9IFNldHVwUHJvZ3Jlc3NTdG9yZS5nZXRQcm9ncmVzc1BlcmNlbnQoKTtcblxuXHRcdHJldHVybiBXUEFqYXguXG5cdFx0cG9zdChKUFMuc3RlcF9hY3Rpb25zLmNvbXBsZXRlLCB7XG5cdFx0XHRzdGVwOiBzdGVwLnNsdWcsXG5cdFx0XHRkYXRhOiBtZXRhXG5cdFx0fSkuXG5cdFx0ZmFpbChmdW5jdGlvbihtc2cpIHtcblx0XHRcdEZsYXNoQWN0aW9ucy5lcnJvcihtc2cpO1xuXHRcdH0pO1xuXHR9LFxuXG5cdC8vIG1hcmsgY3VycmVudCBzdGVwIGFzIHNraXBwZWQgYW5kIG1vdmUgb25cblx0c2tpcFN0ZXA6IGZ1bmN0aW9uKCkge1xuXHRcdEZsYXNoQWN0aW9ucy51bnNldCgpO1xuXG5cdFx0dmFyIHN0ZXAgPSBTZXR1cFByb2dyZXNzU3RvcmUuZ2V0Q3VycmVudFN0ZXAoKTtcblxuXHRcdGlmICghc3RlcC5za2lwcGVkKSB7XG5cdFx0XHRTcGlubmVyQWN0aW9ucy5zaG93KFwiTG9hZGluZ1wiKTtcblx0XHRcdFdQQWpheC5cblx0XHRcdHBvc3QoSlBTLnN0ZXBfYWN0aW9ucy5za2lwLCB7XG5cdFx0XHRcdHN0ZXA6IHN0ZXAuc2x1Z1xuXHRcdFx0fSkuXG5cdFx0XHRmYWlsKGZ1bmN0aW9uKG1zZykge1xuXHRcdFx0XHRGbGFzaEFjdGlvbnMuZXJyb3IobXNnKTtcblx0XHRcdH0pLmFsd2F5cyhmdW5jdGlvbigpIHtcblx0XHRcdFx0U3Bpbm5lckFjdGlvbnMuaGlkZSgpO1xuXHRcdFx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU1RFUF9TS0lQXG5cdFx0XHRcdH0pO1x0XG5cdFx0XHR9KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TVEVQX1NLSVBcblx0XHRcdH0pO1x0XG5cdFx0fVxuXG5cdFx0XG5cdH0sXG5cblx0Z2V0U3RhcnRlZDogZnVuY3Rpb24oKSB7XG5cdFx0U3Bpbm5lckFjdGlvbnMuc2hvdyhcIkxvYWRpbmdcIik7XG5cdFx0V1BBamF4LlxuXHRcdHBvc3QoSlBTLnN0ZXBfYWN0aW9ucy5zdGFydCkuXG5cdFx0ZmFpbChmdW5jdGlvbihtc2cpIHtcblx0XHRcdEZsYXNoQWN0aW9ucy5lcnJvcihtc2cpO1xuXHRcdH0pLlxuXHRcdGFsd2F5cyhmdW5jdGlvbigpIHtcblx0XHRcdFNwaW5uZXJBY3Rpb25zLmhpZGUoKTtcblx0XHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU1RFUF9HRVRfU1RBUlRFRFxuXHRcdFx0fSk7XG5cdFx0fSk7XG5cdH0sXG5cblx0ZGlzYWJsZUpQUzogZnVuY3Rpb24oKSB7XG5cdFx0U3Bpbm5lckFjdGlvbnMuc2hvdyhcIlwiKTtcblx0XHRXUEFqYXguXG5cdFx0cG9zdChKUFMuc3RlcF9hY3Rpb25zLmRpc2FibGUpLlxuXHRcdGZhaWwoZnVuY3Rpb24obXNnKSB7XG5cdFx0XHRGbGFzaEFjdGlvbnMuZXJyb3IobXNnKTtcblx0XHR9KS5cblx0XHRhbHdheXMoZnVuY3Rpb24oKSB7XG5cdFx0XHR3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG5cdFx0fSk7XG5cdH0sXG5cblx0c2V0Q3VycmVudFN0ZXA6IGZ1bmN0aW9uKHNsdWcpIHtcblx0XHRGbGFzaEFjdGlvbnMudW5zZXQoKTtcblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TVEVQX1NFTEVDVCxcblx0XHRcdHNsdWc6IHNsdWdcblx0XHR9KTtcblx0fSxcblxuXHQvLyBtb3ZlcyBvbiB0byB0aGUgbmV4dCBzdGVwLCBidXQgZG9lc24ndCBtYXJrIGl0IGFzIFwic2tpcHBlZFwiXG5cdHNlbGVjdE5leHRTdGVwOiBmdW5jdGlvbigpIHtcblx0XHRGbGFzaEFjdGlvbnMudW5zZXQoKTtcblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TVEVQX05FWFRcblx0XHR9KTtcblx0fSxcblxuXHRzdWJtaXRUaXRsZVN0ZXA6IGZ1bmN0aW9uKCkge1xuXHRcdFNpdGVBY3Rpb25zLnNhdmVUaXRsZUFuZERlc2NyaXB0aW9uKCkuZG9uZShmdW5jdGlvbigpIHtcblx0XHRcdHRoaXMuY29tcGxldGVBbmROZXh0U3RlcChQYXRocy5TSVRFX1RJVExFX1NURVBfU0xVRyk7XG5cdFx0fS5iaW5kKHRoaXMpKTtcblx0fSxcblxuXHRzdWJtaXRMYXlvdXRTdGVwOiBmdW5jdGlvbihsYXlvdXQpIHtcblx0XHRTaXRlQWN0aW9ucy5zZXRMYXlvdXQobGF5b3V0KS5kb25lKGZ1bmN0aW9uKCkge1xuXHRcdFx0dGhpcy5jb21wbGV0ZUFuZE5leHRTdGVwKFBhdGhzLkxBWU9VVF9TVEVQX1NMVUcpO1xuXHRcdH0uYmluZCh0aGlzKSk7XG5cdH0sXG5cblx0c3VibWl0SmV0cGFja0p1bXBzdGFydDogZnVuY3Rpb24oKSB7XG5cdFx0U2l0ZUFjdGlvbnMuZW5hYmxlSnVtcHN0YXJ0KCkuZG9uZShmdW5jdGlvbigpIHtcblx0XHRcdHRoaXMuY29tcGxldGVTdGVwKFBhdGhzLkpFVFBBQ0tfTU9EVUxFU19TVEVQX1NMVUcpO1xuXHRcdH0uYmluZCh0aGlzKSk7XG5cdH0sXG5cblx0c2V0QWN0aXZlVGhlbWU6IGZ1bmN0aW9uKHRoZW1lKSB7XG5cdFx0U2l0ZUFjdGlvbnMuc2V0QWN0aXZlVGhlbWUodGhlbWUpLmRvbmUoZnVuY3Rpb24oKSB7XG5cdFx0XHR0aGlzLmNvbXBsZXRlU3RlcChQYXRocy5ERVNJR05fU1RFUF9TTFVHLCB7XG5cdFx0XHRcdHRoZW1lSWQ6IHRoZW1lLmlkXG5cdFx0XHR9KTtcblx0XHR9LmJpbmQodGhpcykpO1xuXHR9LFxuXG5cdHNhdmVEZXNpZ25TdGVwOiBmdW5jdGlvbigpIHtcblx0XHR0aGlzLmNvbXBsZXRlQW5kTmV4dFN0ZXAoUGF0aHMuREVTSUdOX1NURVBfU0xVRywge1xuXHRcdFx0dGhlbWVJZDogU2l0ZVN0b3JlLmdldEFjdGl2ZVRoZW1lSWQoKVxuXHRcdH0pO1xuXHR9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNldHVwUHJvZ3Jlc3NBY3Rpb25zOyIsInZhciBBcHBEaXNwYXRjaGVyID0gcmVxdWlyZSgnLi4vZGlzcGF0Y2hlci9hcHAtZGlzcGF0Y2hlcicpLFxuXHRKUFNDb25zdGFudHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvamV0cGFjay1zdGFydC1jb25zdGFudHMnKSxcblx0U2l0ZVN0b3JlID0gcmVxdWlyZSgnLi4vc3RvcmVzL3NpdGUtc3RvcmUnKSxcblx0Rmxhc2hBY3Rpb25zID0gcmVxdWlyZSgnLi9mbGFzaC1hY3Rpb25zLmpzJyksXG5cdFNwaW5uZXJBY3Rpb25zID0gcmVxdWlyZSgnLi9zcGlubmVyLWFjdGlvbnMuanMnKSxcblx0V1BBamF4ID0gcmVxdWlyZSgnLi4vdXRpbHMvd3AtYWpheCcpO1xuXG52YXIgU2l0ZUFjdGlvbnMgPSB7XG5cdHNldFRpdGxlOiBmdW5jdGlvbih0aXRsZSkge1xuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlNJVEVfU0VUX1RJVExFLFxuXHRcdFx0dGl0bGU6IHRpdGxlXG5cdCAgICB9KTtcblx0fSxcblxuXHRzZXREZXNjcmlwdGlvbjogZnVuY3Rpb24oZGVzY3JpcHRpb24pIHtcblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TSVRFX1NFVF9ERVNDUklQVElPTixcblx0XHRcdGRlc2NyaXB0aW9uOiBkZXNjcmlwdGlvblxuXHQgICAgfSk7XG5cdH0sXG5cblx0c2F2ZVRpdGxlQW5kRGVzY3JpcHRpb246IGZ1bmN0aW9uKCkge1xuXHRcdHZhciB0aXRsZSA9IFNpdGVTdG9yZS5nZXRUaXRsZSgpO1xuXHRcdHZhciBkZXNjcmlwdGlvbiA9IFNpdGVTdG9yZS5nZXREZXNjcmlwdGlvbigpO1xuXHRcdFxuXHRcdFdQQWpheC5cblx0XHRcdHBvc3QoIEpQUy5zaXRlX2FjdGlvbnMuc2V0X3RpdGxlLCB7IHRpdGxlOiB0aXRsZSwgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uIH0gKS5cblx0XHRcdGZhaWwoIGZ1bmN0aW9uICggbXNnICkge1xuXHRcdFx0XHRGbGFzaEFjdGlvbnMuZXJyb3IoXCJFcnJvciBzZXR0aW5nIHRpdGxlOiBcIittc2cpO1xuXHRcdFx0fSk7XG5cblx0XHRqUXVlcnkoJyN3cC1hZG1pbi1iYXItc2l0ZS1uYW1lIC5hYi1pdGVtJykuaHRtbCh0aXRsZSk7XG5cdFx0Ly8gRmxhc2hBY3Rpb25zLm5vdGljZSggXCJTZXQgdGl0bGUgdG8gJ1wiK3RpdGxlK1wiJyBhbmQgZGVzY3JpcHRpb24gdG8gJ1wiK2Rlc2NyaXB0aW9uK1wiJ1wiICk7XG5cdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU0lURV9TQVZFX1RJVExFX0FORF9ERVNDUklQVElPTixcblx0XHRcdHRpdGxlOiB0aXRsZVxuXHQgICAgfSk7XG5cblx0XHRyZXR1cm4galF1ZXJ5LkRlZmVycmVkKCkucmVzb2x2ZSgpOyAvLyBYWFggSEFDS1xuXHR9LFxuXG5cdF9pbnN0YWxsVGhlbWU6IGZ1bmN0aW9uICggdGhlbWUgKSB7XG5cdFx0aWYgKCAhIHRoZW1lLmluc3RhbGxlZCApIHtcblx0XHRcdFNwaW5uZXJBY3Rpb25zLnNob3coXCJJbnN0YWxsaW5nICdcIit0aGVtZS5uYW1lK1wiJ1wiKTtcblx0XHRcdHJldHVybiBXUEFqYXguXG5cdFx0XHRcdHBvc3QoIEpQUy5zaXRlX2FjdGlvbnMuaW5zdGFsbF90aGVtZSwgeyB0aGVtZUlkOiB0aGVtZS5pZCB9ICkuXG5cdFx0XHRcdGRvbmUoIGZ1bmN0aW9uICggKSB7XG5cdFx0XHRcdFx0dGhlbWUuaW5zdGFsbGVkID0gdHJ1ZTtcblx0XHRcdFx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdFx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TSVRFX0lOU1RBTExfVEhFTUUsXG5cdFx0XHRcdFx0XHR0aGVtZTogdGhlbWVcblx0XHRcdFx0ICAgIH0pO1xuXHRcdFx0XHR9KS5cblx0XHRcdFx0ZmFpbCggZnVuY3Rpb24gKCBtc2cgKSB7XG5cdFx0XHRcdFx0Rmxhc2hBY3Rpb25zLmVycm9yKFwiU2VydmVyIGVycm9yIGluc3RhbGxpbmcgdGhlbWU6IFwiK21zZyk7XG5cdFx0XHRcdH0pLlxuXHRcdFx0XHRhbHdheXMoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFNwaW5uZXJBY3Rpb25zLmhpZGUoKTtcblx0XHRcdFx0fSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoKS5yZXNvbHZlKCk7XG5cdFx0fVxuXHR9LFxuXG5cdF9hY3RpdmF0ZVRoZW1lOiBmdW5jdGlvbiAoIHRoZW1lICkge1xuXHRcdFdQQWpheC5cblx0XHRcdHBvc3QoIEpQUy5zaXRlX2FjdGlvbnMuc2V0X3RoZW1lLCB7IHRoZW1lSWQ6IHRoZW1lLmlkIH0gKS5cblx0XHRcdGZhaWwoIGZ1bmN0aW9uICggbXNnICkge1xuXHRcdFx0XHRGbGFzaEFjdGlvbnMuZXJyb3IoXCJTZXJ2ZXIgZXJyb3Igc2V0dGluZyB0aGVtZTogXCIrbXNnKTtcblx0XHRcdH0pO1xuXG5cdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU0lURV9TRVRfVEhFTUUsXG5cdFx0XHR0aGVtZUlkOiB0aGVtZS5pZFxuXHQgICAgfSk7XG5cdH0sXG5cblx0c2V0QWN0aXZlVGhlbWU6IGZ1bmN0aW9uKCB0aGVtZSApIHtcblxuXHRcdHRoaXMuX2luc3RhbGxUaGVtZSh0aGVtZSkuXG5cdFx0XHRkb25lKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0dGhpcy5fYWN0aXZhdGVUaGVtZSh0aGVtZSk7XG5cdFx0XHR9LmJpbmQodGhpcykpO1xuXG5cdFx0cmV0dXJuIGpRdWVyeS5EZWZlcnJlZCgpLnJlc29sdmUoKTsgLy8gWFhYIEhBQ0tcblx0fSxcblxuXHRzZXRMYXlvdXQ6IGZ1bmN0aW9uKCBsYXlvdXROYW1lICkge1xuXHRcblx0XHRXUEFqYXguXG5cdFx0XHRwb3N0KCBKUFMuc2l0ZV9hY3Rpb25zLnNldF9sYXlvdXQsIHsgbGF5b3V0OiBsYXlvdXROYW1lIH0gKS5cblx0XHRcdGZhaWwoIGZ1bmN0aW9uIChtc2cgKSB7XG5cdFx0XHRcdEZsYXNoQWN0aW9ucy5lcnJvcihcIkVycm9yIHNldHRpbmcgbGF5b3V0OiBcIittc2cpO1xuXHRcdFx0fSk7XG5cblx0XHQvLyBGbGFzaEFjdGlvbnMubm90aWNlKFwiU2V0IGxheW91dCB0byBcIitsYXlvdXROYW1lKTtcblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TSVRFX1NFVF9MQVlPVVQsXG5cdFx0XHRsYXlvdXQ6IGxheW91dE5hbWVcblx0ICAgIH0pO1xuXG5cdCAgICByZXR1cm4galF1ZXJ5LkRlZmVycmVkKCkucmVzb2x2ZSgpOyAvLyBYWFggSEFDS1xuXHR9LFxuXG5cdGNvbmZpZ3VyZUpldHBhY2s6IGZ1bmN0aW9uKHJldHVybl90b19zdGVwKSB7XG5cdFx0U3Bpbm5lckFjdGlvbnMuc2hvdyhcIkNvbm5lY3RpbmcgdG8gV29yZFByZXNzLmNvbVwiKTtcblx0XHRyZXR1cm4gV1BBamF4LlxuXHRcdFx0cG9zdCggSlBTLnNpdGVfYWN0aW9ucy5jb25maWd1cmVfamV0cGFjaywgeyByZXR1cm5fdG9fc3RlcDogcmV0dXJuX3RvX3N0ZXAgfSApLlxuXHRcdFx0ZG9uZSggZnVuY3Rpb24gKCBkYXRhICkge1xuXHRcdFx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU0lURV9KRVRQQUNLX0NPTkZJR1VSRURcblx0XHRcdCAgICB9KTtcblxuXHRcdFx0XHRpZiAoIGRhdGEubmV4dCApIHtcblx0XHRcdFx0XHR3aW5kb3cubG9jYXRpb24ucmVwbGFjZShkYXRhLm5leHQpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFNwaW5uZXJBY3Rpb25zLmhpZGUoKTtcblx0XHRcdFx0fVxuXHRcdFx0fSkuXG5cdFx0XHRmYWlsKCBmdW5jdGlvbiAoIG1zZyApIHtcblx0XHRcdFx0Rmxhc2hBY3Rpb25zLmVycm9yKFwiRXJyb3IgZW5hYmxpbmcgSmV0cGFjazogXCIrbXNnKTtcblx0XHRcdFx0U3Bpbm5lckFjdGlvbnMuaGlkZSgpO1xuXHRcdFx0fSk7XG5cdH0sXG5cblx0YWN0aXZhdGVKZXRwYWNrTW9kdWxlOiBmdW5jdGlvbihtb2R1bGVfc2x1Zykge1xuXG5cdFx0V1BBamF4LlxuXHRcdFx0cG9zdCggSlBTLnNpdGVfYWN0aW9ucy5hY3RpdmF0ZV9qZXRwYWNrX21vZHVsZXMsIHsgbW9kdWxlczogW21vZHVsZV9zbHVnXSB9KS5cblx0XHRcdGZhaWwoIGZ1bmN0aW9uICggbXNnICkge1xuXHRcdFx0XHRGbGFzaEFjdGlvbnMuZXJyb3IoXCJFcnJvciBhY3RpdmF0aW5nIEpldHBhY2sgbW9kdWxlOiBcIittc2cpO1xuXHRcdFx0fSk7XG5cblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TSVRFX0pFVFBBQ0tfTU9EVUxFX0VOQUJMRUQsXG5cdFx0XHRzbHVnOiBtb2R1bGVfc2x1Z1xuXHQgICAgfSk7XG5cblx0XHRyZXR1cm4galF1ZXJ5LkRlZmVycmVkKCkucmVzb2x2ZSgpOyAvLyBYWFggSEFDS1xuXHR9LFxuXG5cdGRlYWN0aXZhdGVKZXRwYWNrTW9kdWxlOiBmdW5jdGlvbihtb2R1bGVfc2x1Zykge1xuXG5cdFx0V1BBamF4LlxuXHRcdFx0cG9zdCggSlBTLnNpdGVfYWN0aW9ucy5kZWFjdGl2YXRlX2pldHBhY2tfbW9kdWxlcywgeyBtb2R1bGVzOiBbbW9kdWxlX3NsdWddIH0pLlxuXHRcdFx0ZmFpbCggZnVuY3Rpb24gKCBtc2cgKSB7XG5cdFx0XHRcdEZsYXNoQWN0aW9ucy5lcnJvcihcIkVycm9yIGRlYWN0aXZhdGluZyBKZXRwYWNrIG1vZHVsZTogXCIrbXNnKTtcblx0XHRcdH0pO1xuXG5cdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU0lURV9KRVRQQUNLX01PRFVMRV9ESVNBQkxFRCxcblx0XHRcdHNsdWc6IG1vZHVsZV9zbHVnXG5cdCAgICB9KTtcblxuXHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoKS5yZXNvbHZlKCk7IC8vIFhYWCBIQUNLXG5cdH0sXG5cblx0bG9hZEFsbEpldHBhY2tNb2R1bGVzOiBmdW5jdGlvbigpIHtcblx0XHRpZiAoIFNpdGVTdG9yZS5nZXRKZXRwYWNrQWRkaXRpb25hbE1vZHVsZXMoKS5sZW5ndGggPT09IDAgKSB7XG5cdFx0XHRyZXR1cm4gV1BBamF4LlxuXHRcdFx0XHRwb3N0KCBKUFMuc2l0ZV9hY3Rpb25zLmxpc3RfamV0cGFja19tb2R1bGVzICkuXG5cdFx0XHRcdGRvbmUoIGZ1bmN0aW9uICggYWxsX21vZHVsZXMgKSB7XG5cdFx0XHRcdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRcdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU0lURV9KRVRQQUNLX0FERF9NT0RVTEVTLFxuXHRcdFx0XHRcdFx0bW9kdWxlczogYWxsX21vZHVsZXNcblx0XHRcdFx0ICAgIH0pO1xuXHRcdFx0XHR9KS5cblx0XHRcdFx0ZmFpbCggZnVuY3Rpb24gKCBtc2cgKSB7XG5cdFx0XHRcdFx0Rmxhc2hBY3Rpb25zLmVycm9yKFwiRXJyb3IgZmV0Y2hpbmcgYWxsIEpldHBhY2sgbW9kdWxlczogXCIrbXNnKTtcblx0XHRcdFx0fSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoKS5yZXNvbHZlKCk7IC8vIFhYWCBIQUNLXG5cdFx0fVxuXHR9LFxuXG5cdGVuYWJsZUp1bXBzdGFydDogZnVuY3Rpb24oKSB7XG5cdFx0V1BBamF4LlxuXHRcdFx0cG9zdCggSlBTLnNpdGVfYWN0aW9ucy5hY3RpdmF0ZV9qZXRwYWNrX21vZHVsZXMsIHsgbW9kdWxlczogU2l0ZVN0b3JlLmdldEp1bXBzdGFydE1vZHVsZVNsdWdzKCkgfSkuXG5cdFx0XHRmYWlsKCBmdW5jdGlvbiAoIG1zZyApIHtcblx0XHRcdFx0Rmxhc2hBY3Rpb25zLmVycm9yKFwiRXJyb3IgYWN0aXZhdGluZyBKZXRwYWNrIG1vZHVsZXM6IFwiK21zZyk7XG5cdFx0XHR9KTtcblxuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlNJVEVfSkVUUEFDS19KVU1QU1RBUlRfRU5BQkxFRFxuXHQgICAgfSk7XG5cblx0XHRyZXR1cm4galF1ZXJ5LkRlZmVycmVkKCkucmVzb2x2ZSgpOyAvLyBYWFggSEFDS1xuXHR9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNpdGVBY3Rpb25zOyIsInZhciBBcHBEaXNwYXRjaGVyID0gcmVxdWlyZSgnLi4vZGlzcGF0Y2hlci9hcHAtZGlzcGF0Y2hlcicpLFxuXHRKUFNDb25zdGFudHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvamV0cGFjay1zdGFydC1jb25zdGFudHMnKTtcblxudmFyIFNwaW5uZXJBY3Rpb25zID0ge1xuXHRzaG93OiBmdW5jdGlvbihtc2cpIHtcblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TSE9XX1NQSU5ORVIsXG5cdFx0XHRtZXNzYWdlOiBtc2dcblx0XHR9KTtcblx0fSxcblxuXHRoaWRlOiBmdW5jdGlvbigpIHtcblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5ISURFX1NQSU5ORVIsXG5cdFx0fSk7XHRcblx0fSxcblxuXHRzaG93QXN5bmM6IGZ1bmN0aW9uKG1zZykge1xuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlNIT1dfQVNZTkNfU1BJTk5FUixcblx0XHRcdG1lc3NhZ2U6IG1zZ1xuXHRcdH0pO1x0XHRcblx0fSxcblxuXHRoaWRlQXN5bmM6IGZ1bmN0aW9uKCkge1xuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLkhJREVfQVNZTkNfU1BJTk5FUlxuXHRcdH0pO1x0XHRcdFxuXHR9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNwaW5uZXJBY3Rpb25zOyIsInZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93WydSZWFjdCddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnUmVhY3QnXSA6IG51bGwpLFxuXHRCdXR0b24gPSByZXF1aXJlKCdAYXV0b21hdHRpYy9kb3BzLXJlYWN0L2pzL2NvbXBvbmVudHMvYnV0dG9uJyksXG5cdFNpdGVTdG9yZSA9IHJlcXVpcmUoJy4uL3N0b3Jlcy9zaXRlLXN0b3JlJyksXG5cdFdlbGNvbWVTZWN0aW9uID0gcmVxdWlyZSgnLi93ZWxjb21lLXNlY3Rpb24nKTtcblxuZnVuY3Rpb24gZ2V0U2l0ZVN0YXRlKCkge1xuXHRyZXR1cm4ge1xuXHRcdHNpdGVfdGl0bGU6IFNpdGVTdG9yZS5nZXRUaXRsZSgpXG5cdH07XG59XG5cbnZhciBTZXR0aW5nc0l0ZW0gPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiU2V0dGluZ3NJdGVtXCIsXG5cdHN0eWxlczoge1xuXHRcdGl0ZW06IHtcblx0XHRcdHBhZGRpbmc6ICcxZW0nLFxuXHRcdFx0bWFyZ2luQm90dG9tOiAnMWVtJyxcblx0XHRcdGxpc3RTdHlsZTogJ25vbmUnLFxuXHRcdFx0YmFja2dyb3VuZDogJyNmNWY1ZjUnLFxuXHRcdFx0Ym9yZGVyOiAnMXB4IHNvbGlkICNkZGQnXG5cdFx0fSxcblxuXHRcdGhlYWRpbmc6IHtcblx0XHRcdG1hcmdpbjogMCxcblx0XHRcdGZvbnRTaXplOiAnMS4yZW0nLFxuXHRcdFx0Zm9udFdlaWdodDogODAwXG5cdFx0fVxuXHR9LFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCB7c3R5bGU6IHRoaXMuc3R5bGVzLml0ZW19LCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImg1XCIsIHtzdHlsZTogdGhpcy5zdHlsZXMuaGVhZGluZ30sIHRoaXMucHJvcHMudGl0bGUpLCBcblx0XHRcdFx0dGhpcy5wcm9wcy5jaGlsZHJlblx0XHRcdFx0XG5cdFx0XHQpXG5cdFx0KTtcblx0fVxufSk7XG5cbnZhciBBZHZhbmNlZFNldHRpbmdzU3RlcCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtkaXNwbGF5TmFtZTogXCJBZHZhbmNlZFNldHRpbmdzU3RlcFwiLFxuXG5cdHN0eWxlczoge1xuXHRcdHdyYXBwZXI6IHtcblx0XHRcdG1hcmdpbkxlZnQ6IDBcblx0XHR9XG5cdH0sXG5cbiAgXHRnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBnZXRTaXRlU3RhdGUoKTtcblx0fSxcblxuXHRjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0U2l0ZVN0b3JlLmFkZENoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0fSxcblxuXHRjb21wb25lbnRXaWxsVW5tb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0U2l0ZVN0b3JlLnJlbW92ZUNoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0fSxcblxuXHRfb25DaGFuZ2U6IGZ1bmN0aW9uKCkge1xuICAgIFx0dGhpcy5zZXRTdGF0ZShnZXRTaXRlU3RhdGUoKSk7XG4gIFx0fSxcblxuXHRyZW5kZXI6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiAoXG5cdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFdlbGNvbWVTZWN0aW9uLCBudWxsLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImgzXCIsIG51bGwsIFwiTGV0J3MgbGF1bmNoIFwiLCBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZW1cIiwgbnVsbCwgdGhpcy5zdGF0ZS5zaXRlX3RpdGxlKSksIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDRcIiwgbnVsbCwgXCJBZHZhbmNlZCBzZXR0aW5nc1wiKSwgXG5cblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInVsXCIsIHtzdHlsZTogdGhpcy5zdHlsZXMud3JhcHBlcn0sIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoU2V0dGluZ3NJdGVtLCB7dGl0bGU6IFwiRmluZS10dW5lIHlvdXIgc2l0ZSdzIGxheW91dCBhbmQgYXBwZWFyYW5jZVwifSwgXG5cdFx0XHRcdFx0XHRcIkN1c3RvbWl6ZSB5b3VyIHNpdGXigJlzIGNvbG9ycywgZm9udHMsIHNpZGViYXJzIGFuZCBvdGhlciBzZXR0aW5ncy5cIiwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiYnJcIiwgbnVsbCksIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHtjb2xvcjogXCJibHVlXCIsIGhyZWY6IEpQUy5zdGVwcy5hZHZhbmNlZF9zZXR0aW5ncy5jdXN0b21pemVfdXJsfSwgXCJDdXN0b21pemUgbXkgc2l0ZVwiKSwgXG5cdFx0XHRcdFx0XHRcIsKgwqBcIiwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwge2NvbG9yOiBcImJsdWVcIiwgaHJlZjogSlBTLnN0ZXBzLmFkdmFuY2VkX3NldHRpbmdzLnRoZW1lc191cmx9LCBcIkJyb3dzZSBhbmQgYWRkIHRoZW1lc1wiKVxuXHRcdFx0XHRcdCksIFxuXG5cdFx0XHRcdFx0KFNpdGVTdG9yZS5nZXRMYXlvdXQoKSA9PSAnYmxvZycgfHwgU2l0ZVN0b3JlLmdldExheW91dCgpID09ICdzaXRlLWJsb2cnKSAmJiAoXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFNldHRpbmdzSXRlbSwge3RpdGxlOiBcIkNyZWF0ZSB5b3VyIGZpcnN0IGJsb2cgcG9zdFwifSwgXG5cdFx0XHRcdFx0XHRcdFwiQW4gZXBpYyBlc3NheSBvciBqdXN0IFxcXCJIZWxsbyBXb3JsZCFcXFwiXCIsIFxuXHRcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiYnJcIiwgbnVsbCksIFxuXHRcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwge2NvbG9yOiBcImJsdWVcIiwgaHJlZjogSlBTLnN0ZXBzLmFkdmFuY2VkX3NldHRpbmdzLm5ld19ibG9nX3Bvc3RfdXJsfSwgXCJXcml0ZSBhIG5ldyBibG9nIHBvc3RcIiksIFxuXHRcdFx0XHRcdFx0XHRcIsKgwqBcIiwgXG5cdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7Y29sb3I6IFwiYmx1ZVwiLCBocmVmOiBKUFMuc3RlcHMuYWR2YW5jZWRfc2V0dGluZ3MubWFuYWdlX3Bvc3RzX3VybH0sIFwiTWFuYWdlIHBvc3RzXCIpXG5cdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0KSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChTZXR0aW5nc0l0ZW0sIHt0aXRsZTogXCJDcmVhdGUgYSBzdGF0aWMgcGFnZVwifSwgXG5cdFx0XHRcdFx0XHRcIlxcXCJBYm91dCBtZVxcXCIsIFxcXCJPdXIgU2VydmljZXNcXFwiIG9yIGFueXRoaW5nIGVsc2UgeW91IGNhbiBpbWFnaW5lLlwiLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJiclwiLCBudWxsKSwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwge2NvbG9yOiBcImJsdWVcIiwgaHJlZjogSlBTLnN0ZXBzLmFkdmFuY2VkX3NldHRpbmdzLm5ld19wYWdlX3VybH0sIFwiQ3JlYXRlIGEgbmV3IHBhZ2VcIiksIFxuXHRcdFx0XHRcdFx0XCLCoMKgXCIsIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHtjb2xvcjogXCJibHVlXCIsIGhyZWY6IEpQUy5zdGVwcy5hZHZhbmNlZF9zZXR0aW5ncy5tYW5hZ2VfcGFnZXNfdXJsfSwgXCJNYW5hZ2UgcGFnZXNcIilcblx0XHRcdFx0XHQpLCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFNldHRpbmdzSXRlbSwge3RpdGxlOiBcIkV4dGVuZCB5b3VyIHNpdGUncyBmdW5jdGlvbmFsaXR5XCJ9LCBcblx0XHRcdFx0XHRcdFwiV29yZFByZXNzIG9mZmVycyB0aG91c2FuZHMgb2YgcGx1Z2lucyBmcm9tIEpldHBhY2sgYW5kIHRoZSBXb3JkUHJlc3MgY29tbXVuaXR5LlwiLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJiclwiLCBudWxsKSwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwge2NvbG9yOiBcImJsdWVcIiwgaHJlZjogSlBTLnN0ZXBzLmFkdmFuY2VkX3NldHRpbmdzLnBsdWdpbnNfdXJsfSwgXCJNYW5hZ2UgcGx1Z2luc1wiKSwgXG5cdFx0XHRcdFx0XHRcIsKgwqBcIiwgXG5cdFx0XHRcdFx0XHRTaXRlU3RvcmUuZ2V0SmV0cGFja0NvbmZpZ3VyZWQoKSAmJiAoXG5cdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7Y29sb3I6IFwiYmx1ZVwiLCBocmVmOiBKUFMuc3RlcHMuYWR2YW5jZWRfc2V0dGluZ3MuamV0cGFja19tb2R1bGVzX3VybH0sIFwiTWFuYWdlIEpldHBhY2sgbW9kdWxlc1wiKVxuXHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdCksIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoU2V0dGluZ3NJdGVtLCB7dGl0bGU6IFwiTGVhcm4gbW9yZVwifSwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCB7aHJlZjogXCJodHRwczovL2NvZGV4LndvcmRwcmVzcy5vcmcvRmlyc3RfU3RlcHNfV2l0aF9Xb3JkUHJlc3NcIn0sIFwiRmlyc3QgU3RlcHMgd2l0aCBXb3JkUHJlc3NcIiksIFwiIC0gYW4gb25saW5lIGd1aWRlIGZyb20gdGhlIGNyZWF0b3JzIG9mIFdvcmRQcmVzc1wiXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpXG5cdFx0XHQpXG5cdFx0KTtcblx0fVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gQWR2YW5jZWRTZXR0aW5nc1N0ZXA7IiwidmFyIFJlYWN0ID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJ1JlYWN0J10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWydSZWFjdCddIDogbnVsbCk7XG5cbnZhciBDb250ZW50Qm94ID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiBcIkNvbnRlbnRCb3hcIixcblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gKFxuXHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiBcIndlbGNvbWVfX2NvbnRlbnRfYm94XCJ9LCBcblx0XHRcdFx0dGhpcy5wcm9wcy5jaGlsZHJlbiwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2NsYXNzTmFtZTogXCJjbGVhclwifSlcblx0XHRcdClcblx0XHQpO1xuXHR9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBDb250ZW50Qm94OyIsIi8vIHNpbXBsZSBub3RpY29uIHdyYXBwZXJcblxudmFyIFJlYWN0ID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJ1JlYWN0J10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWydSZWFjdCddIDogbnVsbCk7XG5cbnZhciBEYXNoaWNvbiA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtkaXNwbGF5TmFtZTogXCJEYXNoaWNvblwiLFxuXHRcblx0cHJvcFR5cGVzOiB7XG5cdFx0bmFtZTogUmVhY3QuUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuXHRcdHN0eWxlOiBSZWFjdC5Qcm9wVHlwZXMub2JqZWN0LFxuXHRcdG9uTW91c2VPdmVyOiBSZWFjdC5Qcm9wVHlwZXMuZnVuYyxcblx0XHRvbk1vdXNlT3V0OiBSZWFjdC5Qcm9wVHlwZXMuZnVuY1xuXHR9LFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtcblx0XHRcdFx0c3R5bGU6IHRoaXMucHJvcHMuc3R5bGUsIFxuXHRcdFx0XHRvbk1vdXNlT3ZlcjogdGhpcy5wcm9wcy5vbk1vdXNlT3ZlciwgXG5cdFx0XHRcdG9uTW91c2VPdXQ6IHRoaXMucHJvcHMub25Nb3VzZU91dCwgXG5cdFx0XHRcdGNsYXNzTmFtZTogXCJkYXNoaWNvbnMgZGFzaGljb25zLVwiK3RoaXMucHJvcHMubmFtZX0sIFxuXG5cdFx0XHRcdHRoaXMucHJvcHMuY2hpbGRyZW5cblx0XHRcdFx0XG5cdFx0XHQpXG5cdFx0KTtcblx0fVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gRGFzaGljb247IiwidmFyIFJlYWN0ID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJ1JlYWN0J10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWydSZWFjdCddIDogbnVsbCksXG5cdFNpdGVTdG9yZSA9IHJlcXVpcmUoJy4uL3N0b3Jlcy9zaXRlLXN0b3JlJyksXG5cdFNldHVwUHJvZ3Jlc3NBY3Rpb25zID0gcmVxdWlyZSgnLi4vYWN0aW9ucy9zZXR1cC1wcm9ncmVzcy1hY3Rpb25zJyksXG5cdFRvb2x0aXAgPSByZXF1aXJlKCcuL3Rvb2x0aXAnKSxcblx0V2VsY29tZVNlY3Rpb24gPSByZXF1aXJlKCcuL3dlbGNvbWUtc2VjdGlvbicpLFxuXHRDb250ZW50Qm94ID0gcmVxdWlyZSgnLi9jb250ZW50LWJveCcpLFxuXHRzdHlsZXMgPSByZXF1aXJlKCcuLi9zdHlsZXMnKSxcblx0QnV0dG9uID0gcmVxdWlyZSgnQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9qcy9jb21wb25lbnRzL2J1dHRvbicpO1xuXG5mdW5jdGlvbiBnZXRUaGVtZVN0YXRlKCkge1xuXHRyZXR1cm4geyB0aGVtZXM6IFNpdGVTdG9yZS5nZXRUaGVtZXMoKSwgc2l0ZV90aXRsZTogU2l0ZVN0b3JlLmdldFRpdGxlKCkgfTtcbn1cblxudmFyIERlc2lnblN0ZXAgPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiRGVzaWduU3RlcFwiLFxuXG5cdGNvbXBvbmVudERpZE1vdW50OiBmdW5jdGlvbigpIHtcblx0XHRTaXRlU3RvcmUuYWRkQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuXHRcdHRoaXMuX2xvYWRQb3B1bGFyVGhlbWVzKCk7XG5cdH0sXG5cblx0Y29tcG9uZW50V2lsbFVubW91bnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFNpdGVTdG9yZS5yZW1vdmVDaGFuZ2VMaXN0ZW5lcih0aGlzLl9vbkNoYW5nZSk7XG5cdH0sXG5cblx0X29uQ2hhbmdlOiBmdW5jdGlvbigpIHtcbiAgICBcdHRoaXMuc2V0U3RhdGUoZ2V0VGhlbWVTdGF0ZSgpKTtcbiAgXHR9LFxuXG5cdGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGluaXRpYWxTdGF0ZSA9IGdldFRoZW1lU3RhdGUoKTtcblx0XHRpbml0aWFsU3RhdGUucG9wdWxhclRoZW1lcyA9IFtdO1xuXHRcdHJldHVybiBpbml0aWFsU3RhdGU7XG5cdH0sXG5cblx0aGFuZGxlQWN0aXZhdGVUaGVtZTogZnVuY3Rpb24gKCBlICkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcblx0XHR0aGlzLnNldFN0YXRlKHt0b29sdGlwVGhlbWU6IG51bGwsIHRvb2x0aXBQb3NpdGlvbjogbnVsbH0pO1xuXG5cdFx0dmFyICRlbCA9IGpRdWVyeShlLmN1cnJlbnRUYXJnZXQpLFxuXHRcdFx0dGhlbWVJZCA9ICRlbC5kYXRhKCd0aGVtZS1pZCcpLFxuXHRcdFx0dGhlbWUgPSB0aGlzLmZpbmRUaGVtZSh0aGVtZUlkKSxcblx0XHRcdG5lZWRzSW5zdGFsbGF0aW9uID0gIXRoZW1lLmluc3RhbGxlZDtcblxuXHRcdHZhciByZXNwb25zZSA9IFNldHVwUHJvZ3Jlc3NBY3Rpb25zLnNldEFjdGl2ZVRoZW1lKHRoZW1lKTtcblxuXHRcdC8vIGlmIHdlIGp1c3QgaW5zdGFsbGVkIGEgdGhlbWUgZnJvbSB0aGUgXCJwb3B1bGFyXCIgbGlzdCwgbGV0J3MgbG9hZCBzb21lIG5ld1xuXHRcdC8vIHNlbGVjdGlvbnMgb25jZSBpbnN0YWxsYXRpb24gaXMgZmluaXNoZWRcblx0XHRpZiAoIG5lZWRzSW5zdGFsbGF0aW9uICkge1xuXHRcdFx0cmVzcG9uc2UuZG9uZSggZnVuY3Rpb24gKCkge1xuXHRcdFx0XHR0aGlzLl9sb2FkUG9wdWxhclRoZW1lcygpO1xuXHRcdFx0fS5iaW5kKHRoaXMpKTtcblx0XHR9XG5cdH0sXG5cblx0ZmluZFRoZW1lOiBmdW5jdGlvbiAoIHRoZW1lSWQgKVx0e1xuXHRcdHJldHVybiBfLmZpbmRXaGVyZSh0aGlzLnN0YXRlLnRoZW1lcywge2lkOiB0aGVtZUlkfSkgfHwgXy5maW5kV2hlcmUodGhpcy5zdGF0ZS5wb3B1bGFyVGhlbWVzLCB7aWQ6IHRoZW1lSWR9KTtcblx0fSxcblxuXHRoYW5kbGVDb250aW51ZTogZnVuY3Rpb24gKCBlICkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRTZXR1cFByb2dyZXNzQWN0aW9ucy5zYXZlRGVzaWduU3RlcCgpO1xuXHR9LFxuXG5cdGhhbmRsZVNob3dUb29sdGlwOiBmdW5jdGlvbiAoIGUgKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG5cdFx0dmFyICRlbCAgID0galF1ZXJ5KGUuY3VycmVudFRhcmdldCksXG5cdFx0XHR0aGVtZSA9IHRoaXMuZmluZFRoZW1lKCRlbC5kYXRhKCd0aGVtZS1pZCcpKSxcblx0XHRcdG9mZnNldCA9ICRlbC5wb3NpdGlvbigpLFxuXHRcdFx0d2lkdGggPSAkZWwub3V0ZXJXaWR0aCgpLFxuXHRcdFx0aGVpZ2h0ID0gJGVsLm91dGVySGVpZ2h0KCk7XG5cdFx0XG5cdFx0Ly9kZXNjcmliZXMgYSBwb3NpdGlvbiBpbiB0aGUgbWlkZGxlIG9mIHRoZSByaWdodCBzaWRlXG5cdFx0dmFyIHBvc2l0aW9uID0ge1xuXHRcdFx0dG9wOiBvZmZzZXQudG9wICsgKGhlaWdodC8yKSxcblx0XHRcdGxlZnQ6IG9mZnNldC5sZWZ0ICsgd2lkdGhcblx0XHR9O1xuXG5cdFx0dGhpcy5zZXRTdGF0ZSh7dG9vbHRpcFRoZW1lOiB0aGVtZSwgdG9vbHRpcFBvc2l0aW9uOiBwb3NpdGlvbn0pO1xuXHR9LFxuXG5cdGhhbmRsZUhpZGVUb29sdGlwOiBmdW5jdGlvbiAoIGUgKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdHRoaXMuc2V0U3RhdGUoe3Rvb2x0aXBUaGVtZTogbnVsbCwgdG9vbHRpcFBvc2l0aW9uOiBudWxsfSk7XG5cdH0sXG5cblx0aGFuZGxlR2V0UG9wdWxhclRoZW1lczogZnVuY3Rpb24gKCBlICkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHR0aGlzLl9sb2FkUG9wdWxhclRoZW1lcygpO1x0XHRcblx0fSxcblxuXHRfbG9hZFBvcHVsYXJUaGVtZXM6IGZ1bmN0aW9uKCkge1xuXHRcdFNpdGVTdG9yZS5nZXRQb3B1bGFyVGhlbWVzKCkuZG9uZShmdW5jdGlvbih0aGVtZXMpIHtcblx0XHRcdHRoaXMuc2V0U3RhdGUoe3BvcHVsYXJUaGVtZXM6IHRoZW1lc30pO1xuXHRcdH0uYmluZCh0aGlzKSk7XG5cdH0sXG5cblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblxuXHRcdHJldHVybiAoXG5cdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFdlbGNvbWVTZWN0aW9uLCB7aWQ6IFwid2VsY29tZV9fZGVzaWduXCJ9LCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImgzXCIsIG51bGwsIFwiTGV0J3MgbGF1bmNoIFwiLCBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZW1cIiwgbnVsbCwgdGhpcy5zdGF0ZS5zaXRlX3RpdGxlKSksIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDRcIiwgbnVsbCwgXCJQaWNrIGEgZGVzaWduXCIpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge3N0eWxlOiBzdHlsZXMuY29udGVudH0sIFwiQSBcXFwidGhlbWVcXFwiIGNvbnRyb2xzIHRoZSBkZXNpZ24gb2YgeW91ciBzaXRlIC0gY29sb3VycywgZm9udHMgYW5kIGxheW91dC5cIiksIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCB7c3R5bGU6IHN0eWxlcy5jb250ZW50fSwgXCJDbGljayBhbnkgdGhlbWUgYmVsb3cgdG8gY2hvb3NlIGl0IGZvciB5b3VyIHNpdGUuIEFuZCBkb24ndCB3b3JyeSAtIHlvdSBjYW4gZWFzaWx5IGNoYW5nZSB0aGlzIGxhdGVyLlwiKSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHtjbGFzc05hbWU6IFwic3VibWl0XCJ9LCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwge2NvbG9yOiBcImJsdWVcIiwgb25DbGljazogdGhpcy5oYW5kbGVDb250aW51ZX0sIFwiTmV4dCBTdGVwIOKGklwiKVxuXHRcdFx0XHQpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChDb250ZW50Qm94LCBudWxsLCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgXCJJbnN0YWxsZWQgdGhlbWVzXCIpLCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IFwidGhlbWUtYnJvd3NlciByZW5kZXJlZFwifSwgXG5cdFx0XHRcdFx0XHR0aGlzLl9yZW5kZXJUaGVtZUxpc3QoKVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KSwgXG5cdFx0XHRcdFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KENvbnRlbnRCb3gsIG51bGwsIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoM1wiLCBudWxsLCBcIlBvcHVsYXIgdGhlbWVzIGZyb20gV29yZFByZXNzLm9yZ1wiLCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwge2NvbG9yOiBcImJsdWVcIiwgc3R5bGU6IHtmbG9hdDogJ3JpZ2h0J30sIG9uQ2xpY2s6IHRoaXMuaGFuZGxlR2V0UG9wdWxhclRoZW1lc30sIFwiTG9hZCBtb3JlIHRoZW1lc1wiKVxuXHRcdFx0XHRcdCksIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2NsYXNzTmFtZTogXCJ0aGVtZS1icm93c2VyIHJlbmRlcmVkXCJ9LCBcblx0XHRcdFx0XHRcdHRoaXMuX3JlbmRlclBvcHVsYXJUaGVtZUxpc3QoKVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KSwgXG5cblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7c3R5bGU6IHtjbGVhcjogJ2JvdGgnfX0pLCBcblx0XHRcdFx0dGhpcy5zdGF0ZS50b29sdGlwVGhlbWUgJiYgdGhpcy5fcmVuZGVyVG9vbHRpcCgpXG5cdFx0XHQpXG5cdFx0KTtcblx0fSxcblxuXHRfcmVuZGVyVG9vbHRpcDogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIHRoZW1lID0gdGhpcy5zdGF0ZS50b29sdGlwVGhlbWUsIHBvc2l0aW9uID0gdGhpcy5zdGF0ZS50b29sdGlwUG9zaXRpb247XG5cdFx0cmV0dXJuIChcblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoVG9vbHRpcCwge1xuXHRcdFx0XHRsZWZ0OiBwb3NpdGlvbi5sZWZ0LCBcblx0XHRcdFx0dG9wOiBwb3NpdGlvbi50b3AsIFxuXHRcdFx0XHR3aWR0aDogMzIwLCBcblx0XHRcdFx0dGl0bGU6IHRoZW1lLm5hbWV9LCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwgbnVsbCwgXCJCeSBcIiwgdGhlbWUuYXV0aG9yKSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHtkYW5nZXJvdXNseVNldElubmVySFRNTDoge19faHRtbDogXy51bmVzY2FwZSh0aGVtZS5kZXNjcmlwdGlvbil9fSlcblx0XHRcdClcblx0XHQpO1xuXHR9LFxuXG5cdF9yZW5kZXJUaGVtZTogZnVuY3Rpb24odGhlbWUpIHtcblx0XHRyZXR1cm4gKFxuXHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7a2V5OiB0aGVtZS5pZCwgXG5cdFx0XHRcdGNsYXNzTmFtZTogJ3RoZW1lJyArICh0aGVtZS5hY3RpdmUgPyAnIGFjdGl2ZScgOiAnJyksIFxuXHRcdFx0XHRcImRhdGEtdGhlbWUtaWRcIjogdGhlbWUuaWQsIFxuXHRcdFx0XHRvbkNsaWNrOiB0aGlzLmhhbmRsZUFjdGl2YXRlVGhlbWUsIFxuXHRcdFx0XHRvbk1vdXNlRW50ZXI6IHRoaXMuaGFuZGxlU2hvd1Rvb2x0aXAsIFxuXHRcdFx0XHRvbk1vdXNlTGVhdmU6IHRoaXMuaGFuZGxlSGlkZVRvb2x0aXAsIFxuXHRcdFx0XHRcImFyaWEtZGVzY3JpYmVkYnlcIjogdGhlbWUuaWQrJy1hY3Rpb24gJyt0aGVtZS5pZCsnLW5hbWUnfSwgXG5cblx0XHRcdFx0dGhlbWUuc2NyZWVuc2hvdCA/IChcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IFwidGhlbWUtc2NyZWVuc2hvdFwifSwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaW1nXCIsIHtzcmM6IHRoZW1lLnNjcmVlbnNob3QsIGFsdDogXCJcIn0pXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpIDogKFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2NsYXNzTmFtZTogXCJ0aGVtZS1zY3JlZW5zaG90IGJsYW5rXCJ9KVxuXHRcdFx0XHQpLCBcblx0XHRcdFx0IXRoZW1lLmFjdGl2ZSAmJiAoUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwge2NsYXNzTmFtZTogXCJtb3JlLWRldGFpbHNcIn0sIHRoZW1lLmluc3RhbGxlZCA/ICdDbGljayB0byBzZWxlY3QnIDogJ0NsaWNrIHRvIGluc3RhbGwnKSksIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwge2NsYXNzTmFtZTogXCJ0aGVtZS1uYW1lXCIsIGlkOiB0aGVtZS5pZCsnLW5hbWUnfSwgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgdGhlbWUuYWN0aXZlID8gJ1NlbGVjdGVkOicgOiAnJyksIFwiIFwiLCB0aGVtZS5uYW1lKVxuXHRcdFx0KVxuXHRcdCk7XG5cdH0sXG5cblx0X3JlbmRlclBvcHVsYXJUaGVtZUxpc3Q6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLnN0YXRlLnBvcHVsYXJUaGVtZXMubWFwKCB0aGlzLl9yZW5kZXJUaGVtZSApO1xuXHR9LFxuXG5cdF9yZW5kZXJUaGVtZUxpc3Q6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLnN0YXRlLnRoZW1lcy5tYXAoIHRoaXMuX3JlbmRlclRoZW1lICk7XG5cdH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IERlc2lnblN0ZXA7IiwiLyoqXG4gKiBEaXNwbGF5cyBhIGZsYXNoIG1lc3NhZ2UsIGlmIHNldC5cbiAqIEpTT04gc3RydWN0dXJlOlxuICogeyBzZXZlcml0eTogJ25vdGljZScsIG1lc3NhZ2U6ICdNeSBtZXNzYWdlJyB9XG4gKlxuICogVmFsaWQgc2V2ZXJpdGllczpcbiAqIC0gZXJyb3IsIG5vdGljZVxuICovXG5cbnZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93WydSZWFjdCddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnUmVhY3QnXSA6IG51bGwpLFxuXHRGbGFzaFN0b3JlID0gcmVxdWlyZSgnLi4vc3RvcmVzL2ZsYXNoLXN0b3JlJyk7XG5cbmZ1bmN0aW9uIGdldEZsYXNoU3RhdGUoKSB7XG5cdHJldHVybiBGbGFzaFN0b3JlLmdldEZsYXNoKCk7XG59XG5cbnZhciBGbGFzaCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtkaXNwbGF5TmFtZTogXCJGbGFzaFwiLFxuXHRjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0Rmxhc2hTdG9yZS5hZGRDaGFuZ2VMaXN0ZW5lcih0aGlzLl9vbkNoYW5nZSk7XG5cdH0sXG5cblx0Y29tcG9uZW50V2lsbFVubW91bnQ6IGZ1bmN0aW9uKCkge1xuXHRcdEZsYXNoU3RvcmUucmVtb3ZlQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuXHR9LFxuXG5cdF9vbkNoYW5nZTogZnVuY3Rpb24oKSB7XG4gICAgXHR0aGlzLnNldFN0YXRlKGdldEZsYXNoU3RhdGUoKSk7XG4gIFx0fSxcblxuXHRnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBnZXRGbGFzaFN0YXRlKCk7XG5cdH0sXG5cblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHRpZiAoIHRoaXMuc3RhdGUubWVzc2FnZSApIHtcblx0XHRcdHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiB0aGlzLnN0YXRlLnNldmVyaXR5ICsgJyB1cGRhdGVkJ30sIHRoaXMuc3RhdGUubWVzc2FnZSkpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXR1cm4gbnVsbDtcblx0XHR9XG5cdH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEZsYXNoOyIsInZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93WydSZWFjdCddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnUmVhY3QnXSA6IG51bGwpLFxuXHRTZXR1cFByb2dyZXNzU3RvcmUgPSByZXF1aXJlKCcuLi9zdG9yZXMvc2V0dXAtcHJvZ3Jlc3Mtc3RvcmUnKSxcblx0U2V0dXBQcm9ncmVzc0FjdGlvbnMgPSByZXF1aXJlKCcuLi9hY3Rpb25zL3NldHVwLXByb2dyZXNzLWFjdGlvbnMnKSxcblx0QnV0dG9uID0gcmVxdWlyZSgnQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9qcy9jb21wb25lbnRzL2J1dHRvbicpLFxuXHRtID0gcmVxdWlyZSgnQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9qcy91dGlscy9tJyksXG5cdFJhZGl1bSA9IHJlcXVpcmUoJ3JhZGl1bScpO1xuXG5mdW5jdGlvbiBnZXRTZXR1cFN0YXRlKCkge1xuXHRyZXR1cm4ge307XG59XG5cbnZhciBHZXRTdGFydGVkID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiBcIkdldFN0YXJ0ZWRcIixcblx0Y29tcG9uZW50RGlkTW91bnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFNldHVwUHJvZ3Jlc3NTdG9yZS5hZGRDaGFuZ2VMaXN0ZW5lcih0aGlzLl9vbkNoYW5nZSk7XG5cdH0sXG5cblx0Y29tcG9uZW50V2lsbFVubW91bnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFNldHVwUHJvZ3Jlc3NTdG9yZS5yZW1vdmVDaGFuZ2VMaXN0ZW5lcih0aGlzLl9vbkNoYW5nZSk7XG5cdH0sXG5cblx0X29uQ2hhbmdlOiBmdW5jdGlvbigpIHtcbiAgICBcdHRoaXMuc2V0U3RhdGUoZ2V0U2V0dXBTdGF0ZSgpKTtcbiAgXHR9LFxuXG5cdGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGdldFNldHVwU3RhdGUoKTtcblx0fSxcblxuXHRoYW5kbGVHZXRTdGFydGVkOiBmdW5jdGlvbihlKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFNldHVwUHJvZ3Jlc3NBY3Rpb25zLmdldFN0YXJ0ZWQoKTtcblx0fSxcblxuXHRoYW5kbGVOb1RoYW5rczogZnVuY3Rpb24oZSkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRTZXR1cFByb2dyZXNzQWN0aW9ucy5kaXNhYmxlSlBTKCk7XHRcblx0fSxcblxuXHRfaXNJRTg6IGZ1bmN0aW9uKCkge1xuXHRcdGpRdWVyeSgnaHRtbCcpLmlzKCcuaWU4Jyk7XG5cdH0sXG5cblx0c3R5bGVzOiB7XG5cdFx0d3JhcHBlcjoge1xuXHRcdFx0dGV4dEFsaWduOiAnY2VudGVyJyxcblx0XHRcdC8vIGJhY2tncm91bmRJbWFnZTogJ3VybCgnK0pQUy5iYXNlX3VybCsnL2ltZy9qcHMtd2VsY29tZS5wbmcpJyxcblx0XHRcdGJhY2tncm91bmRSZXBlYXQ6ICduby1yZXBlYXQnLFxuXHRcdFx0YmFja2dyb3VuZFBvc2l0aW9uOiAnY2VudGVyIGJvdHRvbScsXG5cdFx0XHRiYWNrZ3JvdW5kU2l6ZTogJzUyMHB4IGF1dG8nLFxuXHRcdFx0cG9zaXRpb246ICdmaXhlZCcsXG5cdFx0ICAgIHRvcDogMCxcblx0XHRcdGxlZnQ6IDE2MCxcblx0XHRcdHdpZHRoOiAnMTAwJScsXG5cdFx0XHRoZWlnaHQ6ICcxMDAlJyxcblx0XHRcdGJhY2tncm91bmRDb2xvcjogJyNmZmYnLFxuXHRcdFx0cGFkZGluZ1RvcDogMTAwLFxuXHRcdFx0ekluZGV4OiA5OTksXG5cdFx0XHQnQG1lZGlhIChtYXgtd2lkdGg6IDk2MHB4KSc6IHtcblx0XHRcdFx0bGVmdDogMzZcblx0XHRcdH0sXG5cdFx0XHQnQG1lZGlhIChtYXgtd2lkdGg6IDc4MnB4KSc6IHtcblx0XHRcdFx0bGVmdDogMFxuXHRcdFx0fVxuXHRcdH0sXG5cdFx0d3JhcHBlcklFODoge1xuXHRcdFx0YmFja2dyb3VuZEltYWdlOiAnbm9uZSdcblx0XHR9LFxuXHRcdGlubmVyd3JhcHBlcjoge1xuXHRcdFx0bWFyZ2luOiAnMCAwIDAgLTE2MHB4Jyxcblx0XHRcdCdAbWVkaWEgKG1heC13aWR0aDogOTYwcHgpJzoge1xuXHRcdFx0XHRtYXJnaW46ICcwIDAgMCAtMzZweCdcblx0XHRcdH0sXG5cdFx0XHQnQG1lZGlhIChtYXgtd2lkdGg6IDc4MnB4KSc6IHtcblx0XHRcdFx0bWFyZ2luOiAnMCdcblx0XHRcdH1cblx0XHR9LFxuXHRcdHN1YmhlYWQ6IHtcblx0XHRcdG1hcmdpbjogJzIwcHggMCAxNXB4Jyxcblx0XHRcdGNvbG9yOiAnIzY2NicsXG5cdFx0XHRmb250U2l6ZTogMTgsXG5cdFx0XHRsaW5lSGVpZ2h0OiAxLjYsXG5cdFx0XHR0ZXh0QWxpZ246ICdjZW50ZXInLFxuXHRcdFx0J0BtZWRpYSAobWF4LXdpZHRoOiA2MDBweCknOiB7XG5cdFx0XHRcdG1hcmdpbkJvdHRvbTogMTUsXG5cdFx0XHRcdGZvbnRTaXplOiAxNVxuXHRcdFx0fSxcblx0XHRcdCdAbWVkaWEgKG1heC13aWR0aDogMzIwcHgpJzoge1xuXHRcdFx0XHRmb250U2l6ZTogMTNcblx0XHRcdH1cblx0XHR9LFxuXHRcdGJ1dHRvbjoge1xuXHRcdFx0Ym9yZGVyUmFkaXVzOiA2LFxuXHRcdFx0Zm9udEZhbWlseTogJ3Byb3hpbWEtbm92YSwgXFwnT3BlbiBTYW5zXFwnLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWYnLFxuXHRcdFx0Zm9udFNpemU6IDE2LFxuXHRcdFx0bGluZUhlaWdodDogMSxcblx0XHRcdHBhZGRpbmc6ICcwLjY0Mjg2ZW0gMC44NTcxNGVtIDAuNTM1NzFlbScsXG5cdFx0fSxcblxuXHRcdGdyZWVuQnV0dG9uOiB7XG5cdFx0XHRib3JkZXJXaWR0aDogJzFweCcsXG5cdFx0XHRib3JkZXJTdHlsZTogJ3NvbGlkJyxcblx0XHRcdGJvcmRlckNvbG9yOiAncmdiKDYyLCAxMDgsIDMyKScsXG5cdFx0XHRiYWNrZ3JvdW5kOiAncmdiKDgxLCAxNDEsIDQyKScsXG5cdFx0XHRib3hTaGFkb3c6ICdyZ2IoNjIsIDEwOCwgMzIpIDBweCAzcHggMHB4LCByZ2JhKDAsIDAsIDAsIDAuNCkgMHB4IDRweCAzcHgnLFxuXHRcdFx0Y29sb3I6ICcjZmZmJyxcblx0XHRcdCc6aG92ZXInOiB7XG5cdFx0XHRcdGNvbG9yOiAnI2ZmZicsXG5cdFx0XHRcdGJhY2tncm91bmQ6ICdyZ2IoMTI5LCAxNjgsIDY4KScsXG5cdFx0XHRcdGJvcmRlckNvbG9yOiAncmdiKDEyOSwgMTY4LCA2OCknLFxuXHRcdFx0fVxuXHRcdH0sXG5cdFx0Z3JheUJ1dHRvbjoge1xuXHRcdFx0YmFja2dyb3VuZDogJ2xpbmVhci1ncmFkaWVudChyZ2IoMjU1LCAyNTUsIDI1NSksIHJnYigyNDksIDI0OSwgMjQ5KSknLFxuXHRcdFx0Ym94U2hhZG93OiAncmdiKDE1MCwgMTUwLCAxNTApIDBweCAzcHggMHB4LCByZ2JhKDAsIDAsIDAsIDAuNCkgMHB4IDRweCAzcHgnLFxuXHRcdFx0Y29sb3I6ICcjMzMzJ1xuXHRcdH1cblxuXHR9LFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2tleTogXCJ3ZWxjb21lLWludHJvXCIsIHN0eWxlOiBbdGhpcy5zdHlsZXMud3JhcHBlciwgdGhpcy5faXNJRTgoKSAmJiB0aGlzLnN0eWxlcy53cmFwcGVySUU4XX0sIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtrZXk6IFwid2VsY29tZS1pbnRyby1pbm5lcndyYXBwZXJcIiwgc3R5bGU6IHRoaXMuc3R5bGVzLmlubmVyd3JhcHBlcn0sIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoM1wiLCB7c3R5bGU6IHtmb250U2l6ZTogMzAsIG1hcmdpblRvcDogMzB9fSwgXCJXZWxjb21lIHRvIFdvcmRQcmVzc1wiKSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge3N0eWxlOiB0aGlzLnN0eWxlcy5zdWJoZWFkfSwgXCJXb3VsZCB5b3UgbGlrZSBoZWxwIGxhdW5jaGluZyB5b3VyIHNpdGU/XCIpLCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCBudWxsLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7c3R5bGU6ICBtKCB0aGlzLnN0eWxlcy5idXR0b24sIHRoaXMuc3R5bGVzLmdyZWVuQnV0dG9uKSwgb25DbGljazogdGhpcy5oYW5kbGVHZXRTdGFydGVkfSwgXCJZZXNcIiksIFxuXHRcdFx0XHRcdFwiwqDCoMKgXCIsIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHtzdHlsZTogIG0oIHRoaXMuc3R5bGVzLmJ1dHRvbiwgdGhpcy5zdHlsZXMuZ3JheUJ1dHRvbiksIG9uQ2xpY2s6IHRoaXMuaGFuZGxlTm9UaGFua3N9LCBcIk5vIHRoYW5rc1wiKVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KVxuXHRcdFx0KVxuXHRcdCk7XG5cdH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJhZGl1bShHZXRTdGFydGVkKTsiLCJ2YXIgUmVhY3QgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snUmVhY3QnXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJ1JlYWN0J10gOiBudWxsKSxcblx0U2l0ZVN0b3JlID0gcmVxdWlyZSgnLi4vc3RvcmVzL3NpdGUtc3RvcmUnKSxcblx0U2l0ZUFjdGlvbnMgPSByZXF1aXJlKCcuLi9hY3Rpb25zL3NpdGUtYWN0aW9ucycpLFxuXHRQYXRocyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9qZXRwYWNrLXN0YXJ0LXBhdGhzJyk7XG5cbmZ1bmN0aW9uIGdldEpldHBhY2tQcm9ncmVzcygpIHtcblx0cmV0dXJuIHsgXG5cdFx0amV0cGFja0NvbmZpZ3VyZWQ6IFNpdGVTdG9yZS5nZXRKZXRwYWNrQ29uZmlndXJlZCgpXG5cdH07XG59XG5cbnZhciBKZXRwYWNrSnVtcHN0YXJ0TWVudSA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtkaXNwbGF5TmFtZTogXCJKZXRwYWNrSnVtcHN0YXJ0TWVudVwiLFxuXHRjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0U2l0ZVN0b3JlLmFkZENoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0fSxcblxuXHRjb21wb25lbnRXaWxsVW5tb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0U2l0ZVN0b3JlLnJlbW92ZUNoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0fSxcblxuXHRfb25DaGFuZ2U6IGZ1bmN0aW9uKCkge1xuICAgIFx0dGhpcy5zZXRTdGF0ZShnZXRKZXRwYWNrUHJvZ3Jlc3MoKSk7XG4gIFx0fSxcblxuICBcdGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGdldEpldHBhY2tQcm9ncmVzcygpO1xuXHR9LFxuXG5cdGhhbmRsZUNsaWNrQ29ubmVjdDogZnVuY3Rpb24oZSkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRTaXRlQWN0aW9ucy5jb25maWd1cmVKZXRwYWNrKFBhdGhzLkpFVFBBQ0tfTU9EVUxFU19TVEVQX1NMVUcpO1xuXHR9LFxuXG5cdHN0eWxlOiB7XG5cdFx0Y29sb3I6ICdibGFjaycsXG5cdFx0Zm9udFNpemU6IDEyLFxuXHRcdG1hcmdpblRvcDogNSxcblx0XHRtYXJnaW5MZWZ0OiAyMCxcblx0fSxcblxuXHRwcmltYXJ5Q29ubmVjdEJ0bjoge1xuXHRcdG1hcmdpblRvcDogMTAsXG5cdFx0bWFyZ2luQm90dG9tOiAyMCxcblx0fSxcblxuXHRyZW5kZXI6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiAoXG5cdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtzdHlsZTogdGhpcy5zdHlsZX0sIFxuXHRcdFx0XHR0aGlzLnN0YXRlLmpldHBhY2tDb25maWd1cmVkID8gKFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbClcblx0XHRcdFx0KSA6IChcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsIFxuXHRcdFx0XHRcdFx0XCJCb29zdCB0cmFmZmljLCBlbmhhbmNlIHNlY3VyaXR5LCBhbmQgaW1wcm92ZSBwZXJmb3JtYW5jZSB3aXRoIGEgY29ubmVjdGlvbiB0byBXb3JkUHJlc3MuY29tXCIsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJiclwiLCBudWxsKSwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCB7Y2xhc3NOYW1lOiBcImJ1dHRvbiBidXR0b24tcHJpbWFyeSBidXR0b24tbGFyZ2VcIiwgc3R5bGU6IHRoaXMucHJpbWFyeUNvbm5lY3RCdG4sIGhyZWY6IFwiI1wiLCBvbkNsaWNrOiB0aGlzLmhhbmRsZUNsaWNrQ29ubmVjdH0sIFwiQ29ubmVjdCB0byBXb3JkUHJlc3MuY29tXCIpXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpXG5cdFx0XHRcdFxuXHRcdFx0KVxuXHRcdCk7XG5cdH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEpldHBhY2tKdW1wc3RhcnRNZW51OyIsInZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93WydSZWFjdCddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnUmVhY3QnXSA6IG51bGwpLFxuXHRSYWRpdW0gPSByZXF1aXJlKCdyYWRpdW0nKSxcblx0U2tpcEJ1dHRvbiA9IHJlcXVpcmUoJy4vc2tpcC1idXR0b24nKSxcblx0U2l0ZVN0b3JlID0gcmVxdWlyZSgnLi4vc3RvcmVzL3NpdGUtc3RvcmUnKSxcblx0U2l0ZUFjdGlvbnMgPSByZXF1aXJlKCcuLi9hY3Rpb25zL3NpdGUtYWN0aW9ucycpLFxuXHRQYXRocyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9qZXRwYWNrLXN0YXJ0LXBhdGhzJyksIFxuXHRDb250ZW50Qm94ID0gcmVxdWlyZSgnLi9jb250ZW50LWJveCcpLFxuXHRzdHlsZXMgPSByZXF1aXJlKCcuLi9zdHlsZXMnKSxcblx0V2VsY29tZVNlY3Rpb24gPSByZXF1aXJlKCcuL3dlbGNvbWUtc2VjdGlvbicpLFxuXHRTZXR1cFByb2dyZXNzQWN0aW9ucyA9IHJlcXVpcmUoJy4uL2FjdGlvbnMvc2V0dXAtcHJvZ3Jlc3MtYWN0aW9ucycpLFxuXHRTcGlubmVyU3RvcmUgPSByZXF1aXJlKCcuLi9zdG9yZXMvc3Bpbm5lci1zdG9yZScpLFxuXHRCdXR0b24gPSByZXF1aXJlKCdAYXV0b21hdHRpYy9kb3BzLXJlYWN0L2pzL2NvbXBvbmVudHMvYnV0dG9uJyk7XG5cblxudmFyIEpldHBhY2tMb2dvID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiBcIkpldHBhY2tMb2dvXCIsXG5cdHN0eWxlczoge1xuXHRcdGpldHBhY2tMb2dvV3JhcHBlcjoge1xuXHRcdFx0ZGlzcGxheTogJ2Jsb2NrJyxcblx0XHRcdHRleHRBbGlnbjogJ2NlbnRlcicsXG5cdFx0XHRoZWlnaHQ6IDcwLFxuXHRcdFx0Y29sb3I6ICd3aGl0ZScsXG5cdFx0XHRtYXJnaW5MZWZ0OiA1LFxuXHRcdFx0YmFja2dyb3VuZENvbG9yOiAnIzgxYTg0NCdcblx0XHR9LFxuXHRcdGpldHBhY2tMb2dvOiB7XG5cdFx0XHRkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcblx0XHRcdHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuXHRcdFx0d2lkdGg6IDIxNCxcblx0XHRcdG1hcmdpblJpZ2h0OiA2LFxuXHRcdFx0YmFja2dyb3VuZDogJ3VybCgnK0pQUy5qZXRwYWNrLmxvZ29fdXJsKycpIGNlbnRlciBjZW50ZXIgbm8tcmVwZWF0Jyxcblx0XHRcdGJhY2tncm91bmRTaXplOiAnMTgzcHggYXV0bycsXG5cdFx0XHRjb2xvcjogJyNmZmYnLFxuXHRcdFx0Zm9udFdlaWdodDogJ25vcm1hbCcsXG5cdFx0XHRwYWRkaW5nOiAnNXB4IDBweCdcblx0XHR9LFxuXHRcdGpldHBhY2tMb2dvTmFtZToge1xuXHRcdFx0dGV4dEluZGVudDogLTk5OTksXG5cdFx0XHR2aXNpYmlsaXR5OiAnaGlkZGVuJ1xuXHRcdH1cblxuXHR9LFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtzdHlsZTogW3RoaXMuc3R5bGVzLmpldHBhY2tMb2dvV3JhcHBlciwgdGhpcy5wcm9wcy5zdHlsZV19LCBcblx0XHRcdFx0XCJQb3dlcmVkIGJ5XCIsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJiclwiLCBudWxsKSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIHtocmVmOiBcIi93cC1hZG1pbi9hZG1pbi5waHA/cGFnZT1qZXRwYWNrXCIsIHRpdGxlOiBcIkpldHBhY2tcIiwgc3R5bGU6IHRoaXMuc3R5bGVzLmpldHBhY2tMb2dvfSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwge3N0eWxlOiB0aGlzLnN0eWxlcy5qZXRwYWNrTG9nb05hbWV9LCBcIkpldHBhY2tcIilcblx0XHRcdFx0KVxuXHRcdFx0KVxuXHRcdCk7XG5cdH1cbn0pO1xuXG5KZXRwYWNrTG9nbyA9IFJhZGl1bShKZXRwYWNrTG9nbyk7XG5cbmZ1bmN0aW9uIGdldEpldHBhY2tTdGF0ZSgpIHtcblx0cmV0dXJuIHtcblx0XHRzaXRlX3RpdGxlOiBTaXRlU3RvcmUuZ2V0VGl0bGUoKSxcblx0XHRqZXRwYWNrQ29uZmlndXJlZDogU2l0ZVN0b3JlLmdldEpldHBhY2tDb25maWd1cmVkKCksXG5cdFx0anVtcHN0YXJ0RW5hYmxlZDogU2l0ZVN0b3JlLmdldEpldHBhY2tKdW1wc3RhcnRFbmFibGVkKCksXG5cdFx0bW9kdWxlc0VuYWJsZWQ6IFNpdGVTdG9yZS5nZXRBY3RpdmVNb2R1bGVTbHVncygpXHRcblx0fTtcbn1cblxudmFyIEpldHBhY2tKdW1wc3RhcnQgPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiSmV0cGFja0p1bXBzdGFydFwiLFxuXG5cdHN0eWxlczoge1xuXHRcdGpldHBhY2tMb2dvOiB7XG5cdFx0XHRmbG9hdDogJ3JpZ2h0Jyxcblx0XHRcdCdAbWVkaWEgKG1heC13aWR0aDogNzgycHgpJzoge1xuXHRcdFx0XHRmbG9hdDogJ25vbmUnLFxuXHRcdFx0XHRtYXJnaW5MZWZ0OiAwXG5cdFx0XHR9XG5cdFx0fSxcblx0XHRqdW1wc3RhcnRNb2R1bGU6IHtcblx0XHRcdGZsb2F0OiAnbGVmdCcsXG5cdFx0XHRwb3NpdGlvbjogJ3JlbGF0aXZlJyxcblx0XHRcdGhlaWdodDogMTYwLFxuXHRcdFx0cGFkZGluZzogMTAsXG5cdFx0XHQnQG1lZGlhIChtaW4td2lkdGg6IDc4MnB4KSc6IHtcblx0XHRcdFx0d2lkdGg6ICczMyUnXG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdGp1bXBzdGFydE1vZHVsZURlc2M6IHtcblx0XHRcdGRpc3BsYXk6ICdibG9jaycsXG5cdFx0XHRtYXJnaW5Ub3A6IDUsXG5cdFx0XHRsaW5lSGVpZ2h0OiAnMTUwJSdcblx0XHR9LFxuXG5cdFx0b3ZlcmxheUNvbnRlbnQ6IHtcblx0XHRcdG1hcmdpblRvcDogMTAsXG5cdFx0XHRtYXJnaW5Cb3R0b206IDEwXG5cdFx0fSxcblxuXHRcdG92ZXJsYXlCZWZvcmU6IHtcblx0XHRcdGRpc3BsYXk6ICdibG9jaycsXG5cdFx0XHRwb3NpdGlvbjogJ2Fic29sdXRlJyxcblx0XHRcdHdpZHRoOiAnMTAwJScsXG5cdFx0XHRoZWlnaHQ6ICcxMDAlJyxcblx0XHRcdGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMCwwLDAsMC4yKSdcblx0XHR9LFxuXG5cdFx0b3ZlcmxheToge1xuXHRcdFx0cG9zaXRpb246ICdhYnNvbHV0ZScsXG5cdFx0XHR0b3A6IDAsXG5cdFx0XHRsZWZ0OiAwLFxuXHRcdFx0d2lkdGg6ICcxMDAlJyxcblx0XHRcdGhlaWdodDogJzEwMCUnLFxuXHRcdFx0bWluSGVpZ2h0OiAnMTAwJScsXG5cdFx0XHR6SW5kZXg6IDcwMFxuXHRcdH0sXG5cblx0XHRvdmVybGF5Qm9keToge1xuXHRcdFx0dGV4dEFsaWduOiAnY2VudGVyJyxcblx0XHRcdHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuXHRcdFx0Ym9yZGVyUmFkaXVzOiAzLFxuXHRcdFx0Ym94U2hhZG93OiAnMCAwIDRweCByZ2JhKDAsMCwwLDAuMiknLFxuXHRcdFx0ekluZGV4OiA4MDAsXG5cdFx0XHRsZWZ0OiAnNTAlJyxcblx0XHQgIFx0dG9wOiAnNTAlJyxcblx0XHQgIFx0cGFkZGluZzogMTUsXG5cdFx0ICBcdHRyYW5zZm9ybTogJ3RyYW5zbGF0ZSgtNTAlLC01MCUpJyxcblx0XHRcdHdpZHRoOiAnNzAlJyxcblx0XHRcdGJhY2tncm91bmRDb2xvcjogJyNmZmYnXG5cdFx0fSxcblxuXHRcdG1vcmVMaW5rOiB7XG5cdFx0XHR0ZXh0QWxpZ246ICdjZW50ZXInXG5cdFx0fVxuXHR9LFxuXG5cdGNvbXBvbmVudERpZE1vdW50OiBmdW5jdGlvbigpIHtcblx0XHRTaXRlU3RvcmUuYWRkQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuXHR9LFxuXG5cdGNvbXBvbmVudFdpbGxVbm1vdW50OiBmdW5jdGlvbigpIHtcblx0XHRTaXRlU3RvcmUucmVtb3ZlQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuXHR9LFxuXG5cdF9vbkNoYW5nZTogZnVuY3Rpb24oKSB7XG4gICAgXHR0aGlzLnNldFN0YXRlKGdldEpldHBhY2tTdGF0ZSgpKTtcbiAgXHR9LFxuXG5cdGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIHN0YXRlID0gZ2V0SmV0cGFja1N0YXRlKCk7XG5cdFx0c3RhdGUuc2hvd01vcmVNb2R1bGVzID0gZmFsc2U7XG5cdFx0cmV0dXJuIHN0YXRlO1xuXHR9LFxuXG5cdGhhbmRsZUpldHBhY2tDb25uZWN0OiBmdW5jdGlvbiAoZSkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblxuXHRcdFNpdGVBY3Rpb25zLmNvbmZpZ3VyZUpldHBhY2soUGF0aHMuSkVUUEFDS19NT0RVTEVTX1NURVBfU0xVRyk7XG5cdH0sXG5cblx0aGFuZGxlQ2hhbmdlTW9kdWxlU3RhdHVzOiBmdW5jdGlvbiAoZSkge1xuXHRcdHZhciAkdGFyZ2V0ID0galF1ZXJ5KGUuY3VycmVudFRhcmdldCksXG5cdFx0XHRtb2R1bGVfc2x1ZyA9ICR0YXJnZXQuZGF0YSgnbW9kdWxlLXNsdWcnKTtcblxuXHRcdGlmICggU2l0ZVN0b3JlLmlzSmV0cGFja01vZHVsZUVuYWJsZWQobW9kdWxlX3NsdWcpICkge1xuXHRcdFx0U2l0ZUFjdGlvbnMuZGVhY3RpdmF0ZUpldHBhY2tNb2R1bGUobW9kdWxlX3NsdWcpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRTaXRlQWN0aW9ucy5hY3RpdmF0ZUpldHBhY2tNb2R1bGUobW9kdWxlX3NsdWcpO1xuXHRcdH1cblx0fSxcblxuXHRoYW5kbGVFbmFibGVBbGxNb2R1bGVzOiBmdW5jdGlvbihlKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFNpdGVBY3Rpb25zLmVuYWJsZUp1bXBzdGFydCgpO1xuXHR9LFxuXG5cdGhhbmRsZU5leHQ6IGZ1bmN0aW9uIChlKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG5cdFx0U2V0dXBQcm9ncmVzc0FjdGlvbnMuY29tcGxldGVBbmROZXh0U3RlcChQYXRocy5KRVRQQUNLX01PRFVMRVNfU1RFUF9TTFVHKTtcblx0fSxcblxuXHRoYW5kbGVTaG93TW9yZU1vZHVsZXM6IGZ1bmN0aW9uIChlKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFxuXHRcdFNpdGVBY3Rpb25zLmxvYWRBbGxKZXRwYWNrTW9kdWxlcygpLmRvbmUoZnVuY3Rpb24oKSB7XG5cdFx0XHR0aGlzLnNldFN0YXRlKHtzaG93TW9yZU1vZHVsZXM6IHRydWV9KTtcblx0XHR9LmJpbmQodGhpcykpO1xuXHR9LFxuXG5cdGhhbmRsZVNob3dGZXdlck1vZHVsZXM6IGZ1bmN0aW9uIChlKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdHRoaXMuc2V0U3RhdGUoe3Nob3dNb3JlTW9kdWxlczogZmFsc2V9KTtcblx0fSxcblxuXHRfcmVuZGVyTW9kdWxlOiBmdW5jdGlvbihtb2R1bGUpIHtcblx0XHR2YXIgaXNBY3RpdmUgPSBTaXRlU3RvcmUuaXNKZXRwYWNrTW9kdWxlRW5hYmxlZChtb2R1bGUuc2x1Zyk7XG5cdFx0dmFyIG1vZHVsZUlkID0gJ2pwLW1vZHVsZS0nK21vZHVsZS5zbHVnO1xuXHRcdFxuXHRcdHJldHVybiAoXG5cdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtrZXk6ICdtb2R1bGVzLScrbW9kdWxlLnNsdWcsIHN0eWxlOiB0aGlzLnN0eWxlcy5qdW1wc3RhcnRNb2R1bGV9LCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHtpZDogbW9kdWxlSWQsIHR5cGU6IFwiY2hlY2tib3hcIiwgY2hlY2tlZDogaXNBY3RpdmUsIFwiZGF0YS1tb2R1bGUtc2x1Z1wiOiBtb2R1bGUuc2x1Zywgb25DaGFuZ2U6IHRoaXMuaGFuZGxlQ2hhbmdlTW9kdWxlU3RhdHVzfSksIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIiwge2h0bWxGb3I6IG1vZHVsZUlkfSwgUmVhY3QuY3JlYXRlRWxlbWVudChcInN0cm9uZ1wiLCBudWxsLCBtb2R1bGUubmFtZSkpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7c3R5bGU6IHRoaXMuc3R5bGVzLmp1bXBzdGFydE1vZHVsZURlc2N9LCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtkYW5nZXJvdXNseVNldElubmVySFRNTDoge19faHRtbDogbW9kdWxlLmRlc2NyaXB0aW9ufX0pLCBcblx0XHRcdFx0XHRpc0FjdGl2ZSAmJiBtb2R1bGUuY29uZmlndXJlX3VybCAmJiAoXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIHt0YXJnZXQ6IFwiX2NvbmZpZ3VyZVwiLCBocmVmOiBtb2R1bGUuY29uZmlndXJlX3VybH0sIFwiY29uZmlndXJlXCIpKVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KVxuXHRcdFx0KVxuXHRcdCk7XG5cdH0sXG5cblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgbW9kdWxlT3ZlcmxheUJlZm9yZSwgbW9kdWxlT3ZlcmxheSwgbW9kdWxlT3ZlcmxheUJvZHk7XG5cblxuXHRcdGlmICggISB0aGlzLnN0YXRlLmpldHBhY2tDb25maWd1cmVkICYmICFTcGlubmVyU3RvcmUuc2hvd2luZygpICkge1xuXHRcdFx0bW9kdWxlT3ZlcmxheUJlZm9yZSA9IChcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7c3R5bGU6IHRoaXMuc3R5bGVzLm92ZXJsYXlCZWZvcmV9KVxuXHRcdFx0KTtcblx0XHRcdG1vZHVsZU92ZXJsYXkgPSAoXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge3N0eWxlOiB0aGlzLnN0eWxlcy5vdmVybGF5fSlcblx0XHRcdCk7XG5cdFx0XHRtb2R1bGVPdmVybGF5Qm9keSA9IChcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7c3R5bGU6IHRoaXMuc3R5bGVzLm92ZXJsYXlCb2R5fSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge3N0eWxlOiB0aGlzLnN0eWxlcy5vdmVybGF5Q29udGVudH0sIFwiVGhlc2UgbW9kdWxlcyByZXF1aXJlIGEgV29yZFByZXNzLmNvbSBhY2NvdW50IC0gaXQncyBmcmVlIVwiKSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHtjb2xvcjogXCJncmVlblwiLCBzaXplOiBcImJpZ1wiLCB0aGVtZTogXCJqZXRwYWNrXCIsIG9uQ2xpY2s6IHRoaXMuaGFuZGxlSmV0cGFja0Nvbm5lY3R9LCBcIkNvbm5lY3QgdG8gV29yZFByZXNzLmNvbVwiKSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge3N0eWxlOiB0aGlzLnN0eWxlcy5vdmVybGF5Q29udGVudH0sIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChTa2lwQnV0dG9uLCBudWxsKVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KVxuXHRcdFx0KTtcblx0XHR9XG5cblx0XHR2YXIgbW9kdWxlRGVzY3JpcHRpb25zID0gU2l0ZVN0b3JlLmdldEp1bXBzdGFydE1vZHVsZXMoKS5tYXAodGhpcy5fcmVuZGVyTW9kdWxlKTtcblx0XHR2YXIgbW9yZU1vZHVsZURlc2NyaXB0aW9ucyA9IFNpdGVTdG9yZS5nZXRKZXRwYWNrQWRkaXRpb25hbE1vZHVsZXMoKS5tYXAodGhpcy5fcmVuZGVyTW9kdWxlKTtcblxuXHRcdHJldHVybiAoXG5cdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFdlbGNvbWVTZWN0aW9uLCBudWxsLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImgzXCIsIG51bGwsIFwiTGV0J3MgbGF1bmNoIFwiLCBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZW1cIiwgbnVsbCwgdGhpcy5zdGF0ZS5zaXRlX3RpdGxlKSksIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDRcIiwgbnVsbCwgXCJFbmFibGUgSmV0cGFjayBmZWF0dXJlc1wiKSwgXG5cdFx0XHRcdHRoaXMuc3RhdGUuamV0cGFja0NvbmZpZ3VyZWQgJiYgKFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KEpldHBhY2tMb2dvLCB7c3R5bGU6IHRoaXMuc3R5bGVzLmpldHBhY2tMb2dvfSksIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge3N0eWxlOiBzdHlsZXMuY29udGVudH0sIFwiQ29uZ3JhdHVsYXRpb25zISBZb3UndmUgZW5hYmxlZCBKZXRwYWNrIGFuZCB1bmxvY2tlZCBkb3plbnMgb2YgcG93ZXJmdWwgZmVhdHVyZXMuXCIpLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHtzdHlsZTogc3R5bGVzLmNvbnRlbnR9LCBcIkNoZWNrIHRoZSBib3hlcyBiZWxvdyB0byBlbmFibGUgb3VyIG1vc3QgcG9wdWxhciBmZWF0dXJlcy5cIiksIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiBcImNsZWFyXCJ9KVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2NsYXNzTmFtZTogXCJ3ZWxjb21lX19jb25uZWN0XCJ9LCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtzdHlsZToge3Bvc2l0aW9uOiAncmVsYXRpdmUnfX0sIFxuXHRcdFx0XHRcdFx0bW9kdWxlT3ZlcmxheUJlZm9yZSwgXG5cdFx0XHRcdFx0XHRtb2R1bGVPdmVybGF5LCBcblx0XHRcdFx0XHRcdG1vZHVsZU92ZXJsYXlCb2R5LCBcblx0XHRcdFx0XHRcdFxuXHRcdFx0XHRcdFx0dGhpcy5zdGF0ZS5qZXRwYWNrQ29uZmlndXJlZCAmJiAoXG5cdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2NsYXNzTmFtZTogXCJzdWJtaXRcIn0sIFxuXHRcdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7c3R5bGU6IHtmbG9hdDogJ3JpZ2h0J30sIGNvbG9yOiBcImJsdWVcIiwgb25DbGljazogdGhpcy5oYW5kbGVOZXh0fSwgXCJOZXh0IFN0ZXAg4oaSXCIpLCBcblx0XHRcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IFwiY2xlYXJcIn0pXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdCksIFxuXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KENvbnRlbnRCb3gsIG51bGwsIFxuXHRcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgXCJQb3B1bGFyIGZlYXR1cmVzXCIgKyAnICcgK1xuXHRcdFx0XHRcdFx0XHRcdFwiwqDCoFwiLCBSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwge2Rpc2FibGVkOiB0aGlzLnN0YXRlLmp1bXBzdGFydEVuYWJsZWQsIGNvbG9yOiBcImJsdWVcIiwgb25DbGljazogdGhpcy5oYW5kbGVFbmFibGVBbGxNb2R1bGVzfSwgdGhpcy5zdGF0ZS5qdW1wc3RhcnRFbmFibGVkID8gJ0VuYWJsZWQgQWxsJyA6ICdFbmFibGUgYWxsIChyZWNvbW1lbmRlZCknKVxuXHRcdFx0XHRcdFx0XHQpLCBcblx0XHRcdFx0XHRcdFx0bW9kdWxlRGVzY3JpcHRpb25zXG5cdFx0XHRcdFx0XHQpLCBcblx0XHRcdFx0XHRcdFxuXHRcdFx0XHRcdFx0dGhpcy5zdGF0ZS5zaG93TW9yZU1vZHVsZXMgPyAoXG5cdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHtzdHlsZTogdGhpcy5zdHlsZXMubW9yZUxpbmt9LCBcblx0XHRcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCB7aHJlZjogXCIjXCIsIG9uQ2xpY2s6IHRoaXMuaGFuZGxlU2hvd0Zld2VyTW9kdWxlc30sIFwiaGlkZSBhZGRpdGlvbmFsIGZlYXR1cmVzXCIpXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdCkgOiAoXG5cdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHtzdHlsZTogdGhpcy5zdHlsZXMubW9yZUxpbmt9LCBcblx0XHRcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCB7aHJlZjogXCIjXCIsIG9uQ2xpY2s6IHRoaXMuaGFuZGxlU2hvd01vcmVNb2R1bGVzfSwgXCJzaG93IGFkZGl0aW9uYWwgZmVhdHVyZXNcIilcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KSwgXG5cblx0XHRcdFx0XHRcdHRoaXMuc3RhdGUuc2hvd01vcmVNb2R1bGVzICYmIChcblx0XHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChDb250ZW50Qm94LCBudWxsLCBcblx0XHRcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgXCJBZGRpdGlvbmFsIG1vZHVsZXNcIiksIFxuXHRcdFx0XHRcdFx0XHRcdG1vcmVNb2R1bGVEZXNjcmlwdGlvbnNcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KVxuXHRcdFx0KVxuXHRcdCk7XG5cdH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJhZGl1bShKZXRwYWNrSnVtcHN0YXJ0KTsiLCJ2YXIgUmVhY3QgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snUmVhY3QnXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJ1JlYWN0J10gOiBudWxsKSxcblx0U2l0ZVN0b3JlID0gcmVxdWlyZSgnLi4vc3RvcmVzL3NpdGUtc3RvcmUnKSxcblx0QnV0dG9uID0gcmVxdWlyZSgnQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9qcy9jb21wb25lbnRzL2J1dHRvbicpLFxuXHRXZWxjb21lU2VjdGlvbiA9IHJlcXVpcmUoJy4vd2VsY29tZS1zZWN0aW9uJyksXG5cdHN0eWxlcyA9IHJlcXVpcmUoJy4uL3N0eWxlcycpLFxuXHRTZXR1cFByb2dyZXNzQWN0aW9ucyA9IHJlcXVpcmUoJy4uL2FjdGlvbnMvc2V0dXAtcHJvZ3Jlc3MtYWN0aW9ucycpO1xuXG5mdW5jdGlvbiBnZXRTaXRlTGF5b3V0U3RhdGUoKSB7XG5cdHJldHVybiB7XG5cdFx0c2l0ZV90aXRsZTogU2l0ZVN0b3JlLmdldFRpdGxlKCksXG5cdFx0bGF5b3V0OiBTaXRlU3RvcmUuZ2V0TGF5b3V0KClcblx0fTtcbn1cblxudmFyIExheW91dFN0ZXAgPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiTGF5b3V0U3RlcFwiLFxuXG5cdGNvbXBvbmVudERpZE1vdW50OiBmdW5jdGlvbigpIHtcblx0XHRTaXRlU3RvcmUuYWRkQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuXHR9LFxuXG5cdGNvbXBvbmVudFdpbGxVbm1vdW50OiBmdW5jdGlvbigpIHtcblx0XHRTaXRlU3RvcmUucmVtb3ZlQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuXHR9LFxuXG5cdF9vbkNoYW5nZTogZnVuY3Rpb24oKSB7XG4gICAgXHR0aGlzLnNldFN0YXRlKGdldFNpdGVMYXlvdXRTdGF0ZSgpKTtcbiAgXHR9LFxuXG5cdGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGdldFNpdGVMYXlvdXRTdGF0ZSgpO1xuXHR9LFxuXG5cdGhhbmRsZVNldExheW91dDogZnVuY3Rpb24oIGUgKSB7XG5cdFx0dGhpcy5zZXRTdGF0ZSh7IGxheW91dDogalF1ZXJ5KGUuY3VycmVudFRhcmdldCkudmFsKCkgfSk7XG5cdH0sXG5cblx0aGFuZGxlU3VibWl0OiBmdW5jdGlvbiggZSApIHtcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0U2V0dXBQcm9ncmVzc0FjdGlvbnMuc3VibWl0TGF5b3V0U3RlcCh0aGlzLnN0YXRlLmxheW91dCk7XG5cdH0sXG5cblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gKFxuXHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChXZWxjb21lU2VjdGlvbiwge2lkOiBcIndlbGNvbWVfX2xheW91dFwifSwgXG5cdFx0XHRcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImgzXCIsIG51bGwsIFwiTGV0J3MgbGF1bmNoIFwiLCBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZW1cIiwgbnVsbCwgdGhpcy5zdGF0ZS5zaXRlX3RpdGxlKSksIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDRcIiwgbnVsbCwgXCJTZWxlY3QgYSBMYXlvdXRcIiksIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCB7c3R5bGU6IHN0eWxlcy5jb250ZW50fSwgXCJXb3JkUHJlc3MgY2FuIGJlIGEgYmxvZywgYSB3ZWIgc2l0ZSB3aXRoIGEgaGllcmFyY2h5IG9mIHN0YXRpYyBwYWdlcywgb3IgYSBjb21iaW5hdGlvbiBvZiB0aGUgdHdvLlwiKSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJmb3JtXCIsIHtvblN1Ym1pdDogdGhpcy5oYW5kbGVTdWJtaXR9LCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIiwgbnVsbCwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwge3R5cGU6IFwicmFkaW9cIiwgbmFtZTogXCJzaXRlX2xheW91dFwiLCB2YWx1ZTogXCJ3ZWJzaXRlXCIsIGNoZWNrZWQ6IHRoaXMuc3RhdGUubGF5b3V0ID09PSAnd2Vic2l0ZScsIG9uQ2hhbmdlOiB0aGlzLmhhbmRsZVNldExheW91dH0pLCBcIiBTdGF0aWMgV2Vic2l0ZVwiLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHtjbGFzc05hbWU6IFwiZGVzY3JpcHRpb25cIn0sIFwiQSB3ZWIgc2l0ZSB3aXRoIGEgaGllcmFyY2h5IG9mIHBhZ2VzXCIpXG5cdFx0XHRcdFx0KSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImJyXCIsIG51bGwpLCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIiwgbnVsbCwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwge3R5cGU6IFwicmFkaW9cIiwgbmFtZTogXCJzaXRlX2xheW91dFwiLCB2YWx1ZTogXCJzaXRlLWJsb2dcIiwgY2hlY2tlZDogdGhpcy5zdGF0ZS5sYXlvdXQgPT09ICdzaXRlLWJsb2cnLCBvbkNoYW5nZTogdGhpcy5oYW5kbGVTZXRMYXlvdXR9KSwgXCIgU3RhdGljIFdlYnNpdGUgd2l0aCBhIGJsb2dcIiwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCB7Y2xhc3NOYW1lOiBcImRlc2NyaXB0aW9uXCJ9LCBcIkEgd2ViIHNpdGUgd2l0aCBwYWdlcyB0aGF0IGFsc28gaGFzIGEgYmxvZyBvciBuZXdzIHNlY3Rpb25cIilcblx0XHRcdFx0XHQpLCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiYnJcIiwgbnVsbCksIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiLCBudWxsLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7dHlwZTogXCJyYWRpb1wiLCBuYW1lOiBcInNpdGVfbGF5b3V0XCIsIHZhbHVlOiBcImJsb2dcIiwgY2hlY2tlZDogdGhpcy5zdGF0ZS5sYXlvdXQgPT09ICdibG9nJywgb25DaGFuZ2U6IHRoaXMuaGFuZGxlU2V0TGF5b3V0fSksIFwiIEp1c3QgYSBibG9nXCIsIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge2NsYXNzTmFtZTogXCJkZXNjcmlwdGlvblwifSwgXCJBIHdlYiBzaXRlIHRoYXQgd2lsbCBjb25zdGFudGx5IHNob3cgbmV3IGNvbnRlbnQgKGFydGljbGVzLCBwaG90b3MsIHZpZGVvcywgZXRjLilcIilcblx0XHRcdFx0XHQpLCBcblxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHtjbGFzc05hbWU6IFwic3VibWl0XCJ9LCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7Y29sb3I6IFwiYmx1ZVwifSwgXCJOZXh0IFN0ZXAg4oaSXCIpXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpXG5cdFx0XHQpXG5cdFx0KTtcblx0fVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gTGF5b3V0U3RlcDsiLCJ2YXIgUmVhY3QgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snUmVhY3QnXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJ1JlYWN0J10gOiBudWxsKSxcblx0U2l0ZUFjdGlvbnMgPSByZXF1aXJlKCcuLi9hY3Rpb25zL3NpdGUtYWN0aW9ucycpLFxuXHRTaXRlU3RvcmUgPSByZXF1aXJlKCcuLi9zdG9yZXMvc2l0ZS1zdG9yZScpLFxuXHRXZWxjb21lU2VjdGlvbiA9IHJlcXVpcmUoJy4vd2VsY29tZS1zZWN0aW9uJyksXG5cdHN0eWxlcyA9IHJlcXVpcmUoJy4uL3N0eWxlcycpLFxuXHRCdXR0b24gPSByZXF1aXJlKCdAYXV0b21hdHRpYy9kb3BzLXJlYWN0L2pzL2NvbXBvbmVudHMvYnV0dG9uJyksXG5cdFNldHVwUHJvZ3Jlc3NBY3Rpb25zID0gcmVxdWlyZSgnLi4vYWN0aW9ucy9zZXR1cC1wcm9ncmVzcy1hY3Rpb25zJyk7XG5cbmZ1bmN0aW9uIGdldFNpdGVUaXRsZVN0YXRlKCkge1xuXHRyZXR1cm4ge1xuXHRcdHRpdGxlOiBTaXRlU3RvcmUuZ2V0VGl0bGUoKSxcblx0XHRkZXNjcmlwdGlvbjogU2l0ZVN0b3JlLmdldERlc2NyaXB0aW9uKClcblx0fTtcbn1cblxudmFyIFNpdGVUaXRsZVN0ZXAgPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiU2l0ZVRpdGxlU3RlcFwiLFxuXG5cdGNvbXBvbmVudERpZE1vdW50OiBmdW5jdGlvbigpIHtcblx0XHRTaXRlU3RvcmUuYWRkQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuXHR9LFxuXG5cdGNvbXBvbmVudFdpbGxVbm1vdW50OiBmdW5jdGlvbigpIHtcblx0XHRTaXRlU3RvcmUucmVtb3ZlQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuXHR9LFxuXG5cdF9vbkNoYW5nZTogZnVuY3Rpb24oKSB7XG4gICAgXHR0aGlzLnNldFN0YXRlKGdldFNpdGVUaXRsZVN0YXRlKCkpO1xuICBcdH0sXG5cblx0Z2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZ2V0U2l0ZVRpdGxlU3RhdGUoKTtcblx0fSxcblxuXHRoYW5kbGVDaGFuZ2VUaXRsZTogZnVuY3Rpb24oZSkge1xuXHRcdFNpdGVBY3Rpb25zLnNldFRpdGxlKGUuY3VycmVudFRhcmdldC52YWx1ZSk7XG5cdH0sXG5cblx0aGFuZGxlQ2hhbmdlRGVzY3JpcHRpb246IGZ1bmN0aW9uKGUpIHtcblx0XHRTaXRlQWN0aW9ucy5zZXREZXNjcmlwdGlvbihlLmN1cnJlbnRUYXJnZXQudmFsdWUpO1xuXHR9LFxuXG5cdGhhbmRsZVN1Ym1pdDogZnVuY3Rpb24oZSkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRTZXR1cFByb2dyZXNzQWN0aW9ucy5zdWJtaXRUaXRsZVN0ZXAoKTtcblx0fSxcblxuXHRyZW5kZXI6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiAoXG5cblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoV2VsY29tZVNlY3Rpb24sIHtpZDogXCJ3ZWxjb21lX19zaXRlLXRpdGxlXCJ9LCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImgzXCIsIG51bGwsIFwiTGV0J3MgbGF1bmNoIHlvdXIgbmV3IHdlYnNpdGVcIiksIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDRcIiwgbnVsbCwgXCJFbnRlciBhIFRpdGxlIGFuZCBEZXNjcmlwdGlvblwiKSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHtzdHlsZTogc3R5bGVzLmNvbnRlbnR9LCBcblx0XHRcdFx0XHRcIk1ha2UgeW91ciBzaXRlIHN0YW5kIG91dCB3aXRoIGEgY2F0Y2h5IG5hbWUuXCJcblx0XHRcdFx0KSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJmb3JtXCIsIHtvblN1Ym1pdDogdGhpcy5oYW5kbGVTdWJtaXR9LCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwidGFibGVcIiwge2NsYXNzTmFtZTogXCJmb3JtLXRhYmxlXCJ9LCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0Ym9keVwiLCBudWxsLCBcblx0XHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInRyXCIsIG51bGwsIFxuXHRcdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0aFwiLCBudWxsLCBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIiwge2h0bWxGb3I6IFwic2l0ZV90aXRsZVwifSwgXCJTaXRlIFRpdGxlXCIpKSwgXG5cdFx0XHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInRkXCIsIG51bGwsIFxuXHRcdFx0XHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHt0eXBlOiBcInRleHRcIiwgbmFtZTogXCJzaXRlX3RpdGxlXCIsIGlkOiBcInNpdGUtdGl0bGVcIiwgYXV0b0NvbXBsZXRlOiBcIm9mZlwiLCBvbkNoYW5nZTogdGhpcy5oYW5kbGVDaGFuZ2VUaXRsZSwgdmFsdWU6IHRoaXMuc3RhdGUudGl0bGUsIFxuXHRcdFx0XHRcdCAgICAgICBwbGFjZWhvbGRlcjogXCJTaXRlIFRpdGxlICh0aGlzIGNhbiBiZSBjaGFuZ2VkIGxhdGVyKVwiLCByZXF1aXJlZDogdHJ1ZX0pLCBcblx0XHRcdFx0XHQgICAgICAgXHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge2NsYXNzTmFtZTogXCJkZXNjcmlwdGlvblwifSwgXCJUaGUgbmFtZSBvZiB5b3VyIHNpdGUuIFRoaXMgdGl0bGUgYXBwZWFycyBhdCB0aGUgdG9wIG9mIHBhZ2VzIGFuZCBpbiBzZWFyY2ggcmVzdWx0cy5cIilcblx0XHRcdFx0XHQgICAgICAgXHRcdClcblx0XHRcdFx0XHQgICAgICBcdCksIFxuXHRcdFx0XHRcdCAgICAgIFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInRyXCIsIG51bGwsIFxuXHRcdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0aFwiLCBudWxsLCBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIiwge2h0bWxGb3I6IFwic2l0ZV9kZXNjcmlwdGlvblwifSwgXCJTaXRlIERlc2NyaXB0aW9uXCIpKSwgXG5cdFx0XHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInRkXCIsIG51bGwsIFxuXHRcdFx0XHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHt0eXBlOiBcInRleHRcIiwgbmFtZTogXCJzaXRlX2Rlc2NyaXB0aW9uXCIsIGlkOiBcInNpdGUtZGVzY3JpcHRpb25cIiwgYXV0b0NvbXBsZXRlOiBcIm9mZlwiLCBvbkNoYW5nZTogdGhpcy5oYW5kbGVDaGFuZ2VEZXNjcmlwdGlvbiwgdmFsdWU6IHRoaXMuc3RhdGUuZGVzY3JpcHRpb24sIFxuXHRcdFx0XHRcdCAgICAgICBwbGFjZWhvbGRlcjogXCJTaXRlIERlc2NyaXB0aW9uXCIsIHJlcXVpcmVkOiB0cnVlfSksIFxuXHRcdFx0XHRcdCAgICAgICBcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCB7Y2xhc3NOYW1lOiBcImRlc2NyaXB0aW9uXCJ9LCBcIkEgbW90dG8gb3IgdGFnbGluZS4gVGhpcyBhcHBlYXJzIGJlbG93IHRoZSB0aXRsZSBvbiB5b3VyIHNpdGUsIGFuZCBuZXh0IHRvIHRoZSB0aXRsZSBpbiBzZWFyY2ggcmVzdWx0cy4gVHJ5IHRvIGJlIGJyaWVmIGFuZCBkZXNjcmlwdGl2ZSwgZS5nLiBcXFwiWW91ciBvbmxpbmUgYmFpdCBhbmQgdGFja2xlIHN0b3JlXFxcIlwiKVxuXHRcdFx0XHRcdCAgICAgICBcdFx0KVxuXHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0KSwgXG5cblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCB7Y2xhc3NOYW1lOiBcInN1Ym1pdFwifSwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwge2NvbG9yOiBcImJsdWVcIn0sIFwiTmV4dCBTdGVwIOKGklwiKVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KVxuXHRcdFx0KVxuXHRcdCk7XG5cdH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNpdGVUaXRsZVN0ZXA7IiwidmFyIFJlYWN0ID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJ1JlYWN0J10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWydSZWFjdCddIDogbnVsbCksXG5cdFNldHVwUHJvZ3Jlc3NTdG9yZSA9IHJlcXVpcmUoJy4uL3N0b3Jlcy9zZXR1cC1wcm9ncmVzcy1zdG9yZScpLFxuXHRTZXR1cFByb2dyZXNzQWN0aW9ucyA9IHJlcXVpcmUoJy4uL2FjdGlvbnMvc2V0dXAtcHJvZ3Jlc3MtYWN0aW9ucycpO1xuXG5mdW5jdGlvbiBnZXRTZXR1cFByb2dyZXNzKCkge1xuXHRyZXR1cm4ge1xuXHRcdGNvbXBsZXRlZDogU2V0dXBQcm9ncmVzc1N0b3JlLmdldEN1cnJlbnRTdGVwKCkuY29tcGxldGVkXG5cdH07XG59XG5cbnZhciBTa2lwQnV0dG9uID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiBcIlNraXBCdXR0b25cIixcblxuXHRzdHlsZToge1xuXHRcdGNvbG9yOiAnI2JiYicsXG5cdFx0Zm9udFNpemU6ICc5MCUnLFxuXHRcdG1hcmdpbkxlZnQ6IDIwLFxuXHRcdGJvcmRlckJvdHRvbTogJzFweCBkb3R0ZWQgI2JiYidcblx0fSxcblxuXHRjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0U2V0dXBQcm9ncmVzc1N0b3JlLmFkZENoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0fSxcblxuXHRjb21wb25lbnRXaWxsVW5tb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0U2V0dXBQcm9ncmVzc1N0b3JlLnJlbW92ZUNoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0fSxcblxuXHRfb25DaGFuZ2U6IGZ1bmN0aW9uKCkge1xuICAgIFx0dGhpcy5zZXRTdGF0ZShnZXRTZXR1cFByb2dyZXNzKCkpO1xuICBcdH0sXG5cbiAgXHRnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBnZXRTZXR1cFByb2dyZXNzKCk7XG5cdH0sXG5cblx0aGFuZGxlU2tpcDogZnVuY3Rpb24gKGUpIHtcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0U2V0dXBQcm9ncmVzc0FjdGlvbnMuc2tpcFN0ZXAoKTtcblx0fSxcblxuXHRyZW5kZXI6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBjb21wbGV0ZWQgPSAodGhpcy5zdGF0ZS5jb21wbGV0ZWQpO1xuXHRcdGlmICggY29tcGxldGVkICkge1xuXHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwge3N0eWxlOiB0aGlzLnN0eWxlLCBocmVmOiBcIiNcIiwgb25DbGljazogdGhpcy5oYW5kbGVTa2lwfSwgXCJOb3Qgbm93XCIpKTtcblx0XHR9XG5cdH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNraXBCdXR0b247IiwiXG52YXIgUmVhY3QgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snUmVhY3QnXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJ1JlYWN0J10gOiBudWxsKTtcblxudmFyIFRvb2x0aXAgPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiVG9vbHRpcFwiLFxuXHRwcm9wVHlwZXM6IHtcblx0XHRsZWZ0OiBSZWFjdC5Qcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsICAvLyBlLmcuIDYwMFxuXHRcdHRvcDogUmVhY3QuUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLCAgIC8vZS5nLiAxNTdcblx0XHR3aWR0aDogUmVhY3QuUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLCAvL2UuZy4gMzIwXG5cdFx0dGl0bGU6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCwgIC8vIGUuZy4gRGlzdHJhY3Rpb24tRnJlZSBXcml0aW5nXG5cdH0sXG5cblx0aGFuZGxlRGlzbWlzczogZnVuY3Rpb24gKCBlICkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0fSxcblxuXHRjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24gKCkge1xuXHRcdHRoaXMuX3JlY29tcHV0ZVBvc2l0aW9uKCk7XG5cdH0sXG5cblx0Y29tcG9uZW50V2lsbFJlY2VpdmVQcm9wczogZnVuY3Rpb24gKCkge1xuXHRcdHRoaXMuX3JlY29tcHV0ZVBvc2l0aW9uKCk7XG5cdH0sXG5cblx0Z2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbiAoKSB7XG5cdFx0cmV0dXJuIHtcblx0XHRcdHJlYWxUb3A6IHRoaXMucHJvcHMudG9wXG5cdFx0fTtcblx0fSxcblxuXHRfcmVjb21wdXRlUG9zaXRpb246IGZ1bmN0aW9uICgpIHtcblx0XHR2YXIgJHdyYXBwZXIgPSBqUXVlcnkoUmVhY3QuZmluZERPTU5vZGUodGhpcy5yZWZzLndyYXBwZXIpKTtcblxuXHRcdHRoaXMuc2V0U3RhdGUoe1xuXHRcdFx0cmVhbFRvcDogdGhpcy5wcm9wcy50b3AgLSAoJHdyYXBwZXIub3V0ZXJIZWlnaHQoKS8yKVxuXHRcdH0pO1xuXHR9LFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge3JlZjogXCJ3cmFwcGVyXCIsIGNsYXNzTmFtZTogXCJ3cC1wb2ludGVyIHdwLXBvaW50ZXItbGVmdFwiLCBzdHlsZToge3Bvc2l0aW9uOiAnYWJzb2x1dGUnLCB3aWR0aDogdGhpcy5wcm9wcy53aWR0aCwgdG9wOiB0aGlzLnN0YXRlLnJlYWxUb3AsIGxlZnQ6IHRoaXMucHJvcHMubGVmdCwgekluZGV4OiA5OTk5fX0sIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IFwid3AtcG9pbnRlci1jb250ZW50XCJ9LCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgdGhpcy5wcm9wcy50aXRsZSksIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIG51bGwsIHRoaXMucHJvcHMuY2hpbGRyZW4pXG5cdFx0XHRcdCksIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IFwid3AtcG9pbnRlci1hcnJvd1wifSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiBcIndwLXBvaW50ZXItYXJyb3ctaW5uZXJcIn0pXG5cdFx0XHRcdClcblx0XHRcdClcblx0XHQpO1xuXHR9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBUb29sdGlwOyIsInZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93WydSZWFjdCddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnUmVhY3QnXSA6IG51bGwpLFxuXHRSYWRpdW0gPSByZXF1aXJlKCdyYWRpdW0nKSxcblx0UHJvZ3Jlc3NCYXIgPSByZXF1aXJlKCdAYXV0b21hdHRpYy9kb3BzLXJlYWN0L2pzL2NvbXBvbmVudHMvcHJvZ3Jlc3MtYmFyJyksXG5cdFNldHVwUHJvZ3Jlc3NBY3Rpb25zID0gcmVxdWlyZSgnLi4vYWN0aW9ucy9zZXR1cC1wcm9ncmVzcy1hY3Rpb25zJyksXG5cdERhc2hpY29uID0gcmVxdWlyZSgnLi9kYXNoaWNvbicpO1xuXG52YXIgc3RlcFNoYXBlID0gUmVhY3QuUHJvcFR5cGVzLnNoYXBlKHtcblx0bmFtZTogUmVhY3QuUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuXHRzbHVnOiBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nXG59KTtcblxuLyoqXG4gKiBUaGUgbWVudSB3aGljaCBhbGxvd3MgdGhlIHVzZXIgdG8gc3dpdGNoIHN0ZXBzXG4gKiovXG52YXIgV2VsY29tZU1lbnUgPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiV2VsY29tZU1lbnVcIixcblx0XG5cdHByb3BUeXBlczoge1xuXHRcdGN1cnJlbnRTdGVwOiBzdGVwU2hhcGUuaXNSZXF1aXJlZCxcblx0XHRjbGlja2FibGU6IFJlYWN0LlByb3BUeXBlcy5ib29sLFxuXHRcdGFsbFN0ZXBzOiBSZWFjdC5Qcm9wVHlwZXMuYXJyYXlPZihzdGVwU2hhcGUpLmlzUmVxdWlyZWQsXG5cdFx0cHJvZ3Jlc3NQZXJjZW50OiBSZWFjdC5Qcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWRcblx0fSxcblxuXHRnZXREZWZhdWx0UHJvcHM6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB7XG5cdFx0XHRjbGlja2FibGU6IHRydWVcblx0XHR9O1xuXHR9LFxuXG5cdHN0eWxlczoge1xuXHRcdHdyYXBwZXI6IHtcblx0XHRcdGZsb2F0OiAncmlnaHQnLFxuXHRcdFx0d2lkdGg6ICcyOCUnLFxuXHRcdFx0aGVpZ2h0OiAnMTAwJScsXG5cdFx0XHRiYWNrZ3JvdW5kOiAnI2ZhZmFmYScsXG5cdFx0XHRib3JkZXI6ICcxcHggc29saWQgI2VlZScsXG5cdFx0fSxcblx0XHR0aXRsZToge1xuXHRcdFx0bWFyZ2luOiAwLFxuXHRcdFx0cGFkZGluZzogMTIsXG5cdFx0XHRvdmVyZmxvdzogJ2hpZGRlbicsXG5cdFx0XHRiYWNrZ3JvdW5kOiAnIzQ0NCcsXG5cdFx0XHRjb2xvcjogJyNmZmYnLFxuXHRcdFx0Zm9udFNpemU6IDEyLFxuXHRcdFx0dGV4dFRyYW5zZm9ybTogJ3VwcGVyY2FzZSdcblx0XHR9LFxuXHRcdGxpc3Q6IHtcblx0XHRcdG1hcmdpbjogJzEzcHggMTBweCcsXG5cdFx0XHRsaXN0U3R5bGU6ICdub25lJyxcblx0XHRcdCdAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpJzoge1xuXHRcdFx0XHRtYXJnaW46ICc1cHggNHB4J1xuXHRcdFx0fVxuXHRcdH0sXG5cdFx0bWVudUl0ZW06IHtcblx0XHRcdG1hcmdpbkJvdHRvbTogNixcblx0XHRcdHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuXHRcdFx0Y29sb3I6ICcjMzMzJyxcblx0XHRcdGxpbmVIZWlnaHQ6IDEuNyxcblx0XHRcdCdAbWVkaWEgKG1heC13aWR0aDogNzgycHgpJzoge1xuXHRcdFx0XHRmb250U2l6ZTogJ3NtYWxsJ1xuXHRcdFx0fSxcblx0XHRcdCdAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpJzoge1xuXHRcdFx0XHRmb250U2l6ZTogJ3NtYWxsZXInXG5cdFx0XHR9XG5cdFx0fSxcblx0XHRtZW51SXRlbUNvbXBsZXRlZDoge1xuXHRcdFx0Y29sb3I6ICcjNEFCODY2J1xuXHRcdH0sXG5cdFx0aWNvbjoge1xuXHRcdFx0Zm9udFNpemU6IDE2LFxuXHRcdFx0dG9wOiAzLFxuXHRcdFx0cG9zaXRpb246ICdyZWxhdGl2ZSdcblx0XHR9LFxuXHRcdG1lbnVJdGVtTGluazoge1xuXHRcdFx0Y29sb3I6ICdpbmhlcml0Jyxcblx0XHRcdGJvcmRlckJvdHRvbTogJzFweCBkYXNoZWQnXG5cdFx0fSxcblx0XHRtZW51SXRlbUN1cnJlbnQ6IHtcblx0XHRcdGNvbG9yOiAnIzAwNzRBMidcblx0XHR9XG5cdH0sXG5cblx0c2VsZWN0U3RlcDogZnVuY3Rpb24oZSkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcblx0XHR2YXIgc2x1ZyA9IGpRdWVyeShlLmN1cnJlbnRUYXJnZXQpLmRhdGEoJ3N0ZXAtc2x1ZycpO1xuXG5cdFx0U2V0dXBQcm9ncmVzc0FjdGlvbnMuc2V0Q3VycmVudFN0ZXAoc2x1Zyk7XG5cdH0sXG5cblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblxuXHRcdHZhciBtZW51SXRlbXMgPSB0aGlzLnByb3BzLmFsbFN0ZXBzLm1hcChmdW5jdGlvbiAoIHN0ZXAgKSB7XG5cdFx0XHR2YXIgdGl0bGUsIGN1cnJlbnQsIG1lbnVWaWV3LCBpY29uTmFtZTtcblxuXHRcdFx0aWYgKCB0aGlzLnByb3BzLmNsaWNrYWJsZSAmJiB0aGlzLnByb3BzLmN1cnJlbnRTdGVwICkge1xuXHRcdFx0XHRjdXJyZW50ID0gKCB0aGlzLnByb3BzLmN1cnJlbnRTdGVwLnNsdWcgPT0gc3RlcC5zbHVnICk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggIXN0ZXAuc3RhdGljICYmIHRoaXMucHJvcHMuY2xpY2thYmxlICkge1xuXHRcdFx0XHR0aXRsZSA9IFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIHtocmVmOiBcIiNcIiwgc3R5bGU6IHRoaXMuc3R5bGVzLm1lbnVJdGVtTGluaywgXCJkYXRhLXN0ZXAtc2x1Z1wiOiBzdGVwLnNsdWcsIG9uQ2xpY2s6IHRoaXMuc2VsZWN0U3RlcH0sIHN0ZXAubmFtZSk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0aXRsZSA9IHN0ZXAubmFtZTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCBzdGVwLm1lbnVWaWV3ICYmIHRoaXMucHJvcHMuY2xpY2thYmxlICkge1xuXHRcdFx0XHRtZW51VmlldyA9IFJlYWN0LmNyZWF0ZUVsZW1lbnQoc3RlcC5tZW51VmlldywgbnVsbCk7XG5cdFx0XHR9XG5cdFx0XHRcblx0XHRcdGljb25OYW1lID0gc3RlcC5jb21wbGV0ZWQgPyAneWVzJyA6ICdhcnJvdy1yaWdodC1hbHQyJztcblxuXHRcdFx0cmV0dXJuIChcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIHtrZXk6IHN0ZXAuc2x1Zywgc3R5bGU6IFt0aGlzLnN0eWxlcy5tZW51SXRlbSwgc3RlcC5jb21wbGV0ZWQgJiYgdGhpcy5zdHlsZXMubWVudUl0ZW1Db21wbGV0ZWQsIGN1cnJlbnQgJiYgdGhpcy5zdHlsZXMubWVudUl0ZW1DdXJyZW50XX0sIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoRGFzaGljb24sIHtzdHlsZTogdGhpcy5zdHlsZXMuaWNvbiwgbmFtZTogaWNvbk5hbWV9KSwgXG5cdFx0XHRcdFx0dGl0bGUsIFwiIFwiLCBzdGVwLnNraXBwZWQgPyAnKHNraXBwZWQpJyA6IG51bGwsIFxuXHRcdFx0XHRcdG1lbnVWaWV3XG5cdFx0XHRcdClcblx0XHRcdCk7XG5cdFx0fS5iaW5kKHRoaXMpICk7XG5cblx0XHRyZXR1cm4gKFxuXHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7c3R5bGU6IFt0aGlzLnN0eWxlcy53cmFwcGVyLCB0aGlzLnByb3BzLnN0eWxlXX0sIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwge3N0eWxlOiB0aGlzLnN0eWxlcy50aXRsZX0sIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtzdHlsZToge2Zsb2F0OiAnbGVmdCcsIG1hcmdpblJpZ2h0OiAxMH19LCBcIllvdXIgUHJvZ3Jlc3NcIiksIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFByb2dyZXNzQmFyLCB7c3R5bGU6IHsgZmxvYXQ6ICdsZWZ0J30sIHByb2dyZXNzUGVyY2VudDogdGhpcy5wcm9wcy5wcm9ncmVzc1BlcmNlbnR9KVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KSwgXG5cdFx0XHRcdFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwib2xcIiwge3N0eWxlOiB0aGlzLnN0eWxlcy5saXN0fSwgXG5cdFx0XHRcdFx0bWVudUl0ZW1zXG5cdFx0XHRcdClcblx0XHRcdClcblx0XHQpO1xuXHR9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBSYWRpdW0oV2VsY29tZU1lbnUpOyIsInZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93WydSZWFjdCddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnUmVhY3QnXSA6IG51bGwpO1xuXG52YXIgV2VsY29tZVNlY3Rpb24gPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiV2VsY29tZVNlY3Rpb25cIixcblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgJF9fMD0gIHRoaXMucHJvcHMsb3RoZXI9KGZ1bmN0aW9uKHNvdXJjZSwgZXhjbHVzaW9uKSB7dmFyIHJlc3QgPSB7fTt2YXIgaGFzT3duID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtpZiAoc291cmNlID09IG51bGwpIHt0aHJvdyBuZXcgVHlwZUVycm9yKCk7fWZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtpZiAoaGFzT3duLmNhbGwoc291cmNlLCBrZXkpICYmICFoYXNPd24uY2FsbChleGNsdXNpb24sIGtleSkpIHtyZXN0W2tleV0gPSBzb3VyY2Vba2V5XTt9fXJldHVybiByZXN0O30pKCRfXzAse30pO1xuXHRcdHJldHVybiAoXG5cdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIFJlYWN0Ll9fc3ByZWFkKHt9LCAgb3RoZXIsIHtjbGFzc05hbWU6IFwid2VsY29tZV9fc2VjdGlvblwifSksIFxuXHRcdFx0XHR0aGlzLnByb3BzLmNoaWxkcmVuXG5cdFx0XHQpXG5cdFx0KTtcblx0fVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gV2VsY29tZVNlY3Rpb247IiwidmFyIFJlYWN0ID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJ1JlYWN0J10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWydSZWFjdCddIDogbnVsbCksXG5cdFdlbGNvbWVNZW51ID0gcmVxdWlyZSgnLi93ZWxjb21lLW1lbnUnKSxcblx0U2V0dXBQcm9ncmVzc1N0b3JlID0gcmVxdWlyZSgnLi4vc3RvcmVzL3NldHVwLXByb2dyZXNzLXN0b3JlJyksXG5cdFJlc2V0ID0gcmVxdWlyZSgnQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9qcy9jb21wb25lbnRzL3Jlc2V0JyksXG5cdFNldHVwUHJvZ3Jlc3NBY3Rpb25zID0gcmVxdWlyZSgnLi4vYWN0aW9ucy9zZXR1cC1wcm9ncmVzcy1hY3Rpb25zJyksXG5cdEZsYXNoID0gcmVxdWlyZSgnLi9mbGFzaCcpLFxuXHRzdHlsZXMgPSByZXF1aXJlKCcuLi9zdHlsZXMnKSxcblx0R2V0U3RhcnRlZCA9IHJlcXVpcmUoJy4vZ2V0LXN0YXJ0ZWQnKSxcblx0U3Bpbm5lclN0b3JlID0gcmVxdWlyZSgnLi4vc3RvcmVzL3NwaW5uZXItc3RvcmUnKSxcblx0U3Bpbm5lckFjdGlvbnMgPSByZXF1aXJlKCcuLi9hY3Rpb25zL3NwaW5uZXItYWN0aW9ucycpLFxuXHREYXRhU3RvcmUgPSByZXF1aXJlKCcuLi9zdG9yZXMvZGF0YS1zdG9yZScpO1xuXG5mdW5jdGlvbiBnZXRTZXR1cFByb2dyZXNzKCkge1xuXHRyZXR1cm4geyBcblx0XHRuZXdVc2VyOiBTZXR1cFByb2dyZXNzU3RvcmUuaXNOZXdVc2VyKCksIFxuXHRcdHNob3dTcGlubmVyOiBTcGlubmVyU3RvcmUuc2hvd2luZygpLCBcblx0XHRzcGlubmVyTWVzc2FnZTogU3Bpbm5lclN0b3JlLmdldE1lc3NhZ2UoKSwgXG5cdFx0Y3VycmVudFN0ZXA6IFNldHVwUHJvZ3Jlc3NTdG9yZS5nZXRDdXJyZW50U3RlcCgpLCBcblx0XHRhbGxTdGVwczogU2V0dXBQcm9ncmVzc1N0b3JlLmdldEFsbFN0ZXBzKCksIFxuXHRcdHByb2dyZXNzUGVyY2VudDogU2V0dXBQcm9ncmVzc1N0b3JlLmdldFByb2dyZXNzUGVyY2VudCgpIFxuXHR9O1xufVxuXG4vLyBUT0RPOiB2aXN1YWwgXCJzYXZpbmdcIiBmb3IgdGhpcy5zdGF0ZS5zYXZpbmdcbnZhciBXZWxjb21lV2lkZ2V0ID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiBcIldlbGNvbWVXaWRnZXRcIixcblxuXHRzdHlsZXM6IHtcblx0XHR3cmFwcGVyOiB7IHBvc2l0aW9uOiAncmVsYXRpdmUnIH0sXG5cdFx0bG9hZGluZ092ZXJsYXk6IHtcblx0XHRcdHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuXHRcdFx0dG9wOiAwLFxuXHRcdFx0bGVmdDogMCxcblx0XHRcdHdpZHRoOiAnMTAwJScsXG5cdFx0XHRoZWlnaHQ6ICcxMDAlJyxcblx0XHRcdG1pbkhlaWdodDogJzEwMCUnLFxuXHRcdFx0ekluZGV4OiA5OTksXG5cdFx0XHRiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDI1NSwyNTUsMjU1LDAuNiknXG5cdFx0fSxcblx0XHRsb2FkaW5nTWVzc2FnZToge1xuXHRcdFx0cG9zaXRpb246ICdhYnNvbHV0ZScsXG5cdFx0XHR3aWR0aDogJzUwJScsXG5cdFx0XHRtaW5XaWR0aDogMzAwLFxuXHRcdFx0Ym9yZGVyUmFkaXVzOiAyLFxuXHRcdFx0cGFkZGluZzogMjAsXG5cdFx0XHRib3JkZXI6ICcxcHggc29saWQgYmxhY2snLFxuXHRcdFx0YmFja2dyb3VuZENvbG9yOiAnd2hpdGUnLFxuXHRcdFx0dGV4dEFsaWduOiAnY2VudGVyJyxcblx0XHRcdGxlZnQ6ICc1MCUnLFxuXHRcdFx0dG9wOiAxMDAsXG5cdFx0XHR0cmFuc2Zvcm06ICd0cmFuc2xhdGUoLTUwJSwtNTAlKSdcblx0XHR9LFxuXHRcdGNvbnRhaW5lcjoge1xuXHRcdFx0ZmxvYXQ6ICdsZWZ0Jyxcblx0XHRcdHdpZHRoOiAnNzAlJyxcblx0XHRcdHBhZGRpbmc6ICcwIDEwcHgnXG5cdFx0fSxcblx0XHRtZW51OiB7XG5cdFx0XHRtYXJnaW5Ub3A6IDI1XG5cdFx0fVxuXHR9LFxuXG5cdGNvbXBvbmVudERpZE1vdW50OiBmdW5jdGlvbigpIHtcblx0XHRTZXR1cFByb2dyZXNzU3RvcmUuYWRkQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuXHRcdFNwaW5uZXJTdG9yZS5hZGRDaGFuZ2VMaXN0ZW5lcih0aGlzLl9vblNwaW5uZXJDaGFuZ2UpO1xuXHRcdERhdGFTdG9yZS5hZGRDaGFuZ2VMaXN0ZW5lcih0aGlzLl9vbkRhdGFDaGFuZ2UpO1xuXHR9LFxuXG5cdGNvbXBvbmVudFdpbGxVbm1vdW50OiBmdW5jdGlvbigpIHtcblx0XHRTZXR1cFByb2dyZXNzU3RvcmUucmVtb3ZlQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuXHRcdFNwaW5uZXJTdG9yZS5yZW1vdmVDaGFuZ2VMaXN0ZW5lcih0aGlzLl9vblNwaW5uZXJDaGFuZ2UpO1xuXHRcdERhdGFTdG9yZS5yZW1vdmVDaGFuZ2VMaXN0ZW5lcih0aGlzLl9vbkRhdGFDaGFuZ2UpO1xuXHR9LFxuXG5cdF9vbkNoYW5nZTogZnVuY3Rpb24oKSB7XG4gICAgXHR0aGlzLnNldFN0YXRlKGdldFNldHVwUHJvZ3Jlc3MoKSk7XG4gIFx0fSxcblxuICBcdF9vblNwaW5uZXJDaGFuZ2U6IGZ1bmN0aW9uKCkge1xuICBcdFx0dGhpcy5zZXRTdGF0ZSh7IHNob3dTcGlubmVyOiBTcGlubmVyU3RvcmUuc2hvd2luZygpLCBzcGlubmVyTWVzc2FnZTogU3Bpbm5lclN0b3JlLmdldE1lc3NhZ2UoKSB9KTtcbiAgXHR9LFxuXG4gIFx0X29uRGF0YUNoYW5nZTogZnVuY3Rpb24oKSB7XG4gIFx0XHR0aGlzLnNldFN0YXRlKHsgc2F2aW5nOiBEYXRhU3RvcmUuaXNTYXZpbmcoKSB9KTtcbiAgXHR9LFxuXG5cdGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGdldFNldHVwUHJvZ3Jlc3MoKTtcblx0fSxcblxuXHRoYW5kbGVSZXNldDogZnVuY3Rpb24oIGUgKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFNldHVwUHJvZ3Jlc3NBY3Rpb25zLnJlc2V0RGF0YSgpO1xuXHR9LFxuXG5cdGhhbmRsZVNob3dTcGlubmVyOiBmdW5jdGlvbiAoIGUgKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFNwaW5uZXJBY3Rpb25zLnNob3coXCJUZXN0aW5nIHNwaW5uZXJcIik7XG5cdH0sXG5cblx0aGFuZGxlSGlkZVNwaW5uZXI6IGZ1bmN0aW9uICggZSApIHtcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0U3Bpbm5lckFjdGlvbnMuaGlkZSgpO1xuXHR9LFxuXHRcblxuICBcdHJlbmRlcjogZnVuY3Rpb24oKSB7XG4gIFx0XHRyZXR1cm4gKFxuXHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChSZXNldCwge2Nzczogc3R5bGVzLmNzc30sIFxuXHRcdFx0XHR0aGlzLl9yZW5kZXJEZWJ1ZygpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7c3R5bGU6IHRoaXMuc3R5bGVzLndyYXBwZXJ9LCBcblx0XHRcdFx0XHR0aGlzLl9yZW5kZXJTcGlubmVyKCksIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge3N0eWxlOiB0aGlzLnN0eWxlcy5jb250YWluZXJ9LCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoRmxhc2gsIG51bGwpLCBcblx0XHRcdFx0XHRcdHRoaXMuX3JlbmRlclNlY3Rpb24oKVxuXHRcdFx0XHRcdCksIFxuXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChXZWxjb21lTWVudSwge3N0eWxlOiB0aGlzLnN0eWxlcy5tZW51LCBjbGlja2FibGU6ICF0aGlzLnN0YXRlLm5ld1VzZXIsIGN1cnJlbnRTdGVwOiB0aGlzLnN0YXRlLmN1cnJlbnRTdGVwLCBhbGxTdGVwczogdGhpcy5zdGF0ZS5hbGxTdGVwcywgcHJvZ3Jlc3NQZXJjZW50OiB0aGlzLnN0YXRlLnByb2dyZXNzUGVyY2VudH0pLCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IFwiY2xlYXJcIn0pXG5cdFx0XHRcdClcblx0XHRcdClcblx0XHQpO1xuXHR9LFxuXG5cdF9yZW5kZXJTZWN0aW9uOiBmdW5jdGlvbigpIHtcblx0XHRpZiAoIHRoaXMuc3RhdGUubmV3VXNlciApIHtcbiAgXHRcdFx0cmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KEdldFN0YXJ0ZWQsIG51bGwpKTtcbiAgXHRcdH0gZWxzZSB7XG4gIFx0XHRcdHJldHVybiB0aGlzLl9yZW5kZXJDdXJyZW50VmlldygpO1xuICBcdFx0fVxuXHR9LFxuXG5cdF9yZW5kZXJEZWJ1ZzogZnVuY3Rpb24oKSB7XG5cdFx0Ly8gaWYgKCBKUFMuZGVidWcgKSB7XG4gIC8vIFx0XHRcdHJldHVybiAoPGRpdj5cbiAgLy8gXHRcdFx0XHQ8YSBocmVmPVwiI1wiIGNsYXNzTmFtZT1cImJ1dHRvblwiIG9uQ2xpY2s9e3RoaXMuaGFuZGxlUmVzZXR9PlJlc2V0IFdpemFyZDwvYT5cbiAgLy8gXHRcdFx0XHQ8YSBocmVmPVwiI1wiIGNsYXNzTmFtZT1cImJ1dHRvblwiIG9uQ2xpY2s9e3RoaXMuaGFuZGxlU2hvd1NwaW5uZXJ9PlNob3cgc3Bpbm5lcjwvYT5cbiAgLy8gXHRcdFx0XHQ8YSBocmVmPVwiI1wiIGNsYXNzTmFtZT1cImJ1dHRvblwiIG9uQ2xpY2s9e3RoaXMuaGFuZGxlSGlkZVNwaW5uZXJ9PkhpZGUgc3Bpbm5lcjwvYT5cbiAgLy8gXHRcdFx0PC9kaXY+KTtcbiAgLy8gXHRcdH0gZWxzZSB7XG4gIFx0XHRcdHJldHVybiBudWxsO1xuICBcdFx0Ly8gfVxuXHR9LFxuXG5cdF9yZW5kZXJTcGlubmVyOiBmdW5jdGlvbigpIHtcblx0XHRpZiAoIHRoaXMuc3RhdGUuc2hvd1NwaW5uZXIgKSB7XG4gIFx0XHRcdHJldHVybiAoXG4gIFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7c3R5bGU6IHRoaXMuc3R5bGVzLmxvYWRpbmdPdmVybGF5fSwgXG4gIFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtzdHlsZTogdGhpcy5zdHlsZXMubG9hZGluZ01lc3NhZ2V9LCBcbiAgXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImltZ1wiLCB7c3JjOiBKUFMuYmFzZV91cmwrXCIvaW1nL3NwaW5uZXItMnguZ2lmXCIsIHdpZHRoOiBcIjE2cHhcIiwgaGVpZ2h0OiBcIjE2cHhcIn0pLCBcbiAgXHRcdFx0XHRcdFx0XCLCoMKgXCIsIHRoaXMuc3RhdGUuc3Bpbm5lck1lc3NhZ2VcbiAgXHRcdFx0XHRcdClcbiAgXHRcdFx0XHQpXG4gIFx0XHRcdCk7XG5cbiAgXHRcdH0gZWxzZSB7XG4gIFx0XHRcdHJldHVybiBudWxsO1xuICBcdFx0fVxuXHR9LFxuXG5cdF9yZW5kZXJDdXJyZW50VmlldzogZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCB0aGlzLnN0YXRlLmN1cnJlbnRTdGVwICkge1xuICBcdFx0XHRyZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQodGhpcy5zdGF0ZS5jdXJyZW50U3RlcC53ZWxjb21lVmlldywgbnVsbCkpO1xuICBcdFx0fSBlbHNlIHtcbiAgXHRcdFx0cmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgXCJOb3RoaW5nXCIpKTtcbiAgXHRcdH1cblx0fSxcblxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gV2VsY29tZVdpZGdldDsiLCJ2YXIga2V5TWlycm9yID0gcmVxdWlyZSgna2V5bWlycm9yJyk7XG5cbm1vZHVsZS5leHBvcnRzID0ga2V5TWlycm9yKHtcblx0U1RFUF9DT01QTEVURTogbnVsbCxcblx0U1RFUF9HRVRfU1RBUlRFRDogbnVsbCxcblx0U1RFUF9TRUxFQ1Q6IG51bGwsXG5cdFNURVBfTkVYVDogbnVsbCxcblx0U1RFUF9TS0lQOiBudWxsLFxuXHRTSVRFX1NFVF9USVRMRTogbnVsbCxcblx0U0lURV9TRVRfREVTQ1JJUFRJT046IG51bGwsXG5cdFNJVEVfU0FWRV9USVRMRV9BTkRfREVTQ1JJUFRJT046IG51bGwsXG5cdFNJVEVfU0VUX1RIRU1FOiBudWxsLFxuXHRTSVRFX0lOU1RBTExfVEhFTUU6IG51bGwsXG5cdFNJVEVfSkVUUEFDS19DT05GSUdVUkVEOiBudWxsLFxuXHRTSVRFX0pFVFBBQ0tfTU9EVUxFX0VOQUJMRUQ6IG51bGwsXG5cdFNJVEVfSkVUUEFDS19NT0RVTEVfRElTQUJMRUQ6IG51bGwsXG5cdFNJVEVfSkVUUEFDS19KVU1QU1RBUlRfRU5BQkxFRDogbnVsbCxcblx0U0lURV9KRVRQQUNLX0FERF9NT0RVTEVTOiBudWxsLFxuXHRTSVRFX1NFVF9MQVlPVVQ6IG51bGwsXG5cblx0U0FWRV9TVEFSVEVEOiBudWxsLFxuXHRTQVZFX0ZJTklTSEVEOiBudWxsLFxuXG5cdFNFVF9GTEFTSDogbnVsbCxcblx0VU5TRVRfRkxBU0g6IG51bGwsXG5cdEZMQVNIX1NFVkVSSVRZX05PVElDRTogbnVsbCxcblx0RkxBU0hfU0VWRVJJVFlfRVJST1I6IG51bGwsXG5cblx0UkVTRVRfREFUQTogbnVsbCxcblxuXHRTSE9XX1NQSU5ORVI6IG51bGwsXG5cdEhJREVfU1BJTk5FUjogbnVsbFxufSk7IiwibW9kdWxlLmV4cG9ydHMgPSB7XG5cdC8vIHN0ZXBzXG5cdFNJVEVfVElUTEVfU1RFUF9TTFVHOiAndGl0bGUnLFxuXHRMQVlPVVRfU1RFUF9TTFVHOiAnbGF5b3V0Jyxcblx0VFJBRkZJQ19TVEVQX1NMVUc6ICd0cmFmZmljJyxcblx0U1RBVFNfTU9OSVRPUklOR19TVEVQX1NMVUc6ICdzdGF0cy1tb25pdG9yaW5nJyxcblx0REVTSUdOX1NURVBfU0xVRzogJ2Rlc2lnbicsXG5cdEFEVkFOQ0VEX1NURVBfU0xVRzogJ2FkdmFuY2VkJyxcblx0SkVUUEFDS19NT0RVTEVTX1NURVBfU0xVRzogJ2pldHBhY2snXG59OyIsIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEFwcERpc3BhdGNoZXJcbiAqXG4gKiBBIHNpbmdsZXRvbiB0aGF0IG9wZXJhdGVzIGFzIHRoZSBjZW50cmFsIGh1YiBmb3IgYXBwbGljYXRpb24gdXBkYXRlcy5cbiAqL1xuXG52YXIgRGlzcGF0Y2hlciA9IHJlcXVpcmUoJ2ZsdXgnKS5EaXNwYXRjaGVyO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG5ldyBEaXNwYXRjaGVyKCk7IiwidmFyIFdlbGNvbWVQYW5lbCA9IHJlcXVpcmUoJy4vd2VsY29tZS1wYW5lbCcpO1xuXG5XZWxjb21lUGFuZWwoKTsiLCJ2YXIgQXBwRGlzcGF0Y2hlciA9IHJlcXVpcmUoJy4uL2Rpc3BhdGNoZXIvYXBwLWRpc3BhdGNoZXInKSxcblx0RXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyLFxuXHRKUFNDb25zdGFudHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvamV0cGFjay1zdGFydC1jb25zdGFudHMnKTtcblxuLypcbiAqIFRoaXMgaXMgYSByZWZjb3VudGVkIHNhdmUgbW9uaXRvciB3aGljaCB3YXJucyBpZiB5b3UgdHJ5IHRvIGxlYXZlIHRoZSBwYWdlIHdoaWxlIHRoZSBkYXRhIGlzIHN0aWxsIHNhdmluZ1xuICovXG5cbnZhciBfY3VycmVudFNhdmVzID0gMCwganBzVGltZW91dCwgQ0hBTkdFX0VWRU5UID0gJ2NoYW5nZSc7XG5cbmpRdWVyeSh3aW5kb3cpLm9uKCdiZWZvcmV1bmxvYWQnLCBmdW5jdGlvbigpIHtcblx0aWYoRGF0YVN0b3JlLmlzU2F2aW5nKCkpIHtcblx0XHRqcHNUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcblx0ICAgICAgICAvLyBhbGVydCgnWW91IHN0YXllZCcpO1xuXHQgICAgICAgIC8vIG5vb3Bcblx0ICAgIH0sIDEwMDApO1xuXHQgICAgcmV0dXJuIFwiWW91ciBzaXRlIGNoYW5nZXMgYXJlIHN0aWxsIHNhdmluZy5cIjtcblx0fVxufSk7XG5cbmpRdWVyeSh3aW5kb3cpLm9uKCd1bmxvYWQnLCBmdW5jdGlvbigpIHtcblx0Y2xlYXJUaW1lb3V0KGpwc1RpbWVvdXQpO1xufSk7XG5cbmZ1bmN0aW9uIGluY3JlbWVudFNhdmVDb3VudGVyKCkge1xuXHRfY3VycmVudFNhdmVzID0gX2N1cnJlbnRTYXZlcyArIDE7XG59XG5cbmZ1bmN0aW9uIGRlY3JlbWVudFNhdmVDb3VudGVyKCkge1xuXHRfY3VycmVudFNhdmVzID0gX2N1cnJlbnRTYXZlcyAtIDE7XG59XG5cbnZhciBEYXRhU3RvcmUgPSBfLmV4dGVuZCh7fSwgRXZlbnRFbWl0dGVyLnByb3RvdHlwZSwge1xuXHRpc1NhdmluZzogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIF9jdXJyZW50U2F2ZXMgPiAwO1xuXHR9LFxuXG5cdGFkZENoYW5nZUxpc3RlbmVyOiBmdW5jdGlvbihjYWxsYmFjaykge1xuXHRcdHRoaXMub24oQ0hBTkdFX0VWRU5ULCBjYWxsYmFjayk7XG5cdH0sXG5cblx0cmVtb3ZlQ2hhbmdlTGlzdGVuZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG5cdFx0dGhpcy5yZW1vdmVMaXN0ZW5lcihDSEFOR0VfRVZFTlQsIGNhbGxiYWNrKTtcblx0fSxcblxuXHRlbWl0Q2hhbmdlOiBmdW5jdGlvbigpIHtcblx0ICAgIHRoaXMuZW1pdChDSEFOR0VfRVZFTlQpO1xuXHR9LFxufSk7XG5cbkFwcERpc3BhdGNoZXIucmVnaXN0ZXIoZnVuY3Rpb24oYWN0aW9uKSB7XG5cbiAgc3dpdGNoKGFjdGlvbi5hY3Rpb25UeXBlKSB7XG4gICAgY2FzZSBKUFNDb25zdGFudHMuU0FWRV9TVEFSVEVEOlxuICAgIFx0aW5jcmVtZW50U2F2ZUNvdW50ZXIoKTtcblx0XHREYXRhU3RvcmUuZW1pdENoYW5nZSgpO1xuXHRcdGJyZWFrO1xuXG4gICAgY2FzZSBKUFNDb25zdGFudHMuU0FWRV9GSU5JU0hFRDpcbiAgICBcdGRlY3JlbWVudFNhdmVDb3VudGVyKCk7XG4gICAgIFx0RGF0YVN0b3JlLmVtaXRDaGFuZ2UoKTtcbiAgICAgXHRicmVhaztcblxuICAgIGRlZmF1bHQ6XG4gICAgICAvLyBubyBvcFxuICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBEYXRhU3RvcmU7IiwidmFyIEFwcERpc3BhdGNoZXIgPSByZXF1aXJlKCcuLi9kaXNwYXRjaGVyL2FwcC1kaXNwYXRjaGVyJyksXG5cdEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlcixcblx0SlBTQ29uc3RhbnRzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL2pldHBhY2stc3RhcnQtY29uc3RhbnRzJyk7XG5cbnZhciBDSEFOR0VfRVZFTlQgPSAnY2hhbmdlJztcbnZhciBtZXNzYWdlLCBzZXZlcml0eTtcblxuZnVuY3Rpb24gc2V0Rmxhc2gobmV3TWVzc2FnZSwgbmV3U2V2ZXJpdHkpIHtcblx0bWVzc2FnZSA9IG5ld01lc3NhZ2U7XG5cdHNldmVyaXR5ID0gbmV3U2V2ZXJpdHk7XG59XG5cbnZhciBGbGFzaFN0b3JlID0gXy5leHRlbmQoe30sIEV2ZW50RW1pdHRlci5wcm90b3R5cGUsIHtcblx0Z2V0Rmxhc2g6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBzZXZlcml0eVN0cmluZztcblxuXHRcdHN3aXRjaChzZXZlcml0eSkge1xuXHRcdFx0Y2FzZSBKUFNDb25zdGFudHMuRkxBU0hfU0VWRVJJVFlfRVJST1I6XG5cdFx0XHRcdHNldmVyaXR5U3RyaW5nID0gJ2Vycm9yJztcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIEpQU0NvbnN0YW50cy5GTEFTSF9TRVZFUklUWV9OT1RJQ0U6XG5cdFx0XHRcdHNldmVyaXR5U3RyaW5nID0gJ25vdGljZSc7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0Ly9ub29wXG5cdFx0fVxuXHRcdHJldHVybiB7bWVzc2FnZTogbWVzc2FnZSwgc2V2ZXJpdHk6IHNldmVyaXR5U3RyaW5nfTtcblxuXHR9LFxuXG5cdGFkZENoYW5nZUxpc3RlbmVyOiBmdW5jdGlvbihjYWxsYmFjaykge1xuXHRcdHRoaXMub24oQ0hBTkdFX0VWRU5ULCBjYWxsYmFjayk7XG5cdH0sXG5cblx0cmVtb3ZlQ2hhbmdlTGlzdGVuZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG5cdFx0dGhpcy5yZW1vdmVMaXN0ZW5lcihDSEFOR0VfRVZFTlQsIGNhbGxiYWNrKTtcblx0fSxcblxuXHRlbWl0Q2hhbmdlOiBmdW5jdGlvbigpIHtcblx0ICAgIHRoaXMuZW1pdChDSEFOR0VfRVZFTlQpO1xuXHR9LFxufSk7XG5cbkFwcERpc3BhdGNoZXIucmVnaXN0ZXIoZnVuY3Rpb24oYWN0aW9uKSB7XG5cbiAgc3dpdGNoKGFjdGlvbi5hY3Rpb25UeXBlKSB7XG4gICAgY2FzZSBKUFNDb25zdGFudHMuU0VUX0ZMQVNIOlxuXHRcdHNldEZsYXNoKGFjdGlvbi5tZXNzYWdlLCBhY3Rpb24uc2V2ZXJpdHkpO1xuXHRcdEZsYXNoU3RvcmUuZW1pdENoYW5nZSgpO1xuXHRcdGJyZWFrO1xuXG4gICAgY2FzZSBKUFNDb25zdGFudHMuVU5TRVRfRkxBU0g6XG4gICAgIFx0c2V0Rmxhc2gobnVsbCwgbnVsbCk7XG4gICAgIFx0Rmxhc2hTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgIFx0YnJlYWs7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgLy8gbm8gb3BcbiAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gRmxhc2hTdG9yZTsiLCIvKlxuICogU3RvcmUgd2hpY2ggbWFuYWdlcyBhbmQgcGVyc2lzdHMgc2V0dXAgd2l6YXJkIHByb2dyZXNzXG4gKi9cblxudmFyIEFwcERpc3BhdGNoZXIgPSByZXF1aXJlKCcuLi9kaXNwYXRjaGVyL2FwcC1kaXNwYXRjaGVyJyksXG4gIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlcixcbiAgSlBTQ29uc3RhbnRzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL2pldHBhY2stc3RhcnQtY29uc3RhbnRzJyksXG4gIFdQQWpheCA9IHJlcXVpcmUoJy4uL3V0aWxzL3dwLWFqYXgnKTtcblxudmFyIENIQU5HRV9FVkVOVCA9ICdjaGFuZ2UnO1xuXG52YXIgX3N0ZXBzLCBfc3RhcnRlZCA9IEpQUy5zdGFydGVkOyBcblxuZnVuY3Rpb24gc2V0U3RlcHMoc3RlcHMpIHtcblxuICAvLyBzZXQgdGhlIGNvbXBsZXRpb24gc3RhdHVzIG9mIGVhY2ggc3RlcCB0byB0aGUgc2F2ZWQgdmFsdWVzXG4gIHN0ZXBzLmZvckVhY2goIGZ1bmN0aW9uKHN0ZXApIHtcbiAgICBcbiAgICAvLyBkZWZhdWx0IHZhbHVlcyBmb3Igc2tpcHBlZCwgY29tcGxldGVkIGFuZCBzdGF0aWNcbiAgICBpZiAoIHR5cGVvZiggc3RlcC5jb21wbGV0ZWQgKSA9PT0gJ3VuZGVmaW5lZCcgKSB7XG4gICAgICBzdGVwLmNvbXBsZXRlZCA9IChKUFMuc3RlcF9zdGF0dXNbc3RlcC5zbHVnXSAmJiBKUFMuc3RlcF9zdGF0dXNbc3RlcC5zbHVnXS5jb21wbGV0ZWQpIHx8IGZhbHNlOyAgXG4gICAgfVxuXG4gICAgaWYgKCB0eXBlb2YoIHN0ZXAuc2tpcHBlZCApID09PSAndW5kZWZpbmVkJyApIHtcbiAgICAgIHN0ZXAuc2tpcHBlZCA9IChKUFMuc3RlcF9zdGF0dXNbc3RlcC5zbHVnXSAmJiBKUFMuc3RlcF9zdGF0dXNbc3RlcC5zbHVnXS5za2lwcGVkKSB8fCBmYWxzZTsgIFxuICAgIH1cblxuICAgIGlmICggdHlwZW9mKCBzdGVwLnN0YXRpYyApID09PSAndW5kZWZpbmVkJyApIHtcbiAgICAgIHN0ZXAuc3RhdGljID0gZmFsc2U7XG4gICAgfVxuXG4gICAgLy8gc2V0IHRvICd0cnVlJyBpZiB5b3Ugd2FudCB0aGUgd2l6YXJkIHRvIG1vdmUgdG8gdGhpcyBzdGVwIGV2ZW4gaWYgaXQncyBiZWVuIGNvbXBsZXRlZFxuICAgIC8vIGJ5IGRlZmF1bHQgY29tcGxldGVkIHN0ZXBzIGFyZSBza2lwcGVkXG4gICAgaWYgKCB0eXBlb2YoIHN0ZXAubmV2ZXJTa2lwICkgPT09ICd1bmRlZmluZWQnICkge1xuICAgICAgc3RlcC5uZXZlclNraXAgPSBmYWxzZTtcbiAgICB9XG5cbiAgICAvLyBkZWZhdWx0IHZhbHVlIGZvciBpbmNsdWRlSW5Qcm9ncmVzc1xuICAgIGlmICggdHlwZW9mKCBzdGVwLmluY2x1ZGVJblByb2dyZXNzICkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBzdGVwLmluY2x1ZGVJblByb2dyZXNzID0gdHJ1ZTtcbiAgICB9XG4gIH0pOyBcbiAgXG4gIF9zdGVwcyA9IHN0ZXBzO1xuICBcbiAgLy8gc2V0IGxvY2F0aW9uIHRvIGZpcnN0IHBlbmRpbmcgc3RlcCwgaWYgbm90IHNldFxuICBlbnN1cmVWYWxpZFN0ZXBTbHVnKCk7IFxufVxuXG5mdW5jdGlvbiBzZXRTdGFydGVkKCkge1xuICBfc3RhcnRlZCA9IHRydWU7XG4gIHNlbGVjdE5leHRQZW5kaW5nU3RlcCgpO1xufVxuXG5mdW5jdGlvbiBjb21wbGV0ZShzdGVwU2x1Zykge1xuICB2YXIgc3RlcCA9IGdldFN0ZXBGcm9tU2x1ZyhzdGVwU2x1Zyk7XG4gIHN0ZXAuY29tcGxldGVkID0gdHJ1ZTtcbiAgc3RlcC5za2lwcGVkID0gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIHNraXAoKSB7XG4gIHZhciBzdGVwU2x1ZyA9IGN1cnJlbnRTdGVwU2x1ZygpO1xuICB2YXIgc3RlcCA9IGdldFN0ZXBGcm9tU2x1ZyhzdGVwU2x1Zyk7XG4gIHN0ZXAuc2tpcHBlZCA9IHRydWU7XG4gIHNlbGVjdE5leHRQZW5kaW5nU3RlcCgpO1xufVxuXG5mdW5jdGlvbiBnZXRTdGVwRnJvbVNsdWcoIHN0ZXBTbHVnICkge1xuICB2YXIgY3VycmVudFN0ZXAgPSBudWxsO1xuICBfLmVhY2goIF9zdGVwcywgZnVuY3Rpb24oIHN0ZXAgKSB7XG4gICAgaWYoIHN0ZXAuc2x1ZyA9PT0gc3RlcFNsdWcgKSB7XG4gICAgICBjdXJyZW50U3RlcCA9IHN0ZXA7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGN1cnJlbnRTdGVwO1xufVxuXG5mdW5jdGlvbiBlbnN1cmVWYWxpZFN0ZXBTbHVnKCkge1xuICB2YXIgc3RlcFNsdWcgPSBjdXJyZW50U3RlcFNsdWcoKTtcbiAgaWYgKCAhICggc3RlcFNsdWcgJiYgZ2V0U3RlcEZyb21TbHVnKCBzdGVwU2x1ZyApICkgKSB7XG5cbiAgICB2YXIgcGVuZGluZ1N0ZXAgPSBnZXROZXh0UGVuZGluZ1N0ZXAoKTtcbiAgICBpZiAoIHBlbmRpbmdTdGVwICE9PSBudWxsICkge1xuICAgICAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSAnd2VsY29tZS9zdGVwcy8nK3BlbmRpbmdTdGVwLnNsdWc7XG4gICAgfSAgICBcbiAgfVxufVxuXG5mdW5jdGlvbiBzZWxlY3ROZXh0UGVuZGluZ1N0ZXAoKSB7XG4gIHZhciBwZW5kaW5nU3RlcCA9IGdldE5leHRQZW5kaW5nU3RlcCgpO1xuICBpZiAoIHBlbmRpbmdTdGVwICE9PSBudWxsICkge1xuICAgIHNlbGVjdChwZW5kaW5nU3RlcC5zbHVnKTsgLy8gYWxzbyBzZXRzIHRoZSB3aW5kb3cgbG9jYXRpb24gaGFzaFxuICB9XG59XG5cbmZ1bmN0aW9uIGdldE5leHRQZW5kaW5nU3RlcCgpIHtcbiAgLy8gaWYgdGhlIF9uZXh0XyBzdGVwIGlzIG5ldmVyU2tpcCwgd2UgcHJvY2VlZCB0byBpdFxuICB2YXIgc3RlcEluZGV4ID0gY3VycmVudFN0ZXBJbmRleCgpO1xuICBpZiAoIHN0ZXBJbmRleCApIHtcbiAgICBpZiAoIF9zdGVwc1tzdGVwSW5kZXgrMV0gJiYgX3N0ZXBzW3N0ZXBJbmRleCsxXS5uZXZlclNraXAgPT09IHRydWUgKSB7XG4gICAgICByZXR1cm4gX3N0ZXBzW3N0ZXBJbmRleCsxXTtcbiAgICB9XG4gIH1cblxuICAvLyBvdGhlcndpc2UgZmluZCB0aGUgbmV4dCB1bmNvbXBsZXRlZCwgdW5za2lwcGVkIHN0ZXBcbiAgcmV0dXJuIF8uZmluZFdoZXJlKCBfc3RlcHMsIHsgY29tcGxldGVkOiBmYWxzZSwgc2tpcHBlZDogZmFsc2UgfSApO1xufVxuXG5mdW5jdGlvbiBjdXJyZW50U3RlcFNsdWcoKSB7XG4gIGlmICggd2luZG93LmxvY2F0aW9uLmhhc2guaW5kZXhPZignI3dlbGNvbWUvc3RlcHMnKSA9PT0gMCApIHtcbiAgICB2YXIgcGFydHMgPSB3aW5kb3cubG9jYXRpb24uaGFzaC5zcGxpdCgnLycpO1xuICAgIHZhciBzdGVwU2x1ZyA9IHBhcnRzW3BhcnRzLmxlbmd0aC0xXTtcbiAgICByZXR1cm4gc3RlcFNsdWc7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuZnVuY3Rpb24gY3VycmVudFN0ZXBJbmRleCgpIHtcbiAgdmFyIHNsdWcgPSBjdXJyZW50U3RlcFNsdWcoKTtcbiAgZm9yICggdmFyIGk9MDsgaTxfc3RlcHMubGVuZ3RoOyBpKysgKSB7XG4gICAgaWYgKCBfc3RlcHNbaV0uc2x1ZyA9PT0gc2x1ZyApIHtcbiAgICAgIHJldHVybiBpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIHNlbGVjdChzdGVwU2x1Zykge1xuICB3aW5kb3cubG9jYXRpb24uaGFzaCA9ICd3ZWxjb21lL3N0ZXBzLycrc3RlcFNsdWc7XG4gIC8vIHJlY29yZCBhbmFseXRpY3NcbiAgV1BBamF4LnBvc3QoSlBTLnN0ZXBfYWN0aW9ucy52aWV3LCB7IHN0ZXA6IHN0ZXBTbHVnIH0sIHsgcXVpZXQ6IHRydWUgfSk7XG59XG5cbi8vcmVzZXQgZXZlcnl0aGluZyBiYWNrIHRvIGRlZmF1bHRzXG5mdW5jdGlvbiByZXNldCgpIHtcbiAgSlBTLnN0ZXBfc3RhdHVzID0ge307XG4gIF8ud2hlcmUoIF9zdGVwcywgeyBzdGF0aWM6IGZhbHNlfSApLmZvckVhY2goIGZ1bmN0aW9uICggc3RlcCApIHsgXG4gICAgc3RlcC5jb21wbGV0ZWQgPSBmYWxzZTtcbiAgICBzdGVwLnNraXBwZWQgPSBmYWxzZTtcbiAgfSApO1xuICBfc3RhcnRlZCA9IGZhbHNlO1xufVxuXG52YXIgU2V0dXBQcm9ncmVzc1N0b3JlID0gXy5leHRlbmQoe30sIEV2ZW50RW1pdHRlci5wcm90b3R5cGUsIHtcblxuICBpbml0OiBmdW5jdGlvbihzdGVwcykge1xuICAgIHNldFN0ZXBzKHN0ZXBzKTtcbiAgfSxcblxuICBnZXRBbGxTdGVwczogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIF9zdGVwcztcbiAgfSxcblxuICBpc05ld1VzZXI6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiAhX3N0YXJ0ZWQ7XG4gIH0sXG5cbiAgZW1pdENoYW5nZTogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5lbWl0KCBDSEFOR0VfRVZFTlQgKTtcbiAgfSxcblxuICBnZXRDdXJyZW50U3RlcDogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGdldFN0ZXBGcm9tU2x1ZyggY3VycmVudFN0ZXBTbHVnKCkgKTtcbiAgfSxcblxuICBnZXROZXh0UGVuZGluZ1N0ZXA6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBnZXROZXh0UGVuZGluZ1N0ZXAoKTsgLy8gZGVsZWdhdGVcbiAgfSxcblxuICBnZXRTdGVwRnJvbVNsdWc6IGZ1bmN0aW9uKHNsdWcpIHtcbiAgICByZXR1cm4gZ2V0U3RlcEZyb21TbHVnKCBzbHVnICk7IC8vIGRlbGVnYXRlXG4gIH0sXG5cbiAgZ2V0UHJvZ3Jlc3NQZXJjZW50OiBmdW5jdGlvbigpIHtcbiAgXHR2YXIgbnVtU3RlcHMgPSBfLndoZXJlKCBfc3RlcHMsIHsgaW5jbHVkZUluUHJvZ3Jlc3M6IHRydWUgfSApLmxlbmd0aDtcbiAgICB2YXIgY29tcGxldGVkU3RlcHMgPSBfLndoZXJlKCBfc3RlcHMsIHsgaW5jbHVkZUluUHJvZ3Jlc3M6IHRydWUsIGNvbXBsZXRlZDogdHJ1ZSB9ICkubGVuZ3RoO1xuICAgIHZhciBwZXJjZW50Q29tcGxldGUgPSAoY29tcGxldGVkU3RlcHMgLyBudW1TdGVwcykgKiA5MCArIDEwO1xuICAgIHZhciBvdXRwdXQgPSBNYXRoLnJvdW5kKHBlcmNlbnRDb21wbGV0ZSAvIDEwKSAqIDEwO1xuICAgIHJldHVybiBvdXRwdXQ7XG4gIH0sXG5cbiAgYWRkQ2hhbmdlTGlzdGVuZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgdGhpcy5vbiggQ0hBTkdFX0VWRU5ULCBjYWxsYmFjayApO1xuICB9LFxuXG4gIHJlbW92ZUNoYW5nZUxpc3RlbmVyOiBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgIHRoaXMucmVtb3ZlTGlzdGVuZXIoIENIQU5HRV9FVkVOVCwgY2FsbGJhY2sgKTtcbiAgfVxufSk7XG5cbi8vIFJlZ2lzdGVyIGNhbGxiYWNrIHRvIGhhbmRsZSBhbGwgdXBkYXRlc1xuQXBwRGlzcGF0Y2hlci5yZWdpc3RlcihmdW5jdGlvbihhY3Rpb24pIHtcbiAgXG4gIHN3aXRjaChhY3Rpb24uYWN0aW9uVHlwZSkge1xuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNURVBfR0VUX1NUQVJURUQ6XG4gICAgICBzZXRTdGFydGVkKCk7XG4gICAgICBTZXR1cFByb2dyZXNzU3RvcmUuZW1pdENoYW5nZSgpO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIEpQU0NvbnN0YW50cy5TVEVQX1NFTEVDVDpcbiAgICAgIHNlbGVjdChhY3Rpb24uc2x1Zyk7XG4gICAgICBTZXR1cFByb2dyZXNzU3RvcmUuZW1pdENoYW5nZSgpO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIEpQU0NvbnN0YW50cy5TVEVQX05FWFQ6XG4gICAgICBzZWxlY3ROZXh0UGVuZGluZ1N0ZXAoKTtcbiAgICAgIFNldHVwUHJvZ3Jlc3NTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNURVBfQ09NUExFVEU6XG4gICAgICBjb21wbGV0ZShhY3Rpb24uc2x1Zyk7XG4gICAgICBTZXR1cFByb2dyZXNzU3RvcmUuZW1pdENoYW5nZSgpO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIEpQU0NvbnN0YW50cy5SRVNFVF9EQVRBOlxuICAgICAgcmVzZXQoKTtcbiAgICAgIFNldHVwUHJvZ3Jlc3NTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNURVBfU0tJUDpcbiAgICAgIHNraXAoKTtcbiAgICAgIFNldHVwUHJvZ3Jlc3NTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGRlZmF1bHQ6XG4gICAgICAvLyBubyBvcFxuICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBTZXR1cFByb2dyZXNzU3RvcmU7IiwiLypcbiAqIFN0b3JlIHdoaWNoIG1hbmFnZXMgYW5kIHBlcnNpc3RzIHNpdGUgaW5mb3JtYXRpb25cbiAqL1xuXG52YXIgQXBwRGlzcGF0Y2hlciA9IHJlcXVpcmUoJy4uL2Rpc3BhdGNoZXIvYXBwLWRpc3BhdGNoZXInKSxcbiAgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyLFxuICBKUFNDb25zdGFudHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvamV0cGFjay1zdGFydC1jb25zdGFudHMnKSxcbiAgV1BBamF4ID0gcmVxdWlyZSgnLi4vdXRpbHMvd3AtYWpheCcpO1xuXG52YXIgQ0hBTkdFX0VWRU5UID0gJ2NoYW5nZSc7XG5cbnZhciBsYXlvdXQgPSBKUFMuc3RlcHMubGF5b3V0LmN1cnJlbnQ7XG5cbmZ1bmN0aW9uIHNldFRpdGxlKG5ld1RpdGxlKSB7XG5cdEpQUy5ibG9naW5mby5uYW1lID0gbmV3VGl0bGU7XG59XG5cbmZ1bmN0aW9uIHNldERlc2NyaXB0aW9uKG5ld0Rlc2NyaXB0aW9uKSB7XG4gIEpQUy5ibG9naW5mby5kZXNjcmlwdGlvbiA9IG5ld0Rlc2NyaXB0aW9uOyBcbn1cblxuZnVuY3Rpb24gc2V0QWN0aXZlVGhlbWUoYWN0aXZlVGhlbWVJZCkge1xuICBKUFMudGhlbWVzLmZvckVhY2goIGZ1bmN0aW9uKCB0aGVtZSApIHtcbiAgICBpZiAoIHRoZW1lLmlkID09IGFjdGl2ZVRoZW1lSWQgKSB7XG4gICAgICB0aGVtZS5hY3RpdmUgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGVtZS5hY3RpdmUgPSBmYWxzZTtcbiAgICB9XG4gIH0gKTtcbn1cblxuZnVuY3Rpb24gaW5zdGFsbGVkVGhlbWUodGhlbWUpIHtcbiAgSlBTLnRoZW1lcy51bnNoaWZ0KHRoZW1lKTtcbiAgSlBTLnRoZW1lcyA9IEpQUy50aGVtZXMuc2xpY2UoMCwgMyk7XG59XG5cbmZ1bmN0aW9uIHNldEpldHBhY2tNb2R1bGVBY3RpdmF0ZWQoc2x1Zykge1xuICBpZiAoIF8uaW5kZXhPZiggSlBTLmpldHBhY2suYWN0aXZlX21vZHVsZXMsIHNsdWcgKSA9PT0gLTEgKSB7XG4gICAgSlBTLmpldHBhY2suYWN0aXZlX21vZHVsZXMucHVzaChzbHVnKTsgIFxuICB9XG59XG5cbmZ1bmN0aW9uIHNldEpldHBhY2tNb2R1bGVEZWN0aXZhdGVkKHNsdWcpIHtcbiAgdmFyIGluZGV4ID0gXy5pbmRleE9mKCBKUFMuamV0cGFjay5hY3RpdmVfbW9kdWxlcywgc2x1ZyApO1xuICBpZiAoIGluZGV4ID49IDApIHtcbiAgICBKUFMuamV0cGFjay5hY3RpdmVfbW9kdWxlcy5zcGxpY2UoaW5kZXgsIDEpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHNldEpldHBhY2tBZGRpdGlvbmFsTW9kdWxlcyhtb2R1bGVzKSB7XG4gIEpQUy5qZXRwYWNrLmFkZGl0aW9uYWxfbW9kdWxlcyA9IF8uZmlsdGVyKG1vZHVsZXMsIGZ1bmN0aW9uKG1vZHVsZSkge1xuICAgIHJldHVybiBfLmluZGV4T2YoSlBTLmpldHBhY2suanVtcHN0YXJ0X21vZHVsZXMubWFwKGZ1bmN0aW9uKG1vZCl7cmV0dXJuIG1vZC5zbHVnO30pLCBtb2R1bGUuc2x1ZykgPT0gLTE7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBzZXRMYXlvdXQobGF5b3V0TmFtZSkge1xuICBsYXlvdXQgPSBsYXlvdXROYW1lOyAvLyBYWFggVE9ETzogZ2V0IHRoaXMgdmFsdWUgZHluYW1pY2FsbHkgZnJvbSB0aGUgc2VydmVyIVxufVxuXG5mdW5jdGlvbiBzZXRKZXRwYWNrQ29uZmlndXJlZCgpIHtcbiAgSlBTLmpldHBhY2suY29uZmlndXJlZCA9IHRydWU7XG59XG5cbmZ1bmN0aW9uIHNldEpldHBhY2tKdW1wc3RhcnRBY3RpdmF0ZWQoKSB7XG4gIEpQUy5qZXRwYWNrLmp1bXBzdGFydF9tb2R1bGVzLmZvckVhY2goIGZ1bmN0aW9uKCBtb2R1bGUgKSB7XG4gICAgc2V0SmV0cGFja01vZHVsZUFjdGl2YXRlZCggbW9kdWxlLnNsdWcgKTtcbiAgfSk7XG59XG5cbnZhciBTaXRlU3RvcmUgPSBfLmV4dGVuZCh7fSwgRXZlbnRFbWl0dGVyLnByb3RvdHlwZSwge1xuXG4gIGdldFRpdGxlOiBmdW5jdGlvbigpIHtcbiAgXHRyZXR1cm4gSlBTLmJsb2dpbmZvLm5hbWU7XG4gIH0sXG5cbiAgZ2V0RGVzY3JpcHRpb246IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBKUFMuYmxvZ2luZm8uZGVzY3JpcHRpb247XG4gIH0sXG5cbiAgZ2V0VGhlbWVzOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gSlBTLnRoZW1lcztcbiAgfSxcblxuICBnZXRBY3RpdmVUaGVtZUlkOiBmdW5jdGlvbigpIHtcbiAgICBmb3IodmFyIGk9MDsgaSA8IEpQUy50aGVtZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciB0aGVtZSA9IEpQUy50aGVtZXNbaV07XG4gICAgICBpZiAoIHRoZW1lLmFjdGl2ZSApIHtcbiAgICAgICAgcmV0dXJuIHRoZW1lLmlkO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfSxcblxuICBnZXRKZXRwYWNrQ29uZmlndXJlZDogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIEpQUy5qZXRwYWNrLmNvbmZpZ3VyZWQ7XG4gIH0sXG5cbiAgZ2V0QWN0aXZlTW9kdWxlU2x1Z3M6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBKUFMuamV0cGFjay5hY3RpdmVfbW9kdWxlcztcbiAgfSxcblxuICBpc0pldHBhY2tNb2R1bGVFbmFibGVkOiBmdW5jdGlvbihzbHVnKSB7XG4gICAgcmV0dXJuICggXy5pbmRleE9mKCBKUFMuamV0cGFjay5hY3RpdmVfbW9kdWxlcywgc2x1ZyApID49IDAgKTtcbiAgfSxcblxuICBnZXRKZXRwYWNrQWRkaXRpb25hbE1vZHVsZXM6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBKUFMuamV0cGFjay5hZGRpdGlvbmFsX21vZHVsZXM7XG4gIH0sXG5cbiAgZ2V0SnVtcHN0YXJ0TW9kdWxlU2x1Z3M6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBKUFMuamV0cGFjay5qdW1wc3RhcnRfbW9kdWxlcy5tYXAoZnVuY3Rpb24obW9kdWxlKSB7IHJldHVybiBtb2R1bGUuc2x1ZzsgfSk7XG4gIH0sXG5cbiAgZ2V0SnVtcHN0YXJ0TW9kdWxlczogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIEpQUy5qZXRwYWNrLmp1bXBzdGFydF9tb2R1bGVzO1xuICB9LFxuXG4gIGdldFBvcHVsYXJUaGVtZXM6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBXUEFqYXgucG9zdChKUFMuc2l0ZV9hY3Rpb25zLmdldF9wb3B1bGFyX3RoZW1lcywge30sIHtxdWlldDogdHJ1ZX0pO1xuICB9LFxuXG4gIGdldEpldHBhY2tKdW1wc3RhcnRFbmFibGVkOiBmdW5jdGlvbigpIHtcbiAgICBmb3IodmFyIGk9MDsgaSA8IEpQUy5qZXRwYWNrLmp1bXBzdGFydF9tb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgbW9kdWxlID0gSlBTLmpldHBhY2suanVtcHN0YXJ0X21vZHVsZXNbaV07XG4gICAgICBpZiAoICEgdGhpcy5pc0pldHBhY2tNb2R1bGVFbmFibGVkKCBtb2R1bGUuc2x1ZyApICkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9LFxuXG4gIGdldExheW91dDogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGxheW91dDtcbiAgfSxcblxuICBlbWl0Q2hhbmdlOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLmVtaXQoQ0hBTkdFX0VWRU5UKTtcbiAgfSxcblxuICBhZGRDaGFuZ2VMaXN0ZW5lcjogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICB0aGlzLm9uKENIQU5HRV9FVkVOVCwgY2FsbGJhY2spO1xuICB9LFxuXG4gIHJlbW92ZUNoYW5nZUxpc3RlbmVyOiBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgIHRoaXMucmVtb3ZlTGlzdGVuZXIoQ0hBTkdFX0VWRU5ULCBjYWxsYmFjayk7XG4gIH1cbn0pO1xuXG4vLyBSZWdpc3RlciBjYWxsYmFjayB0byBoYW5kbGUgYWxsIHVwZGF0ZXNcbkFwcERpc3BhdGNoZXIucmVnaXN0ZXIoZnVuY3Rpb24oYWN0aW9uKSB7XG5cbiAgc3dpdGNoKGFjdGlvbi5hY3Rpb25UeXBlKSB7XG4gICAgY2FzZSBKUFNDb25zdGFudHMuU0lURV9TRVRfVElUTEU6XG4gICAgICBzZXRUaXRsZShhY3Rpb24udGl0bGUpO1xuICAgICAgU2l0ZVN0b3JlLmVtaXRDaGFuZ2UoKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBKUFNDb25zdGFudHMuU0lURV9TRVRfREVTQ1JJUFRJT046XG4gICAgICBzZXREZXNjcmlwdGlvbihhY3Rpb24uZGVzY3JpcHRpb24pO1xuICAgICAgU2l0ZVN0b3JlLmVtaXRDaGFuZ2UoKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBKUFNDb25zdGFudHMuU0lURV9TRVRfVEhFTUU6XG4gICAgICBzZXRBY3RpdmVUaGVtZShhY3Rpb24udGhlbWVJZCk7XG4gICAgICBTaXRlU3RvcmUuZW1pdENoYW5nZSgpO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIEpQU0NvbnN0YW50cy5TSVRFX0lOU1RBTExfVEhFTUU6XG4gICAgICBpbnN0YWxsZWRUaGVtZShhY3Rpb24udGhlbWUpO1xuICAgICAgU2l0ZVN0b3JlLmVtaXRDaGFuZ2UoKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBKUFNDb25zdGFudHMuU0lURV9KRVRQQUNLX0NPTkZJR1VSRUQ6XG4gICAgICBzZXRKZXRwYWNrQ29uZmlndXJlZCgpO1xuICAgICAgU2l0ZVN0b3JlLmVtaXRDaGFuZ2UoKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBKUFNDb25zdGFudHMuU0lURV9KRVRQQUNLX0FERF9NT0RVTEVTOlxuICAgICAgc2V0SmV0cGFja0FkZGl0aW9uYWxNb2R1bGVzKGFjdGlvbi5tb2R1bGVzKTtcbiAgICAgIFNpdGVTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNJVEVfSkVUUEFDS19NT0RVTEVfRU5BQkxFRDpcbiAgICAgIHNldEpldHBhY2tNb2R1bGVBY3RpdmF0ZWQoYWN0aW9uLnNsdWcpO1xuICAgICAgU2l0ZVN0b3JlLmVtaXRDaGFuZ2UoKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBKUFNDb25zdGFudHMuU0lURV9KRVRQQUNLX01PRFVMRV9ESVNBQkxFRDpcbiAgICAgIHNldEpldHBhY2tNb2R1bGVEZWN0aXZhdGVkKGFjdGlvbi5zbHVnKTtcbiAgICAgIFNpdGVTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNJVEVfSkVUUEFDS19KVU1QU1RBUlRfRU5BQkxFRDogXG4gICAgICBzZXRKZXRwYWNrSnVtcHN0YXJ0QWN0aXZhdGVkKCk7XG4gICAgICBTaXRlU3RvcmUuZW1pdENoYW5nZSgpO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIEpQU0NvbnN0YW50cy5TSVRFX1NFVF9MQVlPVVQ6XG4gICAgICBzZXRMYXlvdXQoYWN0aW9uLmxheW91dCk7XG4gICAgICBTaXRlU3RvcmUuZW1pdENoYW5nZSgpO1xuICAgICAgYnJlYWs7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgLy8gbm8gb3BcbiAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gU2l0ZVN0b3JlOyIsInZhciBBcHBEaXNwYXRjaGVyID0gcmVxdWlyZSgnLi4vZGlzcGF0Y2hlci9hcHAtZGlzcGF0Y2hlcicpLFxuXHRFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXIsXG5cdEpQU0NvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9qZXRwYWNrLXN0YXJ0LWNvbnN0YW50cycpO1xuXG52YXIgQ0hBTkdFX0VWRU5UID0gJ2NoYW5nZSc7XG5cbnZhciBzcGlubmVyRW5hYmxlZCA9IGZhbHNlLFxuXHRzcGlubmVyTWVzc2FnZSA9IG51bGw7XG5cbmZ1bmN0aW9uIHNob3cobWVzc2FnZSkge1xuXHRzcGlubmVyRW5hYmxlZCA9IHRydWU7XG5cdHNwaW5uZXJNZXNzYWdlID0gbWVzc2FnZTtcbn1cblxuZnVuY3Rpb24gaGlkZSgpIHtcblx0c3Bpbm5lckVuYWJsZWQgPSBmYWxzZTtcblx0c3Bpbm5lck1lc3NhZ2UgPSBudWxsO1xufVxuXG52YXIgU3Bpbm5lclN0b3JlID0gXy5leHRlbmQoe30sIEV2ZW50RW1pdHRlci5wcm90b3R5cGUsIHtcblx0c2hvd2luZzogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHNwaW5uZXJFbmFibGVkO1xuXHR9LFxuXG5cdGdldE1lc3NhZ2U6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBzcGlubmVyTWVzc2FnZTtcblx0fSxcblxuXHRhZGRDaGFuZ2VMaXN0ZW5lcjogZnVuY3Rpb24oY2FsbGJhY2spIHtcblx0XHR0aGlzLm9uKCBDSEFOR0VfRVZFTlQsIGNhbGxiYWNrICk7XG5cdH0sXG5cblx0cmVtb3ZlQ2hhbmdlTGlzdGVuZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG5cdFx0dGhpcy5yZW1vdmVMaXN0ZW5lciggQ0hBTkdFX0VWRU5ULCBjYWxsYmFjayApO1xuXHR9LFxuXG5cdGVtaXRDaGFuZ2U6IGZ1bmN0aW9uKCkge1xuXHQgICAgdGhpcy5lbWl0KCBDSEFOR0VfRVZFTlQgKTtcblx0fSxcbn0pO1xuXG5BcHBEaXNwYXRjaGVyLnJlZ2lzdGVyKGZ1bmN0aW9uKGFjdGlvbikge1xuXG4gIHN3aXRjaChhY3Rpb24uYWN0aW9uVHlwZSkge1xuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNIT1dfU1BJTk5FUjpcblx0XHRzaG93KGFjdGlvbi5tZXNzYWdlKTtcblx0XHRTcGlubmVyU3RvcmUuZW1pdENoYW5nZSgpO1xuXHRcdGJyZWFrO1xuXG4gICAgY2FzZSBKUFNDb25zdGFudHMuSElERV9TUElOTkVSOlxuICAgICBcdGhpZGUoKTtcbiAgICAgXHRTcGlubmVyU3RvcmUuZW1pdENoYW5nZSgpO1xuICAgICBcdGJyZWFrO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIC8vIG5vIG9wXG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNwaW5uZXJTdG9yZTsiLCJtb2R1bGUuZXhwb3J0cyA9IHtcblx0J2gzJzoge1xuXHRcdGZvbnRXZWlnaHQ6ICdub3JtYWwnXG5cdH0sXG5cblx0J2NvbnRlbnQnOiB7XG5cdFx0Zm9udFNpemU6ICdsYXJnZXInLFxuXHRcdGNvbG9yOiAnIzc3NycsXG5cdFx0bGluZUhlaWdodDogMS41LFxuICBcdFx0bWFyZ2luOiAnMWVtIDAnXG5cdH0sXG5cblx0Y3NzOiB7XG5cdFx0aDQ6IHtcblx0XHRcdG1hcmdpbkJvdHRvbTogMTAsXG5cdFx0fSxcblxuXHRcdGg1OiB7XG5cdFx0XHRtYXJnaW5Ub3A6IDAsXG5cdFx0XHRmb250U2l6ZTogJzFlbScsXG5cdFx0XHRmb250V2VpZ2h0OiA0MDBcblx0XHR9LFxuXG5cdFx0J2lucHV0LCBzZWxlY3QnOiB7XG5cdFx0XHRtYXJnaW46IDEsXG5cdFx0XHRwYWRkaW5nOiAnM3B4IDVweCdcblx0XHR9LFxuXG5cdFx0J2lucHV0W3R5cGU9XCJ0ZXh0XCJdJzoge1xuXHRcdFx0d2lkdGg6ICcxMDAlJ1xuXHRcdH0sXG5cblx0XHQnLnN1Ym1pdCc6IHtcblx0XHRcdG1hcmdpbjogJzBweCAhaW1wb3J0YW50Jyxcblx0XHRcdHBhZGRpbmc6ICc1cHggNXB4ICFpbXBvcnRhbnQnLFxuXHRcdFx0YmFja2dyb3VuZENvbG9yOiAnI0VFRScsXG5cdFx0XHR0ZXh0QWxpZ246ICdyaWdodCdcblx0XHR9XG5cdH1cbn07IiwiLypcbiAqIEEgc2ltcGxlIHdyYXBwZXIgZm9yIGNhbGxzIHRvIFdQJ3MgXCJhamF4dXJsXCIuXG4gKlxuICogVGhpcyBleGlzdHMgYmVjYXVzZSBXUCdzIHdwX3NlbmRfanNvbl9lcnJvciBkb2Vzbid0IGFjdHVhbGx5IHNlbmQgYW4gZXJyb3IgY29kZSwgYnV0IHJhdGhlclxuICogYSAyMDAgT0sgcmVzcG9uc2Ugd2l0aCBhIHN0cnVjdHVyZSBsaWtlIHRoaXM6XG4gKiB7c3VjY2VzczogZmFsc2UsIGRhdGE6IFwic29tZXRoaW5nIHdlbnQgd3JvbmdcIn1cbiAqXG4gKiBTbyB0aGlzIGNsYXNzIHNtb290aGVzIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gNTB4IGVycm9ycyBhbmQgV1AncyBlcnJvciBvYmplY3QuXG4gKlxuICogRm9yIGNvbnZlbmllbmNlLCB0aGlzIHJldHVybnMgYSBqUXVlcnkuRGVmZXJyZWQgb2JqZWN0IHdoaWNoIGNhbiBoYXZlIC5kb25lKCkgXG4gKiBhbmQgLmZhaWwoKSBtZXRob2RzIGNoYWluZWQgb250byBpdCwgc2ltaWxhciB0byBqUXVlcnkucG9zdCdzIFwic3VjY2Vzc1wiIGFuZCBcImZhaWxcIlxuICpcbiAqIEFsc28sIGl0IGFjY2VwdHMgYW4gXCJhY3Rpb25cIiBwYXJhbSBpbnN0ZWFkIG9mIGEgVVJMLCBzaW5jZSBhbGwgV1AgYWpheCByZXF1ZXN0c1xuICogYWN0dWFsbHkgZ28gdmlhIHRoZSBzYW1lIFVSTCB3aXRoIGRpZmZlcmVudCBwYXJhbWV0ZXJzLCBhbmQgaXQgaW52b2tlcyBjYWxsYmFja3Mgd2l0aFxuICoganVzdCB0aGUgXCJkYXRhXCIgcG9ydGlvbiBvZiBXUCdzIGFqYXggcGF5bG9hZCwgcmF0aGVyIHRoYW4gdGhlIHdob2xlIHN0cnVjdHVyZS5cbiAqIFxuICoqL1xuXG52YXIgRGF0YUFjdGlvbnMgPSByZXF1aXJlKCcuLi9hY3Rpb25zL2RhdGEtYWN0aW9ucycpO1xuXG52YXIgV1BBamF4ID0gKGZ1bmN0aW9uKCkge1xuXG5cdHJldHVybiB7XG5cdFx0cG9zdDogZnVuY3Rpb24oYWN0aW9uLCBwYXlsb2FkLCBvcHRpb25zKSB7XG5cdFx0XHRvcHRpb25zID0gdHlwZW9mIG9wdGlvbnMgIT09ICd1bmRlZmluZWQnID8gb3B0aW9ucyA6IHt9O1xuXHRcdFx0cGF5bG9hZCA9IHR5cGVvZiBwYXlsb2FkICE9PSAndW5kZWZpbmVkJyA/IHBheWxvYWQgOiB7fTtcblx0XHRcdHZhciBkYXRhID0gXy5leHRlbmQocGF5bG9hZCwge2FjdGlvbjogYWN0aW9uLCBub25jZTogSlBTLm5vbmNlfSk7XG5cdFx0XHRcblx0XHRcdHZhciBkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpO1xuXG5cdFx0XHQvLyBwYXNzaW5nIHF1aWV0OiB0cnVlIGFsbG93cyBwYWdlIG5hdmlnYXRpb24gYmVmb3JlIHRoaXMgcmVxdWVzdCBoYXMgZmluaXNoZWQuXG5cdFx0XHQvLyB0aGlzIGlzIGFsc28gaGFuZHkgd2hlbiB5b3UncmUgY2FsbGluZyBmcm9tIHdpdGhpbiBhIERpc3BhdGNoIGN5Y2xlLCBhcyBpdCBcblx0XHRcdC8vIG5vIGxvbmdlciB0cmlnZ2VycyBhbiBhZGRpdGlvbmFsIERpc3BhdGNoICh3aGljaCB3b3VsZCBjYXVzZSBhbiBlcnJvcilcblx0XHRcdGlmICggIW9wdGlvbnMucXVpZXQgKSB7XG5cdFx0XHRcdERhdGFBY3Rpb25zLnJlcXVlc3RTdGFydGVkKCk7XG5cdFx0XHR9XG5cblx0XHRcdGpRdWVyeS5wb3N0KCBhamF4dXJsLCBkYXRhIClcblx0XHRcdFx0LnN1Y2Nlc3MoIGZ1bmN0aW9uKCByZXNwb25zZSApIHtcblx0XHRcdFx0XHRpZiAoICEgcmVzcG9uc2Uuc3VjY2VzcyApIHtcblx0XHRcdFx0XHRcdGRlZmVycmVkLnJlamVjdChyZXNwb25zZS5kYXRhKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0ZGVmZXJyZWQucmVzb2x2ZShyZXNwb25zZS5kYXRhKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pXG5cdFx0XHRcdC5mYWlsKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRkZWZlcnJlZC5yZWplY3QoXCJTZXJ2ZXIgZXJyb3JcIik7XG5cdFx0XHRcdH0pXG5cdFx0XHRcdC5hbHdheXMoIGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRpZiAoICFvcHRpb25zLnF1aWV0ICkge1xuXHRcdFx0XHRcdFx0RGF0YUFjdGlvbnMucmVxdWVzdEZpbmlzaGVkKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcdFxuXG5cdFx0XHRyZXR1cm4gZGVmZXJyZWQ7XG5cdFx0fVxuXHR9O1xuXG59KSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFdQQWpheDsiLCJ2YXIgUmVhY3QgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snUmVhY3QnXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJ1JlYWN0J10gOiBudWxsKSxcbiAgICBXZWxjb21lV2lkZ2V0ID0gcmVxdWlyZSgnLi9jb21wb25lbnRzL3dlbGNvbWUtd2lkZ2V0JyksXG4gICAgUGF0aHMgPSByZXF1aXJlKCcuL2NvbnN0YW50cy9qZXRwYWNrLXN0YXJ0LXBhdGhzJyksXG4gICAgU2V0dXBQcm9ncmVzc1N0b3JlID0gcmVxdWlyZSgnLi9zdG9yZXMvc2V0dXAtcHJvZ3Jlc3Mtc3RvcmUnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgICBqUXVlcnkoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcblxuICAgIFx0U2V0dXBQcm9ncmVzc1N0b3JlLmluaXQoW1xuICAgIFx0XHQvLyBOT1RFOiBZb3UgY2FuIGhhdmUgXCJzdGF0aWM6IHRydWVcIiB0byBpbmNsdWRlIHVuLWNsaWNrYWJsZSBcbiAgICBcdFx0Ly8gcHJlZmlsbGVkIHN0ZXBzIHRoYXQgYWN0IGFzIHRob3VnaCB0aGV5J3ZlIGFscmVhZHkgYmVlbiBjb21wbGV0ZWRcblx0XHRcdC8vIHtcblx0XHRcdC8vIFx0bmFtZTogXCJTaWduIHVwXCIsXG5cdFx0XHQvLyBcdGNvbXBsZXRlZDogdHJ1ZSxcblx0XHRcdC8vIFx0c3RhdGljOiB0cnVlXG5cdFx0XHQvLyB9LFxuXHRcdFx0e1xuXHRcdFx0XHRuYW1lOiAnU2l0ZSB0aXRsZScsXG5cdFx0XHRcdHNsdWc6IFBhdGhzLlNJVEVfVElUTEVfU1RFUF9TTFVHLFxuXHRcdFx0XHR3ZWxjb21lVmlldzogcmVxdWlyZSgnLi9jb21wb25lbnRzL3NpdGUtdGl0bGUtc3RlcCcpXG5cdFx0XHR9LFxuXHRcdFx0e1xuXHRcdFx0XHRuYW1lOiAnUGljayBhIGxheW91dCcsXG5cdFx0XHRcdHNsdWc6IFBhdGhzLkxBWU9VVF9TVEVQX1NMVUcsXG5cdFx0XHRcdHdlbGNvbWVWaWV3OiByZXF1aXJlKCcuL2NvbXBvbmVudHMvbGF5b3V0LXN0ZXAnKVxuXHRcdFx0fSxcblx0XHRcdHsgXG5cdFx0XHRcdG5hbWU6IFwiUGljayBhIGRlc2lnblwiLCBcblx0XHRcdFx0c2x1ZzogUGF0aHMuREVTSUdOX1NURVBfU0xVRyxcblx0XHRcdFx0d2VsY29tZVZpZXc6IHJlcXVpcmUoJy4vY29tcG9uZW50cy9kZXNpZ24tc3RlcCcpLCBcblx0XHRcdH0sXG5cdFx0XHR7XG5cdFx0XHRcdG5hbWU6ICdFbmFibGUgSmV0cGFjaycsXG5cdFx0XHRcdHNsdWc6IFBhdGhzLkpFVFBBQ0tfTU9EVUxFU19TVEVQX1NMVUcsXG5cdFx0XHRcdG5ldmVyU2tpcDogdHJ1ZSwgLy8gZG9uJ3Qgc2tpcCB0aGlzIGV2ZW4gaWYgaXQncyBiZWVuIGNvbXBsZXRlZFxuXHRcdFx0XHR3ZWxjb21lVmlldzogcmVxdWlyZSgnLi9jb21wb25lbnRzL2pldHBhY2stanVtcHN0YXJ0LXN0ZXAnKSxcblx0XHRcdFx0bWVudVZpZXc6IHJlcXVpcmUoJy4vY29tcG9uZW50cy9qZXRwYWNrLWp1bXBzdGFydC1tZW51Jylcblx0XHRcdH0sXG5cdFx0XHR7IFxuXHRcdFx0XHRuYW1lOiBcIkFkdmFuY2VkIHNldHRpbmdzXCIsIFxuXHRcdFx0XHRzbHVnOiBQYXRocy5BRFZBTkNFRF9TVEVQX1NMVUcsXG5cdFx0XHRcdHdlbGNvbWVWaWV3OiByZXF1aXJlKCcuL2NvbXBvbmVudHMvYWR2YW5jZWQtc2V0dGluZ3Mtc3RlcCcpLFxuXHRcdFx0XHRpbmNsdWRlSW5Qcm9ncmVzczogZmFsc2Vcblx0XHRcdH1cblx0XHRdKTtcblxuICAgICAgICBSZWFjdC5yZW5kZXIoXG4gICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChXZWxjb21lV2lkZ2V0LCB7fSksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqcHMtd2VsY29tZS1wYW5lbCcpXG4gICAgICAgICk7XG4gICAgfSk7XG59OyIsInZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93WydSZWFjdCddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnUmVhY3QnXSA6IG51bGwpLFxuXHRzdHlsZXMgPSByZXF1aXJlKCcuLi9zdHlsZXMnKSxcblx0UmFkaXVtID0gcmVxdWlyZSgncmFkaXVtJyk7XG5cbnZhciBCdXR0b24gPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiQnV0dG9uXCIsXG5cblx0cHJvcFR5cGVzOiB7XG5cdFx0c2l6ZTogUmVhY3QuUHJvcFR5cGVzLm9uZU9mKFsndGlueScsICdub3JtYWwnLCAnYmlnJ10pLFxuXHRcdGNvbG9yOiBSZWFjdC5Qcm9wVHlwZXMub25lT2YoWydncmF5JywgJ2JsdWUnLCAnZ3JlZW4nXSksXG5cdFx0dGhlbWU6IFJlYWN0LlByb3BUeXBlcy5vbmVPZihbJ3dwJywgJ2pldHBhY2snXSksXG5cdFx0aW5saW5lOiBSZWFjdC5Qcm9wVHlwZXMuYm9vbCxcblx0XHRvbkNsaWNrOiBSZWFjdC5Qcm9wVHlwZXMuZnVuYyxcblx0XHRkaXNhYmxlZDogUmVhY3QuUHJvcFR5cGVzLmJvb2wsXG5cdFx0aHJlZjogUmVhY3QuUHJvcFR5cGVzLnN0cmluZ1xuXHR9LFxuXG5cdGdldERlZmF1bHRQcm9wczogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHsgc2l6ZTogJ25vcm1hbCcsIGlubGluZTogdHJ1ZSwgY29sb3I6ICdncmF5JywgdGhlbWU6ICd3cCcsIGRpc2FibGVkOiBmYWxzZSB9O1xuXHR9LFxuXG5cdGhhbmRsZUNhbGxiYWNrSHJlZjogZnVuY3Rpb24oZSkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHR3aW5kb3cubG9jYXRpb24gPSB0aGlzLnByb3BzLmhyZWY7XG5cdH0sXG5cblx0c3R5bGVzOiB7XG5cdFx0YmFzaWM6IHtcblx0XHRcdGJvcmRlclJhZGl1czogMyxcblx0XHRcdGJveFNoYWRvdzogJ2luc2V0IDAgMXB4IDAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpJyxcblx0XHRcdGJvcmRlcldpZHRoOiAxLFxuXHRcdFx0Ym9yZGVyU3R5bGU6ICdzb2xpZCcsXG5cdFx0XHRjdXJzb3I6ICdwb2ludGVyJyxcblx0XHRcdGRpc3BsYXk6ICdibG9jaycsXG5cdFx0XHRmb250U2l6ZTogMTQsXG5cdFx0XHRmb250V2VpZ2h0OiAnYm9sZCcsXG5cdFx0XHRwYWRkaW5nOiAnMTBweCAyMHB4Jyxcblx0XHRcdHRleHRBbGlnbjogJ2NlbnRlcicsXG5cdFx0XHR0ZXh0RGVjb3JhdGlvbjogJ25vbmUnLFxuXHRcdFx0V2Via2l0Rm9udFNtb290aGluZzogJ2FudGlhbGlhc2VkJyxcblx0XHRcdHRyYW5zaXRpb246ICdiYWNrZ3JvdW5kIDAuMnMnXG5cdFx0fSxcblxuXHRcdHNpemVzOiB7XG5cdFx0XHR0aW55OiB7XG5cdFx0XHRcdGZvbnRTaXplOiAxMCxcblx0XHRcdFx0cGFkZGluZzogJzJweCAxMHB4Jyxcblx0XHRcdH0sXG5cdFx0XHRub3JtYWw6IHtcblx0XHRcdFx0Zm9udFNpemU6IDEzLFxuXHRcdFx0XHRwYWRkaW5nOiAnNXB4IDEwcHgnXG5cdFx0XHR9LFxuXHRcdFx0YmlnOiB7XG5cdFx0XHRcdGZvbnRTaXplOiAxNixcblx0XHRcdFx0cGFkZGluZzogJzIwcHggNDBweCdcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0Y29sb3JzOiB7XG5cdFx0XHRncmF5OiB7XG5cdFx0XHRcdGJhY2tncm91bmQ6ICdsaW5lYXItZ3JhZGllbnQoI2ZmZiwgI2Y5ZjlmOSknLFxuXHRcdFx0XHRib3JkZXJDb2xvcjogc3R5bGVzLmNvbG9ycy5saWdodEdyYXksXG5cdFx0XHRcdGNvbG9yOiBzdHlsZXMuY29sb3JzLmRhcmtHcmF5LFxuXHRcdFx0XHQnOmhvdmVyJzoge1xuXHRcdFx0XHRcdGNvbG9yOiBzdHlsZXMuY29sb3JzLmdyYXlcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdGJsdWU6IHtcblx0XHRcdFx0YmFja2dyb3VuZDogc3R5bGVzLmNvbG9ycy5ibHVlLFxuXHRcdFx0XHRib3JkZXJDb2xvcjogJ3JnYmEoMCwwLDAsMC42KScsXG5cdFx0XHRcdGNvbG9yOiAnd2hpdGUnLFxuXHRcdFx0XHQnOmhvdmVyJzoge1xuXHRcdFx0XHRcdGJhY2tncm91bmQ6IHN0eWxlcy5jb2xvcnMubGlnaHRlckJsdWUsXG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRncmVlbjoge1xuXHRcdFx0XHRiYWNrZ3JvdW5kOiBzdHlsZXMuY29sb3JzLmdyZWVuLFxuXHRcdFx0XHRjb2xvcjogJ3doaXRlJyxcblx0XHRcdFx0Ym9yZGVyQ29sb3I6ICdyZ2JhKDAsMCwwLDAuNiknLFxuXHRcdFx0XHQnOmhvdmVyJzoge1xuXHRcdFx0XHRcdGJhY2tncm91bmQ6IHN0eWxlcy5jb2xvcnMubGlnaHRlckdyZWVuLFxuXHRcdFx0XHR9XG5cblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0dGhlbWVzOiB7XG5cdFx0XHR3cDoge30sXG5cdFx0XHRqZXRwYWNrOiB7XG5cdFx0XHRcdHBhZGRpbmc6ICcxOHB4IDI0cHggMTVweCcsXG5cdFx0XHRcdGJvcmRlclJhZGl1czogNixcblx0XHRcdFx0Ym9yZGVyU3R5bGU6ICdub25lJyxcblx0XHRcdFx0Ym94U2hhZG93OiAnMCA2cHggMCAjM2U2YzIwLDAgNnB4IDNweCByZ2JhKDAsMCwwLDAuNCknXG5cdFx0XHR9XG5cdFx0fSxcblx0XHRcblx0XHRpbmxpbmU6IHtcblx0XHRcdGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snXG5cdFx0fSxcblxuXHRcdGRpc2FibGVkOiB7XG5cdFx0XHRiYWNrZ3JvdW5kOiAnI2Y5ZjlmOScsXG5cdFx0XHRib3JkZXJDb2xvcjogc3R5bGVzLmNvbG9ycy5saWdodEdyYXksXG5cdFx0XHRjb2xvcjogc3R5bGVzLmNvbG9ycy5saWdodEdyYXksXG5cdFx0XHQnOmhvdmVyJzoge1xuXHRcdFx0XHRiYWNrZ3JvdW5kOiAnI2Y5ZjlmOScsXG5cdFx0XHRcdGJvcmRlckNvbG9yOiBzdHlsZXMuY29sb3JzLmxpZ2h0R3JheSxcblx0XHRcdFx0Y29sb3I6IHN0eWxlcy5jb2xvcnMubGlnaHRHcmF5LFxuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHRyZW5kZXI6IGZ1bmN0aW9uKCkge1xuXG5cdFx0dmFyICRfXzA9ICAgICAgICAgIHRoaXMucHJvcHMsc2l6ZT0kX18wLnNpemUsY29sb3I9JF9fMC5jb2xvcixpbmxpbmU9JF9fMC5pbmxpbmUsb25DbGljaz0kX18wLm9uQ2xpY2ssdGhlbWU9JF9fMC50aGVtZSxocmVmPSRfXzAuaHJlZixvdGhlcj0oZnVuY3Rpb24oc291cmNlLCBleGNsdXNpb24pIHt2YXIgcmVzdCA9IHt9O3ZhciBoYXNPd24gPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O2lmIChzb3VyY2UgPT0gbnVsbCkge3Rocm93IG5ldyBUeXBlRXJyb3IoKTt9Zm9yICh2YXIga2V5IGluIHNvdXJjZSkge2lmIChoYXNPd24uY2FsbChzb3VyY2UsIGtleSkgJiYgIWhhc093bi5jYWxsKGV4Y2x1c2lvbiwga2V5KSkge3Jlc3Rba2V5XSA9IHNvdXJjZVtrZXldO319cmV0dXJuIHJlc3Q7fSkoJF9fMCx7c2l6ZToxLGNvbG9yOjEsaW5saW5lOjEsb25DbGljazoxLHRoZW1lOjEsaHJlZjoxfSk7XG5cblx0XHR2YXIgY2FsbGJhY2s7XG5cblx0XHR2YXIgY29tYmluZWRTdHlsZSA9IFtcblx0XHRcdHRoaXMuc3R5bGVzLmJhc2ljLCBcblx0XHRcdHRoaXMuc3R5bGVzLnNpemVzW3NpemVdLFxuXHRcdFx0dGhpcy5zdHlsZXMuY29sb3JzW2NvbG9yXSxcblx0XHRcdHRoaXMuc3R5bGVzLnRoZW1lc1t0aGVtZV0sXG5cdFx0XHR0aGlzLnByb3BzLmRpc2FibGVkICYmIHRoaXMuc3R5bGVzLmRpc2FibGVkLFxuXHRcdFx0aW5saW5lICYmIHRoaXMuc3R5bGVzLmlubGluZSxcblx0XHRcdHRoaXMucHJvcHMuc3R5bGVcblx0XHRdO1xuXG5cdFx0aWYgKCBocmVmICYmICFvbkNsaWNrKSB7XG5cdFx0XHRjYWxsYmFjayA9IHRoaXMuaGFuZGxlQ2FsbGJhY2tIcmVmO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRjYWxsYmFjayA9IG9uQ2xpY2s7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIChcblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwgUmVhY3QuX19zcHJlYWQoe30sICBvdGhlciwge3N0eWxlOiBjb21iaW5lZFN0eWxlLCBvbkNsaWNrOiBjYWxsYmFjaywgb25Nb3VzZU92ZXI6IHRoaXMuaGFuZGxlTW91c2VPdmVyLCBvbk1vdXNlT3V0OiB0aGlzLmhhbmRsZU1vdXNlT3V0fSksIFxuXHRcdFx0XHR0aGlzLnByb3BzLmNoaWxkcmVuXG5cdFx0XHQpXG5cdFx0KTtcblx0fVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gUmFkaXVtKEJ1dHRvbik7IiwidmFyIFJlYWN0ID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJ1JlYWN0J10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWydSZWFjdCddIDogbnVsbCksXG5cdFJhZGl1bSA9IHJlcXVpcmUoJ3JhZGl1bScpO1xuXG4vKipcbiAqIFNob3cgcHJvZ3Jlc3MgdGhyb3VnaCB0aGUgc3RlcHNcbiAqIE5PVEU6IHByb2dyZXNzUGVyY2VudCBNVVNUIGJlIHJvdW5kZWQgdG8gdGhlIG5lYXJlc3QgMTAsIGkuZS4gMTAsIDIwLCAzMCwgNDAuLi4xMDBcbiAqIFRoaXMgaXMgcmVxdWlyZWQgZm9yIHRoZSBDU1MgdG8gd29yayAod2lsbCBmaXggbGF0ZXIuLi4pXG4gKiovXG52YXIgUHJvZ3Jlc3NCYXIgPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiUHJvZ3Jlc3NCYXJcIixcblxuXHRwcm9wVHlwZXM6IHtcblx0XHRzdHlsZTogUmVhY3QuUHJvcFR5cGVzLm9iamVjdCxcblx0XHRwcm9ncmVzc1BlcmNlbnQ6IFJlYWN0LlByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZFxuXHR9LFxuXG5cdHN0eWxlczoge1xuXHRcdHdyYXBwZXI6IHtcblx0XHRcdGZvbnRXZWlnaHQ6IDQwMCxcblx0XHRcdGZvbnRTaXplOiAnODAlJ1xuXHRcdH0sXG5cdFx0cHJvZ3Jlc3M6IHtcblx0XHRcdGJhY2tncm91bmQ6ICcjNGFiODY2Jyxcblx0XHRcdHdpZHRoOiAnMCUnLFxuXHRcdFx0dHJhbnNpdGlvbjogJ3dpZHRoIDAuNXMnLFxuXHRcdFx0ZGlzcGxheTogJ2Jsb2NrJyxcblx0XHRcdGhlaWdodDogJzEwMCUnXG5cdFx0fSxcblx0XHRiYXI6IHtcblx0XHRcdGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuXHRcdFx0d2lkdGg6IDgwLFxuXHRcdFx0aGVpZ2h0OiAxMixcblx0XHRcdG1hcmdpbjogJzAgOHB4IC0ycHggMCcsXG5cdFx0XHRwYWRkaW5nOiAyLFxuXHRcdFx0Ym9yZGVyUmFkaXVzOiAyLFxuXHRcdFx0YmFja2dyb3VuZDogJyNmNWY1ZjUnXG5cdFx0fVxuXHR9LFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0Ly8gdmFyIGNsYXNzZXMgPSAnZ2V0dGluZy1zdGFydGVkX19wcm9ncmVzcyBwcm9ncmVzc18nK3RoaXMucHJvcHMucHJvZ3Jlc3NQZXJjZW50O1xuXHRcdHJldHVybiAoXG5cdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtzdHlsZTogW3RoaXMuc3R5bGVzLndyYXBwZXIsIHRoaXMucHJvcHMuc3R5bGVdfSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge3N0eWxlOiB0aGlzLnN0eWxlcy5iYXJ9LCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7c3R5bGU6IFt0aGlzLnN0eWxlcy5wcm9ncmVzcywgeyB3aWR0aDogdGhpcy5wcm9wcy5wcm9ncmVzc1BlcmNlbnQrJyUnIH1dfSlcblx0XHRcdFx0KSwgXG5cdFx0XHRcdHRoaXMucHJvcHMucHJvZ3Jlc3NQZXJjZW50LCBcIiUgY29tcGxldGVcIlxuXHRcdFx0KVxuXHRcdCk7XG5cdH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJhZGl1bShQcm9ncmVzc0Jhcik7IiwiLy8gdGhpcyBjb21wb25lbnQgcHJvdmlkZXMgc29tZSBiYXNpYyByZXNldHMgc28gdGhhdCB0aGUgcmVzdCBvZiB0aGUgc3R5bGluZyB3b3JrcyBhcyBpbnRlbmRlZC5cbi8vIHRoaXMgcHJldmVudHMgbm9pc3kgZHVwbGljYXRpb24gb2YgcmVzZXQgY29kZSB0aHJvdWdob3V0IHRoZSBjb2RlYmFzZS5cblxuLy8gdXNhZ2U6XG4vLyB1c2UgdGhpcyBhcyBhIHdyYXBwZXIgZm9yIGEgdG9wLWxldmVsIGNvbXBvbmVudCB0aGF0IHVzZXMgZG9wcy1yZWFjdCwgZS5nLlxuLy9cbi8vIHJlbmRlcjogZnVuY3Rpb24oKSB7XG4vLyBcdHJldHVybiAoXG4vLyAgICAgICA8UmVzZXQ+XG4vLyAgICAgICAgIC4uLiB0aGUgcmVzdCBvZiBteSBjb2RlIGdvZXMgaGVyZSAuLi5cbi8vICAgICAgIDwvUmVzZXQ+XG4vLyBcdClcbi8vIH1cblxuLy8gdG8gYWRkIGFkZGl0aW9uYWwgQ1NTLCBwYXNzIGl0IGluIHVzaW5nIHRoZSBcIkNTU1wiIHByb3BlcnR5XG5cbnZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93WydSZWFjdCddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnUmVhY3QnXSA6IG51bGwpLFxuXHRSYWRpdW0gPSByZXF1aXJlKCdyYWRpdW0nKSxcblx0bSA9IHJlcXVpcmUoJy4uL3V0aWxzL20nKTtcblxudmFyIGlkQ291bnRlciA9IDA7XG5cbnZhciBSZXNldCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtkaXNwbGF5TmFtZTogXCJSZXNldFwiLFxuXHRwcm9wVHlwZXM6IHtcblx0XHRjc3M6IFJlYWN0LlByb3BUeXBlcy5vYmplY3Rcblx0fSxcblxuXHRzdHlsZToge1xuXHRcdHJlc2V0czoge1xuXHRcdFx0JyonOiB7XG5cdFx0XHRcdGJveFNpemluZzogJ2JvcmRlci1ib3gnXG5cdFx0XHR9LFxuXHRcdFx0J2RpdiwgdWwsIG9sLCBsaSwgaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgZm9ybSwgZmllbGRzZXQsIGxlZ2VuZCwgaW5wdXQsIGJ1dHRvbiwgdGV4dGFyZWEsIHAsIGJsb2NrcXVvdGUsIHRoLCB0ZCc6IHsgXG5cdFx0XHRcdG1hcmdpbjogMCwgcGFkZGluZzogMCBcblx0XHRcdH0sXG5cdFx0XHRpbWc6IHtcblx0XHRcdFx0Ym9yZGVyOiAnbm9uZScsXG5cdFx0XHRcdG1heFdpZHRoOiAnMTAwJSdcblx0XHRcdH0sXG5cdFx0XHR0ZDoge1xuXHRcdFx0XHR2ZXJ0aWNhbEFsaWduOiAndG9wJ1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gdGhlc2Ugc3VwcG9ydCBhbmltYXRpb25zXG5cdFx0XHQnLnNsaWRlRG93bi1lbnRlcic6IHtcblx0XHRcdFx0b3ZlcmZsb3dZOiAnaGlkZGVuJyxcblx0XHRcdFx0bWF4SGVpZ2h0OiAwLFxuXHRcdFx0XHR0cmFuc2l0aW9uOiAnYWxsIC41cyBlYXNlLW91dCdcblx0XHRcdH0sXG5cblx0XHRcdCcuc2xpZGVEb3duLWVudGVyLWFjdGl2ZSc6IHtcblx0XHRcdFx0b3ZlcmZsb3dZOiAnaGlkZGVuJyxcblx0XHRcdFx0bWF4SGVpZ2h0OiA0MDBcblx0XHRcdH0sXG5cblx0XHRcdCcuc2xpZGVEb3duLWxlYXZlJzoge1xuXHRcdFx0XHRvdmVyZmxvd1k6ICdoaWRkZW4nLFxuXHRcdFx0XHRtYXhIZWlnaHQ6IDQwMCxcblx0XHRcdFx0dHJhbnNpdGlvbjogJ2FsbCAuNXMgZWFzZS1vdXQnXG5cdFx0XHR9LFxuXG5cdFx0XHQnLnNsaWRlRG93bi1sZWF2ZS1hY3RpdmUnOiB7XG5cdFx0XHRcdG92ZXJmbG93WTogJ2hpZGRlbicsXG5cdFx0XHRcdG1heEhlaWdodDogMFxuXHRcdFx0fSxcblxuXHRcdFx0LyoqXG5cdFx0XHQgKiBTbGlkZSBhY3Jvc3MgcmlnaHQtdG8tbGVmdFxuXHRcdFx0ICovXG5cblx0XHRcdCcuc2xpZGVSVEwtZW50ZXInOiB7XG5cdFx0XHRcdHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuXHRcdFx0XHRsZWZ0OiAnMTAwJScsXG5cdFx0XHRcdHRyYW5zaXRpb246ICdhbGwgLjJzIGxpbmVhcidcblx0XHRcdH0sXG5cblx0XHRcdCcuc2xpZGVSVEwtZW50ZXItYWN0aXZlJzoge1xuXHRcdFx0XHRwb3NpdGlvbjogJ2Fic29sdXRlJyxcblx0XHRcdFx0bGVmdDogJzAlJ1xuXHRcdFx0fSxcblxuXHRcdFx0Jy5zbGlkZVJUTC1sZWF2ZSc6IHtcblx0XHRcdFx0cG9zaXRpb246ICdhYnNvbHV0ZScsXG5cdFx0XHRcdGxlZnQ6ICcwJScsXG5cdFx0XHRcdHRyYW5zaXRpb246ICdhbGwgLjJzIGxpbmVhcidcblx0XHRcdH0sXG5cblx0XHRcdCcuc2xpZGVSVEwtbGVhdmUtYWN0aXZlJzoge1xuXHRcdFx0XHRwb3NpdGlvbjogJ2Fic29sdXRlJyxcblx0XHRcdFx0bGVmdDogJy0xMDAlJ1xuXHRcdFx0fSxcblxuXHRcdFx0LyoqXG5cdFx0XHQgKiBTbGlkZSBhY3Jvc3MgbGVmdC10by1yaWdodFxuXHRcdFx0ICovXG5cblx0XHRcdCcuc2xpZGVMVFItZW50ZXInOiB7XG5cdFx0XHRcdHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuXHRcdFx0XHRsZWZ0OiAnLTEwMCUnLFxuXHRcdFx0XHR0cmFuc2l0aW9uOiAnYWxsIC4ycyBsaW5lYXInXG5cdFx0XHR9LFxuXG5cdFx0XHQnLnNsaWRlTFRSLWVudGVyLWFjdGl2ZSc6IHtcblx0XHRcdFx0cG9zaXRpb246ICdhYnNvbHV0ZScsXG5cdFx0XHRcdGxlZnQ6ICcwJSdcblx0XHRcdH0sXG5cblx0XHRcdCcuc2xpZGVMVFItbGVhdmUnOiB7XG5cdFx0XHRcdHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuXHRcdFx0XHRsZWZ0OiAnMCUnLFxuXHRcdFx0XHR0cmFuc2l0aW9uOiAnYWxsIC4ycyBsaW5lYXInXG5cdFx0XHR9LFxuXG5cdFx0XHQnLnNsaWRlTFRSLWxlYXZlLWFjdGl2ZSc6IHtcblx0XHRcdFx0cG9zaXRpb246ICdhYnNvbHV0ZScsXG5cdFx0XHRcdGxlZnQ6ICcxMDAlJ1xuXHRcdFx0fVxuXHRcdH1cblx0fSxcblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgJF9fMD0gIHRoaXMucHJvcHMscHJvcHM9KGZ1bmN0aW9uKHNvdXJjZSwgZXhjbHVzaW9uKSB7dmFyIHJlc3QgPSB7fTt2YXIgaGFzT3duID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtpZiAoc291cmNlID09IG51bGwpIHt0aHJvdyBuZXcgVHlwZUVycm9yKCk7fWZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtpZiAoaGFzT3duLmNhbGwoc291cmNlLCBrZXkpICYmICFoYXNPd24uY2FsbChleGNsdXNpb24sIGtleSkpIHtyZXN0W2tleV0gPSBzb3VyY2Vba2V5XTt9fXJldHVybiByZXN0O30pKCRfXzAse30pLFxuXHRcdFx0aWQgPSB0aGlzLl9nZW5lcmF0ZUlkKCk7XG5cblx0XHRyZXR1cm4gKFxuXHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBSZWFjdC5fX3NwcmVhZCh7aWQ6IGlkfSwgIHByb3BzKSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmFkaXVtLlN0eWxlLCB7c2NvcGVTZWxlY3RvcjogJyMnK2lkLCBydWxlczogbSh0aGlzLnN0eWxlLnJlc2V0cywgdGhpcy5wcm9wcy5jc3MpfSksIFxuXHRcdFx0XHR0aGlzLnByb3BzLmNoaWxkcmVuXG5cdFx0XHQpXG5cdFx0KTtcblx0fSxcblxuXHRfZ2VuZXJhdGVJZDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuICdkb3BzaWQnKyhpZENvdW50ZXIrKyk7XG5cdH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlc2V0OyIsInZhciBzdHlsZXMgPSB7XG5cdC8vbGF5b3V0XG5cdHJpZ2h0OiB7IGZsb2F0OiAncmlnaHQnIH0sXG5cdFxuXHRsZWZ0OiB7IGZsb2F0OiAnbGVmdCcgfSxcblx0XG5cdHRoaXJkOiB7IHdpZHRoOiAnMzMlJyB9LFxuXG5cdGZ1bGw6IHsgd2lkdGg6ICcxMDAlJyB9LFxuXG5cdGhhbGY6IHsgd2lkdGg6ICc0OCUnIH0sXG5cblx0aGlkZGVuOiB7IGRpc3BsYXk6ICdub25lJyB9LFxuXG5cdGNsZWFyOiB7XG5cdFx0Y2xlYXI6ICdib3RoJywgXG5cdFx0ZGlzcGxheTogJ2Jsb2NrJyBcblx0fSxcblxuXHQvL2FjY291bnQgc3RhdHVzIGluZGljYXRvclxuXHRhY2NvdW50U3RhdHVzOiB7XG5cdFx0dGV4dFRyYW5zZm9ybTogJ2NhcGl0YWxpemUnXG5cdH0sXG5cblx0YWNjb3VudFN0YXR1c05vdGljb246IHtcblx0XHRib3JkZXJSYWRpdXM6IFwiNTAlXCIsXG5cdFx0d2lkdGg6IDE2LFxuXHRcdGhlaWdodDogMTYsXG5cdFx0bWFyZ2luUmlnaHQ6IDEwLFxuXHRcdGNvbG9yOiAnI2ZmZicsXG5cdFx0YmFja2dyb3VuZDogJyM4MWJmMTYnXG5cdH0sXG5cblx0Ly9ib3ggd2lkZ2V0XG5cdGJveDoge1xuXHRcdGJvcmRlclJhZGl1czogMixcblx0XHRwYWRkaW5nOiAnNXB4IDEwcHgnLFxuXHRcdGJhY2tncm91bmQ6ICcjZjVmNWY1J1xuXHR9LFxuXG5cdC8vYmFzaWMgc3R5bGluZyAtIGZvbnRzIGFuZCBjb2xvcnNcblx0bGlnaHQ6IHsgY29sb3I6ICcjOTk5JyB9LFxuXHRjb2xvcnM6IHtcblx0XHRha2lzbWV0R3JlZW46ICcjNWU4ZTE0Jyxcblx0XHRibHVlOiAnIzAyOWRkNicsXG5cdFx0bGlnaHRlckJsdWU6ICcjMTNBRUU3Jyxcblx0XHRibGFjazogJyMzMzMnLFxuXHRcdGRhcmtHcmF5OiAnIzQ0NCcsXG5cdFx0Z3JheTogJyM3ODc4NzgnLFxuXHRcdGxpZ2h0R3JheTogJyNiYmInLFxuXHRcdHZlcnlMaWdodEdyYXk6ICcjZWVlJyxcblx0XHRvZmZXaGl0ZTogJyNmOWY5ZjknLFxuXHRcdGFjY291bnRBY3RpdmU6ICcjODFiZjE2Jyxcblx0XHRhY2NvdW50SW5hY3RpdmU6ICcjYmJiJyxcblx0XHRncmVlbjogJyM1MThkMmEnLFxuXHRcdGxpZ2h0ZXJHcmVlbjogJyM1Nzk3MmQnXG5cdH0sXG5cblx0Zm9udHM6IHtcblx0XHRzYW5zOiAnT3BlbiBTYW5zLCBcIk9wZW4gU2Fuc1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWYnLFxuXHRcdHNlcmlmOiAnTWVycml3ZWF0aGVyLCBHZW9yZ2lhLCBzZXJpZicsXG5cdFx0bW9ubzogJ1wiQ291cmllciBOZXdcIiwgQ291cmllciwgbW9ub3NwYWNlJ1xuXHR9LFxuXG5cdC8vZm9ybXNcblx0aW5wdXQ6IHtcblx0XHR3aWR0aDogXCIxMDAlXCIsXG5cdFx0Ym94U2hhZG93OiAnbm9uZScsXG5cdFx0YmFja2dyb3VuZDogJyNmZmYnLFxuXHRcdGJvcmRlcjogJzFweCBzb2xpZCAjZDVkNWQ1Jyxcblx0XHRmb250U2l6ZTogMTIsXG5cdFx0cGFkZGluZzogJzhweCAxMHB4J1xuXHR9LFxuXG5cdHNlbGVjdDoge1xuXHRcdGJvcmRlclJhZGl1czogMyxcblx0XHRiYWNrZ3JvdW5kQ29sb3I6ICcjZmZmJyxcblx0XHRmb250U2l6ZTogMTIsXG5cdFx0aGVpZ2h0OiAzNSxcblx0XHR3aWR0aDogJzEwMCUnLFxuXHRcdGJvcmRlcjogJzFweCBzb2xpZCAjZDVkNWQ1Jyxcblx0XHRwYWRkaW5nOiAnM3B4IDVweCcsXG5cdFx0bWluV2lkdGg6IDBcblx0fSxcblxuXHRjaGVja2JveDoge1xuXHRcdG1hcmdpblJpZ2h0OiAxMFxuXHR9LFxuXG5cdGVycm9yRmllbGQ6IHtcblx0XHRib3JkZXI6ICcxcHggc29saWQgI2RkM2QzNidcblx0fSxcblx0XG5cdGVycm9yTGFiZWw6IHtcblx0XHRib3JkZXI6ICcxcHggc29saWQgI2RkM2QzNicsXG5cdFx0Y29sb3I6ICcjYTAwJyxcblx0XHRkaXNwbGF5OiAnYmxvY2snLFxuXHRcdGZvbnRTaXplOiAxMixcblx0XHRtYXJnaW46ICc1cHggMCAwIDAnLFxuXHRcdHBhZGRpbmc6IDVcblx0fSxcblxuXHRcbn07XG5cbi8vIG9wdGlvbmFsIHRvcC1sZXZlbCBzdHlsZXMgZm9yIHBhc3NpbmcgaW50byB0aGUgXCJyZXNldFwiIG9iamVjdFxuc3R5bGVzLmNzcyA9IHtcblx0Jz4gKic6IHtcblx0XHRmb250OiAnMTRweC8xLjUgJyArIHN0eWxlcy5mb250cy5zYW5zLFxuXHRcdGNvbG9yOiBzdHlsZXMuY29sb3JzLmJsYWNrXG5cdH0sXG5cdGE6IHtcblx0XHRjb2xvcjogc3R5bGVzLmNvbG9ycy5ibHVlLFxuXHRcdHRleHREZWNvcmF0aW9uOiAnbm9uZSdcblx0fSxcblx0J2E6aG92ZXInOiB7XG5cdFx0dGV4dERlY29yYXRpb246ICd1bmRlcmxpbmUnXG5cdH0sXG5cdGgxOiB7XG5cdFx0Zm9udFNpemU6IDM0XG5cdH0sXG5cdGgyOiB7XG5cdFx0Y29sb3I6IHN0eWxlcy5jb2xvcnMuZ3JheSxcblx0XHRmb250U2l6ZTogMTZcblx0fSxcblx0aDM6IHtcblx0XHRmb250U2l6ZTogMThcblx0fSxcblx0J2gxLCBoMiwgaDMnOiB7XG5cdFx0Zm9udEZhbWlseTogc3R5bGVzLmZvbnRzLnNlcmlmLFxuXHRcdGZvbnRXZWlnaHQ6IDUwMFxuXHR9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlczsiLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuXHR2YXIgcmVzID0ge307XG5cdGZvciAoIHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7ICsraSkge1xuXHRcdGlmIChhcmd1bWVudHNbaV0pIHtcblx0XHRcdGpRdWVyeS5leHRlbmQocmVzLCBhcmd1bWVudHNbaV0pO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gcmVzO1xufTsiLCIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuZnVuY3Rpb24gRXZlbnRFbWl0dGVyKCkge1xuICB0aGlzLl9ldmVudHMgPSB0aGlzLl9ldmVudHMgfHwge307XG4gIHRoaXMuX21heExpc3RlbmVycyA9IHRoaXMuX21heExpc3RlbmVycyB8fCB1bmRlZmluZWQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50RW1pdHRlcjtcblxuLy8gQmFja3dhcmRzLWNvbXBhdCB3aXRoIG5vZGUgMC4xMC54XG5FdmVudEVtaXR0ZXIuRXZlbnRFbWl0dGVyID0gRXZlbnRFbWl0dGVyO1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLl9ldmVudHMgPSB1bmRlZmluZWQ7XG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLl9tYXhMaXN0ZW5lcnMgPSB1bmRlZmluZWQ7XG5cbi8vIEJ5IGRlZmF1bHQgRXZlbnRFbWl0dGVycyB3aWxsIHByaW50IGEgd2FybmluZyBpZiBtb3JlIHRoYW4gMTAgbGlzdGVuZXJzIGFyZVxuLy8gYWRkZWQgdG8gaXQuIFRoaXMgaXMgYSB1c2VmdWwgZGVmYXVsdCB3aGljaCBoZWxwcyBmaW5kaW5nIG1lbW9yeSBsZWFrcy5cbkV2ZW50RW1pdHRlci5kZWZhdWx0TWF4TGlzdGVuZXJzID0gMTA7XG5cbi8vIE9idmlvdXNseSBub3QgYWxsIEVtaXR0ZXJzIHNob3VsZCBiZSBsaW1pdGVkIHRvIDEwLiBUaGlzIGZ1bmN0aW9uIGFsbG93c1xuLy8gdGhhdCB0byBiZSBpbmNyZWFzZWQuIFNldCB0byB6ZXJvIGZvciB1bmxpbWl0ZWQuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnNldE1heExpc3RlbmVycyA9IGZ1bmN0aW9uKG4pIHtcbiAgaWYgKCFpc051bWJlcihuKSB8fCBuIDwgMCB8fCBpc05hTihuKSlcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ24gbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlcicpO1xuICB0aGlzLl9tYXhMaXN0ZW5lcnMgPSBuO1xuICByZXR1cm4gdGhpcztcbn07XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuZW1pdCA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgdmFyIGVyLCBoYW5kbGVyLCBsZW4sIGFyZ3MsIGksIGxpc3RlbmVycztcblxuICBpZiAoIXRoaXMuX2V2ZW50cylcbiAgICB0aGlzLl9ldmVudHMgPSB7fTtcblxuICAvLyBJZiB0aGVyZSBpcyBubyAnZXJyb3InIGV2ZW50IGxpc3RlbmVyIHRoZW4gdGhyb3cuXG4gIGlmICh0eXBlID09PSAnZXJyb3InKSB7XG4gICAgaWYgKCF0aGlzLl9ldmVudHMuZXJyb3IgfHxcbiAgICAgICAgKGlzT2JqZWN0KHRoaXMuX2V2ZW50cy5lcnJvcikgJiYgIXRoaXMuX2V2ZW50cy5lcnJvci5sZW5ndGgpKSB7XG4gICAgICBlciA9IGFyZ3VtZW50c1sxXTtcbiAgICAgIGlmIChlciBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgIHRocm93IGVyOyAvLyBVbmhhbmRsZWQgJ2Vycm9yJyBldmVudFxuICAgICAgfVxuICAgICAgdGhyb3cgVHlwZUVycm9yKCdVbmNhdWdodCwgdW5zcGVjaWZpZWQgXCJlcnJvclwiIGV2ZW50LicpO1xuICAgIH1cbiAgfVxuXG4gIGhhbmRsZXIgPSB0aGlzLl9ldmVudHNbdHlwZV07XG5cbiAgaWYgKGlzVW5kZWZpbmVkKGhhbmRsZXIpKVxuICAgIHJldHVybiBmYWxzZTtcblxuICBpZiAoaXNGdW5jdGlvbihoYW5kbGVyKSkge1xuICAgIHN3aXRjaCAoYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgLy8gZmFzdCBjYXNlc1xuICAgICAgY2FzZSAxOlxuICAgICAgICBoYW5kbGVyLmNhbGwodGhpcyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAyOlxuICAgICAgICBoYW5kbGVyLmNhbGwodGhpcywgYXJndW1lbnRzWzFdKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIDM6XG4gICAgICAgIGhhbmRsZXIuY2FsbCh0aGlzLCBhcmd1bWVudHNbMV0sIGFyZ3VtZW50c1syXSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgLy8gc2xvd2VyXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgICAgICBhcmdzID0gbmV3IEFycmF5KGxlbiAtIDEpO1xuICAgICAgICBmb3IgKGkgPSAxOyBpIDwgbGVuOyBpKyspXG4gICAgICAgICAgYXJnc1tpIC0gMV0gPSBhcmd1bWVudHNbaV07XG4gICAgICAgIGhhbmRsZXIuYXBwbHkodGhpcywgYXJncyk7XG4gICAgfVxuICB9IGVsc2UgaWYgKGlzT2JqZWN0KGhhbmRsZXIpKSB7XG4gICAgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBhcmdzID0gbmV3IEFycmF5KGxlbiAtIDEpO1xuICAgIGZvciAoaSA9IDE7IGkgPCBsZW47IGkrKylcbiAgICAgIGFyZ3NbaSAtIDFdID0gYXJndW1lbnRzW2ldO1xuXG4gICAgbGlzdGVuZXJzID0gaGFuZGxlci5zbGljZSgpO1xuICAgIGxlbiA9IGxpc3RlbmVycy5sZW5ndGg7XG4gICAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSsrKVxuICAgICAgbGlzdGVuZXJzW2ldLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmFkZExpc3RlbmVyID0gZnVuY3Rpb24odHlwZSwgbGlzdGVuZXIpIHtcbiAgdmFyIG07XG5cbiAgaWYgKCFpc0Z1bmN0aW9uKGxpc3RlbmVyKSlcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ2xpc3RlbmVyIG11c3QgYmUgYSBmdW5jdGlvbicpO1xuXG4gIGlmICghdGhpcy5fZXZlbnRzKVxuICAgIHRoaXMuX2V2ZW50cyA9IHt9O1xuXG4gIC8vIFRvIGF2b2lkIHJlY3Vyc2lvbiBpbiB0aGUgY2FzZSB0aGF0IHR5cGUgPT09IFwibmV3TGlzdGVuZXJcIiEgQmVmb3JlXG4gIC8vIGFkZGluZyBpdCB0byB0aGUgbGlzdGVuZXJzLCBmaXJzdCBlbWl0IFwibmV3TGlzdGVuZXJcIi5cbiAgaWYgKHRoaXMuX2V2ZW50cy5uZXdMaXN0ZW5lcilcbiAgICB0aGlzLmVtaXQoJ25ld0xpc3RlbmVyJywgdHlwZSxcbiAgICAgICAgICAgICAgaXNGdW5jdGlvbihsaXN0ZW5lci5saXN0ZW5lcikgP1xuICAgICAgICAgICAgICBsaXN0ZW5lci5saXN0ZW5lciA6IGxpc3RlbmVyKTtcblxuICBpZiAoIXRoaXMuX2V2ZW50c1t0eXBlXSlcbiAgICAvLyBPcHRpbWl6ZSB0aGUgY2FzZSBvZiBvbmUgbGlzdGVuZXIuIERvbid0IG5lZWQgdGhlIGV4dHJhIGFycmF5IG9iamVjdC5cbiAgICB0aGlzLl9ldmVudHNbdHlwZV0gPSBsaXN0ZW5lcjtcbiAgZWxzZSBpZiAoaXNPYmplY3QodGhpcy5fZXZlbnRzW3R5cGVdKSlcbiAgICAvLyBJZiB3ZSd2ZSBhbHJlYWR5IGdvdCBhbiBhcnJheSwganVzdCBhcHBlbmQuXG4gICAgdGhpcy5fZXZlbnRzW3R5cGVdLnB1c2gobGlzdGVuZXIpO1xuICBlbHNlXG4gICAgLy8gQWRkaW5nIHRoZSBzZWNvbmQgZWxlbWVudCwgbmVlZCB0byBjaGFuZ2UgdG8gYXJyYXkuXG4gICAgdGhpcy5fZXZlbnRzW3R5cGVdID0gW3RoaXMuX2V2ZW50c1t0eXBlXSwgbGlzdGVuZXJdO1xuXG4gIC8vIENoZWNrIGZvciBsaXN0ZW5lciBsZWFrXG4gIGlmIChpc09iamVjdCh0aGlzLl9ldmVudHNbdHlwZV0pICYmICF0aGlzLl9ldmVudHNbdHlwZV0ud2FybmVkKSB7XG4gICAgdmFyIG07XG4gICAgaWYgKCFpc1VuZGVmaW5lZCh0aGlzLl9tYXhMaXN0ZW5lcnMpKSB7XG4gICAgICBtID0gdGhpcy5fbWF4TGlzdGVuZXJzO1xuICAgIH0gZWxzZSB7XG4gICAgICBtID0gRXZlbnRFbWl0dGVyLmRlZmF1bHRNYXhMaXN0ZW5lcnM7XG4gICAgfVxuXG4gICAgaWYgKG0gJiYgbSA+IDAgJiYgdGhpcy5fZXZlbnRzW3R5cGVdLmxlbmd0aCA+IG0pIHtcbiAgICAgIHRoaXMuX2V2ZW50c1t0eXBlXS53YXJuZWQgPSB0cnVlO1xuICAgICAgY29uc29sZS5lcnJvcignKG5vZGUpIHdhcm5pbmc6IHBvc3NpYmxlIEV2ZW50RW1pdHRlciBtZW1vcnkgJyArXG4gICAgICAgICAgICAgICAgICAgICdsZWFrIGRldGVjdGVkLiAlZCBsaXN0ZW5lcnMgYWRkZWQuICcgK1xuICAgICAgICAgICAgICAgICAgICAnVXNlIGVtaXR0ZXIuc2V0TWF4TGlzdGVuZXJzKCkgdG8gaW5jcmVhc2UgbGltaXQuJyxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZXZlbnRzW3R5cGVdLmxlbmd0aCk7XG4gICAgICBpZiAodHlwZW9mIGNvbnNvbGUudHJhY2UgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgLy8gbm90IHN1cHBvcnRlZCBpbiBJRSAxMFxuICAgICAgICBjb25zb2xlLnRyYWNlKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLm9uID0gRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5hZGRMaXN0ZW5lcjtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vbmNlID0gZnVuY3Rpb24odHlwZSwgbGlzdGVuZXIpIHtcbiAgaWYgKCFpc0Z1bmN0aW9uKGxpc3RlbmVyKSlcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ2xpc3RlbmVyIG11c3QgYmUgYSBmdW5jdGlvbicpO1xuXG4gIHZhciBmaXJlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGcoKSB7XG4gICAgdGhpcy5yZW1vdmVMaXN0ZW5lcih0eXBlLCBnKTtcblxuICAgIGlmICghZmlyZWQpIHtcbiAgICAgIGZpcmVkID0gdHJ1ZTtcbiAgICAgIGxpc3RlbmVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfVxuICB9XG5cbiAgZy5saXN0ZW5lciA9IGxpc3RlbmVyO1xuICB0aGlzLm9uKHR5cGUsIGcpO1xuXG4gIHJldHVybiB0aGlzO1xufTtcblxuLy8gZW1pdHMgYSAncmVtb3ZlTGlzdGVuZXInIGV2ZW50IGlmZiB0aGUgbGlzdGVuZXIgd2FzIHJlbW92ZWRcbkV2ZW50RW1pdHRlci5wcm90b3R5cGUucmVtb3ZlTGlzdGVuZXIgPSBmdW5jdGlvbih0eXBlLCBsaXN0ZW5lcikge1xuICB2YXIgbGlzdCwgcG9zaXRpb24sIGxlbmd0aCwgaTtcblxuICBpZiAoIWlzRnVuY3Rpb24obGlzdGVuZXIpKVxuICAgIHRocm93IFR5cGVFcnJvcignbGlzdGVuZXIgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7XG5cbiAgaWYgKCF0aGlzLl9ldmVudHMgfHwgIXRoaXMuX2V2ZW50c1t0eXBlXSlcbiAgICByZXR1cm4gdGhpcztcblxuICBsaXN0ID0gdGhpcy5fZXZlbnRzW3R5cGVdO1xuICBsZW5ndGggPSBsaXN0Lmxlbmd0aDtcbiAgcG9zaXRpb24gPSAtMTtcblxuICBpZiAobGlzdCA9PT0gbGlzdGVuZXIgfHxcbiAgICAgIChpc0Z1bmN0aW9uKGxpc3QubGlzdGVuZXIpICYmIGxpc3QubGlzdGVuZXIgPT09IGxpc3RlbmVyKSkge1xuICAgIGRlbGV0ZSB0aGlzLl9ldmVudHNbdHlwZV07XG4gICAgaWYgKHRoaXMuX2V2ZW50cy5yZW1vdmVMaXN0ZW5lcilcbiAgICAgIHRoaXMuZW1pdCgncmVtb3ZlTGlzdGVuZXInLCB0eXBlLCBsaXN0ZW5lcik7XG5cbiAgfSBlbHNlIGlmIChpc09iamVjdChsaXN0KSkge1xuICAgIGZvciAoaSA9IGxlbmd0aDsgaS0tID4gMDspIHtcbiAgICAgIGlmIChsaXN0W2ldID09PSBsaXN0ZW5lciB8fFxuICAgICAgICAgIChsaXN0W2ldLmxpc3RlbmVyICYmIGxpc3RbaV0ubGlzdGVuZXIgPT09IGxpc3RlbmVyKSkge1xuICAgICAgICBwb3NpdGlvbiA9IGk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChwb3NpdGlvbiA8IDApXG4gICAgICByZXR1cm4gdGhpcztcblxuICAgIGlmIChsaXN0Lmxlbmd0aCA9PT0gMSkge1xuICAgICAgbGlzdC5sZW5ndGggPSAwO1xuICAgICAgZGVsZXRlIHRoaXMuX2V2ZW50c1t0eXBlXTtcbiAgICB9IGVsc2Uge1xuICAgICAgbGlzdC5zcGxpY2UocG9zaXRpb24sIDEpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9ldmVudHMucmVtb3ZlTGlzdGVuZXIpXG4gICAgICB0aGlzLmVtaXQoJ3JlbW92ZUxpc3RlbmVyJywgdHlwZSwgbGlzdGVuZXIpO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUFsbExpc3RlbmVycyA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgdmFyIGtleSwgbGlzdGVuZXJzO1xuXG4gIGlmICghdGhpcy5fZXZlbnRzKVxuICAgIHJldHVybiB0aGlzO1xuXG4gIC8vIG5vdCBsaXN0ZW5pbmcgZm9yIHJlbW92ZUxpc3RlbmVyLCBubyBuZWVkIHRvIGVtaXRcbiAgaWYgKCF0aGlzLl9ldmVudHMucmVtb3ZlTGlzdGVuZXIpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMClcbiAgICAgIHRoaXMuX2V2ZW50cyA9IHt9O1xuICAgIGVsc2UgaWYgKHRoaXMuX2V2ZW50c1t0eXBlXSlcbiAgICAgIGRlbGV0ZSB0aGlzLl9ldmVudHNbdHlwZV07XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvLyBlbWl0IHJlbW92ZUxpc3RlbmVyIGZvciBhbGwgbGlzdGVuZXJzIG9uIGFsbCBldmVudHNcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApIHtcbiAgICBmb3IgKGtleSBpbiB0aGlzLl9ldmVudHMpIHtcbiAgICAgIGlmIChrZXkgPT09ICdyZW1vdmVMaXN0ZW5lcicpIGNvbnRpbnVlO1xuICAgICAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoa2V5KTtcbiAgICB9XG4gICAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoJ3JlbW92ZUxpc3RlbmVyJyk7XG4gICAgdGhpcy5fZXZlbnRzID0ge307XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBsaXN0ZW5lcnMgPSB0aGlzLl9ldmVudHNbdHlwZV07XG5cbiAgaWYgKGlzRnVuY3Rpb24obGlzdGVuZXJzKSkge1xuICAgIHRoaXMucmVtb3ZlTGlzdGVuZXIodHlwZSwgbGlzdGVuZXJzKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBMSUZPIG9yZGVyXG4gICAgd2hpbGUgKGxpc3RlbmVycy5sZW5ndGgpXG4gICAgICB0aGlzLnJlbW92ZUxpc3RlbmVyKHR5cGUsIGxpc3RlbmVyc1tsaXN0ZW5lcnMubGVuZ3RoIC0gMV0pO1xuICB9XG4gIGRlbGV0ZSB0aGlzLl9ldmVudHNbdHlwZV07XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmxpc3RlbmVycyA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgdmFyIHJldDtcbiAgaWYgKCF0aGlzLl9ldmVudHMgfHwgIXRoaXMuX2V2ZW50c1t0eXBlXSlcbiAgICByZXQgPSBbXTtcbiAgZWxzZSBpZiAoaXNGdW5jdGlvbih0aGlzLl9ldmVudHNbdHlwZV0pKVxuICAgIHJldCA9IFt0aGlzLl9ldmVudHNbdHlwZV1dO1xuICBlbHNlXG4gICAgcmV0ID0gdGhpcy5fZXZlbnRzW3R5cGVdLnNsaWNlKCk7XG4gIHJldHVybiByZXQ7XG59O1xuXG5FdmVudEVtaXR0ZXIubGlzdGVuZXJDb3VudCA9IGZ1bmN0aW9uKGVtaXR0ZXIsIHR5cGUpIHtcbiAgdmFyIHJldDtcbiAgaWYgKCFlbWl0dGVyLl9ldmVudHMgfHwgIWVtaXR0ZXIuX2V2ZW50c1t0eXBlXSlcbiAgICByZXQgPSAwO1xuICBlbHNlIGlmIChpc0Z1bmN0aW9uKGVtaXR0ZXIuX2V2ZW50c1t0eXBlXSkpXG4gICAgcmV0ID0gMTtcbiAgZWxzZVxuICAgIHJldCA9IGVtaXR0ZXIuX2V2ZW50c1t0eXBlXS5sZW5ndGg7XG4gIHJldHVybiByZXQ7XG59O1xuXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuZnVuY3Rpb24gaXNOdW1iZXIoYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnbnVtYmVyJztcbn1cblxuZnVuY3Rpb24gaXNPYmplY3QoYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnb2JqZWN0JyAmJiBhcmcgIT09IG51bGw7XG59XG5cbmZ1bmN0aW9uIGlzVW5kZWZpbmVkKGFyZykge1xuICByZXR1cm4gYXJnID09PSB2b2lkIDA7XG59XG4iLCIvLyBzaGltIGZvciB1c2luZyBwcm9jZXNzIGluIGJyb3dzZXJcblxudmFyIHByb2Nlc3MgPSBtb2R1bGUuZXhwb3J0cyA9IHt9O1xudmFyIHF1ZXVlID0gW107XG52YXIgZHJhaW5pbmcgPSBmYWxzZTtcbnZhciBjdXJyZW50UXVldWU7XG52YXIgcXVldWVJbmRleCA9IC0xO1xuXG5mdW5jdGlvbiBjbGVhblVwTmV4dFRpY2soKSB7XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBpZiAoY3VycmVudFF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBxdWV1ZSA9IGN1cnJlbnRRdWV1ZS5jb25jYXQocXVldWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICB9XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBkcmFpblF1ZXVlKCk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBkcmFpblF1ZXVlKCkge1xuICAgIGlmIChkcmFpbmluZykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciB0aW1lb3V0ID0gc2V0VGltZW91dChjbGVhblVwTmV4dFRpY2spO1xuICAgIGRyYWluaW5nID0gdHJ1ZTtcblxuICAgIHZhciBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgd2hpbGUobGVuKSB7XG4gICAgICAgIGN1cnJlbnRRdWV1ZSA9IHF1ZXVlO1xuICAgICAgICBxdWV1ZSA9IFtdO1xuICAgICAgICB3aGlsZSAoKytxdWV1ZUluZGV4IDwgbGVuKSB7XG4gICAgICAgICAgICBjdXJyZW50UXVldWVbcXVldWVJbmRleF0ucnVuKCk7XG4gICAgICAgIH1cbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgICAgICBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgfVxuICAgIGN1cnJlbnRRdWV1ZSA9IG51bGw7XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG59XG5cbnByb2Nlc3MubmV4dFRpY2sgPSBmdW5jdGlvbiAoZnVuKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYXJnc1tpIC0gMV0gPSBhcmd1bWVudHNbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcXVldWUucHVzaChuZXcgSXRlbShmdW4sIGFyZ3MpKTtcbiAgICBpZiAocXVldWUubGVuZ3RoID09PSAxICYmICFkcmFpbmluZykge1xuICAgICAgICBzZXRUaW1lb3V0KGRyYWluUXVldWUsIDApO1xuICAgIH1cbn07XG5cbi8vIHY4IGxpa2VzIHByZWRpY3RpYmxlIG9iamVjdHNcbmZ1bmN0aW9uIEl0ZW0oZnVuLCBhcnJheSkge1xuICAgIHRoaXMuZnVuID0gZnVuO1xuICAgIHRoaXMuYXJyYXkgPSBhcnJheTtcbn1cbkl0ZW0ucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmZ1bi5hcHBseShudWxsLCB0aGlzLmFycmF5KTtcbn07XG5wcm9jZXNzLnRpdGxlID0gJ2Jyb3dzZXInO1xucHJvY2Vzcy5icm93c2VyID0gdHJ1ZTtcbnByb2Nlc3MuZW52ID0ge307XG5wcm9jZXNzLmFyZ3YgPSBbXTtcbnByb2Nlc3MudmVyc2lvbiA9ICcnOyAvLyBlbXB0eSBzdHJpbmcgdG8gYXZvaWQgcmVnZXhwIGlzc3Vlc1xucHJvY2Vzcy52ZXJzaW9ucyA9IHt9O1xuXG5mdW5jdGlvbiBub29wKCkge31cblxucHJvY2Vzcy5vbiA9IG5vb3A7XG5wcm9jZXNzLmFkZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3Mub25jZSA9IG5vb3A7XG5wcm9jZXNzLm9mZiA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUxpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlQWxsTGlzdGVuZXJzID0gbm9vcDtcbnByb2Nlc3MuZW1pdCA9IG5vb3A7XG5cbnByb2Nlc3MuYmluZGluZyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcblxuLy8gVE9ETyhzaHR5bG1hbilcbnByb2Nlc3MuY3dkID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gJy8nIH07XG5wcm9jZXNzLmNoZGlyID0gZnVuY3Rpb24gKGRpcikge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xucHJvY2Vzcy51bWFzayA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gMDsgfTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cy5EaXNwYXRjaGVyID0gcmVxdWlyZSgnLi9saWIvRGlzcGF0Y2hlcicpO1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBEaXNwYXRjaGVyXG4gKiBcbiAqIEBwcmV2ZW50TXVuZ2VcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcignQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uJyk7IH0gfVxuXG52YXIgaW52YXJpYW50ID0gcmVxdWlyZSgnZmJqcy9saWIvaW52YXJpYW50Jyk7XG5cbnZhciBfcHJlZml4ID0gJ0lEXyc7XG5cbi8qKlxuICogRGlzcGF0Y2hlciBpcyB1c2VkIHRvIGJyb2FkY2FzdCBwYXlsb2FkcyB0byByZWdpc3RlcmVkIGNhbGxiYWNrcy4gVGhpcyBpc1xuICogZGlmZmVyZW50IGZyb20gZ2VuZXJpYyBwdWItc3ViIHN5c3RlbXMgaW4gdHdvIHdheXM6XG4gKlxuICogICAxKSBDYWxsYmFja3MgYXJlIG5vdCBzdWJzY3JpYmVkIHRvIHBhcnRpY3VsYXIgZXZlbnRzLiBFdmVyeSBwYXlsb2FkIGlzXG4gKiAgICAgIGRpc3BhdGNoZWQgdG8gZXZlcnkgcmVnaXN0ZXJlZCBjYWxsYmFjay5cbiAqICAgMikgQ2FsbGJhY2tzIGNhbiBiZSBkZWZlcnJlZCBpbiB3aG9sZSBvciBwYXJ0IHVudGlsIG90aGVyIGNhbGxiYWNrcyBoYXZlXG4gKiAgICAgIGJlZW4gZXhlY3V0ZWQuXG4gKlxuICogRm9yIGV4YW1wbGUsIGNvbnNpZGVyIHRoaXMgaHlwb3RoZXRpY2FsIGZsaWdodCBkZXN0aW5hdGlvbiBmb3JtLCB3aGljaFxuICogc2VsZWN0cyBhIGRlZmF1bHQgY2l0eSB3aGVuIGEgY291bnRyeSBpcyBzZWxlY3RlZDpcbiAqXG4gKiAgIHZhciBmbGlnaHREaXNwYXRjaGVyID0gbmV3IERpc3BhdGNoZXIoKTtcbiAqXG4gKiAgIC8vIEtlZXBzIHRyYWNrIG9mIHdoaWNoIGNvdW50cnkgaXMgc2VsZWN0ZWRcbiAqICAgdmFyIENvdW50cnlTdG9yZSA9IHtjb3VudHJ5OiBudWxsfTtcbiAqXG4gKiAgIC8vIEtlZXBzIHRyYWNrIG9mIHdoaWNoIGNpdHkgaXMgc2VsZWN0ZWRcbiAqICAgdmFyIENpdHlTdG9yZSA9IHtjaXR5OiBudWxsfTtcbiAqXG4gKiAgIC8vIEtlZXBzIHRyYWNrIG9mIHRoZSBiYXNlIGZsaWdodCBwcmljZSBvZiB0aGUgc2VsZWN0ZWQgY2l0eVxuICogICB2YXIgRmxpZ2h0UHJpY2VTdG9yZSA9IHtwcmljZTogbnVsbH1cbiAqXG4gKiBXaGVuIGEgdXNlciBjaGFuZ2VzIHRoZSBzZWxlY3RlZCBjaXR5LCB3ZSBkaXNwYXRjaCB0aGUgcGF5bG9hZDpcbiAqXG4gKiAgIGZsaWdodERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuICogICAgIGFjdGlvblR5cGU6ICdjaXR5LXVwZGF0ZScsXG4gKiAgICAgc2VsZWN0ZWRDaXR5OiAncGFyaXMnXG4gKiAgIH0pO1xuICpcbiAqIFRoaXMgcGF5bG9hZCBpcyBkaWdlc3RlZCBieSBgQ2l0eVN0b3JlYDpcbiAqXG4gKiAgIGZsaWdodERpc3BhdGNoZXIucmVnaXN0ZXIoZnVuY3Rpb24ocGF5bG9hZCkge1xuICogICAgIGlmIChwYXlsb2FkLmFjdGlvblR5cGUgPT09ICdjaXR5LXVwZGF0ZScpIHtcbiAqICAgICAgIENpdHlTdG9yZS5jaXR5ID0gcGF5bG9hZC5zZWxlY3RlZENpdHk7XG4gKiAgICAgfVxuICogICB9KTtcbiAqXG4gKiBXaGVuIHRoZSB1c2VyIHNlbGVjdHMgYSBjb3VudHJ5LCB3ZSBkaXNwYXRjaCB0aGUgcGF5bG9hZDpcbiAqXG4gKiAgIGZsaWdodERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuICogICAgIGFjdGlvblR5cGU6ICdjb3VudHJ5LXVwZGF0ZScsXG4gKiAgICAgc2VsZWN0ZWRDb3VudHJ5OiAnYXVzdHJhbGlhJ1xuICogICB9KTtcbiAqXG4gKiBUaGlzIHBheWxvYWQgaXMgZGlnZXN0ZWQgYnkgYm90aCBzdG9yZXM6XG4gKlxuICogICBDb3VudHJ5U3RvcmUuZGlzcGF0Y2hUb2tlbiA9IGZsaWdodERpc3BhdGNoZXIucmVnaXN0ZXIoZnVuY3Rpb24ocGF5bG9hZCkge1xuICogICAgIGlmIChwYXlsb2FkLmFjdGlvblR5cGUgPT09ICdjb3VudHJ5LXVwZGF0ZScpIHtcbiAqICAgICAgIENvdW50cnlTdG9yZS5jb3VudHJ5ID0gcGF5bG9hZC5zZWxlY3RlZENvdW50cnk7XG4gKiAgICAgfVxuICogICB9KTtcbiAqXG4gKiBXaGVuIHRoZSBjYWxsYmFjayB0byB1cGRhdGUgYENvdW50cnlTdG9yZWAgaXMgcmVnaXN0ZXJlZCwgd2Ugc2F2ZSBhIHJlZmVyZW5jZVxuICogdG8gdGhlIHJldHVybmVkIHRva2VuLiBVc2luZyB0aGlzIHRva2VuIHdpdGggYHdhaXRGb3IoKWAsIHdlIGNhbiBndWFyYW50ZWVcbiAqIHRoYXQgYENvdW50cnlTdG9yZWAgaXMgdXBkYXRlZCBiZWZvcmUgdGhlIGNhbGxiYWNrIHRoYXQgdXBkYXRlcyBgQ2l0eVN0b3JlYFxuICogbmVlZHMgdG8gcXVlcnkgaXRzIGRhdGEuXG4gKlxuICogICBDaXR5U3RvcmUuZGlzcGF0Y2hUb2tlbiA9IGZsaWdodERpc3BhdGNoZXIucmVnaXN0ZXIoZnVuY3Rpb24ocGF5bG9hZCkge1xuICogICAgIGlmIChwYXlsb2FkLmFjdGlvblR5cGUgPT09ICdjb3VudHJ5LXVwZGF0ZScpIHtcbiAqICAgICAgIC8vIGBDb3VudHJ5U3RvcmUuY291bnRyeWAgbWF5IG5vdCBiZSB1cGRhdGVkLlxuICogICAgICAgZmxpZ2h0RGlzcGF0Y2hlci53YWl0Rm9yKFtDb3VudHJ5U3RvcmUuZGlzcGF0Y2hUb2tlbl0pO1xuICogICAgICAgLy8gYENvdW50cnlTdG9yZS5jb3VudHJ5YCBpcyBub3cgZ3VhcmFudGVlZCB0byBiZSB1cGRhdGVkLlxuICpcbiAqICAgICAgIC8vIFNlbGVjdCB0aGUgZGVmYXVsdCBjaXR5IGZvciB0aGUgbmV3IGNvdW50cnlcbiAqICAgICAgIENpdHlTdG9yZS5jaXR5ID0gZ2V0RGVmYXVsdENpdHlGb3JDb3VudHJ5KENvdW50cnlTdG9yZS5jb3VudHJ5KTtcbiAqICAgICB9XG4gKiAgIH0pO1xuICpcbiAqIFRoZSB1c2FnZSBvZiBgd2FpdEZvcigpYCBjYW4gYmUgY2hhaW5lZCwgZm9yIGV4YW1wbGU6XG4gKlxuICogICBGbGlnaHRQcmljZVN0b3JlLmRpc3BhdGNoVG9rZW4gPVxuICogICAgIGZsaWdodERpc3BhdGNoZXIucmVnaXN0ZXIoZnVuY3Rpb24ocGF5bG9hZCkge1xuICogICAgICAgc3dpdGNoIChwYXlsb2FkLmFjdGlvblR5cGUpIHtcbiAqICAgICAgICAgY2FzZSAnY291bnRyeS11cGRhdGUnOlxuICogICAgICAgICBjYXNlICdjaXR5LXVwZGF0ZSc6XG4gKiAgICAgICAgICAgZmxpZ2h0RGlzcGF0Y2hlci53YWl0Rm9yKFtDaXR5U3RvcmUuZGlzcGF0Y2hUb2tlbl0pO1xuICogICAgICAgICAgIEZsaWdodFByaWNlU3RvcmUucHJpY2UgPVxuICogICAgICAgICAgICAgZ2V0RmxpZ2h0UHJpY2VTdG9yZShDb3VudHJ5U3RvcmUuY291bnRyeSwgQ2l0eVN0b3JlLmNpdHkpO1xuICogICAgICAgICAgIGJyZWFrO1xuICogICAgIH1cbiAqICAgfSk7XG4gKlxuICogVGhlIGBjb3VudHJ5LXVwZGF0ZWAgcGF5bG9hZCB3aWxsIGJlIGd1YXJhbnRlZWQgdG8gaW52b2tlIHRoZSBzdG9yZXMnXG4gKiByZWdpc3RlcmVkIGNhbGxiYWNrcyBpbiBvcmRlcjogYENvdW50cnlTdG9yZWAsIGBDaXR5U3RvcmVgLCB0aGVuXG4gKiBgRmxpZ2h0UHJpY2VTdG9yZWAuXG4gKi9cblxudmFyIERpc3BhdGNoZXIgPSAoZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBEaXNwYXRjaGVyKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBEaXNwYXRjaGVyKTtcblxuICAgIHRoaXMuX2NhbGxiYWNrcyA9IHt9O1xuICAgIHRoaXMuX2lzRGlzcGF0Y2hpbmcgPSBmYWxzZTtcbiAgICB0aGlzLl9pc0hhbmRsZWQgPSB7fTtcbiAgICB0aGlzLl9pc1BlbmRpbmcgPSB7fTtcbiAgICB0aGlzLl9sYXN0SUQgPSAxO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlZ2lzdGVycyBhIGNhbGxiYWNrIHRvIGJlIGludm9rZWQgd2l0aCBldmVyeSBkaXNwYXRjaGVkIHBheWxvYWQuIFJldHVybnNcbiAgICogYSB0b2tlbiB0aGF0IGNhbiBiZSB1c2VkIHdpdGggYHdhaXRGb3IoKWAuXG4gICAqL1xuXG4gIERpc3BhdGNoZXIucHJvdG90eXBlLnJlZ2lzdGVyID0gZnVuY3Rpb24gcmVnaXN0ZXIoY2FsbGJhY2spIHtcbiAgICB2YXIgaWQgPSBfcHJlZml4ICsgdGhpcy5fbGFzdElEKys7XG4gICAgdGhpcy5fY2FsbGJhY2tzW2lkXSA9IGNhbGxiYWNrO1xuICAgIHJldHVybiBpZDtcbiAgfTtcblxuICAvKipcbiAgICogUmVtb3ZlcyBhIGNhbGxiYWNrIGJhc2VkIG9uIGl0cyB0b2tlbi5cbiAgICovXG5cbiAgRGlzcGF0Y2hlci5wcm90b3R5cGUudW5yZWdpc3RlciA9IGZ1bmN0aW9uIHVucmVnaXN0ZXIoaWQpIHtcbiAgICAhdGhpcy5fY2FsbGJhY2tzW2lkXSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyBpbnZhcmlhbnQoZmFsc2UsICdEaXNwYXRjaGVyLnVucmVnaXN0ZXIoLi4uKTogYCVzYCBkb2VzIG5vdCBtYXAgdG8gYSByZWdpc3RlcmVkIGNhbGxiYWNrLicsIGlkKSA6IGludmFyaWFudChmYWxzZSkgOiB1bmRlZmluZWQ7XG4gICAgZGVsZXRlIHRoaXMuX2NhbGxiYWNrc1tpZF07XG4gIH07XG5cbiAgLyoqXG4gICAqIFdhaXRzIGZvciB0aGUgY2FsbGJhY2tzIHNwZWNpZmllZCB0byBiZSBpbnZva2VkIGJlZm9yZSBjb250aW51aW5nIGV4ZWN1dGlvblxuICAgKiBvZiB0aGUgY3VycmVudCBjYWxsYmFjay4gVGhpcyBtZXRob2Qgc2hvdWxkIG9ubHkgYmUgdXNlZCBieSBhIGNhbGxiYWNrIGluXG4gICAqIHJlc3BvbnNlIHRvIGEgZGlzcGF0Y2hlZCBwYXlsb2FkLlxuICAgKi9cblxuICBEaXNwYXRjaGVyLnByb3RvdHlwZS53YWl0Rm9yID0gZnVuY3Rpb24gd2FpdEZvcihpZHMpIHtcbiAgICAhdGhpcy5faXNEaXNwYXRjaGluZyA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyBpbnZhcmlhbnQoZmFsc2UsICdEaXNwYXRjaGVyLndhaXRGb3IoLi4uKTogTXVzdCBiZSBpbnZva2VkIHdoaWxlIGRpc3BhdGNoaW5nLicpIDogaW52YXJpYW50KGZhbHNlKSA6IHVuZGVmaW5lZDtcbiAgICBmb3IgKHZhciBpaSA9IDA7IGlpIDwgaWRzLmxlbmd0aDsgaWkrKykge1xuICAgICAgdmFyIGlkID0gaWRzW2lpXTtcbiAgICAgIGlmICh0aGlzLl9pc1BlbmRpbmdbaWRdKSB7XG4gICAgICAgICF0aGlzLl9pc0hhbmRsZWRbaWRdID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IGludmFyaWFudChmYWxzZSwgJ0Rpc3BhdGNoZXIud2FpdEZvciguLi4pOiBDaXJjdWxhciBkZXBlbmRlbmN5IGRldGVjdGVkIHdoaWxlICcgKyAnd2FpdGluZyBmb3IgYCVzYC4nLCBpZCkgOiBpbnZhcmlhbnQoZmFsc2UpIDogdW5kZWZpbmVkO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgICF0aGlzLl9jYWxsYmFja3NbaWRdID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IGludmFyaWFudChmYWxzZSwgJ0Rpc3BhdGNoZXIud2FpdEZvciguLi4pOiBgJXNgIGRvZXMgbm90IG1hcCB0byBhIHJlZ2lzdGVyZWQgY2FsbGJhY2suJywgaWQpIDogaW52YXJpYW50KGZhbHNlKSA6IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMuX2ludm9rZUNhbGxiYWNrKGlkKTtcbiAgICB9XG4gIH07XG5cbiAgLyoqXG4gICAqIERpc3BhdGNoZXMgYSBwYXlsb2FkIHRvIGFsbCByZWdpc3RlcmVkIGNhbGxiYWNrcy5cbiAgICovXG5cbiAgRGlzcGF0Y2hlci5wcm90b3R5cGUuZGlzcGF0Y2ggPSBmdW5jdGlvbiBkaXNwYXRjaChwYXlsb2FkKSB7XG4gICAgISF0aGlzLl9pc0Rpc3BhdGNoaW5nID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IGludmFyaWFudChmYWxzZSwgJ0Rpc3BhdGNoLmRpc3BhdGNoKC4uLik6IENhbm5vdCBkaXNwYXRjaCBpbiB0aGUgbWlkZGxlIG9mIGEgZGlzcGF0Y2guJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdW5kZWZpbmVkO1xuICAgIHRoaXMuX3N0YXJ0RGlzcGF0Y2hpbmcocGF5bG9hZCk7XG4gICAgdHJ5IHtcbiAgICAgIGZvciAodmFyIGlkIGluIHRoaXMuX2NhbGxiYWNrcykge1xuICAgICAgICBpZiAodGhpcy5faXNQZW5kaW5nW2lkXSkge1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2ludm9rZUNhbGxiYWNrKGlkKTtcbiAgICAgIH1cbiAgICB9IGZpbmFsbHkge1xuICAgICAgdGhpcy5fc3RvcERpc3BhdGNoaW5nKCk7XG4gICAgfVxuICB9O1xuXG4gIC8qKlxuICAgKiBJcyB0aGlzIERpc3BhdGNoZXIgY3VycmVudGx5IGRpc3BhdGNoaW5nLlxuICAgKi9cblxuICBEaXNwYXRjaGVyLnByb3RvdHlwZS5pc0Rpc3BhdGNoaW5nID0gZnVuY3Rpb24gaXNEaXNwYXRjaGluZygpIHtcbiAgICByZXR1cm4gdGhpcy5faXNEaXNwYXRjaGluZztcbiAgfTtcblxuICAvKipcbiAgICogQ2FsbCB0aGUgY2FsbGJhY2sgc3RvcmVkIHdpdGggdGhlIGdpdmVuIGlkLiBBbHNvIGRvIHNvbWUgaW50ZXJuYWxcbiAgICogYm9va2tlZXBpbmcuXG4gICAqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cblxuICBEaXNwYXRjaGVyLnByb3RvdHlwZS5faW52b2tlQ2FsbGJhY2sgPSBmdW5jdGlvbiBfaW52b2tlQ2FsbGJhY2soaWQpIHtcbiAgICB0aGlzLl9pc1BlbmRpbmdbaWRdID0gdHJ1ZTtcbiAgICB0aGlzLl9jYWxsYmFja3NbaWRdKHRoaXMuX3BlbmRpbmdQYXlsb2FkKTtcbiAgICB0aGlzLl9pc0hhbmRsZWRbaWRdID0gdHJ1ZTtcbiAgfTtcblxuICAvKipcbiAgICogU2V0IHVwIGJvb2trZWVwaW5nIG5lZWRlZCB3aGVuIGRpc3BhdGNoaW5nLlxuICAgKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG5cbiAgRGlzcGF0Y2hlci5wcm90b3R5cGUuX3N0YXJ0RGlzcGF0Y2hpbmcgPSBmdW5jdGlvbiBfc3RhcnREaXNwYXRjaGluZyhwYXlsb2FkKSB7XG4gICAgZm9yICh2YXIgaWQgaW4gdGhpcy5fY2FsbGJhY2tzKSB7XG4gICAgICB0aGlzLl9pc1BlbmRpbmdbaWRdID0gZmFsc2U7XG4gICAgICB0aGlzLl9pc0hhbmRsZWRbaWRdID0gZmFsc2U7XG4gICAgfVxuICAgIHRoaXMuX3BlbmRpbmdQYXlsb2FkID0gcGF5bG9hZDtcbiAgICB0aGlzLl9pc0Rpc3BhdGNoaW5nID0gdHJ1ZTtcbiAgfTtcblxuICAvKipcbiAgICogQ2xlYXIgYm9va2tlZXBpbmcgdXNlZCBmb3IgZGlzcGF0Y2hpbmcuXG4gICAqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cblxuICBEaXNwYXRjaGVyLnByb3RvdHlwZS5fc3RvcERpc3BhdGNoaW5nID0gZnVuY3Rpb24gX3N0b3BEaXNwYXRjaGluZygpIHtcbiAgICBkZWxldGUgdGhpcy5fcGVuZGluZ1BheWxvYWQ7XG4gICAgdGhpcy5faXNEaXNwYXRjaGluZyA9IGZhbHNlO1xuICB9O1xuXG4gIHJldHVybiBEaXNwYXRjaGVyO1xufSkoKTtcblxubW9kdWxlLmV4cG9ydHMgPSBEaXNwYXRjaGVyOyIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTMtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBpbnZhcmlhbnRcbiAqL1xuXG5cInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIGludmFyaWFudCA9IGZ1bmN0aW9uIChjb25kaXRpb24sIGZvcm1hdCwgYSwgYiwgYywgZCwgZSwgZikge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhcmlhbnQgcmVxdWlyZXMgYW4gZXJyb3IgbWVzc2FnZSBhcmd1bWVudCcpO1xuICAgIH1cbiAgfVxuXG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdmFyIGVycm9yO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgKyAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ3MgPSBbYSwgYiwgYywgZCwgZSwgZl07XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoJ0ludmFyaWFudCBWaW9sYXRpb246ICcgKyBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gYXJnc1thcmdJbmRleCsrXTtcbiAgICAgIH0pKTtcbiAgICB9XG5cbiAgICBlcnJvci5mcmFtZXNUb1BvcCA9IDE7IC8vIHdlIGRvbid0IGNhcmUgYWJvdXQgaW52YXJpYW50J3Mgb3duIGZyYW1lXG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gaW52YXJpYW50OyIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTMtMjAxNCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICpcbiAqL1xuXG5cInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb25zdHJ1Y3RzIGFuIGVudW1lcmF0aW9uIHdpdGgga2V5cyBlcXVhbCB0byB0aGVpciB2YWx1ZS5cbiAqXG4gKiBGb3IgZXhhbXBsZTpcbiAqXG4gKiAgIHZhciBDT0xPUlMgPSBrZXlNaXJyb3Ioe2JsdWU6IG51bGwsIHJlZDogbnVsbH0pO1xuICogICB2YXIgbXlDb2xvciA9IENPTE9SUy5ibHVlO1xuICogICB2YXIgaXNDb2xvclZhbGlkID0gISFDT0xPUlNbbXlDb2xvcl07XG4gKlxuICogVGhlIGxhc3QgbGluZSBjb3VsZCBub3QgYmUgcGVyZm9ybWVkIGlmIHRoZSB2YWx1ZXMgb2YgdGhlIGdlbmVyYXRlZCBlbnVtIHdlcmVcbiAqIG5vdCBlcXVhbCB0byB0aGVpciBrZXlzLlxuICpcbiAqICAgSW5wdXQ6ICB7a2V5MTogdmFsMSwga2V5MjogdmFsMn1cbiAqICAgT3V0cHV0OiB7a2V5MToga2V5MSwga2V5Mjoga2V5Mn1cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gb2JqXG4gKiBAcmV0dXJuIHtvYmplY3R9XG4gKi9cbnZhciBrZXlNaXJyb3IgPSBmdW5jdGlvbihvYmopIHtcbiAgdmFyIHJldCA9IHt9O1xuICB2YXIga2V5O1xuICBpZiAoIShvYmogaW5zdGFuY2VvZiBPYmplY3QgJiYgIUFycmF5LmlzQXJyYXkob2JqKSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2tleU1pcnJvciguLi4pOiBBcmd1bWVudCBtdXN0IGJlIGFuIG9iamVjdC4nKTtcbiAgfVxuICBmb3IgKGtleSBpbiBvYmopIHtcbiAgICBpZiAoIW9iai5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgcmV0W2tleV0gPSBrZXk7XG4gIH1cbiAgcmV0dXJuIHJldDtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ga2V5TWlycm9yO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3QgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snUmVhY3QnXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJ1JlYWN0J10gOiBudWxsKTtcblxudmFyIFN0eWxlID0gcmVxdWlyZSgnLi9zdHlsZS5qcycpO1xudmFyIHByaW50U3R5bGVzID0gcmVxdWlyZSgnLi4vcHJpbnQtc3R5bGVzLmpzJyk7XG5cbnZhciBQcmludFN0eWxlID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICBkaXNwbGF5TmFtZTogJ1ByaW50U3R5bGUnLFxuXG4gIGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24gZ2V0SW5pdGlhbFN0YXRlKCkge1xuICAgIHJldHVybiB0aGlzLl9nZXRTdHlsZXNTdGF0ZSgpO1xuICB9LFxuXG4gIGNvbXBvbmVudERpZE1vdW50OiBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLnN1YnNjcmlwdGlvbiA9IHByaW50U3R5bGVzLnN1YnNjcmliZSh0aGlzLl9vbkNoYW5nZSk7XG4gIH0sXG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQ6IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIHRoaXMuc3Vic2NyaXB0aW9uLnJlbW92ZSgpO1xuICB9LFxuXG4gIF9vbkNoYW5nZTogZnVuY3Rpb24gX29uQ2hhbmdlKCkge1xuICAgIHRoaXMuc2V0U3RhdGUodGhpcy5fZ2V0U3R5bGVzU3RhdGUoKSk7XG4gIH0sXG5cbiAgX2dldFN0eWxlc1N0YXRlOiBmdW5jdGlvbiBfZ2V0U3R5bGVzU3RhdGUoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0eWxlczogcHJpbnRTdHlsZXMuZ2V0UHJpbnRTdHlsZXMoKVxuICAgIH07XG4gIH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoU3R5bGUsIHsgcnVsZXM6IHtcbiAgICAgICAgbWVkaWFRdWVyaWVzOiB7XG4gICAgICAgICAgcHJpbnQ6IHRoaXMuc3RhdGUuc3R5bGVzXG4gICAgICAgIH1cbiAgICAgIH0gfSk7XG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFByaW50U3R5bGU7IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgY3JlYXRlTWFya3VwRm9yU3R5bGVzID0gcmVxdWlyZSgnLi4vY3JlYXRlLW1hcmt1cC1mb3Itc3R5bGVzJyk7XG52YXIgUHJlZml4ZXIgPSByZXF1aXJlKCcuLi9wcmVmaXhlcicpO1xuXG52YXIgUmVhY3QgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snUmVhY3QnXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJ1JlYWN0J10gOiBudWxsKTtcblxudmFyIGJ1aWxkQ3NzU3RyaW5nID0gZnVuY3Rpb24gYnVpbGRDc3NTdHJpbmcoY29tcG9uZW50LCBzZWxlY3RvciwgcnVsZXMpIHtcbiAgaWYgKCFzZWxlY3RvciB8fCAhcnVsZXMpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgcHJlZml4ZWRSdWxlcyA9IFByZWZpeGVyLmdldFByZWZpeGVkU3R5bGUoY29tcG9uZW50LCBydWxlcywgJ2NzcycpO1xuICB2YXIgc2VyaWFsaXplZFJ1bGVzID0gY3JlYXRlTWFya3VwRm9yU3R5bGVzKHByZWZpeGVkUnVsZXMpO1xuXG4gIHJldHVybiBzZWxlY3RvciArICd7JyArIHNlcmlhbGl6ZWRSdWxlcyArICd9Jztcbn07XG5cbnZhciBTdHlsZSA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgZGlzcGxheU5hbWU6ICdTdHlsZScsXG5cbiAgcHJvcFR5cGVzOiB7XG4gICAgcnVsZXM6IFJlYWN0LlByb3BUeXBlcy5vYmplY3QsXG4gICAgc2NvcGVTZWxlY3RvcjogUmVhY3QuUHJvcFR5cGVzLnN0cmluZ1xuICB9LFxuXG4gIGdldERlZmF1bHRQcm9wczogZnVuY3Rpb24gZ2V0RGVmYXVsdFByb3BzKCkge1xuICAgIHJldHVybiB7XG4gICAgICBzY29wZVNlbGVjdG9yOiAnJ1xuICAgIH07XG4gIH0sXG5cbiAgX2J1aWxkU3R5bGVzOiBmdW5jdGlvbiBfYnVpbGRTdHlsZXMoc3R5bGVzKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHJldHVybiBPYmplY3Qua2V5cyhzdHlsZXMpLnJlZHVjZShmdW5jdGlvbiAoYWNjdW11bGF0b3IsIHNlbGVjdG9yKSB7XG4gICAgICB2YXIgcnVsZXMgPSBzdHlsZXNbc2VsZWN0b3JdO1xuXG4gICAgICBpZiAoc2VsZWN0b3IgPT09ICdtZWRpYVF1ZXJpZXMnKSB7XG4gICAgICAgIGFjY3VtdWxhdG9yICs9IF90aGlzLl9idWlsZE1lZGlhUXVlcnlTdHJpbmcocnVsZXMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIGNvbXBsZXRlU2VsZWN0b3IgPSAoX3RoaXMucHJvcHMuc2NvcGVTZWxlY3RvciA/IF90aGlzLnByb3BzLnNjb3BlU2VsZWN0b3IgKyAnICcgOiAnJykgKyBzZWxlY3RvcjtcbiAgICAgICAgYWNjdW11bGF0b3IgKz0gYnVpbGRDc3NTdHJpbmcoX3RoaXMsIGNvbXBsZXRlU2VsZWN0b3IsIHJ1bGVzKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGFjY3VtdWxhdG9yO1xuICAgIH0sICcnKTtcbiAgfSxcblxuICBfYnVpbGRNZWRpYVF1ZXJ5U3RyaW5nOiBmdW5jdGlvbiBfYnVpbGRNZWRpYVF1ZXJ5U3RyaW5nKG1lZGlhUXVlcnlPYmopIHtcbiAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgIHZhciBjb250ZXh0TWVkaWFRdWVyaWVzID0gdGhpcy5fZ2V0Q29udGV4dE1lZGlhUXVlcmllcygpO1xuICAgIHZhciBtZWRpYVF1ZXJ5U3RyaW5nID0gJyc7XG5cbiAgICBPYmplY3Qua2V5cyhtZWRpYVF1ZXJ5T2JqKS5mb3JFYWNoKGZ1bmN0aW9uIChxdWVyeSkge1xuICAgICAgdmFyIGNvbXBsZXRlUXVlcnkgPSBjb250ZXh0TWVkaWFRdWVyaWVzW3F1ZXJ5XSA/IGNvbnRleHRNZWRpYVF1ZXJpZXNbcXVlcnldIDogcXVlcnk7XG4gICAgICBtZWRpYVF1ZXJ5U3RyaW5nICs9ICdAbWVkaWEgJyArIGNvbXBsZXRlUXVlcnkgKyAneycgKyBfdGhpczIuX2J1aWxkU3R5bGVzKG1lZGlhUXVlcnlPYmpbcXVlcnldKSArICd9JztcbiAgICB9KTtcblxuICAgIHJldHVybiBtZWRpYVF1ZXJ5U3RyaW5nO1xuICB9LFxuXG4gIF9nZXRDb250ZXh0TWVkaWFRdWVyaWVzOiBmdW5jdGlvbiBfZ2V0Q29udGV4dE1lZGlhUXVlcmllcygpIHtcbiAgICB2YXIgY29udGV4dE1lZGlhUXVlcmllcyA9IHt9O1xuICAgIGlmICh0aGlzLmNvbnRleHQgJiYgdGhpcy5jb250ZXh0Lm1lZGlhUXVlcmllcykge1xuICAgICAgT2JqZWN0LmtleXModGhpcy5jb250ZXh0Lm1lZGlhUXVlcmllcykuZm9yRWFjaCgoZnVuY3Rpb24gKHF1ZXJ5KSB7XG4gICAgICAgIGNvbnRleHRNZWRpYVF1ZXJpZXNbcXVlcnldID0gdGhpcy5jb250ZXh0Lm1lZGlhUXVlcmllc1txdWVyeV0ubWVkaWE7XG4gICAgICB9KS5iaW5kKHRoaXMpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY29udGV4dE1lZGlhUXVlcmllcztcbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICBpZiAoIXRoaXMucHJvcHMucnVsZXMpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHZhciBzdHlsZXMgPSB0aGlzLl9idWlsZFN0eWxlcyh0aGlzLnByb3BzLnJ1bGVzKTtcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KCdzdHlsZScsIHsgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHsgX19odG1sOiBzdHlsZXMgfSB9KTtcbiAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gU3R5bGU7IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgRXhlY3V0aW9uRW52aXJvbm1lbnQgPSByZXF1aXJlKCdleGVudicpO1xuXG52YXIgX21hdGNoTWVkaWFGdW5jdGlvbiA9IEV4ZWN1dGlvbkVudmlyb25tZW50LmNhblVzZURPTSAmJiB3aW5kb3cgJiYgd2luZG93Lm1hdGNoTWVkaWEgJiYgZnVuY3Rpb24gKG1lZGlhUXVlcnlTdHJpbmcpIHtcbiAgcmV0dXJuIHdpbmRvdy5tYXRjaE1lZGlhKG1lZGlhUXVlcnlTdHJpbmcpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNhbk1hdGNoTWVkaWE6IGZ1bmN0aW9uIGNhbk1hdGNoTWVkaWEoKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBfbWF0Y2hNZWRpYUZ1bmN0aW9uID09PSAnZnVuY3Rpb24nO1xuICB9LFxuXG4gIG1hdGNoTWVkaWE6IGZ1bmN0aW9uIG1hdGNoTWVkaWEocXVlcnkpIHtcbiAgICByZXR1cm4gX21hdGNoTWVkaWFGdW5jdGlvbihxdWVyeSk7XG4gIH0sXG5cbiAgc2V0TWF0Y2hNZWRpYTogZnVuY3Rpb24gc2V0TWF0Y2hNZWRpYShuZXh0TWF0Y2hNZWRpYUZ1bmN0aW9uKSB7XG4gICAgX21hdGNoTWVkaWFGdW5jdGlvbiA9IG5leHRNYXRjaE1lZGlhRnVuY3Rpb247XG4gIH1cbn07IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgY3JlYXRlTWFya3VwRm9yU3R5bGVzID0gZnVuY3Rpb24gY3JlYXRlTWFya3VwRm9yU3R5bGVzKHN0eWxlLCBzcGFjZXMpIHtcbiAgc3BhY2VzID0gc3BhY2VzIHx8ICcnO1xuICByZXR1cm4gT2JqZWN0LmtleXMoc3R5bGUpLm1hcChmdW5jdGlvbiAocHJvcGVydHkpIHtcbiAgICByZXR1cm4gc3BhY2VzICsgcHJvcGVydHkgKyAnOiAnICsgc3R5bGVbcHJvcGVydHldICsgJzsnO1xuICB9KS5qb2luKCdcXG4nKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gY3JlYXRlTWFya3VwRm9yU3R5bGVzOyIsIid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IChmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoJ3ZhbHVlJyBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSkoKTtcblxudmFyIF9nZXQgPSBmdW5jdGlvbiBnZXQoX3gsIF94MiwgX3gzKSB7IHZhciBfYWdhaW4gPSB0cnVlOyBfZnVuY3Rpb246IHdoaWxlIChfYWdhaW4pIHsgdmFyIG9iamVjdCA9IF94LCBwcm9wZXJ0eSA9IF94MiwgcmVjZWl2ZXIgPSBfeDM7IGRlc2MgPSBwYXJlbnQgPSBnZXR0ZXIgPSB1bmRlZmluZWQ7IF9hZ2FpbiA9IGZhbHNlOyBpZiAob2JqZWN0ID09PSBudWxsKSBvYmplY3QgPSBGdW5jdGlvbi5wcm90b3R5cGU7IHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHByb3BlcnR5KTsgaWYgKGRlc2MgPT09IHVuZGVmaW5lZCkgeyB2YXIgcGFyZW50ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iamVjdCk7IGlmIChwYXJlbnQgPT09IG51bGwpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSBlbHNlIHsgX3ggPSBwYXJlbnQ7IF94MiA9IHByb3BlcnR5OyBfeDMgPSByZWNlaXZlcjsgX2FnYWluID0gdHJ1ZTsgY29udGludWUgX2Z1bmN0aW9uOyB9IH0gZWxzZSBpZiAoJ3ZhbHVlJyBpbiBkZXNjKSB7IHJldHVybiBkZXNjLnZhbHVlOyB9IGVsc2UgeyB2YXIgZ2V0dGVyID0gZGVzYy5nZXQ7IGlmIChnZXR0ZXIgPT09IHVuZGVmaW5lZCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9IHJldHVybiBnZXR0ZXIuY2FsbChyZWNlaXZlcik7IH0gfSB9O1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoJ0Nhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbicpOyB9IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gJ2Z1bmN0aW9uJyAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoJ1N1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgJyArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIHJlc29sdmVTdHlsZXMgPSByZXF1aXJlKCcuL3Jlc29sdmUtc3R5bGVzLmpzJyk7XG52YXIgcHJpbnRTdHlsZXMgPSByZXF1aXJlKCcuL3ByaW50LXN0eWxlcy5qcycpO1xuXG52YXIgZW5oYW5jZVdpdGhSYWRpdW0gPSBmdW5jdGlvbiBlbmhhbmNlV2l0aFJhZGl1bShDb21wb3NlZENvbXBvbmVudCkge1xuICB2YXIgUmFkaXVtRW5oYW5jZXIgPSAoZnVuY3Rpb24gKF9Db21wb3NlZENvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhSYWRpdW1FbmhhbmNlciwgX0NvbXBvc2VkQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIFJhZGl1bUVuaGFuY2VyKCkge1xuICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJhZGl1bUVuaGFuY2VyKTtcblxuICAgICAgX2dldChPYmplY3QuZ2V0UHJvdG90eXBlT2YoUmFkaXVtRW5oYW5jZXIucHJvdG90eXBlKSwgJ2NvbnN0cnVjdG9yJywgdGhpcykuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblxuICAgICAgdGhpcy5zdGF0ZSA9IHRoaXMuc3RhdGUgfHwge307XG4gICAgICB0aGlzLnN0YXRlLl9yYWRpdW1TdHlsZVN0YXRlID0ge307XG5cbiAgICAgIGlmIChSYWRpdW1FbmhhbmNlci5wcmludFN0eWxlQ2xhc3MpIHtcbiAgICAgICAgdGhpcy5wcmludFN0eWxlQ2xhc3MgPSBSYWRpdW1FbmhhbmNlci5wcmludFN0eWxlQ2xhc3M7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQ2xhc3MgaW5oZXJpdGFuY2UgdXNlcyBPYmplY3QuY3JlYXRlIGFuZCBiZWNhdXNlIG9mIF9fcHJvdG9fXyBpc3N1ZXNcbiAgICAvLyB3aXRoIElFIDwxMCBhbnkgc3RhdGljIHByb3BlcnRpZXMgb2YgdGhlIHN1cGVyY2xhc3MgYXJlbid0IGluaGVyaXRlZCBhbmRcbiAgICAvLyBzbyBuZWVkIHRvIGJlIG1hbnVhbGx5IHBvcHVsYXRlZFxuICAgIC8vIFNlZSBodHRwOi8vYmFiZWxqcy5pby9kb2NzL2FkdmFuY2VkL2NhdmVhdHMvI2NsYXNzZXMtMTAtYW5kLWJlbG93LVxuICAgIC8vIFRoaXMgYWxzbyBmaXhlcyBSZWFjdCBIb3QgTG9hZGVyIGJ5IGV4cG9zaW5nIHRoZSBvcmlnaW5hbCBjb21wb25lbnRzIHRvcCBsZXZlbFxuICAgIC8vIHByb3RvdHlwZSBtZXRob2RzIG9uIHRoZSBSYWRpdW0gZW5oYW5jZWQgcHJvdG90eXBlIGFzIGRpc2N1c3NlZCBpbiAjMjE5LlxuXG4gICAgX2NyZWF0ZUNsYXNzKFJhZGl1bUVuaGFuY2VyLCBbe1xuICAgICAga2V5OiAncmVuZGVyJyxcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICAgIHZhciByZW5kZXJlZEVsZW1lbnQgPSBfZ2V0KE9iamVjdC5nZXRQcm90b3R5cGVPZihSYWRpdW1FbmhhbmNlci5wcm90b3R5cGUpLCAncmVuZGVyJywgdGhpcykuY2FsbCh0aGlzKTtcbiAgICAgICAgcmV0dXJuIHJlc29sdmVTdHlsZXModGhpcywgcmVuZGVyZWRFbGVtZW50KTtcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBrZXk6ICdjb21wb25lbnRXaWxsVW5tb3VudCcsXG4gICAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICAgIGlmIChfZ2V0KE9iamVjdC5nZXRQcm90b3R5cGVPZihSYWRpdW1FbmhhbmNlci5wcm90b3R5cGUpLCAnY29tcG9uZW50V2lsbFVubW91bnQnLCB0aGlzKSkge1xuICAgICAgICAgIF9nZXQoT2JqZWN0LmdldFByb3RvdHlwZU9mKFJhZGl1bUVuaGFuY2VyLnByb3RvdHlwZSksICdjb21wb25lbnRXaWxsVW5tb3VudCcsIHRoaXMpLmNhbGwodGhpcyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5fcmFkaXVtTW91c2VVcExpc3RlbmVyKSB7XG4gICAgICAgICAgdGhpcy5fcmFkaXVtTW91c2VVcExpc3RlbmVyLnJlbW92ZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuX3JhZGl1bU1lZGlhUXVlcnlMaXN0ZW5lcnNCeVF1ZXJ5KSB7XG4gICAgICAgICAgT2JqZWN0LmtleXModGhpcy5fcmFkaXVtTWVkaWFRdWVyeUxpc3RlbmVyc0J5UXVlcnkpLmZvckVhY2goZnVuY3Rpb24gKHF1ZXJ5KSB7XG4gICAgICAgICAgICB0aGlzLl9yYWRpdW1NZWRpYVF1ZXJ5TGlzdGVuZXJzQnlRdWVyeVtxdWVyeV0ucmVtb3ZlKCk7XG4gICAgICAgICAgfSwgdGhpcyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gUmFkaXVtRW5oYW5jZXI7XG4gIH0pKENvbXBvc2VkQ29tcG9uZW50KTtcblxuICBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhDb21wb3NlZENvbXBvbmVudC5wcm90b3R5cGUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIGlmICghUmFkaXVtRW5oYW5jZXIucHJvdG90eXBlLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgIHZhciBkZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihDb21wb3NlZENvbXBvbmVudC5wcm90b3R5cGUsIGtleSk7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoUmFkaXVtRW5oYW5jZXIucHJvdG90eXBlLCBrZXksIGRlc2NyaXB0b3IpO1xuICAgIH1cbiAgfSk7XG5cbiAgUmFkaXVtRW5oYW5jZXIuZGlzcGxheU5hbWUgPSBDb21wb3NlZENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb3NlZENvbXBvbmVudC5uYW1lIHx8ICdDb21wb25lbnQnO1xuXG4gIFJhZGl1bUVuaGFuY2VyLnByaW50U3R5bGVDbGFzcyA9IHByaW50U3R5bGVzLmFkZFByaW50U3R5bGVzKFJhZGl1bUVuaGFuY2VyKTtcblxuICByZXR1cm4gUmFkaXVtRW5oYW5jZXI7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVuaGFuY2VXaXRoUmFkaXVtOyIsIid1c2Ugc3RyaWN0JztcblxudmFyIGdldFN0YXRlS2V5ID0gZnVuY3Rpb24gZ2V0U3RhdGVLZXkoZWxlbWVudEtleSkge1xuICByZXR1cm4gZWxlbWVudEtleSA9PT0gbnVsbCB8fCBlbGVtZW50S2V5ID09PSB1bmRlZmluZWQgPyAnbWFpbicgOiBlbGVtZW50S2V5LnRvU3RyaW5nKCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFN0YXRlS2V5OyIsIid1c2Ugc3RyaWN0JztcblxudmFyIGdldFN0YXRlS2V5ID0gcmVxdWlyZSgnLi9nZXQtc3RhdGUta2V5Jyk7XG5cbnZhciBWQUxJRF9LRVlTID0gWyc6YWN0aXZlJywgJzpmb2N1cycsICc6aG92ZXInXTtcblxudmFyIGdldFN0YXRlID0gZnVuY3Rpb24gZ2V0U3RhdGUoc3RhdGUsIGVsZW1lbnRLZXksIHZhbHVlKSB7XG4gIGlmIChWQUxJRF9LRVlTLmluZGV4T2YodmFsdWUpID09PSAtMSkge1xuICAgIHRocm93IG5ldyBFcnJvcignUmFkaXVtLmdldFN0YXRlIGludmFsaWQgdmFsdWUgcGFyYW06IGAnICsgdmFsdWUgKyAnYCcpO1xuICB9XG5cbiAgdmFyIGtleSA9IGdldFN0YXRlS2V5KGVsZW1lbnRLZXkpO1xuXG4gIHJldHVybiAhIShzdGF0ZSAmJiBzdGF0ZS5fcmFkaXVtU3R5bGVTdGF0ZSAmJiBzdGF0ZS5fcmFkaXVtU3R5bGVTdGF0ZVtrZXldICYmIHN0YXRlLl9yYWRpdW1TdHlsZVN0YXRlW2tleV1bdmFsdWVdKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0U3RhdGU7IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgRW5oYW5jZXIgPSByZXF1aXJlKCcuL2VuaGFuY2VyJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKENvbXBvc2VkQ29tcG9uZW50KSB7XG4gIHJldHVybiBFbmhhbmNlcihDb21wb3NlZENvbXBvbmVudCk7XG59O1xubW9kdWxlLmV4cG9ydHMuU3R5bGUgPSByZXF1aXJlKCcuL2NvbXBvbmVudHMvc3R5bGUnKTtcbm1vZHVsZS5leHBvcnRzLlByaW50U3R5bGVTaGVldCA9IHJlcXVpcmUoJy4vY29tcG9uZW50cy9wcmludC1zdHlsZS1zaGVldCcpO1xubW9kdWxlLmV4cG9ydHMuZ2V0U3RhdGUgPSByZXF1aXJlKCcuL2dldC1zdGF0ZScpO1xubW9kdWxlLmV4cG9ydHMua2V5ZnJhbWVzID0gcmVxdWlyZSgnLi9rZXlmcmFtZXMnKTtcbm1vZHVsZS5leHBvcnRzLkNvbmZpZyA9IHJlcXVpcmUoJy4vY29uZmlnJyk7IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgY3JlYXRlTWFya3VwRm9yU3R5bGVzID0gcmVxdWlyZSgnLi9jcmVhdGUtbWFya3VwLWZvci1zdHlsZXMnKTtcbnZhciBQcmVmaXhlciA9IHJlcXVpcmUoJy4vcHJlZml4ZXInKTtcblxudmFyIEV4ZWN1dGlvbkVudmlyb25tZW50ID0gcmVxdWlyZSgnZXhlbnYnKTtcblxudmFyIGlzQW5pbWF0aW9uU3VwcG9ydGVkID0gRXhlY3V0aW9uRW52aXJvbm1lbnQuY2FuVXNlRE9NICYmIFByZWZpeGVyLmdldFByZWZpeGVkUHJvcGVydHlOYW1lKCdhbmltYXRpb24nKSAhPT0gZmFsc2U7XG5cbnZhciBhbmltYXRpb25JbmRleCA9IDE7XG52YXIgYW5pbWF0aW9uU3R5bGVTaGVldCA9IG51bGw7XG52YXIga2V5ZnJhbWVzUHJlZml4ZWQgPSAna2V5ZnJhbWVzJztcblxuaWYgKGlzQW5pbWF0aW9uU3VwcG9ydGVkKSB7XG4gIGFuaW1hdGlvblN0eWxlU2hlZXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKGFuaW1hdGlvblN0eWxlU2hlZXQpO1xuXG4gIC8vIFRlc3QgaWYgcHJlZml4IG5lZWRlZCBmb3Iga2V5ZnJhbWVzIChjb3BpZWQgZnJvbSBQcmVmaXhGcmVlKVxuICBhbmltYXRpb25TdHlsZVNoZWV0LnRleHRDb250ZW50ID0gJ0BrZXlmcmFtZXMge30nO1xuICBpZiAoIWFuaW1hdGlvblN0eWxlU2hlZXQuc2hlZXQuY3NzUnVsZXMubGVuZ3RoKSB7XG4gICAga2V5ZnJhbWVzUHJlZml4ZWQgPSBQcmVmaXhlci5jc3NQcmVmaXggKyAna2V5ZnJhbWVzJztcbiAgfVxufVxuXG4vLyBTaW1wbGUgYW5pbWF0aW9uIGhlbHBlciB0aGF0IGluamVjdHMgQ1NTIGludG8gYSBzdHlsZSBvYmplY3QgY29udGFpbmluZyB0aGVcbi8vIGtleWZyYW1lcywgYW5kIHJldHVybnMgYSBzdHJpbmcgd2l0aCB0aGUgZ2VuZXJhdGVkIGFuaW1hdGlvbiBuYW1lLlxudmFyIGtleWZyYW1lcyA9IGZ1bmN0aW9uIGtleWZyYW1lcyhrZXlmcmFtZVJ1bGVzLCBjb21wb25lbnQpIHtcbiAgdmFyIG5hbWUgPSAnQW5pbWF0aW9uJyArIGFuaW1hdGlvbkluZGV4O1xuICBhbmltYXRpb25JbmRleCArPSAxO1xuXG4gIGlmICghaXNBbmltYXRpb25TdXBwb3J0ZWQpIHtcbiAgICByZXR1cm4gbmFtZTtcbiAgfVxuXG4gIHZhciBydWxlID0gJ0AnICsga2V5ZnJhbWVzUHJlZml4ZWQgKyAnICcgKyBuYW1lICsgJyB7XFxuJyArIE9iamVjdC5rZXlzKGtleWZyYW1lUnVsZXMpLm1hcChmdW5jdGlvbiAocGVyY2VudGFnZSkge1xuICAgIHZhciBwcm9wcyA9IGtleWZyYW1lUnVsZXNbcGVyY2VudGFnZV07XG4gICAgdmFyIHByZWZpeGVkUHJvcHMgPSBQcmVmaXhlci5nZXRQcmVmaXhlZFN0eWxlKGNvbXBvbmVudCwgcHJvcHMsICdjc3MnKTtcbiAgICB2YXIgc2VyaWFsaXplZFByb3BzID0gY3JlYXRlTWFya3VwRm9yU3R5bGVzKHByZWZpeGVkUHJvcHMsICcgICcpO1xuICAgIHJldHVybiAnICAnICsgcGVyY2VudGFnZSArICcge1xcbiAgJyArIHNlcmlhbGl6ZWRQcm9wcyArICdcXG4gIH0nO1xuICB9KS5qb2luKCdcXG4nKSArICdcXG59XFxuJztcblxuICAvLyBmb3IgZmxvd1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICBpZiAoIWFuaW1hdGlvblN0eWxlU2hlZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2tleWZyYW1lcyBub3QgaW5pdGlhbGl6ZWQgcHJvcGVybHknKTtcbiAgfVxuXG4gIGFuaW1hdGlvblN0eWxlU2hlZXQuc2hlZXQuaW5zZXJ0UnVsZShydWxlLCBhbmltYXRpb25TdHlsZVNoZWV0LnNoZWV0LmNzc1J1bGVzLmxlbmd0aCk7XG4gIHJldHVybiBuYW1lO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBrZXlmcmFtZXM7IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NhbGxiYWNrcyA9IFtdO1xudmFyIF9tb3VzZVVwTGlzdGVuZXJJc0FjdGl2ZSA9IGZhbHNlO1xuXG52YXIgX2hhbmRsZU1vdXNlVXAgPSBmdW5jdGlvbiBfaGFuZGxlTW91c2VVcChldikge1xuICBfY2FsbGJhY2tzLmZvckVhY2goZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgY2FsbGJhY2soZXYpO1xuICB9KTtcbn07XG5cbnZhciBzdWJzY3JpYmUgPSBmdW5jdGlvbiBzdWJzY3JpYmUoY2FsbGJhY2spIHtcbiAgaWYgKF9jYWxsYmFja3MuaW5kZXhPZihjYWxsYmFjaykgPT09IC0xKSB7XG4gICAgX2NhbGxiYWNrcy5wdXNoKGNhbGxiYWNrKTtcbiAgfVxuXG4gIGlmICghX21vdXNlVXBMaXN0ZW5lcklzQWN0aXZlKSB7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBfaGFuZGxlTW91c2VVcCk7XG4gICAgX21vdXNlVXBMaXN0ZW5lcklzQWN0aXZlID0gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICB2YXIgaW5kZXggPSBfY2FsbGJhY2tzLmluZGV4T2YoY2FsbGJhY2spO1xuICAgICAgX2NhbGxiYWNrcy5zcGxpY2UoaW5kZXgsIDEpO1xuXG4gICAgICBpZiAoX2NhbGxiYWNrcy5sZW5ndGggPT09IDAgJiYgX21vdXNlVXBMaXN0ZW5lcklzQWN0aXZlKSB7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgX2hhbmRsZU1vdXNlVXApO1xuICAgICAgICBfbW91c2VVcExpc3RlbmVySXNBY3RpdmUgPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc3Vic2NyaWJlOiBzdWJzY3JpYmVcbn07IiwiLyoqXG4gKiBCYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20vanNzdHlsZXMvY3NzLXZlbmRvciwgYnV0IHdpdGhvdXQgaGF2aW5nIHRvXG4gKiBjb252ZXJ0IGJldHdlZW4gZGlmZmVyZW50IGNhc2VzIGFsbCB0aGUgdGltZS5cbiAqXG4gKiBcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBFeGVjdXRpb25FbnZpcm9ubWVudCA9IHJlcXVpcmUoJ2V4ZW52Jyk7XG52YXIgYXJyYXlGaW5kID0gcmVxdWlyZSgnYXJyYXktZmluZCcpO1xuXG52YXIgVkVORE9SX1BSRUZJWF9SRUdFWCA9IC8tKG1venx3ZWJraXR8bXN8byktLztcblxudmFyIHZlbmRvclByZWZpeGVzID0gWydXZWJraXQnLCAnbXMnLCAnTW96JywgJ08nXTtcblxudmFyIGluZm9CeUNzc1ByZWZpeCA9IHtcbiAgJy1tb3otJzoge1xuICAgIGNzc1ByZWZpeDogJy1tb3otJyxcbiAgICBqc1ByZWZpeDogJ01veicsXG4gICAgYWx0ZXJuYXRpdmVQcm9wZXJ0aWVzOiB7XG4gICAgICAvLyBPTEQgLSBGaXJlZm94IDE5LVxuICAgICAgYWxpZ25JdGVtczogW3sgY3NzOiAnLW1vei1ib3gtYWxpZ24nLCBqczogJ01vekJveEFsaWduJyB9XSxcbiAgICAgIGZsZXg6IFt7IGNzczogJy1tb3otYm94LWZsZXgnLCBqczogJ01vekJveEZsZXgnIH1dLFxuICAgICAgZmxleERpcmVjdGlvbjogW3sgY3NzOiAnLW1vei1ib3gtb3JpZW50JywganM6ICdNb3pCb3hPcmllbnQnIH1dLFxuICAgICAganVzdGlmeUNvbnRlbnQ6IFt7IGNzczogJy1tb3otYm94LXBhY2snLCBqczogJ01vekJveFBhY2snIH1dLFxuICAgICAgb3JkZXI6IFt7IGNzczogJy1tb3otYm94LW9yZGluYWwtZ3JvdXAnLCBqczogJ01vekJveE9yZGluYWxHcm91cCcgfV1cbiAgICB9LFxuICAgIGFsdGVybmF0aXZlVmFsdWVzOiB7XG4gICAgICAvLyBPTEQgLSBGaXJlZm94IDE5LVxuICAgICAgYWxpZ25JdGVtczoge1xuICAgICAgICAnZmxleC1zdGFydCc6IFsnc3RhcnQnXSxcbiAgICAgICAgJ2ZsZXgtZW5kJzogWydlbmQnXVxuICAgICAgfSxcbiAgICAgIGRpc3BsYXk6IHtcbiAgICAgICAgZmxleDogWyctbW96LWJveCddXG4gICAgICB9LFxuICAgICAgZmxleERpcmVjdGlvbjoge1xuICAgICAgICBjb2x1bW46IFsndmVydGljYWwnXSxcbiAgICAgICAgcm93OiBbJ2hvcml6b250YWwnXVxuICAgICAgfSxcbiAgICAgIGp1c3RpZnlDb250ZW50OiB7XG4gICAgICAgICdmbGV4LXN0YXJ0JzogWydzdGFydCddLFxuICAgICAgICAnZmxleC1lbmQnOiBbJ2VuZCddLFxuICAgICAgICAnc3BhY2UtYmV0d2Vlbic6IFsnanVzdGlmeSddXG4gICAgICB9XG4gICAgfVxuICB9LFxuICAnLW1zLSc6IHtcbiAgICBjc3NQcmVmaXg6ICctbXMtJyxcbiAgICBqc1ByZWZpeDogJ21zJyxcbiAgICBhbHRlcm5hdGl2ZVByb3BlcnRpZXM6IHtcbiAgICAgIC8vIFRXRUVORVIgLSBJRSAxMFxuICAgICAgYWxpZ25Db250ZW50OiBbeyBjc3M6ICctbXMtZmxleC1saW5lLXBhY2snLCBqczogJ21zRmxleExpbmVQYWNrJyB9XSxcbiAgICAgIGFsaWduSXRlbXM6IFt7IGNzczogJy1tcy1mbGV4LWFsaWduJywganM6ICdtc0ZsZXhBbGlnbicgfV0sXG4gICAgICBhbGlnblNlbGY6IFt7IGNzczogJy1tcy1mbGV4LWFsaWduLWl0ZW0nLCBqczogJ21zRmxleEFsaWduSXRlbScgfV0sXG4gICAgICBqdXN0aWZ5Q29udGVudDogW3sgY3NzOiAnLW1zLWZsZXgtcGFjaycsIGpzOiAnbXNGbGV4UGFjaycgfV0sXG4gICAgICBvcmRlcjogW3sgY3NzOiAnLW1zLWZsZXgtb3JkZXInLCBqczogJ21zRmxleE9yZGVyJyB9XVxuICAgIH0sXG4gICAgYWx0ZXJuYXRpdmVWYWx1ZXM6IHtcbiAgICAgIC8vIFRXRUVORVIgLSBJRSAxMFxuICAgICAgYWxpZ25Db250ZW50OiB7XG4gICAgICAgICdmbGV4LXN0YXJ0JzogWydzdGFydCddLFxuICAgICAgICAnZmxleC1lbmQnOiBbJ2VuZCddLFxuICAgICAgICAnc3BhY2UtYmV0d2Vlbic6IFsnanVzdGlmeSddLFxuICAgICAgICAnc3BhY2UtYXJvdW5kJzogWydkaXN0cmlidXRlJ11cbiAgICAgIH0sXG4gICAgICBhbGlnbkl0ZW1zOiB7XG4gICAgICAgICdmbGV4LXN0YXJ0JzogWydzdGFydCddLFxuICAgICAgICAnZmxleC1lbmQnOiBbJ2VuZCddXG4gICAgICB9LFxuICAgICAgYWxpZ25TZWxmOiB7XG4gICAgICAgICdmbGV4LXN0YXJ0JzogWydzdGFydCddLFxuICAgICAgICAnZmxleC1lbmQnOiBbJ2VuZCddXG4gICAgICB9LFxuICAgICAgZGlzcGxheToge1xuICAgICAgICBmbGV4OiBbJy1tcy1mbGV4Ym94J10sXG4gICAgICAgICdpbmxpbmUtZmxleCc6IFsnLW1zLWlubGluZS1mbGV4Ym94J11cbiAgICAgIH0sXG4gICAgICBqdXN0aWZ5Q29udGVudDoge1xuICAgICAgICAnZmxleC1zdGFydCc6IFsnc3RhcnQnXSxcbiAgICAgICAgJ2ZsZXgtZW5kJzogWydlbmQnXSxcbiAgICAgICAgJ3NwYWNlLWJldHdlZW4nOiBbJ2p1c3RpZnknXSxcbiAgICAgICAgJ3NwYWNlLWFyb3VuZCc6IFsnZGlzdHJpYnV0ZSddXG4gICAgICB9XG4gICAgfVxuICB9LFxuICAnLW8tJzoge1xuICAgIGNzc1ByZWZpeDogJy1vLScsXG4gICAganNQcmVmaXg6ICdPJ1xuICB9LFxuICAnLXdlYmtpdC0nOiB7XG4gICAgY3NzUHJlZml4OiAnLXdlYmtpdC0nLFxuICAgIGpzUHJlZml4OiAnV2Via2l0JyxcbiAgICBhbHRlcm5hdGl2ZVByb3BlcnRpZXM6IHtcbiAgICAgIC8vIE9MRCAtIGlPUyA2LSwgU2FmYXJpIDMuMS02XG4gICAgICBhbGlnbkl0ZW1zOiBbeyBjc3M6ICctd2Via2l0LWJveC1hbGlnbicsIGpzOiAnV2Via2l0Qm94QWxpZ24nIH1dLFxuICAgICAgZmxleDogW3sgY3NzOiAnLXdlYmtpdC1ib3gtZmxleCcsIGpzOiAnTW96Qm94RmxleCcgfV0sXG4gICAgICBmbGV4RGlyZWN0aW9uOiBbeyBjc3M6ICctd2Via2l0LWJveC1vcmllbnQnLCBqczogJ1dlYmtpdEJveE9yaWVudCcgfV0sXG4gICAgICBqdXN0aWZ5Q29udGVudDogW3sgY3NzOiAnLXdlYmtpdC1ib3gtcGFjaycsIGpzOiAnV2Via2l0Qm94UGFjaycgfV0sXG4gICAgICBvcmRlcjogW3sgY3NzOiAnLXdlYmtpdC1ib3gtb3JkaW5hbC1ncm91cCcsIGpzOiAnV2Via2l0Qm94T3JkaW5hbEdyb3VwJyB9XVxuICAgIH0sXG4gICAgYWx0ZXJuYXRpdmVWYWx1ZXM6IHtcbiAgICAgIC8vIE9MRCAtIGlPUyA2LSwgU2FmYXJpIDMuMS02XG4gICAgICBhbGlnbkl0ZW1zOiB7XG4gICAgICAgICdmbGV4LXN0YXJ0JzogWydzdGFydCddLFxuICAgICAgICAnZmxleC1lbmQnOiBbJ2VuZCddXG4gICAgICB9LFxuICAgICAgZGlzcGxheToge1xuICAgICAgICBmbGV4OiBbJy13ZWJraXQtYm94J11cbiAgICAgIH0sXG4gICAgICBmbGV4RGlyZWN0aW9uOiB7XG4gICAgICAgIHJvdzogWydob3Jpem9udGFsJ10sXG4gICAgICAgIGNvbHVtbjogWyd2ZXJ0aWNhbCddXG4gICAgICB9LFxuICAgICAganVzdGlmeUNvbnRlbnQ6IHtcbiAgICAgICAgJ2ZsZXgtc3RhcnQnOiBbJ3N0YXJ0J10sXG4gICAgICAgICdmbGV4LWVuZCc6IFsnZW5kJ10sXG4gICAgICAgICdzcGFjZS1iZXR3ZWVuJzogWydqdXN0aWZ5J11cbiAgICAgIH1cbiAgICB9XG4gIH1cbn07XG5cbi8qKlxuICogQ1NTIHByb3BlcnRpZXMgd2hpY2ggYWNjZXB0IG51bWJlcnMgYnV0IGFyZSBub3QgaW4gdW5pdHMgb2YgXCJweFwiLlxuICogQ29waWVkIGZyb20gUmVhY3QgY29yZSBKdW5lIDIyLCAyMDE1LlxuICogaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2Jsb2IvXG4gKiBiYTgxYjYwYWQ4ZTkzYjc0N2JlNDJhMDNiNzk3MDY1OTMyYzQ5Yzk2L1xuICogc3JjL3JlbmRlcmVycy9kb20vc2hhcmVkL0NTU1Byb3BlcnR5LmpzXG4gKi9cbnZhciBpc1VuaXRsZXNzTnVtYmVyID0ge1xuICBib3hGbGV4OiB0cnVlLFxuICBib3hGbGV4R3JvdXA6IHRydWUsXG4gIGNvbHVtbkNvdW50OiB0cnVlLFxuICBmbGV4OiB0cnVlLFxuICBmbGV4R3JvdzogdHJ1ZSxcbiAgZmxleFBvc2l0aXZlOiB0cnVlLFxuICBmbGV4U2hyaW5rOiB0cnVlLFxuICBmbGV4TmVnYXRpdmU6IHRydWUsXG4gIGZvbnRXZWlnaHQ6IHRydWUsXG4gIGxpbmVDbGFtcDogdHJ1ZSxcbiAgbGluZUhlaWdodDogdHJ1ZSxcbiAgb3BhY2l0eTogdHJ1ZSxcbiAgb3JkZXI6IHRydWUsXG4gIG9ycGhhbnM6IHRydWUsXG4gIHRhYlNpemU6IHRydWUsXG4gIHdpZG93czogdHJ1ZSxcbiAgekluZGV4OiB0cnVlLFxuICB6b29tOiB0cnVlLFxuXG4gIC8vIFNWRy1yZWxhdGVkIHByb3BlcnRpZXNcbiAgZmlsbE9wYWNpdHk6IHRydWUsXG4gIHN0cm9rZURhc2hvZmZzZXQ6IHRydWUsXG4gIHN0cm9rZU9wYWNpdHk6IHRydWUsXG4gIHN0cm9rZVdpZHRoOiB0cnVlXG59O1xuXG52YXIgZG9tU3R5bGUgPSB7fTtcbnZhciBwcmVmaXhlZFByb3BlcnR5Q2FjaGUgPSB7fTtcbnZhciBwcmVmaXhlZFZhbHVlQ2FjaGUgPSB7fTtcbnZhciBwcmVmaXhJbmZvID0ge1xuICBjc3NQcmVmaXg6ICcnLFxuICBqc1ByZWZpeDogJydcbn07XG5cbmlmIChFeGVjdXRpb25FbnZpcm9ubWVudC5jYW5Vc2VET00pIHtcbiAgZG9tU3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJykuc3R5bGU7XG5cbiAgLy8gb2xkZXIgRmlyZWZveCB2ZXJzaW9ucyBtYXkgaGF2ZSBubyBmbG9hdCBwcm9wZXJ0eSBpbiBzdHlsZSBvYmplY3RcbiAgLy8gc28gd2UgbmVlZCB0byBhZGQgaXQgbWFudWFsbHlcbiAgaWYgKGRvbVN0eWxlLmZsb2F0ID09PSB1bmRlZmluZWQpIHtcbiAgICBkb21TdHlsZS5mbG9hdCA9ICcnO1xuICB9XG5cbiAgLy8gQmFzZWQgb24gaHR0cDovL2Rhdmlkd2Fsc2gubmFtZS92ZW5kb3ItcHJlZml4XG4gIHZhciBwcmVmaXhNYXRjaDtcbiAgdmFyIHdpbmRvd1N0eWxlcyA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwgJycpO1xuXG4gIC8vIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHdpbmRvd1N0eWxlcykgZmFpbHMgd2l0aFxuICAvLyBcIlVuY2F1Z2h0IFR5cGVFcnJvcjogdW5kZWZpbmVkIGlzIG5vdCBhIGZ1bmN0aW9uXCJcbiAgLy8gaW4gb2xkZXIgdmVyc2lvbnMgQW5kcm9pZCAoS2l0S2F0KSB3ZWIgdmlld3NcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB3aW5kb3dTdHlsZXMubGVuZ3RoOyBpKyspIHtcbiAgICBwcmVmaXhNYXRjaCA9IHdpbmRvd1N0eWxlc1tpXS5tYXRjaChWRU5ET1JfUFJFRklYX1JFR0VYKTtcblxuICAgIGlmIChwcmVmaXhNYXRjaCkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgdmFyIGNzc1ZlbmRvclByZWZpeCA9IHByZWZpeE1hdGNoICYmIHByZWZpeE1hdGNoWzBdO1xuXG4gIHByZWZpeEluZm8gPSBjc3NWZW5kb3JQcmVmaXggJiYgaW5mb0J5Q3NzUHJlZml4W2Nzc1ZlbmRvclByZWZpeF0gPyBpbmZvQnlDc3NQcmVmaXhbY3NzVmVuZG9yUHJlZml4XSA6IHByZWZpeEluZm87XG59XG5cbnZhciBfY2FtZWxDYXNlUmVnZXggPSAvKFthLXpdKT8oW0EtWl0pL2c7XG52YXIgX2NhbWVsQ2FzZVJlcGxhY2VyID0gZnVuY3Rpb24gX2NhbWVsQ2FzZVJlcGxhY2VyKG1hdGNoLCBwMSwgcDIpIHtcbiAgcmV0dXJuIHAxICsgJy0nICsgcDIudG9Mb3dlckNhc2UoKTtcbn07XG52YXIgX2NhbWVsQ2FzZVRvRGFzaENhc2UgPSBmdW5jdGlvbiBfY2FtZWxDYXNlVG9EYXNoQ2FzZShzKSB7XG4gIHJldHVybiBzLnJlcGxhY2UoX2NhbWVsQ2FzZVJlZ2V4LCBfY2FtZWxDYXNlUmVwbGFjZXIpO1xufTtcblxudmFyIGdldFByZWZpeGVkUHJvcGVydHlOYW1lID0gZnVuY3Rpb24gZ2V0UHJlZml4ZWRQcm9wZXJ0eU5hbWUocHJvcGVydHkpIHtcbiAgaWYgKHByZWZpeGVkUHJvcGVydHlDYWNoZS5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZWRQcm9wZXJ0eUNhY2hlW3Byb3BlcnR5XTtcbiAgfVxuXG4gIHZhciB1bnByZWZpeGVkID0ge1xuICAgIGNzczogX2NhbWVsQ2FzZVRvRGFzaENhc2UocHJvcGVydHkpLFxuICAgIGpzOiBwcm9wZXJ0eSxcbiAgICBpc0RlZmF1bHRGb3JTZXJ2ZXI6IHRydWVcbiAgfTtcblxuICAvLyBUcnkgdGhlIHByZWZpeGVkIHZlcnNpb24gZmlyc3QuIENocm9tZSBpbiBwYXJ0aWN1bGFyIGhhcyB0aGUgYGZpbHRlcmAgYW5kXG4gIC8vIGB3ZWJraXRGaWx0ZXJgIHByb3BlcnRpZXMgYXZhaWxhbGJlIG9uIHRoZSBzdHlsZSBvYmplY3QsIGJ1dCBvbmx5IHRoZVxuICAvLyBwcmVmaXhlZCB2ZXJzaW9uIGFjdHVhbGx5IHdvcmtzLlxuICB2YXIgcG9zc2libGVQcm9wZXJ0eU5hbWVzID0gW1xuICAvLyBQcmVmaXhlZFxuICB7XG4gICAgY3NzOiBwcmVmaXhJbmZvLmNzc1ByZWZpeCArIF9jYW1lbENhc2VUb0Rhc2hDYXNlKHByb3BlcnR5KSxcbiAgICBqczogcHJlZml4SW5mby5qc1ByZWZpeCArIHByb3BlcnR5WzBdLnRvVXBwZXJDYXNlKCkgKyBwcm9wZXJ0eS5zbGljZSgxKVxuICB9LCB1bnByZWZpeGVkXTtcblxuICAvLyBBbHRlcm5hdGl2ZSBwcm9wZXJ0eSBuYW1lc1xuICBpZiAocHJlZml4SW5mby5hbHRlcm5hdGl2ZVByb3BlcnRpZXMgJiYgcHJlZml4SW5mby5hbHRlcm5hdGl2ZVByb3BlcnRpZXNbcHJvcGVydHldKSB7XG4gICAgcG9zc2libGVQcm9wZXJ0eU5hbWVzID0gcG9zc2libGVQcm9wZXJ0eU5hbWVzLmNvbmNhdChwcmVmaXhJbmZvLmFsdGVybmF0aXZlUHJvcGVydGllc1twcm9wZXJ0eV0pO1xuICB9XG5cbiAgdmFyIHdvcmtpbmdQcm9wZXJ0eSA9IGFycmF5RmluZChwb3NzaWJsZVByb3BlcnR5TmFtZXMsIGZ1bmN0aW9uIChwb3NzaWJsZVByb3BlcnR5TmFtZSkge1xuICAgIGlmIChwb3NzaWJsZVByb3BlcnR5TmFtZS5qcyBpbiBkb21TdHlsZSkge1xuICAgICAgcmV0dXJuIHBvc3NpYmxlUHJvcGVydHlOYW1lO1xuICAgIH1cbiAgfSkgfHwgZmFsc2U7XG5cbiAgcmV0dXJuIHByZWZpeGVkUHJvcGVydHlDYWNoZVtwcm9wZXJ0eV0gPSB3b3JraW5nUHJvcGVydHk7XG59O1xuXG4vLyBXZSBhcmUgdW4tcHJlZml4aW5nIHZhbHVlcyBiZWZvcmUgY2hlY2tpbmcgZm9yIGlzVW5pdGxlc3NOdW1iZXIsXG4vLyBvdGhlcndpc2Ugd2UgYXJlIGF0IHJpc2sgb2YgYmVpbmcgaW4gYSBzaXR1YXRpb24gd2hlcmUgc29tZW9uZVxuLy8gZXhwbGljaXRseSBwYXNzZXMgc29tZXRoaW5nIGxpa2UgYE1vekJveEZsZXg6IDFgIGFuZCB0aGF0IHdpbGxcbi8vIGluIHR1cm4gZ2V0IHRyYW5zZm9ybWVkIGludG8gYE1vekJveEZsZXg6IDFweGAuXG52YXIgX2dldFVucHJlZml4ZWRQcm9wZXJ0eSA9IGZ1bmN0aW9uIF9nZXRVbnByZWZpeGVkUHJvcGVydHkocHJvcGVydHkpIHtcbiAgdmFyIG5vUHJlZml4UHJvcGVydHkgPSBwcm9wZXJ0eTtcblxuICB2ZW5kb3JQcmVmaXhlcy5zb21lKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAvLyBMZXQncyBjaGVjayBpZiB0aGUgcHJvcGVydHkgc3RhcnRzIHdpdGggYSB2ZW5kb3IgcHJlZml4XG4gICAgaWYgKHByb3BlcnR5LmluZGV4T2YocHJlZml4KSA9PT0gMCkge1xuICAgICAgbm9QcmVmaXhQcm9wZXJ0eSA9IG5vUHJlZml4UHJvcGVydHkucmVwbGFjZShwcmVmaXgsICcnKTtcblxuICAgICAgLy8gV2UgaGF2ZSByZW1vdmVkIHRoZSB2ZW5kb3IgcHJlZml4LCBob3dldmVyIHRoZSBmaXJzdFxuICAgICAgLy8gY2hhcmFjdGVyIGlzIGdvaW5nIHRvIGJlIHVwcGVyY2FzZSBoZW5jZSB3b24ndCBtYXRjaFxuICAgICAgLy8gYW55IG9mIHRoZSBgaXNVbml0bGVzc051bWJlcmAga2V5cyBhcyB0aGV5IGFsbCBzdGFydFxuICAgICAgLy8gd2l0aCBsb3dlciBjYXNlLiBMZXQncyBlbnN1cmUgdGhhdCB0aGUgZmlyc3QgY2hhciBpc1xuICAgICAgLy8gbG93ZXIgY2FzZS5cbiAgICAgIG5vUHJlZml4UHJvcGVydHkgPSBub1ByZWZpeFByb3BlcnR5LmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpICsgbm9QcmVmaXhQcm9wZXJ0eS5zbGljZSgxKTtcblxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gbm9QcmVmaXhQcm9wZXJ0eTtcbn07XG5cbi8vIFJlYWN0IGlzIHBsYW5uaW5nIHRvIGRlcHJlY2F0ZSBhZGRpbmcgcHggYXV0b21hdGljYWxseVxuLy8gKGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWFjdC9pc3N1ZXMvMTg3MyksIGFuZCBpZiB0aGV5IGRvLCB0aGlzXG4vLyBzaG91bGQgY2hhbmdlIHRvIGEgd2FybmluZyBvciBiZSByZW1vdmVkIGluIGZhdm9yIG9mIFJlYWN0J3Mgd2FybmluZy5cbi8vIFNhbWUgZ29lcyBmb3IgYmVsb3cuXG52YXIgX2FkZFBpeGVsU3VmZml4VG9WYWx1ZUlmTmVlZGVkID0gZnVuY3Rpb24gX2FkZFBpeGVsU3VmZml4VG9WYWx1ZUlmTmVlZGVkKG9yaWdpbmFsUHJvcGVydHksIHZhbHVlKSB7XG4gIHZhciB1blByZWZpeGVkUHJvcGVydHkgPSBfZ2V0VW5wcmVmaXhlZFByb3BlcnR5KG9yaWdpbmFsUHJvcGVydHkpO1xuXG4gIGlmICh2YWx1ZSAhPT0gMCAmJiAhaXNOYU4odmFsdWUpICYmICFpc1VuaXRsZXNzTnVtYmVyW3VuUHJlZml4ZWRQcm9wZXJ0eV0pIHtcbiAgICByZXR1cm4gdmFsdWUgKyAncHgnO1xuICB9XG4gIHJldHVybiB2YWx1ZTtcbn07XG5cbnZhciBfZ2V0UHJlZml4ZWRWYWx1ZSA9IGZ1bmN0aW9uIF9nZXRQcmVmaXhlZFZhbHVlKGNvbXBvbmVudCwgcHJvcGVydHksIHZhbHVlLCBvcmlnaW5hbFByb3BlcnR5KSB7XG4gIGlmICghQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAvLyBkb24ndCB0ZXN0IG51bWJlcnMgKHB1cmUgb3Igc3RyaW5neSksIGJ1dCBkbyBhZGQgJ3B4JyBwcmVmaXggaWYgbmVlZGVkXG4gICAgaWYgKCFpc05hTih2YWx1ZSkgJiYgdmFsdWUgIT09IG51bGwpIHtcbiAgICAgIHJldHVybiBfYWRkUGl4ZWxTdWZmaXhUb1ZhbHVlSWZOZWVkZWQob3JpZ2luYWxQcm9wZXJ0eSwgdmFsdWUpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnKSB7XG4gICAgICBpZiAodmFsdWUgIT09IG51bGwgJiYgdmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICB2YWx1ZSA9IHZhbHVlLnRvU3RyaW5nKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gZG9uJ3QgdGVzdCBudW1iZXJzIHdpdGggdW5pdHMgKGUuZy4gMTBlbSlcbiAgICBpZiAoIWlzTmFOKHBhcnNlSW50KHZhbHVlLCAxMCkpKSB7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICB9XG5cbiAgdmFyIGNhY2hlS2V5ID0gQXJyYXkuaXNBcnJheSh2YWx1ZSkgPyB2YWx1ZS5qb2luKCcgfHwgJykgOiBwcm9wZXJ0eSArIHZhbHVlO1xuXG4gIGlmIChwcmVmaXhlZFZhbHVlQ2FjaGUuaGFzT3duUHJvcGVydHkoY2FjaGVLZXkpKSB7XG4gICAgcmV0dXJuIHByZWZpeGVkVmFsdWVDYWNoZVtjYWNoZUtleV07XG4gIH1cblxuICB2YXIgcG9zc2libGVWYWx1ZXM7XG4gIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgIC8vIEFkZCBweCBmb3IgdGhlIHNhbWUgdmFsdWVzIFJlYWN0IHdvdWxkLCBvdGhlcndpc2UgdGhlIHRlc3RpbmcgYmVsb3cgd2lsbFxuICAgIC8vIGZhaWwgYW5kIGl0IHdpbGwgdHJ5IHRvIGZhbGxiYWNrLlxuICAgIHBvc3NpYmxlVmFsdWVzID0gdmFsdWUubWFwKGZ1bmN0aW9uICh2KSB7XG4gICAgICByZXR1cm4gX2FkZFBpeGVsU3VmZml4VG9WYWx1ZUlmTmVlZGVkKG9yaWdpbmFsUHJvcGVydHksIHYpO1xuICAgIH0pO1xuXG4gICAgLy8gQWRkIHByZWZpeGVkIHZlcnNpb25zXG4gICAgcG9zc2libGVWYWx1ZXMgPSBwb3NzaWJsZVZhbHVlcy5jb25jYXQodmFsdWUuZmlsdGVyKGZ1bmN0aW9uICh2KSB7XG4gICAgICByZXR1cm4gIWlzTmFOKHYpO1xuICAgIH0pIC8vIERvbid0IHByZWZpeCBudW1iZXJzXG4gICAgLm1hcChmdW5jdGlvbiAodikge1xuICAgICAgcmV0dXJuIHByZWZpeEluZm8uY3NzUHJlZml4ICsgdjtcbiAgICB9KSk7XG4gIH0gZWxzZSB7XG4gICAgcG9zc2libGVWYWx1ZXMgPSBbXG4gICAgLy8gVW5wcmVmaXhlZFxuICAgIHZhbHVlLFxuICAgIC8vIFByZWZpeGVkXG4gICAgcHJlZml4SW5mby5jc3NQcmVmaXggKyB2YWx1ZV07XG4gIH1cblxuICAvLyBBbHRlcm5hdGl2ZSB2YWx1ZXNcbiAgaWYgKHByZWZpeEluZm8uYWx0ZXJuYXRpdmVWYWx1ZXMgJiYgcHJlZml4SW5mby5hbHRlcm5hdGl2ZVZhbHVlc1tvcmlnaW5hbFByb3BlcnR5XSAmJiBwcmVmaXhJbmZvLmFsdGVybmF0aXZlVmFsdWVzW29yaWdpbmFsUHJvcGVydHldW3ZhbHVlXSkge1xuICAgIHBvc3NpYmxlVmFsdWVzID0gcG9zc2libGVWYWx1ZXMuY29uY2F0KHByZWZpeEluZm8uYWx0ZXJuYXRpdmVWYWx1ZXNbb3JpZ2luYWxQcm9wZXJ0eV1bdmFsdWVdKTtcbiAgfVxuXG4gIC8vIFRlc3QgcG9zc2libGUgdmFsdWUgaW4gb3JkZXJcbiAgdmFyIHdvcmtpbmdWYWx1ZSA9IGFycmF5RmluZChwb3NzaWJsZVZhbHVlcywgZnVuY3Rpb24gKHBvc3NpYmxlVmFsdWUpIHtcbiAgICBkb21TdHlsZVtwcm9wZXJ0eV0gPSAnJztcbiAgICBkb21TdHlsZVtwcm9wZXJ0eV0gPSBwb3NzaWJsZVZhbHVlO1xuXG4gICAgLy8gTm90ZSB0aGF0IHdlIGp1c3QgbWFrZSBzdXJlIGl0IGlzIG5vdCBhbiBlbXB0eSBzdHJpbmcuIEJyb3dzZXJzIHdpbGxcbiAgICAvLyBzb21ldGltZXMgcmV3cml0ZSB2YWx1ZXMsIGJ1dCBzdGlsbCBhY2NlcHQgdGhlbS4gVGhleSB3aWxsIHNldCB0aGUgdmFsdWVcbiAgICAvLyB0byBhbiBlbXB0eSBzdHJpbmcgaWYgbm90IHN1cHBvcnRlZC5cbiAgICAvLyBFLmcuIGZvciBib3JkZXIsIFwic29saWQgMXB4IGJsYWNrXCIgYmVjb21lcyBcIjFweCBzb2xpZCBibGFja1wiXG4gICAgLy8gICAgICBidXQgXCJmb29iYXJcIiBiZWNvbWVzIFwiXCIsIHNpbmNlIGl0IGlzIG5vdCBzdXBwb3J0ZWQuXG4gICAgcmV0dXJuICEhZG9tU3R5bGVbcHJvcGVydHldO1xuICB9KTtcblxuICBpZiAod29ya2luZ1ZhbHVlKSB7XG4gICAgcHJlZml4ZWRWYWx1ZUNhY2hlW2NhY2hlS2V5XSA9IHdvcmtpbmdWYWx1ZTtcbiAgfSBlbHNlIHtcbiAgICAvLyBVbnN1cHBvcnRlZCwgYXNzdW1lIHVucHJlZml4ZWQgd29ya3MsIGJ1dCB3YXJuXG4gICAgcHJlZml4ZWRWYWx1ZUNhY2hlW2NhY2hlS2V5XSA9IHZhbHVlO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbiAgICAgIGlmIChjb25zb2xlICYmIGNvbnNvbGUud2Fybikge1xuICAgICAgICB2YXIgY29tcG9uZW50Q29udGV4dCA9IGNvbXBvbmVudCA/ICcgaW4gY29tcG9uZW50IFwiJyArIGNvbXBvbmVudC5jb25zdHJ1Y3Rvci5kaXNwbGF5TmFtZSArICdcIicgOiAnJztcblxuICAgICAgICBjb25zb2xlLndhcm4oJ1Vuc3VwcG9ydGVkIENTUyB2YWx1ZSBcIicgKyB2YWx1ZSArICdcIiBmb3IgcHJvcGVydHkgXCInICsgcHJvcGVydHkgKyAnJFwiJyArIGNvbXBvbmVudENvbnRleHQpO1xuICAgICAgfVxuICAgICAgLyogZXNsaW50LWVuYWJsZSBuby1jb25zb2xlICovXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHByZWZpeGVkVmFsdWVDYWNoZVtjYWNoZUtleV07XG59O1xuXG4vLyBSZXR1cm5zIGEgbmV3IHN0eWxlIG9iamVjdCB3aXRoIHZlbmRvciBwcmVmaXhlcyBhZGRlZCB0byBwcm9wZXJ0eSBuYW1lc1xuLy8gYW5kIHZhbHVlcy5cbnZhciBnZXRQcmVmaXhlZFN0eWxlID0gZnVuY3Rpb24gZ2V0UHJlZml4ZWRTdHlsZShjb21wb25lbnQsIC8vIFJlYWN0Q29tcG9uZW50XG5zdHlsZSkge1xuICB2YXIgbW9kZSA9IGFyZ3VtZW50cy5sZW5ndGggPD0gMiB8fCBhcmd1bWVudHNbMl0gPT09IHVuZGVmaW5lZCA/ICdqcycgOiBhcmd1bWVudHNbMl07XG5cbiAgaWYgKCFFeGVjdXRpb25FbnZpcm9ubWVudC5jYW5Vc2VET00pIHtcbiAgICByZXR1cm4gT2JqZWN0LmtleXMoc3R5bGUpLnJlZHVjZShmdW5jdGlvbiAobmV3U3R5bGUsIGtleSkge1xuICAgICAgdmFyIHZhbHVlID0gc3R5bGVba2V5XTtcbiAgICAgIHZhciBuZXdLZXkgPSBtb2RlID09PSAnY3NzJyA/IF9jYW1lbENhc2VUb0Rhc2hDYXNlKGtleSkgOiBrZXk7XG4gICAgICB2YXIgbmV3VmFsdWUgPSBBcnJheS5pc0FycmF5KHZhbHVlKSA/IHZhbHVlWzBdIDogdmFsdWU7XG4gICAgICBuZXdTdHlsZVtuZXdLZXldID0gbmV3VmFsdWU7XG4gICAgICByZXR1cm4gbmV3U3R5bGU7XG4gICAgfSwge30pO1xuICB9XG5cbiAgdmFyIHByZWZpeGVkU3R5bGUgPSB7fTtcbiAgT2JqZWN0LmtleXMoc3R5bGUpLmZvckVhY2goZnVuY3Rpb24gKHByb3BlcnR5KSB7XG4gICAgdmFyIHZhbHVlID0gc3R5bGVbcHJvcGVydHldO1xuXG4gICAgdmFyIG5ld1Byb3BlcnR5ID0gZ2V0UHJlZml4ZWRQcm9wZXJ0eU5hbWUocHJvcGVydHkpO1xuICAgIGlmIChuZXdQcm9wZXJ0eSA9PT0gZmFsc2UpIHtcbiAgICAgIC8vIElnbm9yZSB1bnN1cHBvcnRlZCBwcm9wZXJ0aWVzXG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovXG4gICAgICAgIGlmIChjb25zb2xlICYmIGNvbnNvbGUud2Fybikge1xuICAgICAgICAgIHZhciBjb21wb25lbnRDb250ZXh0ID0gY29tcG9uZW50ID8gJyBpbiBjb21wb25lbnQgXCInICsgY29tcG9uZW50LmNvbnN0cnVjdG9yLmRpc3BsYXlOYW1lICsgJ1wiJyA6ICcnO1xuXG4gICAgICAgICAgY29uc29sZS53YXJuKCdVbnN1cHBvcnRlZCBDU1MgcHJvcGVydHkgXCInICsgcHJvcGVydHkgKyAnJFwiJyArIGNvbXBvbmVudENvbnRleHQpO1xuICAgICAgICB9XG4gICAgICAgIC8qIGVzbGludC1lbmFibGUgbm8tY29uc29sZSAqL1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIG5ld1ZhbHVlID0gX2dldFByZWZpeGVkVmFsdWUoY29tcG9uZW50LCBuZXdQcm9wZXJ0eS5qcywgdmFsdWUsIHByb3BlcnR5KTtcblxuICAgIHByZWZpeGVkU3R5bGVbbmV3UHJvcGVydHlbbW9kZV1dID0gbmV3VmFsdWU7XG4gIH0pO1xuICByZXR1cm4gcHJlZml4ZWRTdHlsZTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXRQcmVmaXhlZFByb3BlcnR5TmFtZTogZ2V0UHJlZml4ZWRQcm9wZXJ0eU5hbWUsXG4gIGdldFByZWZpeGVkU3R5bGU6IGdldFByZWZpeGVkU3R5bGUsXG4gIGNzc1ByZWZpeDogcHJlZml4SW5mby5jc3NQcmVmaXgsXG4gIGpzUHJlZml4OiBwcmVmaXhJbmZvLmpzUHJlZml4XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgYWxsUHJpbnRTdHlsZXMgPSB7fTtcbnZhciBsaXN0ZW5lcnMgPSBbXTtcblxudmFyIHN1YnNjcmliZSA9IGZ1bmN0aW9uIHN1YnNjcmliZShsaXN0ZW5lcikge1xuICBpZiAobGlzdGVuZXJzLmluZGV4T2YobGlzdGVuZXIpID09PSAtMSkge1xuICAgIGxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICB2YXIgbGlzdGVuZXJJbmRleCA9IGxpc3RlbmVycy5pbmRleE9mKGxpc3RlbmVyKTtcblxuICAgICAgaWYgKGxpc3RlbmVySW5kZXggPiAtMSkge1xuICAgICAgICBsaXN0ZW5lcnMuc3BsaWNlKGxpc3RlbmVySW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbn07XG5cbnZhciBfZW1pdENoYW5nZSA9IGZ1bmN0aW9uIF9lbWl0Q2hhbmdlKCkge1xuICBsaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICByZXR1cm4gbGlzdGVuZXIoKTtcbiAgfSk7XG59O1xuXG52YXIgX2FwcGVuZEltcG9ydGFudFRvRWFjaFZhbHVlID0gZnVuY3Rpb24gX2FwcGVuZEltcG9ydGFudFRvRWFjaFZhbHVlKHN0eWxlT2JqKSB7XG4gIHZhciBpbXBvcnRhbnRTdHlsZU9iaiA9IHt9O1xuXG4gIE9iamVjdC5rZXlzKHN0eWxlT2JqKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICB2YXIgdmFsdWUgPSBzdHlsZU9ialtrZXldO1xuXG4gICAgLy8gVGhpcyBicmVha3MgdW5pdGxlc3MgdmFsdWVzIGJ1dCB0aGV5J2xsIGJlIGRlcHJlY2F0ZWQgc29vbiBhbnl3YXlcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvaXNzdWVzLzE4NzNcbiAgICB2YWx1ZSA9IHZhbHVlICsgXCIgIWltcG9ydGFudFwiO1xuICAgIGltcG9ydGFudFN0eWxlT2JqW2tleV0gPSB2YWx1ZTtcbiAgfSk7XG5cbiAgcmV0dXJuIGltcG9ydGFudFN0eWxlT2JqO1xufTtcblxudmFyIGFkZFByaW50U3R5bGVzID0gZnVuY3Rpb24gYWRkUHJpbnRTdHlsZXMoQ29tcG9uZW50KSB7XG4gIGlmICghQ29tcG9uZW50LnByaW50U3R5bGVzKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHByaW50U3R5bGVDbGFzcyA9IHt9O1xuXG4gIE9iamVjdC5rZXlzKENvbXBvbmVudC5wcmludFN0eWxlcykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIHN0eWxlcyA9IENvbXBvbmVudC5wcmludFN0eWxlc1trZXldO1xuICAgIHZhciBjbGFzc05hbWUgPSBcIlJhZGl1bS1cIiArIENvbXBvbmVudC5kaXNwbGF5TmFtZSArIFwiLVwiICsga2V5O1xuICAgIGFsbFByaW50U3R5bGVzW1wiLlwiICsgY2xhc3NOYW1lXSA9IF9hcHBlbmRJbXBvcnRhbnRUb0VhY2hWYWx1ZShzdHlsZXMpO1xuICAgIHByaW50U3R5bGVDbGFzc1trZXldID0gY2xhc3NOYW1lO1xuICB9KTtcblxuICAvLyBBbGxvd3MgZm9yIGxhenkgbG9hZGluZyBvZiBKUyB0aGF0IHRoZW4gY2FsbHMgUmFkaXVtIHRvIHVwZGF0ZSB0aGVcbiAgLy8gcHJpbnQgc3R5bGVzXG4gIF9lbWl0Q2hhbmdlKCk7XG4gIHJldHVybiBwcmludFN0eWxlQ2xhc3M7XG59O1xuXG52YXIgZ2V0UHJpbnRTdHlsZXMgPSBmdW5jdGlvbiBnZXRQcmludFN0eWxlcygpIHtcbiAgcmV0dXJuIGFsbFByaW50U3R5bGVzO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGFkZFByaW50U3R5bGVzOiBhZGRQcmludFN0eWxlcyxcbiAgZ2V0UHJpbnRTdHlsZXM6IGdldFByaW50U3R5bGVzLFxuICBzdWJzY3JpYmU6IHN1YnNjcmliZVxufTsiLCIndXNlIHN0cmljdCc7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbnZhciBNb3VzZVVwTGlzdGVuZXIgPSByZXF1aXJlKCcuL21vdXNlLXVwLWxpc3RlbmVyJyk7XG52YXIgZ2V0U3RhdGUgPSByZXF1aXJlKCcuL2dldC1zdGF0ZScpO1xudmFyIGdldFN0YXRlS2V5ID0gcmVxdWlyZSgnLi9nZXQtc3RhdGUta2V5Jyk7XG52YXIgUHJlZml4ZXIgPSByZXF1aXJlKCcuL3ByZWZpeGVyJyk7XG52YXIgQ29uZmlnID0gcmVxdWlyZSgnLi9jb25maWcnKTtcblxudmFyIEV4ZWN1dGlvbkVudmlyb25tZW50ID0gcmVxdWlyZSgnZXhlbnYnKTtcbnZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93WydSZWFjdCddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnUmVhY3QnXSA6IG51bGwpO1xuXG4vLyBiYWJlbC1lc2xpbnQgMy4xLjcgZmFpbHMgaGVyZSBmb3Igc29tZSByZWFzb24sIGVycm9yOlxuLy8gICAwOjAgIGVycm9yICBDYW5ub3QgY2FsbCBtZXRob2QgJ2lzU2VxdWVuY2VFeHByZXNzaW9uJyBvZiB1bmRlZmluZWRcbi8vXG4vLyBkZWNsYXJlIGNsYXNzIFJhZGl1bUNvbXBvbmVudCBleHRlbmRzIFJlYWN0Q29tcG9uZW50IHtcbi8vICAgX2xhc3RNb3VzZURvd246IG51bWJlcixcbi8vICAgX3JhZGl1bU1lZGlhUXVlcnlMaXN0ZW5lcnNCeVF1ZXJ5OiBPYmplY3Q8c3RyaW5nLCB7cmVtb3ZlOiAoKSA9PiB2b2lkfT4sXG4vLyAgIF9yYWRpdW1Nb3VzZVVwTGlzdGVuZXI6IHtyZW1vdmU6ICgpID0+IHZvaWR9LFxuLy8gfVxuXG52YXIgbWVkaWFRdWVyeUxpc3RCeVF1ZXJ5U3RyaW5nID0ge307XG5cbnZhciBfaXNTcGVjaWFsS2V5ID0gZnVuY3Rpb24gX2lzU3BlY2lhbEtleShrZXkpIHtcbiAgcmV0dXJuIGtleVswXSA9PT0gJzonIHx8IGtleVswXSA9PT0gJ0AnO1xufTtcblxudmFyIF9nZXRTdHlsZVN0YXRlID0gZnVuY3Rpb24gX2dldFN0eWxlU3RhdGUoY29tcG9uZW50LCBrZXksIHZhbHVlKSB7XG4gIHJldHVybiBnZXRTdGF0ZShjb21wb25lbnQuc3RhdGUsIGtleSwgdmFsdWUpO1xufTtcblxudmFyIF9zZXRTdHlsZVN0YXRlID0gZnVuY3Rpb24gX3NldFN0eWxlU3RhdGUoY29tcG9uZW50LCBrZXksIG5ld1N0YXRlKSB7XG4gIHZhciBleGlzdGluZyA9IGNvbXBvbmVudC5fbGFzdFJhZGl1bVN0YXRlIHx8IGNvbXBvbmVudC5zdGF0ZSAmJiBjb21wb25lbnQuc3RhdGUuX3JhZGl1bVN0eWxlU3RhdGUgfHwge307XG5cbiAgdmFyIHN0YXRlID0geyBfcmFkaXVtU3R5bGVTdGF0ZTogX2V4dGVuZHMoe30sIGV4aXN0aW5nKSB9O1xuICBzdGF0ZS5fcmFkaXVtU3R5bGVTdGF0ZVtrZXldID0gX2V4dGVuZHMoe30sIHN0YXRlLl9yYWRpdW1TdHlsZVN0YXRlW2tleV0sIG5ld1N0YXRlKTtcblxuICBjb21wb25lbnQuX2xhc3RSYWRpdW1TdGF0ZSA9IHN0YXRlLl9yYWRpdW1TdHlsZVN0YXRlO1xuICBjb21wb25lbnQuc2V0U3RhdGUoc3RhdGUpO1xufTtcblxuLy8gTWVyZ2Ugc3R5bGUgb2JqZWN0cy4gU3BlY2lhbCBjYXNpbmcgZm9yIHByb3BzIHN0YXJ0aW5nIHdpdGggJzsnOyB0aGUgdmFsdWVzXG4vLyBzaG91bGQgYmUgb2JqZWN0cywgYW5kIGFyZSBtZXJnZWQgd2l0aCBvdGhlcnMgb2YgdGhlIHNhbWUgbmFtZSAoaW5zdGVhZCBvZlxuLy8gb3ZlcndyaXRpbmcpLlxudmFyIF9tZXJnZVN0eWxlcyA9IGZ1bmN0aW9uIF9tZXJnZVN0eWxlcyhzdHlsZXMpIHtcbiAgdmFyIHJlc3VsdCA9IHt9O1xuXG4gIHN0eWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChzdHlsZSkge1xuICAgIGlmICghc3R5bGUgfHwgdHlwZW9mIHN0eWxlICE9PSAnb2JqZWN0JyB8fCBBcnJheS5pc0FycmF5KHN0eWxlKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIE9iamVjdC5rZXlzKHN0eWxlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIGlmIChfaXNTcGVjaWFsS2V5KGtleSkgJiYgcmVzdWx0W2tleV0pIHtcbiAgICAgICAgcmVzdWx0W2tleV0gPSBfbWVyZ2VTdHlsZXMoW3Jlc3VsdFtrZXldLCBzdHlsZVtrZXldXSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHRba2V5XSA9IHN0eWxlW2tleV07XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xuXG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG52YXIgX21vdXNlVXAgPSBmdW5jdGlvbiBfbW91c2VVcChjb21wb25lbnQpIHtcbiAgT2JqZWN0LmtleXMoY29tcG9uZW50LnN0YXRlLl9yYWRpdW1TdHlsZVN0YXRlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICBpZiAoX2dldFN0eWxlU3RhdGUoY29tcG9uZW50LCBrZXksICc6YWN0aXZlJykpIHtcbiAgICAgIF9zZXRTdHlsZVN0YXRlKGNvbXBvbmVudCwga2V5LCB7ICc6YWN0aXZlJzogZmFsc2UgfSk7XG4gICAgfVxuICB9KTtcbn07XG5cbnZhciBfb25NZWRpYVF1ZXJ5Q2hhbmdlID0gZnVuY3Rpb24gX29uTWVkaWFRdWVyeUNoYW5nZShjb21wb25lbnQsIHF1ZXJ5LCBtZWRpYVF1ZXJ5TGlzdCkge1xuICB2YXIgc3RhdGUgPSB7fTtcbiAgc3RhdGVbcXVlcnldID0gbWVkaWFRdWVyeUxpc3QubWF0Y2hlcztcbiAgX3NldFN0eWxlU3RhdGUoY29tcG9uZW50LCAnX2FsbCcsIHN0YXRlKTtcbn07XG5cbnZhciBfcmVzb2x2ZU1lZGlhUXVlcnlTdHlsZXMgPSBmdW5jdGlvbiBfcmVzb2x2ZU1lZGlhUXVlcnlTdHlsZXMoY29tcG9uZW50LCBzdHlsZSkge1xuICBpZiAoIUNvbmZpZy5jYW5NYXRjaE1lZGlhKCkpIHtcbiAgICByZXR1cm4gc3R5bGU7XG4gIH1cblxuICBPYmplY3Qua2V5cyhzdHlsZSkuZmlsdGVyKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgcmV0dXJuIG5hbWVbMF0gPT09ICdAJztcbiAgfSkubWFwKGZ1bmN0aW9uIChxdWVyeSkge1xuICAgIHZhciBtZWRpYVF1ZXJ5U3R5bGVzID0gc3R5bGVbcXVlcnldO1xuICAgIHF1ZXJ5ID0gcXVlcnkucmVwbGFjZSgnQG1lZGlhICcsICcnKTtcblxuICAgIC8vIENyZWF0ZSBhIGdsb2JhbCBNZWRpYVF1ZXJ5TGlzdCBpZiBvbmUgZG9lc24ndCBhbHJlYWR5IGV4aXN0XG4gICAgdmFyIG1xbCA9IG1lZGlhUXVlcnlMaXN0QnlRdWVyeVN0cmluZ1txdWVyeV07XG4gICAgaWYgKCFtcWwpIHtcbiAgICAgIG1lZGlhUXVlcnlMaXN0QnlRdWVyeVN0cmluZ1txdWVyeV0gPSBtcWwgPSBDb25maWcubWF0Y2hNZWRpYShxdWVyeSk7XG4gICAgfVxuXG4gICAgLy8gS2VlcCB0cmFjayBvZiB3aGljaCBrZXlzIGFscmVhZHkgaGF2ZSBsaXN0ZW5lcnNcbiAgICBpZiAoIWNvbXBvbmVudC5fcmFkaXVtTWVkaWFRdWVyeUxpc3RlbmVyc0J5UXVlcnkpIHtcbiAgICAgIGNvbXBvbmVudC5fcmFkaXVtTWVkaWFRdWVyeUxpc3RlbmVyc0J5UXVlcnkgPSB7fTtcbiAgICB9XG5cbiAgICBpZiAoIWNvbXBvbmVudC5fcmFkaXVtTWVkaWFRdWVyeUxpc3RlbmVyc0J5UXVlcnlbcXVlcnldKSB7XG4gICAgICB2YXIgbGlzdGVuZXIgPSBfb25NZWRpYVF1ZXJ5Q2hhbmdlLmJpbmQobnVsbCwgY29tcG9uZW50LCBxdWVyeSk7XG4gICAgICBtcWwuYWRkTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgICAgY29tcG9uZW50Ll9yYWRpdW1NZWRpYVF1ZXJ5TGlzdGVuZXJzQnlRdWVyeVtxdWVyeV0gPSB7XG4gICAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgICAgIG1xbC5yZW1vdmVMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gQXBwbHkgbWVkaWEgcXVlcnkgc3RhdGVzXG4gICAgaWYgKG1xbC5tYXRjaGVzKSB7XG4gICAgICBzdHlsZSA9IF9tZXJnZVN0eWxlcyhbc3R5bGUsIG1lZGlhUXVlcnlTdHlsZXNdKTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBzdHlsZTtcbn07XG5cbi8vIFdyYXBwZXIgYXJvdW5kIFJlYWN0LmNsb25lRWxlbWVudC4gVG8gYXZvaWQgcHJvY2Vzc2luZyB0aGUgc2FtZSBlbGVtZW50XG4vLyB0d2ljZSwgd2hlbmV2ZXIgd2UgY2xvbmUgYW4gZWxlbWVudCBhZGQgYSBzcGVjaWFsIG5vbi1lbnVtZXJhYmxlIHByb3AgdG9cbi8vIG1ha2Ugc3VyZSB3ZSBkb24ndCBwcm9jZXNzIHRoaXMgZWxlbWVudCBhZ2Fpbi5cbnZhciBfY2xvbmVFbGVtZW50ID0gZnVuY3Rpb24gX2Nsb25lRWxlbWVudChyZW5kZXJlZEVsZW1lbnQsIG5ld1Byb3BzLCBuZXdDaGlsZHJlbikge1xuICAvLyBPbmx5IGFkZCBmbGFnIGlmIHRoaXMgaXMgYSBub3JtYWwgRE9NIGVsZW1lbnRcbiAgaWYgKHR5cGVvZiByZW5kZXJlZEVsZW1lbnQudHlwZSA9PT0gJ3N0cmluZycpIHtcbiAgICBuZXdQcm9wcyA9IF9leHRlbmRzKHt9LCBuZXdQcm9wcywgeyBfcmFkaXVtRGlkUmVzb2x2ZVN0eWxlczogdHJ1ZSB9KTtcbiAgfVxuXG4gIHJldHVybiBSZWFjdC5jbG9uZUVsZW1lbnQocmVuZGVyZWRFbGVtZW50LCBuZXdQcm9wcywgbmV3Q2hpbGRyZW4pO1xufTtcblxuLy9cbi8vIFRoZSBudWNsZXVzIG9mIFJhZGl1bS4gcmVzb2x2ZVN0eWxlcyBpcyBjYWxsZWQgb24gdGhlIHJlbmRlcmVkIGVsZW1lbnRzXG4vLyBiZWZvcmUgdGhleSBhcmUgcmV0dXJuZWQgaW4gcmVuZGVyLiBJdCBpdGVyYXRlcyBvdmVyIHRoZSBlbGVtZW50cyBhbmRcbi8vIGNoaWxkcmVuLCByZXdyaXRpbmcgcHJvcHMgdG8gYWRkIGV2ZW50IGhhbmRsZXJzIHJlcXVpcmVkIHRvIGNhcHR1cmUgdXNlclxuLy8gaW50ZXJhY3Rpb25zIChlLmcuIG1vdXNlIG92ZXIpLiBJdCBhbHNvIHJlcGxhY2VzIHRoZSBzdHlsZSBwcm9wIGJlY2F1c2UgaXRcbi8vIGFkZHMgaW4gdGhlIHZhcmlvdXMgaW50ZXJhY3Rpb24gc3R5bGVzIChlLmcuIDpob3ZlcikuXG4vL1xudmFyIHJlc29sdmVTdHlsZXMgPSBmdW5jdGlvbiByZXNvbHZlU3R5bGVzKGNvbXBvbmVudCwgLy8gUmVhY3RDb21wb25lbnQsIGZsb3crZXNsaW50IGNvbXBsYWluaW5nXG5yZW5kZXJlZEVsZW1lbnQsIC8vIFJlYWN0RWxlbWVudFxuZXhpc3RpbmdLZXlNYXApIHtcbiAgLy8gUmVhY3RFbGVtZW50XG4gIGV4aXN0aW5nS2V5TWFwID0gZXhpc3RpbmdLZXlNYXAgfHwge307XG5cbiAgaWYgKCFyZW5kZXJlZEVsZW1lbnQgfHxcbiAgLy8gQmFpbCBpZiB3ZSd2ZSBhbHJlYWR5IHByb2Nlc3NlZCB0aGlzIGVsZW1lbnQuIFRoaXMgZW5zdXJlcyB0aGF0IG9ubHkgdGhlXG4gIC8vIG93bmVyIG9mIGFuIGVsZW1lbnQgcHJvY2Vzc2VzIHRoYXQgZWxlbWVudCwgc2luY2UgdGhlIG93bmVyJ3MgcmVuZGVyXG4gIC8vIGZ1bmN0aW9uIHdpbGwgYmUgY2FsbGVkIGZpcnN0ICh3aGljaCB3aWxsIGFsd2F5cyBiZSB0aGUgY2FzZSwgc2luY2UgeW91XG4gIC8vIGNhbid0IGtub3cgd2hhdCBlbHNlIHRvIHJlbmRlciB1bnRpbCB5b3UgcmVuZGVyIHRoZSBwYXJlbnQgY29tcG9uZW50KS5cbiAgcmVuZGVyZWRFbGVtZW50LnByb3BzICYmIHJlbmRlcmVkRWxlbWVudC5wcm9wcy5fcmFkaXVtRGlkUmVzb2x2ZVN0eWxlcykge1xuICAgIHJldHVybiByZW5kZXJlZEVsZW1lbnQ7XG4gIH1cblxuICAvLyBSZWN1cnNlIG92ZXIgY2hpbGRyZW4gZmlyc3QgaW4gY2FzZSB3ZSBiYWlsIGVhcmx5LiBOb3RlIHRoYXQgY2hpbGRyZW4gb25seVxuICAvLyBpbmNsdWRlIHRob3NlIHJlbmRlcmVkIGluIGB0aGlzYCBjb21wb25lbnQuIENoaWxkIG5vZGVzIGluIG90aGVyIGNvbXBvbmVudHNcbiAgLy8gd2lsbCBub3QgYmUgaGVyZSwgc28gZWFjaCBjb21wb25lbnQgbmVlZHMgdG8gdXNlIFJhZGl1bS5cbiAgdmFyIG9sZENoaWxkcmVuID0gcmVuZGVyZWRFbGVtZW50LnByb3BzLmNoaWxkcmVuO1xuICB2YXIgbmV3Q2hpbGRyZW4gPSBvbGRDaGlsZHJlbjtcbiAgaWYgKG9sZENoaWxkcmVuKSB7XG4gICAgdmFyIGNoaWxkcmVuVHlwZSA9IHR5cGVvZiBvbGRDaGlsZHJlbjtcbiAgICBpZiAoY2hpbGRyZW5UeXBlID09PSAnc3RyaW5nJyB8fCBjaGlsZHJlblR5cGUgPT09ICdudW1iZXInKSB7XG4gICAgICAvLyBEb24ndCBkbyBhbnl0aGluZyB3aXRoIGEgc2luZ2xlIHByaW1pdGl2ZSBjaGlsZFxuICAgICAgbmV3Q2hpbGRyZW4gPSBvbGRDaGlsZHJlbjtcbiAgICB9IGVsc2UgaWYgKGNoaWxkcmVuVHlwZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgLy8gV3JhcCB0aGUgZnVuY3Rpb24sIHJlc29sdmluZyBzdHlsZXMgb24gdGhlIHJlc3VsdFxuICAgICAgbmV3Q2hpbGRyZW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSBvbGRDaGlsZHJlbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICBpZiAoUmVhY3QuaXNWYWxpZEVsZW1lbnQocmVzdWx0KSkge1xuICAgICAgICAgIHJldHVybiByZXNvbHZlU3R5bGVzKGNvbXBvbmVudCwgcmVzdWx0LCBleGlzdGluZ0tleU1hcCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH07XG4gICAgfSBlbHNlIGlmIChSZWFjdC5DaGlsZHJlbi5jb3VudChvbGRDaGlsZHJlbikgPT09IDEgJiYgb2xkQ2hpbGRyZW4udHlwZSkge1xuICAgICAgLy8gSWYgYSBSZWFjdCBFbGVtZW50IGlzIGFuIG9ubHkgY2hpbGQsIGRvbid0IHdyYXAgaXQgaW4gYW4gYXJyYXkgZm9yXG4gICAgICAvLyBSZWFjdC5DaGlsZHJlbi5tYXAoKSBmb3IgUmVhY3QuQ2hpbGRyZW4ub25seSgpIGNvbXBhdGliaWxpdHkuXG4gICAgICB2YXIgb25seUNoaWxkID0gUmVhY3QuQ2hpbGRyZW4ub25seShvbGRDaGlsZHJlbik7XG4gICAgICBuZXdDaGlsZHJlbiA9IHJlc29sdmVTdHlsZXMoY29tcG9uZW50LCBvbmx5Q2hpbGQsIGV4aXN0aW5nS2V5TWFwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbmV3Q2hpbGRyZW4gPSBSZWFjdC5DaGlsZHJlbi5tYXAob2xkQ2hpbGRyZW4sIGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgICBpZiAoUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpKSB7XG4gICAgICAgICAgcmV0dXJuIHJlc29sdmVTdHlsZXMoY29tcG9uZW50LCBjaGlsZCwgZXhpc3RpbmdLZXlNYXApO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGNoaWxkO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIHByb3BzID0gcmVuZGVyZWRFbGVtZW50LnByb3BzO1xuICB2YXIgbmV3UHJvcHMgPSB7fTtcblxuICAvLyBSZWN1cnNlIG92ZXIgcHJvcHMsIGp1c3QgbGlrZSBjaGlsZHJlblxuICBPYmplY3Qua2V5cyhwcm9wcykuZm9yRWFjaChmdW5jdGlvbiAocHJvcCkge1xuICAgIC8vIFdlIGFscmVhZHkgcmVjdXJzZSBvdmVyIGNoaWxkcmVuIGFib3ZlXG4gICAgaWYgKHByb3AgPT09ICdjaGlsZHJlbicpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgcHJvcFZhbHVlID0gcHJvcHNbcHJvcF07XG4gICAgaWYgKFJlYWN0LmlzVmFsaWRFbGVtZW50KHByb3BWYWx1ZSkpIHtcbiAgICAgIG5ld1Byb3BzW3Byb3BdID0gcmVzb2x2ZVN0eWxlcyhjb21wb25lbnQsIHByb3BWYWx1ZSwgZXhpc3RpbmdLZXlNYXApO1xuICAgIH1cbiAgfSk7XG5cbiAgdmFyIGhhc1Jlc29sdmVkUHJvcHMgPSBPYmplY3Qua2V5cyhuZXdQcm9wcykubGVuZ3RoID4gMDtcblxuICAvLyBCYWlsIGVhcmx5IGlmIGVsZW1lbnQgaXMgbm90IGEgc2ltcGxlIFJlYWN0RE9NRWxlbWVudC5cbiAgaWYgKCFSZWFjdC5pc1ZhbGlkRWxlbWVudChyZW5kZXJlZEVsZW1lbnQpIHx8IHR5cGVvZiByZW5kZXJlZEVsZW1lbnQudHlwZSAhPT0gJ3N0cmluZycpIHtcbiAgICBpZiAob2xkQ2hpbGRyZW4gPT09IG5ld0NoaWxkcmVuICYmICFoYXNSZXNvbHZlZFByb3BzKSB7XG4gICAgICByZXR1cm4gcmVuZGVyZWRFbGVtZW50O1xuICAgIH1cblxuICAgIHJldHVybiBfY2xvbmVFbGVtZW50KHJlbmRlcmVkRWxlbWVudCwgaGFzUmVzb2x2ZWRQcm9wcyA/IG5ld1Byb3BzIDoge30sIG5ld0NoaWxkcmVuKTtcbiAgfVxuXG4gIHZhciBzdHlsZSA9IHByb3BzLnN0eWxlO1xuXG4gIC8vIENvbnZlbmllbnQgc3ludGF4IGZvciBtdWx0aXBsZSBzdHlsZXM6IGBzdHlsZT17W3N0eWxlMSwgc3R5bGUyLCBldGNdfWBcbiAgLy8gSWdub3JlcyBub24tb2JqZWN0cywgc28geW91IGNhbiBkbyBgdGhpcy5zdGF0ZS5pc0Nvb2wgJiYgc3R5bGVzLmNvb2xgLlxuICBpZiAoQXJyYXkuaXNBcnJheShzdHlsZSkpIHtcbiAgICBzdHlsZSA9IF9tZXJnZVN0eWxlcyhzdHlsZSk7XG4gIH1cblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFdhcm4gaWYgeW91IHVzZSBsb25naGFuZCBhbmQgc2hvcnRoYW5kIHByb3BlcnRpZXMgaW4gdGhlIHNhbWUgc3R5bGVcbiAgICAvLyBvYmplY3QuXG4gICAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL1Nob3J0aGFuZF9wcm9wZXJ0aWVzXG5cbiAgICB2YXIgc2hvcnRoYW5kUHJvcGVydHlFeHBhbnNpb25zID0ge1xuICAgICAgJ2JhY2tncm91bmQnOiBbJ2JhY2tncm91bmRBdHRhY2htZW50JywgJ2JhY2tncm91bmRCbGVuZE1vZGUnLCAnYmFja2dyb3VuZENsaXAnLCAnYmFja2dyb3VuZENvbG9yJywgJ2JhY2tncm91bmRJbWFnZScsICdiYWNrZ3JvdW5kT3JpZ2luJywgJ2JhY2tncm91bmRQb3NpdGlvbicsICdiYWNrZ3JvdW5kUG9zaXRpb25YJywgJ2JhY2tncm91bmRQb3NpdGlvblknLCAnYmFja2dyb3VuZFJlcGVhdCcsICdiYWNrZ3JvdW5kUmVwZWF0WCcsICdiYWNrZ3JvdW5kUmVwZWF0WScsICdiYWNrZ3JvdW5kU2l6ZSddLFxuICAgICAgJ2JvcmRlcic6IFsnYm9yZGVyQm90dG9tJywgJ2JvcmRlckJvdHRvbUNvbG9yJywgJ2JvcmRlckJvdHRvbVN0eWxlJywgJ2JvcmRlckJvdHRvbVdpZHRoJywgJ2JvcmRlckNvbG9yJywgJ2JvcmRlckxlZnQnLCAnYm9yZGVyTGVmdENvbG9yJywgJ2JvcmRlckxlZnRTdHlsZScsICdib3JkZXJMZWZ0V2lkdGgnLCAnYm9yZGVyUmlnaHQnLCAnYm9yZGVyUmlnaHRDb2xvcicsICdib3JkZXJSaWdodFN0eWxlJywgJ2JvcmRlclJpZ2h0V2lkdGgnLCAnYm9yZGVyU3R5bGUnLCAnYm9yZGVyVG9wJywgJ2JvcmRlclRvcENvbG9yJywgJ2JvcmRlclRvcFN0eWxlJywgJ2JvcmRlclRvcFdpZHRoJywgJ2JvcmRlcldpZHRoJ10sXG4gICAgICAnYm9yZGVySW1hZ2UnOiBbJ2JvcmRlckltYWdlT3V0c2V0JywgJ2JvcmRlckltYWdlUmVwZWF0JywgJ2JvcmRlckltYWdlU2xpY2UnLCAnYm9yZGVySW1hZ2VTb3VyY2UnLCAnYm9yZGVySW1hZ2VXaWR0aCddLFxuICAgICAgJ2JvcmRlclJhZGl1cyc6IFsnYm9yZGVyQm90dG9tTGVmdFJhZGl1cycsICdib3JkZXJCb3R0b21SaWdodFJhZGl1cycsICdib3JkZXJUb3BMZWZ0UmFkaXVzJywgJ2JvcmRlclRvcFJpZ2h0UmFkaXVzJ10sXG4gICAgICAnZm9udCc6IFsnZm9udEZhbWlseScsICdmb250S2VybmluZycsICdmb250U2l6ZScsICdmb250U3RyZXRjaCcsICdmb250U3R5bGUnLCAnZm9udFZhcmlhbnQnLCAnZm9udFZhcmlhbnRMaWdhdHVyZXMnLCAnZm9udFdlaWdodCcsICdsaW5lSGVpZ2h0J10sXG4gICAgICAnbGlzdFN0eWxlJzogWydsaXN0U3R5bGVJbWFnZScsICdsaXN0U3R5bGVQb3NpdGlvbicsICdsaXN0U3R5bGVUeXBlJ10sXG4gICAgICAnbWFyZ2luJzogWydtYXJnaW5Cb3R0b20nLCAnbWFyZ2luTGVmdCcsICdtYXJnaW5SaWdodCcsICdtYXJnaW5Ub3AnXSxcbiAgICAgICdwYWRkaW5nJzogWydwYWRkaW5nQm90dG9tJywgJ3BhZGRpbmdMZWZ0JywgJ3BhZGRpbmdSaWdodCcsICdwYWRkaW5nVG9wJ10sXG4gICAgICAndHJhbnNpdGlvbic6IFsndHJhbnNpdGlvbkRlbGF5JywgJ3RyYW5zaXRpb25EdXJhdGlvbicsICd0cmFuc2l0aW9uUHJvcGVydHknLCAndHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uJ11cbiAgICB9O1xuXG4gICAgdmFyIGNoZWNrUHJvcHMgPSBmdW5jdGlvbiBjaGVja1Byb3BzKHMpIHtcbiAgICAgIGlmICh0eXBlb2YgcyAhPT0gJ29iamVjdCcgfHwgIXMpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgc3R5bGVLZXlzID0gT2JqZWN0LmtleXMocyk7XG4gICAgICBzdHlsZUtleXMuZm9yRWFjaChmdW5jdGlvbiAoc3R5bGVLZXkpIHtcbiAgICAgICAgaWYgKHNob3J0aGFuZFByb3BlcnR5RXhwYW5zaW9uc1tzdHlsZUtleV0gJiYgc2hvcnRoYW5kUHJvcGVydHlFeHBhbnNpb25zW3N0eWxlS2V5XS5zb21lKGZ1bmN0aW9uIChzcCkge1xuICAgICAgICAgIHJldHVybiBzdHlsZUtleXMuaW5kZXhPZihzcCkgIT09IC0xO1xuICAgICAgICB9KSkge1xuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovXG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ1JhZGl1bTogcHJvcGVydHkgXCInICsgc3R5bGVLZXkgKyAnXCIgaW4gc3R5bGUgb2JqZWN0Jywgc3R5bGUsICc6IGRvIG5vdCBtaXggbG9uZ2hhbmQgYW5kICcgKyAnc2hvcnRoYW5kIHByb3BlcnRpZXMgaW4gdGhlIHNhbWUgc3R5bGUgb2JqZWN0LiBDaGVjayB0aGUgcmVuZGVyICcgKyAnbWV0aG9kIG9mICcgKyBjb21wb25lbnQuY29uc3RydWN0b3IuZGlzcGxheU5hbWUgKyAnLicsICdTZWUgaHR0cHM6Ly9naXRodWIuY29tL0Zvcm1pZGFibGVMYWJzL3JhZGl1bS9pc3N1ZXMvOTUgZm9yIG1vcmUgJyArICdpbmZvcm1hdGlvbi4nKTtcbiAgICAgICAgICAgIC8qIGVzbGludC1lbmFibGUgbm8tY29uc29sZSAqL1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIHN0eWxlS2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrKSB7XG4gICAgICAgIHJldHVybiBjaGVja1Byb3BzKHNba10pO1xuICAgICAgfSk7XG4gICAgfTtcbiAgICBjaGVja1Byb3BzKHN0eWxlKTtcbiAgfVxuXG4gIC8vIEJhaWwgZWFybHkgaWYgbm8gaW50ZXJhY3RpdmUgc3R5bGVzLlxuICBpZiAoIXN0eWxlIHx8ICFPYmplY3Qua2V5cyhzdHlsZSkuc29tZShfaXNTcGVjaWFsS2V5KSkge1xuICAgIGlmIChzdHlsZSkge1xuICAgICAgLy8gU3RpbGwgcGVyZm9ybSB2ZW5kb3IgcHJlZml4aW5nLCB0aG91Z2guXG4gICAgICBuZXdQcm9wcy5zdHlsZSA9IFByZWZpeGVyLmdldFByZWZpeGVkU3R5bGUoY29tcG9uZW50LCBzdHlsZSk7XG4gICAgICByZXR1cm4gX2Nsb25lRWxlbWVudChyZW5kZXJlZEVsZW1lbnQsIG5ld1Byb3BzLCBuZXdDaGlsZHJlbik7XG4gICAgfSBlbHNlIGlmIChuZXdDaGlsZHJlbiB8fCBoYXNSZXNvbHZlZFByb3BzKSB7XG4gICAgICByZXR1cm4gX2Nsb25lRWxlbWVudChyZW5kZXJlZEVsZW1lbnQsIG5ld1Byb3BzLCBuZXdDaGlsZHJlbik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlbmRlcmVkRWxlbWVudDtcbiAgfVxuXG4gIC8vIFdlIG5lZWQgYSB1bmlxdWUga2V5IHRvIGNvcnJlbGF0ZSBzdGF0ZSBjaGFuZ2VzIGR1ZSB0byB1c2VyIGludGVyYWN0aW9uXG4gIC8vIHdpdGggdGhlIHJlbmRlcmVkIGVsZW1lbnQsIHNvIHdlIGtub3cgdG8gYXBwbHkgdGhlIHByb3BlciBpbnRlcmFjdGl2ZVxuICAvLyBzdHlsZXMuXG4gIHZhciBvcmlnaW5hbEtleSA9IHJlbmRlcmVkRWxlbWVudC5yZWYgfHwgcmVuZGVyZWRFbGVtZW50LmtleTtcbiAgdmFyIGtleSA9IGdldFN0YXRlS2V5KG9yaWdpbmFsS2V5KTtcblxuICBpZiAoZXhpc3RpbmdLZXlNYXBba2V5XSkge1xuICAgIHRocm93IG5ldyBFcnJvcignUmFkaXVtIHJlcXVpcmVzIGVhY2ggZWxlbWVudCB3aXRoIGludGVyYWN0aXZlIHN0eWxlcyB0byBoYXZlIGEgdW5pcXVlICcgKyAna2V5LCBzZXQgdXNpbmcgZWl0aGVyIHRoZSByZWYgb3Iga2V5IHByb3AuICcgKyAob3JpZ2luYWxLZXkgPyAnS2V5IFwiJyArIG9yaWdpbmFsS2V5ICsgJ1wiIGlzIGEgZHVwbGljYXRlLicgOiAnTXVsdGlwbGUgZWxlbWVudHMgaGF2ZSBubyBrZXkgc3BlY2lmaWVkLicpKTtcbiAgfVxuXG4gIGV4aXN0aW5nS2V5TWFwW2tleV0gPSB0cnVlO1xuXG4gIC8vIE1lZGlhIHF1ZXJpZXMgY2FuIGNvbnRhaW4gcHNldWRvIHN0eWxlcywgbGlrZSA6aG92ZXJcbiAgc3R5bGUgPSBfcmVzb2x2ZU1lZGlhUXVlcnlTdHlsZXMoY29tcG9uZW50LCBzdHlsZSk7XG5cbiAgdmFyIG5ld1N0eWxlID0ge307XG4gIE9iamVjdC5rZXlzKHN0eWxlKS5mb3JFYWNoKGZ1bmN0aW9uIChzdHlsZUtleSkge1xuICAgIGlmICghX2lzU3BlY2lhbEtleShzdHlsZUtleSkpIHtcbiAgICAgIG5ld1N0eWxlW3N0eWxlS2V5XSA9IHN0eWxlW3N0eWxlS2V5XTtcbiAgICB9XG4gIH0pO1xuXG4gIC8vIE9ubHkgYWRkIGhhbmRsZXJzIGlmIG5lY2Vzc2FyeVxuICBpZiAoc3R5bGVbJzpob3ZlciddIHx8IHN0eWxlWyc6YWN0aXZlJ10pIHtcbiAgICAvLyBBbHdheXMgY2FsbCB0aGUgZXhpc3RpbmcgaGFuZGxlciBpZiBvbmUgaXMgYWxyZWFkeSBkZWZpbmVkLlxuICAgIC8vIFRoaXMgY29kZSwgYW5kIHRoZSB2ZXJ5IHNpbWlsYXIgb25lcyBiZWxvdywgY291bGQgYmUgYWJzdHJhY3RlZCBhIGJpdFxuICAgIC8vIG1vcmUsIGJ1dCBpdCBodXJ0cyByZWFkYWJpbGl0eSBJTU8uXG4gICAgdmFyIGV4aXN0aW5nT25Nb3VzZUVudGVyID0gcHJvcHMub25Nb3VzZUVudGVyO1xuICAgIG5ld1Byb3BzLm9uTW91c2VFbnRlciA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICBleGlzdGluZ09uTW91c2VFbnRlciAmJiBleGlzdGluZ09uTW91c2VFbnRlcihlKTtcbiAgICAgIF9zZXRTdHlsZVN0YXRlKGNvbXBvbmVudCwga2V5LCB7ICc6aG92ZXInOiB0cnVlIH0pO1xuICAgIH07XG5cbiAgICB2YXIgZXhpc3RpbmdPbk1vdXNlTGVhdmUgPSBwcm9wcy5vbk1vdXNlTGVhdmU7XG4gICAgbmV3UHJvcHMub25Nb3VzZUxlYXZlID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgIGV4aXN0aW5nT25Nb3VzZUxlYXZlICYmIGV4aXN0aW5nT25Nb3VzZUxlYXZlKGUpO1xuICAgICAgX3NldFN0eWxlU3RhdGUoY29tcG9uZW50LCBrZXksIHsgJzpob3Zlcic6IGZhbHNlIH0pO1xuICAgIH07XG4gIH1cblxuICBpZiAoc3R5bGVbJzphY3RpdmUnXSkge1xuICAgIHZhciBleGlzdGluZ09uTW91c2VEb3duID0gcHJvcHMub25Nb3VzZURvd247XG4gICAgbmV3UHJvcHMub25Nb3VzZURvd24gPSBmdW5jdGlvbiAoZSkge1xuICAgICAgZXhpc3RpbmdPbk1vdXNlRG93biAmJiBleGlzdGluZ09uTW91c2VEb3duKGUpO1xuICAgICAgY29tcG9uZW50Ll9sYXN0TW91c2VEb3duID0gRGF0ZS5ub3coKTtcbiAgICAgIF9zZXRTdHlsZVN0YXRlKGNvbXBvbmVudCwga2V5LCB7ICc6YWN0aXZlJzogdHJ1ZSB9KTtcbiAgICB9O1xuICB9XG5cbiAgaWYgKHN0eWxlWyc6Zm9jdXMnXSkge1xuICAgIHZhciBleGlzdGluZ09uRm9jdXMgPSBwcm9wcy5vbkZvY3VzO1xuICAgIG5ld1Byb3BzLm9uRm9jdXMgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgZXhpc3RpbmdPbkZvY3VzICYmIGV4aXN0aW5nT25Gb2N1cyhlKTtcbiAgICAgIF9zZXRTdHlsZVN0YXRlKGNvbXBvbmVudCwga2V5LCB7ICc6Zm9jdXMnOiB0cnVlIH0pO1xuICAgIH07XG5cbiAgICB2YXIgZXhpc3RpbmdPbkJsdXIgPSBwcm9wcy5vbkJsdXI7XG4gICAgbmV3UHJvcHMub25CbHVyID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgIGV4aXN0aW5nT25CbHVyICYmIGV4aXN0aW5nT25CbHVyKGUpO1xuICAgICAgX3NldFN0eWxlU3RhdGUoY29tcG9uZW50LCBrZXksIHsgJzpmb2N1cyc6IGZhbHNlIH0pO1xuICAgIH07XG4gIH1cblxuICAvLyBNZXJnZSB0aGUgc3R5bGVzIGluIHRoZSBvcmRlciB0aGV5IHdlcmUgZGVmaW5lZFxuICB2YXIgaW50ZXJhY3Rpb25TdHlsZXMgPSBPYmplY3Qua2V5cyhzdHlsZSkuZmlsdGVyKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgcmV0dXJuIG5hbWUgPT09ICc6YWN0aXZlJyAmJiBfZ2V0U3R5bGVTdGF0ZShjb21wb25lbnQsIGtleSwgJzphY3RpdmUnKSB8fCBuYW1lID09PSAnOmhvdmVyJyAmJiBfZ2V0U3R5bGVTdGF0ZShjb21wb25lbnQsIGtleSwgJzpob3ZlcicpIHx8IG5hbWUgPT09ICc6Zm9jdXMnICYmIF9nZXRTdHlsZVN0YXRlKGNvbXBvbmVudCwga2V5LCAnOmZvY3VzJyk7XG4gIH0pLm1hcChmdW5jdGlvbiAobmFtZSkge1xuICAgIHJldHVybiBzdHlsZVtuYW1lXTtcbiAgfSk7XG5cbiAgaWYgKGludGVyYWN0aW9uU3R5bGVzLmxlbmd0aCkge1xuICAgIG5ld1N0eWxlID0gX21lcmdlU3R5bGVzKFtuZXdTdHlsZV0uY29uY2F0KGludGVyYWN0aW9uU3R5bGVzKSk7XG4gIH1cblxuICBpZiAoc3R5bGVbJzphY3RpdmUnXSAmJiAhY29tcG9uZW50Ll9yYWRpdW1Nb3VzZVVwTGlzdGVuZXIgJiYgRXhlY3V0aW9uRW52aXJvbm1lbnQuY2FuVXNlRXZlbnRMaXN0ZW5lcnMpIHtcbiAgICBjb21wb25lbnQuX3JhZGl1bU1vdXNlVXBMaXN0ZW5lciA9IE1vdXNlVXBMaXN0ZW5lci5zdWJzY3JpYmUoX21vdXNlVXAuYmluZChudWxsLCBjb21wb25lbnQpKTtcbiAgfVxuXG4gIG5ld1Byb3BzLnN0eWxlID0gUHJlZml4ZXIuZ2V0UHJlZml4ZWRTdHlsZShjb21wb25lbnQsIG5ld1N0eWxlKTtcblxuICByZXR1cm4gX2Nsb25lRWxlbWVudChyZW5kZXJlZEVsZW1lbnQsIG5ld1Byb3BzLCBuZXdDaGlsZHJlbik7XG59O1xuXG4vLyBFeHBvc2luZyBtZXRob2RzIGZvciB0ZXN0cyBpcyB1Z2x5LCBidXQgdGhlIGFsdGVybmF0aXZlLCByZS1yZXF1aXJpbmcgdGhlXG4vLyBtb2R1bGUgZWFjaCB0aW1lLCBpcyB0b28gc2xvd1xucmVzb2x2ZVN0eWxlcy5fX2NsZWFyU3RhdGVGb3JUZXN0cyA9IGZ1bmN0aW9uICgpIHtcbiAgbWVkaWFRdWVyeUxpc3RCeVF1ZXJ5U3RyaW5nID0ge307XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlc29sdmVTdHlsZXM7IiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBmaW5kKGFycmF5LCBwcmVkaWNhdGUsIGNvbnRleHQpIHtcbiAgaWYgKHR5cGVvZiBBcnJheS5wcm90b3R5cGUuZmluZCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBhcnJheS5maW5kKHByZWRpY2F0ZSwgY29udGV4dCk7XG4gIH1cblxuICBjb250ZXh0ID0gY29udGV4dCB8fCB0aGlzO1xuICB2YXIgbGVuZ3RoID0gYXJyYXkubGVuZ3RoO1xuICB2YXIgaTtcblxuICBpZiAodHlwZW9mIHByZWRpY2F0ZSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IocHJlZGljYXRlICsgJyBpcyBub3QgYSBmdW5jdGlvbicpO1xuICB9XG5cbiAgZm9yIChpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHByZWRpY2F0ZS5jYWxsKGNvbnRleHQsIGFycmF5W2ldLCBpLCBhcnJheSkpIHtcbiAgICAgIHJldHVybiBhcnJheVtpXTtcbiAgICB9XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmaW5kO1xuIiwiLyohXG4gIENvcHlyaWdodCAoYykgMjAxNSBKZWQgV2F0c29uLlxuICBCYXNlZCBvbiBjb2RlIHRoYXQgaXMgQ29weXJpZ2h0IDIwMTMtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAgQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiovXG5cbihmdW5jdGlvbiAoKSB7XG5cdCd1c2Ugc3RyaWN0JztcblxuXHR2YXIgY2FuVXNlRE9NID0gISEoXG5cdFx0dHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiZcblx0XHR3aW5kb3cuZG9jdW1lbnQgJiZcblx0XHR3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudFxuXHQpO1xuXG5cdHZhciBFeGVjdXRpb25FbnZpcm9ubWVudCA9IHtcblxuXHRcdGNhblVzZURPTTogY2FuVXNlRE9NLFxuXG5cdFx0Y2FuVXNlV29ya2VyczogdHlwZW9mIFdvcmtlciAhPT0gJ3VuZGVmaW5lZCcsXG5cblx0XHRjYW5Vc2VFdmVudExpc3RlbmVyczpcblx0XHRcdGNhblVzZURPTSAmJiAhISh3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciB8fCB3aW5kb3cuYXR0YWNoRXZlbnQpLFxuXG5cdFx0Y2FuVXNlVmlld3BvcnQ6IGNhblVzZURPTSAmJiAhIXdpbmRvdy5zY3JlZW5cblxuXHR9O1xuXG5cdGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBkZWZpbmUuYW1kID09PSAnb2JqZWN0JyAmJiBkZWZpbmUuYW1kKSB7XG5cdFx0ZGVmaW5lKGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiBFeGVjdXRpb25FbnZpcm9ubWVudDtcblx0XHR9KTtcblx0fSBlbHNlIGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykge1xuXHRcdG1vZHVsZS5leHBvcnRzID0gRXhlY3V0aW9uRW52aXJvbm1lbnQ7XG5cdH0gZWxzZSB7XG5cdFx0d2luZG93LkV4ZWN1dGlvbkVudmlyb25tZW50ID0gRXhlY3V0aW9uRW52aXJvbm1lbnQ7XG5cdH1cblxufSgpKTtcbiJdfQ==
