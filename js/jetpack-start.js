(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var AppDispatcher=require("../dispatcher/app-dispatcher"),JPSConstants=require("../constants/jetpack-start-constants"),DataActions={requestStarted:function(){AppDispatcher.dispatch({actionType:JPSConstants.SAVE_STARTED})},requestFinished:function(){AppDispatcher.dispatch({actionType:JPSConstants.SAVE_FINISHED})}};module.exports=DataActions;


},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23}],2:[function(require,module,exports){
var AppDispatcher=require("../dispatcher/app-dispatcher"),JPSConstants=require("../constants/jetpack-start-constants"),FlashActions={notice:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SET_FLASH,message:t,severity:JPSConstants.FLASH_SEVERITY_NOTICE})},error:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SET_FLASH,message:t,severity:JPSConstants.FLASH_SEVERITY_ERROR})},unset:function(){AppDispatcher.dispatch({actionType:JPSConstants.UNSET_FLASH})}};module.exports=FlashActions;


},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23}],3:[function(require,module,exports){
var AppDispatcher=require("../dispatcher/app-dispatcher"),JPSConstants=require("../constants/jetpack-start-constants"),Paths=require("../constants/jetpack-start-paths"),FlashActions=require("./flash-actions"),SiteActions=require("./site-actions"),WPAjax=require("../utils/wp-ajax"),SetupProgressStore=require("../stores/setup-progress-store"),SiteStore=require("../stores/site-store"),SetupProgressActions={resetData:function(){WPAjax.post(JPS.site_actions.reset_data).fail(function(t){FlashActions.error("Failed to save data: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.RESET_DATA})},completeStep:function(t,e){var s=SetupProgressStore.getStepFromSlug(t);AppDispatcher.dispatch({actionType:JPSConstants.STEP_COMPLETE,slug:t}),this._recordComplete(s,e)},completeAndNextStep:function(t,e){this.completeStep(t,e),AppDispatcher.dispatch({actionType:JPSConstants.STEP_NEXT,slug:t})},_recordComplete:function(t,e){"undefined"==typeof e&&(e={}),e.completion=SetupProgressStore.getProgressPercent(),WPAjax.post(JPS.step_actions.complete,{step:t.slug,data:e}).fail(function(t){FlashActions.error(t)})},skipStep:function(){FlashActions.unset();var t=SetupProgressStore.getCurrentStep();t.skipped||WPAjax.post(JPS.step_actions.skip,{step:t.slug}).fail(function(t){FlashActions.error(t)}),AppDispatcher.dispatch({actionType:JPSConstants.STEP_SKIP})},getStarted:function(){WPAjax.post(JPS.step_actions.start).fail(function(t){FlashActions.error(t)}),AppDispatcher.dispatch({actionType:JPSConstants.STEP_GET_STARTED})},setCurrentStep:function(t){FlashActions.unset(),AppDispatcher.dispatch({actionType:JPSConstants.STEP_SELECT,slug:t})},selectNextStep:function(){FlashActions.unset(),AppDispatcher.dispatch({actionType:JPSConstants.STEP_NEXT})},submitTitleStep:function(){SiteActions.saveTitleAndDescription().done(function(){this.completeAndNextStep(Paths.SITE_TITLE_STEP_SLUG)}.bind(this))},submitLayoutStep:function(t){SiteActions.setLayout(t).done(function(){this.completeAndNextStep(Paths.LAYOUT_STEP_SLUG)}.bind(this))},submitJetpackJumpstart:function(){SiteActions.enableJumpstart().done(function(){this.completeStep(Paths.JETPACK_MODULES_STEP_SLUG)}.bind(this))},setActiveTheme:function(t){SiteActions.setActiveTheme(t).done(function(){this.completeStep(Paths.DESIGN_STEP_SLUG,{themeId:t.id})}.bind(this))},saveDesignStep:function(){this.completeAndNextStep(Paths.DESIGN_STEP_SLUG,{themeId:SiteStore.getActiveThemeId()})}};module.exports=SetupProgressActions;


},{"../constants/jetpack-start-constants":21,"../constants/jetpack-start-paths":22,"../dispatcher/app-dispatcher":23,"../stores/setup-progress-store":27,"../stores/site-store":28,"../utils/wp-ajax":30,"./flash-actions":2,"./site-actions":4}],4:[function(require,module,exports){
var AppDispatcher=require("../dispatcher/app-dispatcher"),JPSConstants=require("../constants/jetpack-start-constants"),SiteStore=require("../stores/site-store"),FlashActions=require("./flash-actions.js"),SpinnerActions=require("./spinner-actions.js"),WPAjax=require("../utils/wp-ajax"),SiteActions={setTitle:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SITE_SET_TITLE,title:t})},setDescription:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SITE_SET_DESCRIPTION,description:t})},saveTitleAndDescription:function(){var t=SiteStore.getTitle(),e=SiteStore.getDescription();return WPAjax.post(JPS.site_actions.set_title,{title:t,description:e}).fail(function(t){FlashActions.error("Error setting title: "+t)}),jQuery("#wp-admin-bar-site-name .ab-item").html(t),AppDispatcher.dispatch({actionType:JPSConstants.SITE_SAVE_TITLE_AND_DESCRIPTION,title:t}),jQuery.Deferred().resolve()},_installTheme:function(t){return t.installed?jQuery.Deferred().resolve():(SpinnerActions.show("Installing '"+t.name+"'"),WPAjax.post(JPS.site_actions.install_theme,{themeId:t.id}).done(function(){t.installed=!0,AppDispatcher.dispatch({actionType:JPSConstants.SITE_INSTALL_THEME,theme:t})}).fail(function(t){FlashActions.error("Server error installing theme: "+t)}).always(function(){SpinnerActions.hide()}))},_activateTheme:function(t){WPAjax.post(JPS.site_actions.set_theme,{themeId:t.id}).fail(function(t){FlashActions.error("Server error setting theme: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.SITE_SET_THEME,themeId:t.id})},setActiveTheme:function(t){return this._installTheme(t).done(function(){this._activateTheme(t)}.bind(this)),jQuery.Deferred().resolve()},setLayout:function(t){return WPAjax.post(JPS.site_actions.set_layout,{layout:t}).fail(function(t){FlashActions.error("Error setting layout: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.SITE_SET_LAYOUT,layout:t}),jQuery.Deferred().resolve()},configureJetpack:function(t){return SpinnerActions.show("Connecting to WordPress.com"),WPAjax.post(JPS.site_actions.configure_jetpack,{return_to_step:t}).done(function(t){AppDispatcher.dispatch({actionType:JPSConstants.SITE_JETPACK_CONFIGURED}),t.next?window.location.replace(t.next):SpinnerActions.hide()}).fail(function(t){FlashActions.error("Error enabling Jetpack: "+t),SpinnerActions.hide()})},activateJetpackModule:function(t){return WPAjax.post(JPS.site_actions.activate_jetpack_modules,{modules:[t]}).fail(function(t){FlashActions.error("Error activating Jetpack module: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.SITE_JETPACK_MODULE_ENABLED,slug:t}),jQuery.Deferred().resolve()},deactivateJetpackModule:function(t){return WPAjax.post(JPS.site_actions.deactivate_jetpack_modules,{modules:[t]}).fail(function(t){FlashActions.error("Error deactivating Jetpack module: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.SITE_JETPACK_MODULE_DISABLED,slug:t}),jQuery.Deferred().resolve()},loadAllJetpackModules:function(){return 0===SiteStore.getJetpackAdditionalModules().length?WPAjax.post(JPS.site_actions.list_jetpack_modules).done(function(t){AppDispatcher.dispatch({actionType:JPSConstants.SITE_JETPACK_ADD_MODULES,modules:t})}).fail(function(t){FlashActions.error("Error fetching all Jetpack modules: "+t)}):jQuery.Deferred().resolve()},enableJumpstart:function(){return WPAjax.post(JPS.site_actions.activate_jetpack_modules,{modules:SiteStore.getJumpstartModuleSlugs()}).fail(function(t){FlashActions.error("Error activating Jetpack modules: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.SITE_JETPACK_JUMPSTART_ENABLED}),jQuery.Deferred().resolve()}};module.exports=SiteActions;


},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23,"../stores/site-store":28,"../utils/wp-ajax":30,"./flash-actions.js":2,"./spinner-actions.js":5}],5:[function(require,module,exports){
var AppDispatcher=require("../dispatcher/app-dispatcher"),JPSConstants=require("../constants/jetpack-start-constants"),SpinnerActions={show:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SHOW_SPINNER,message:t})},hide:function(){AppDispatcher.dispatch({actionType:JPSConstants.HIDE_SPINNER})},showAsync:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SHOW_ASYNC_SPINNER,message:t})},hideAsync:function(){AppDispatcher.dispatch({actionType:JPSConstants.HIDE_ASYNC_SPINNER})}};module.exports=SpinnerActions;


},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23}],6:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Button=require("@automattic/dops-react/js/components/button"),SiteStore=require("../stores/site-store"),WelcomeSection=require("./welcome-section"),SettingsItem=React.createClass({displayName:"SettingsItem",styles:{item:{padding:"1em",marginBottom:"1em",listStyle:"none",background:"#f5f5f5",border:"1px solid #ddd"},heading:{margin:0,fontSize:"1.2em",fontWeight:800}},render:function(){return React.createElement("li",{style:this.styles.item},React.createElement("h5",{style:this.styles.heading},this.props.title),this.props.children)}}),AdvancedSettingsStep=React.createClass({displayName:"AdvancedSettingsStep",styles:{wrapper:{marginLeft:0}},render:function(){return React.createElement(WelcomeSection,null,React.createElement("h4",null,"Advanced settings"),React.createElement("ul",{style:this.styles.wrapper},React.createElement(SettingsItem,{title:"Fine-tune your site's layout and appearance"},"Customize your siteâ€™s colors, fonts, sidebars and other settings.",React.createElement("br",null),React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.customize_url},"Customize my site"),"Â Â ",React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.themes_url},"Browse and add themes")),("blog"==SiteStore.getLayout()||"site-blog"==SiteStore.getLayout())&&React.createElement(SettingsItem,{title:"Create your first blog post"},'An epic essay or just "Hello World!"',React.createElement("br",null),React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.new_blog_post_url},"Write a new blog post"),"Â Â ",React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.manage_posts_url},"Manage posts")),React.createElement(SettingsItem,{title:"Create a static page"},'"About me", "Our Services" or anything else you can imagine.',React.createElement("br",null),React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.new_page_url},"Create a new page"),"Â Â ",React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.manage_pages_url},"Manage pages")),React.createElement(SettingsItem,{title:"Extend your site's functionality"},"WordPress offers thousands of plugins from Jetpack and the WordPress community.",React.createElement("br",null),React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.plugins_url},"Manage plugins"),"Â Â ",SiteStore.getJetpackConfigured()&&React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.jetpack_modules_url},"Manage Jetpack modules")),React.createElement(SettingsItem,{title:"Learn more"},React.createElement("a",{href:"https://codex.wordpress.org/First_Steps_With_WordPress"},"First Steps with WordPress")," - an online guide from the creators of WordPress")))}});module.exports=AdvancedSettingsStep;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../stores/site-store":28,"./welcome-section":19,"@automattic/dops-react/js/components/button":32}],7:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,ContentBox=React.createClass({displayName:"ContentBox",render:function(){return React.createElement("div",{className:"welcome__content_box"},this.props.children,React.createElement("div",{className:"clear"}))}});module.exports=ContentBox;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],8:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Dashicon=React.createClass({displayName:"Dashicon",propTypes:{name:React.PropTypes.string.isRequired,style:React.PropTypes.object,onMouseOver:React.PropTypes.func,onMouseOut:React.PropTypes.func},render:function(){return React.createElement("span",{style:this.props.style,onMouseOver:this.props.onMouseOver,onMouseOut:this.props.onMouseOut,className:"dashicons dashicons-"+this.props.name},this.props.children)}});module.exports=Dashicon;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],9:[function(require,module,exports){
(function (global){
function getThemeState(){return{themes:SiteStore.getThemes(),site_title:SiteStore.getTitle()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SiteStore=require("../stores/site-store"),SetupProgressActions=require("../actions/setup-progress-actions"),Tooltip=require("./tooltip"),WelcomeSection=require("./welcome-section"),ContentBox=require("./content-box"),Button=require("@automattic/dops-react/js/components/button"),DesignStep=React.createClass({displayName:"DesignStep",componentDidMount:function(){SiteStore.addChangeListener(this._onChange),this._loadPopularThemes()},componentWillUnmount:function(){SiteStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getThemeState())},getInitialState:function(){var e=getThemeState();return e.popularThemes=[],e},handleActivateTheme:function(e){e.preventDefault(),this.setState({tooltipTheme:null,tooltipPosition:null});var t=jQuery(e.currentTarget),n=t.data("theme-id"),o=this.findTheme(n),a=!o.installed,i=SetupProgressActions.setActiveTheme(o);a&&i.done(function(){this._loadPopularThemes()}.bind(this))},findTheme:function(e){return _.findWhere(this.state.themes,{id:e})||_.findWhere(this.state.popularThemes,{id:e})},handleContinue:function(e){e.preventDefault(),SetupProgressActions.saveDesignStep()},handleShowTooltip:function(e){e.preventDefault();var t=jQuery(e.currentTarget),n=this.findTheme(t.data("theme-id")),o=t.position(),a=t.outerWidth(),i=t.outerHeight(),s={top:o.top+i/2,left:o.left+a};this.setState({tooltipTheme:n,tooltipPosition:s})},handleHideTooltip:function(e){e.preventDefault(),this.setState({tooltipTheme:null,tooltipPosition:null})},handleGetPopularThemes:function(e){e.preventDefault(),this._loadPopularThemes()},_loadPopularThemes:function(){SiteStore.getPopularThemes().done(function(e){this.setState({popularThemes:e})}.bind(this))},render:function(){return React.createElement(WelcomeSection,{id:"welcome__design"},React.createElement("h3",null,"Let's launch ",React.createElement("em",null,this.state.site_title)),React.createElement("h4",null,"Pick a design"),React.createElement("p",{className:"step-description"},'A "theme" controls the design of your site - colours, fonts and layout.'),React.createElement("p",{className:"step-description"},"Click any theme below to choose it for your site. And don't worry - you can easily change this later."),React.createElement("p",{className:"submit"},React.createElement(Button,{color:"blue",onClick:this.handleContinue},"Next Step â†’")),React.createElement(ContentBox,null,React.createElement("h3",null,"Installed themes"),React.createElement("div",{className:"theme-browser rendered"},this._renderThemeList())),React.createElement(ContentBox,null,React.createElement("h3",null,"Popular themes from WordPress.org",React.createElement(Button,{color:"blue",style:{"float":"right"},onClick:this.handleGetPopularThemes},"Load more themes")),React.createElement("div",{className:"theme-browser rendered"},this._renderPopularThemeList())),React.createElement("div",{style:{clear:"both"}}),this.state.tooltipTheme&&this._renderTooltip())},_renderTooltip:function(){var e=this.state.tooltipTheme,t=this.state.tooltipPosition;return React.createElement(Tooltip,{left:t.left,top:t.top,width:320,title:e.name},React.createElement("p",null,"By ",e.author),React.createElement("p",{dangerouslySetInnerHTML:{__html:_.unescape(e.description)}}))},_renderTheme:function(e){return React.createElement("div",{key:e.id,className:"theme"+(e.active?" active":""),"data-theme-id":e.id,onClick:this.handleActivateTheme,onMouseEnter:this.handleShowTooltip,onMouseLeave:this.handleHideTooltip,"aria-describedby":e.id+"-action "+e.id+"-name"},e.screenshot?React.createElement("div",{className:"theme-screenshot"},React.createElement("img",{src:e.screenshot,alt:""})):React.createElement("div",{className:"theme-screenshot blank"}),!e.active&&React.createElement("span",{className:"more-details"},e.installed?"Click to select":"Click to install"),React.createElement("h3",{className:"theme-name",id:e.id+"-name"},React.createElement("span",null,e.active?"Selected:":"")," ",e.name))},_renderPopularThemeList:function(){return this.state.popularThemes.map(this._renderTheme)},_renderThemeList:function(){return this.state.themes.map(this._renderTheme)}});module.exports=DesignStep;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../stores/site-store":28,"./content-box":7,"./tooltip":17,"./welcome-section":19,"@automattic/dops-react/js/components/button":32}],10:[function(require,module,exports){
(function (global){
function getFlashState(){return FlashStore.getFlash()}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,FlashStore=require("../stores/flash-store"),Flash=React.createClass({displayName:"Flash",componentDidMount:function(){FlashStore.addChangeListener(this._onChange)},componentWillUnmount:function(){FlashStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getFlashState())},getInitialState:function(){return getFlashState()},render:function(){return this.state.message?React.createElement("div",{className:this.state.severity+" updated"},this.state.message):null}});module.exports=Flash;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../stores/flash-store":26}],11:[function(require,module,exports){
(function (global){
function getSetupState(){return{}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SetupProgressStore=require("../stores/setup-progress-store"),SetupProgressActions=require("../actions/setup-progress-actions"),Button=require("@automattic/dops-react/js/components/button"),Radium=require("radium"),GetStarted=React.createClass({displayName:"GetStarted",componentDidMount:function(){SetupProgressStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SetupProgressStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getSetupState())},getInitialState:function(){return getSetupState()},handleGetStarted:function(e){e.preventDefault(),SetupProgressActions.getStarted()},_isIE8:function(){jQuery("html").is(".ie8")},styles:{wrapper:{textAlign:"center",backgroundImage:"url("+JPS.base_url+"/img/jps-welcome.png)",backgroundRepeat:"no-repeat",backgroundPosition:"center bottom",backgroundSize:"520px auto",paddingBottom:200,"@media (max-width: 782px)":{backgroundImage:"none",paddingBottom:30}},wrapperIE8:{backgroundImage:"none"},subhead:{margin:"0 0 30px",color:"#666",fontSize:18,lineHeight:1.6,textAlign:"center","@media (max-width: 600px)":{marginBottom:15,fontSize:15},"@media (max-width: 320px)":{fontSize:13}}},render:function(){return React.createElement("div",{key:"welcome-intro",style:[this.styles.wrapper,this._isIE8()&&this.styles.wrapperIE8]},React.createElement("h3",null,"You're almost done!"),React.createElement("p",{style:this.styles.subhead},"Take these steps to supercharge your WordPress site."),React.createElement("p",null,React.createElement(Button,{color:"green",size:"big",theme:"jetpack",onClick:this.handleGetStarted},"Get Started â†’")))}});module.exports=Radium(GetStarted);


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../stores/setup-progress-store":27,"@automattic/dops-react/js/components/button":32,"radium":61}],12:[function(require,module,exports){
(function (global){
function getJetpackProgress(){return{jetpackConfigured:SiteStore.getJetpackConfigured()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SiteStore=require("../stores/site-store"),SiteActions=require("../actions/site-actions"),Paths=require("../constants/jetpack-start-paths"),JetpackJumpstartMenu=React.createClass({displayName:"JetpackJumpstartMenu",componentDidMount:function(){SiteStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SiteStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getJetpackProgress())},getInitialState:function(){return getJetpackProgress()},handleClickConnect:function(e){e.preventDefault(),console.log("clicked"),SiteActions.configureJetpack(Paths.JETPACK_MODULES_STEP_SLUG)},style:{color:"black",fontSize:12},render:function(){return React.createElement("div",{style:this.style},this.state.jetpackConfigured?React.createElement("div",null):React.createElement("div",null,"Boost traffic, enhance security, and improve performance with a connection to WordPress.com",React.createElement("br",null),React.createElement("a",{className:"button button-primary button-large",href:"#",onClick:this.handleClickConnect},"Connect to WordPress.com")))}});module.exports=JetpackJumpstartMenu;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/site-actions":4,"../constants/jetpack-start-paths":22,"../stores/site-store":28}],13:[function(require,module,exports){
(function (global){
function getJetpackState(){return{site_title:SiteStore.getTitle(),jetpackConfigured:SiteStore.getJetpackConfigured(),jumpstartEnabled:SiteStore.getJetpackJumpstartEnabled(),modulesEnabled:SiteStore.getActiveModuleSlugs()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Radium=require("radium"),SkipButton=require("./skip-button"),SiteStore=require("../stores/site-store"),SiteActions=require("../actions/site-actions"),Paths=require("../constants/jetpack-start-paths"),ContentBox=require("./content-box"),WelcomeSection=require("./welcome-section"),SetupProgressActions=require("../actions/setup-progress-actions"),SpinnerStore=require("../stores/spinner-store"),Button=require("@automattic/dops-react/js/components/button"),JetpackLogo=React.createClass({displayName:"JetpackLogo",styles:{jetpackLogoWrapper:{display:"block",textAlign:"center",height:70,color:"white",marginLeft:5,backgroundColor:"#81a844"},jetpackLogo:{display:"inline-block",position:"relative",width:214,marginRight:6,background:"url("+JPS.base_url+"/../jetpack/images/jetpack-logo.png) center center no-repeat",backgroundSize:"183px auto",color:"#fff",fontWeight:"normal"},jetpackLogoName:{textIndent:-9999,visibility:"hidden"}},render:function(){return React.createElement("span",{style:[this.styles.jetpackLogoWrapper,this.props.style]},"Powered by",React.createElement("br",null),React.createElement("a",{href:"/wp-admin/admin.php?page=jetpack",title:"Jetpack",style:this.styles.jetpackLogo},React.createElement("span",{style:this.styles.jetpackLogoName},"Jetpack")))}});JetpackLogo=Radium(JetpackLogo);var JetpackJumpstart=React.createClass({displayName:"JetpackJumpstart",styles:{jetpackLogo:{"float":"left","@media (min-width: 782px)":{"float":"none",marginLeft:0}},jumpstartModule:{"float":"left",position:"relative",height:160,padding:10,"@media (min-width: 782px)":{width:"33%"}},jumpstartModuleDesc:{display:"block",marginTop:5,lineHeight:"150%"}},componentDidMount:function(){SiteStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SiteStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getJetpackState())},getInitialState:function(){var e=getJetpackState();return e.showMoreModules=!1,e},handleJetpackConnect:function(e){e.preventDefault(),SiteActions.configureJetpack(Paths.JETPACK_MODULES_STEP_SLUG)},handleChangeModuleStatus:function(e){var t=jQuery(e.currentTarget),a=t.data("module-slug");SiteStore.isJetpackModuleEnabled(a)?SiteActions.deactivateJetpackModule(a):SiteActions.activateJetpackModule(a)},handleEnableAllModules:function(e){e.preventDefault(),SiteActions.enableJumpstart()},handleNext:function(e){e.preventDefault(),SetupProgressActions.completeAndNextStep(Paths.JETPACK_MODULES_STEP_SLUG)},handleShowMoreModules:function(e){e.preventDefault(),SiteActions.loadAllJetpackModules().done(function(){this.setState({showMoreModules:!0})}.bind(this))},handleShowFewerModules:function(e){e.preventDefault(),this.setState({showMoreModules:!1})},_renderModule:function(e){var t=SiteStore.isJetpackModuleEnabled(e.slug),a="jp-module-"+e.slug;return React.createElement("div",{key:"modules-"+e.slug,style:this.styles.jumpstartModule},React.createElement("input",{id:a,type:"checkbox",checked:t,"data-module-slug":e.slug,onChange:this.handleChangeModuleStatus}),React.createElement("label",{htmlFor:a},React.createElement("strong",null,e.name)),React.createElement("div",{style:this.styles.jumpstartModuleDesc},React.createElement("div",{dangerouslySetInnerHTML:{__html:e.description}}),t&&e.configure_url&&React.createElement("div",null,React.createElement("a",{target:"_configure",href:e.configure_url},"configure"))))},render:function(){var e,t;this.state.jetpackConfigured||SpinnerStore.showing()||(e=React.createElement("div",{className:"welcome__jumpstart_overlay"}),t=React.createElement("div",{className:"welcome__jumpstart_overlay__body"},React.createElement("p",null,"These modules require a WordPress.com account - it's free!"),React.createElement(Button,{color:"green",size:"big",theme:"jetpack",onClick:this.handleJetpackConnect},"Connect to WordPress.com"),React.createElement("p",null,React.createElement(SkipButton,null))));var a=SiteStore.getJumpstartModules().map(this._renderModule),n=SiteStore.getJetpackAdditionalModules().map(this._renderModule);return React.createElement(WelcomeSection,null,React.createElement("h3",null,"Let's launch ",React.createElement("em",null,this.state.site_title)),React.createElement("h4",null,"Enable Jetpack features"),this.state.jetpackConfigured&&React.createElement("div",null,React.createElement(JetpackLogo,{style:this.styles.jetpackLogo}),React.createElement("p",{style:{fontSize:"larger"}},"Congratulations! You've enabled Jetpack and unlocked dozens of powerful features."),React.createElement("p",{style:{fontSize:"larger"}},"Check the boxes below to enable our most popular features.")),React.createElement("div",{className:"welcome__connect"},React.createElement("div",{className:"welcome__jumpstart_wrapper"},e,t,this.state.jetpackConfigured&&React.createElement("div",{className:"submit"},React.createElement(Button,{style:{"float":"right"},color:"blue",onClick:this.handleNext},"Next Step â†’"),React.createElement("div",{className:"clear"})),React.createElement(ContentBox,null,React.createElement("h3",null,"Popular features Â Â ",React.createElement(Button,{disabled:this.state.jumpstartEnabled,color:"blue",onClick:this.handleEnableAllModules},this.state.jumpstartEnabled?"Enabled":"Enable all (recommended)")),a),this.state.showMoreModules?React.createElement("p",{className:"more"},React.createElement("a",{href:"#",onClick:this.handleShowFewerModules},"hide additional features")):React.createElement("p",{className:"more"},React.createElement("a",{href:"#",onClick:this.handleShowMoreModules},"show additional features")),this.state.showMoreModules&&React.createElement(ContentBox,null,React.createElement("h3",null,"Additional modules"),n))))}});module.exports=Radium(JetpackJumpstart);


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../actions/site-actions":4,"../constants/jetpack-start-paths":22,"../stores/site-store":28,"../stores/spinner-store":29,"./content-box":7,"./skip-button":16,"./welcome-section":19,"@automattic/dops-react/js/components/button":32,"radium":61}],14:[function(require,module,exports){
(function (global){
function getSiteLayoutState(){return{site_title:SiteStore.getTitle(),layout:SiteStore.getLayout()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SiteStore=require("../stores/site-store"),Button=require("@automattic/dops-react/js/components/button"),WelcomeSection=require("./welcome-section"),SetupProgressActions=require("../actions/setup-progress-actions"),LayoutStep=React.createClass({displayName:"LayoutStep",componentDidMount:function(){SiteStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SiteStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getSiteLayoutState())},getInitialState:function(){return getSiteLayoutState()},handleSetLayout:function(e){this.setState({layout:jQuery(e.currentTarget).val()})},handleSubmit:function(e){e.preventDefault(),SetupProgressActions.submitLayoutStep(this.state.layout)},render:function(){return React.createElement(WelcomeSection,{id:"welcome__layout"},React.createElement("h3",null,"Let's launch ",React.createElement("em",null,this.state.site_title)),React.createElement("h4",null,"Select a layout"),React.createElement("p",{className:"step-description"},"WordPress can be a blog, a web site with a hierarchy of static pages, or a combination of the two."),React.createElement("form",{onSubmit:this.handleSubmit},React.createElement("label",null,React.createElement("input",{type:"radio",name:"site_layout",value:"website",checked:"website"===this.state.layout,onChange:this.handleSetLayout})," Static Website",React.createElement("p",{className:"description"},"A web site with a hierarchy of pages")),React.createElement("br",null),React.createElement("label",null,React.createElement("input",{type:"radio",name:"site_layout",value:"site-blog",checked:"site-blog"===this.state.layout,onChange:this.handleSetLayout})," Static Website with a blog",React.createElement("p",{className:"description"},"A web site with pages that also has a blog or news section")),React.createElement("br",null),React.createElement("label",null,React.createElement("input",{type:"radio",name:"site_layout",value:"blog",checked:"blog"===this.state.layout,onChange:this.handleSetLayout})," Just a blog",React.createElement("p",{className:"description"},"A web site that will constantly show new content (articles, photos, videos, etc.)")),React.createElement("p",{className:"submit"},React.createElement(Button,{color:"blue"},"Next Step â†’"))))}});module.exports=LayoutStep;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../stores/site-store":28,"./welcome-section":19,"@automattic/dops-react/js/components/button":32}],15:[function(require,module,exports){
(function (global){
function getSiteTitleState(){return{title:SiteStore.getTitle(),description:SiteStore.getDescription()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SiteActions=require("../actions/site-actions"),SiteStore=require("../stores/site-store"),WelcomeSection=require("./welcome-section"),Button=require("@automattic/dops-react/js/components/button"),SetupProgressActions=require("../actions/setup-progress-actions"),SiteTitleStep=React.createClass({displayName:"SiteTitleStep",componentDidMount:function(){SiteStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SiteStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getSiteTitleState())},getInitialState:function(){return getSiteTitleState()},handleChangeTitle:function(e){SiteActions.setTitle(e.currentTarget.value)},handleChangeDescription:function(e){SiteActions.setDescription(e.currentTarget.value)},handleSubmit:function(e){e.preventDefault(),SetupProgressActions.submitTitleStep()},render:function(){return React.createElement(WelcomeSection,{id:"welcome__site-title"},React.createElement("h3",null,"Let's launch your new website"),React.createElement("h4",null,"Title and Description"),React.createElement("p",{className:"step-description"},"Make your site stand out with a catchy name."),React.createElement("form",{onSubmit:this.handleSubmit},React.createElement("table",{className:"form-table"},React.createElement("tbody",null,React.createElement("tr",null,React.createElement("th",null,React.createElement("label",{htmlFor:"site_title"},"Site Title")),React.createElement("td",null,React.createElement("input",{type:"text",name:"site_title",id:"site-title",autoComplete:"off",onChange:this.handleChangeTitle,value:this.state.title,placeholder:"Site Title (this can be changed later)",required:!0}),React.createElement("p",{className:"description"},"The name of your site. This title appears at the top of pages and in search results."))),React.createElement("tr",null,React.createElement("th",null,React.createElement("label",{htmlFor:"site_description"},"Site Description")),React.createElement("td",null,React.createElement("input",{type:"text",name:"site_description",id:"site-description",autoComplete:"off",onChange:this.handleChangeDescription,value:this.state.description,placeholder:"Site Description",required:!0}),React.createElement("p",{className:"description"},'A motto or tagline. This appears below the title on your site, and next to the title in search results. Try to be brief and descriptive, e.g. "Your online bait and tackle store"'))))),React.createElement("p",{className:"submit"},React.createElement(Button,{color:"blue"},"Next Step â†’"))))}});module.exports=SiteTitleStep;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../actions/site-actions":4,"../stores/site-store":28,"./welcome-section":19,"@automattic/dops-react/js/components/button":32}],16:[function(require,module,exports){
(function (global){
function getSetupProgress(){return{completed:SetupProgressStore.getCurrentStep().completed}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SetupProgressStore=require("../stores/setup-progress-store"),SetupProgressActions=require("../actions/setup-progress-actions"),SkipButton=React.createClass({displayName:"SkipButton",style:{color:"#bbb",fontSize:"90%",marginLeft:20,borderBottom:"1px dotted #bbb"},componentDidMount:function(){SetupProgressStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SetupProgressStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getSetupProgress())},getInitialState:function(){return getSetupProgress()},handleSkip:function(e){e.preventDefault(),SetupProgressActions.skipStep()},render:function(){var e=this.state.completed;return e?null:React.createElement("a",{style:this.style,href:"#",onClick:this.handleSkip},"Not now")}});module.exports=SkipButton;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../stores/setup-progress-store":27}],17:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Tooltip=React.createClass({displayName:"Tooltip",propTypes:{left:React.PropTypes.number.isRequired,top:React.PropTypes.number.isRequired,width:React.PropTypes.number.isRequired,title:React.PropTypes.string.isRequired},handleDismiss:function(e){e.preventDefault()},componentDidMount:function(){this._recomputePosition()},componentWillReceiveProps:function(){this._recomputePosition()},getInitialState:function(){return{realTop:this.props.top}},_recomputePosition:function(){var e=jQuery(React.findDOMNode(this.refs.wrapper));this.setState({realTop:this.props.top-e.outerHeight()/2})},render:function(){return React.createElement("div",{ref:"wrapper",className:"wp-pointer wp-pointer-left",style:{position:"absolute",width:this.props.width,top:this.state.realTop,left:this.props.left,zIndex:9999}},React.createElement("div",{className:"wp-pointer-content"},React.createElement("h3",null,this.props.title),React.createElement("p",null,this.props.children)),React.createElement("div",{className:"wp-pointer-arrow"},React.createElement("div",{className:"wp-pointer-arrow-inner"})))}});module.exports=Tooltip;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],18:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Radium=require("radium"),ProgressBar=require("@automattic/dops-react/js/components/progress-bar"),SetupProgressActions=require("../actions/setup-progress-actions"),Dashicon=require("./dashicon"),stepShape=React.PropTypes.shape({name:React.PropTypes.string.isRequired,slug:React.PropTypes.string}),WelcomeMenu=React.createClass({displayName:"WelcomeMenu",propTypes:{currentStep:stepShape.isRequired,clickable:React.PropTypes.bool,allSteps:React.PropTypes.arrayOf(stepShape).isRequired,progressPercent:React.PropTypes.number.isRequired},getDefaultProps:function(){return{clickable:!0}},styles:{wrapper:{"float":"right",width:"28%",height:"100%",background:"#fafafa",border:"1px solid #eee"},title:{margin:0,padding:12,overflow:"hidden",background:"#444",color:"#fff",fontSize:12,textTransform:"uppercase"},list:{marginRight:10,listStyle:"none"},menuItem:{position:"relative",color:"#ccc",lineHeight:1.7,"@media (max-width: 782px)":{fontSize:"small"},"@media (max-width: 600px)":{fontSize:"smaller"}},menuItemCompleted:{color:"#4AB866"},icon:{fontSize:16,top:3,position:"relative"},menuItemLink:{color:"inherit",borderBottom:"1px dashed"},menuItemCurrent:{color:"#0074A2"}},selectStep:function(e){e.preventDefault();var t=jQuery(e.currentTarget).data("step-slug");SetupProgressActions.setCurrentStep(t)},render:function(){var e=this.props.allSteps.map(function(e){var t,r,s,a;return this.props.clickable&&this.props.currentStep&&(r=this.props.currentStep.slug==e.slug),t=!e["static"]&&this.props.clickable?React.createElement("a",{href:"#",style:this.styles.menuItemLink,"data-step-slug":e.slug,onClick:this.selectStep},e.name):e.name,e.menuView&&this.props.clickable&&(s=React.createElement(e.menuView,null)),a=e.completed?"yes":"arrow-right-alt2",React.createElement("li",{key:e.slug,style:[this.styles.menuItem,e.completed&&this.styles.menuItemCompleted,r&&this.styles.menuItemCurrent]},React.createElement(Dashicon,{style:this.styles.icon,name:a}),t," ",e.skipped?"(skipped)":null,s)}.bind(this));return React.createElement("div",{style:this.styles.wrapper},React.createElement("h3",{style:this.styles.title},React.createElement("span",{style:{"float":"left",marginRight:10}},"Your Progress"),React.createElement("div",null,React.createElement(ProgressBar,{style:{"float":"left"},progressPercent:this.props.progressPercent}))),React.createElement("ol",{style:this.styles.list},e))}});module.exports=Radium(WelcomeMenu);


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"./dashicon":8,"@automattic/dops-react/js/components/progress-bar":33,"radium":61}],19:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,WelcomeSection=React.createClass({displayName:"WelcomeSection",render:function(){var e=this.props,t=function(e,t){var o={},r=Object.prototype.hasOwnProperty;if(null==e)throw new TypeError;for(var n in e)r.call(e,n)&&!r.call(t,n)&&(o[n]=e[n]);return o}(e,{});return React.createElement("div",React.__spread({},t,{className:"welcome__section"}),this.props.children)}});module.exports=WelcomeSection;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],20:[function(require,module,exports){
(function (global){
function getSetupProgress(){return{newUser:SetupProgressStore.isNewUser(),showSpinner:SpinnerStore.showing(),spinnerMessage:SpinnerStore.getMessage(),currentStep:SetupProgressStore.getCurrentStep(),allSteps:SetupProgressStore.getAllSteps(),progressPercent:SetupProgressStore.getProgressPercent()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,WelcomeMenu=require("./welcome-menu"),SetupProgressStore=require("../stores/setup-progress-store"),Reset=require("@automattic/dops-react/js/components/reset"),SetupProgressActions=require("../actions/setup-progress-actions"),Flash=require("./flash"),GetStarted=require("./get-started"),SpinnerStore=require("../stores/spinner-store"),SpinnerActions=require("../actions/spinner-actions"),DataStore=require("../stores/data-store"),WelcomeWidget=React.createClass({displayName:"WelcomeWidget",componentDidMount:function(){SetupProgressStore.addChangeListener(this._onChange),SpinnerStore.addChangeListener(this._onSpinnerChange),DataStore.addChangeListener(this._onDataChange)},componentWillUnmount:function(){SetupProgressStore.removeChangeListener(this._onChange),SpinnerStore.removeChangeListener(this._onSpinnerChange),DataStore.removeChangeListener(this._onDataChange)},_onChange:function(){this.setState(getSetupProgress())},_onSpinnerChange:function(){this.setState({showSpinner:SpinnerStore.showing(),spinnerMessage:SpinnerStore.getMessage()})},_onDataChange:function(){this.setState({saving:DataStore.isSaving()})},getInitialState:function(){return getSetupProgress()},handleReset:function(e){e.preventDefault(),SetupProgressActions.resetData()},handleShowSpinner:function(e){e.preventDefault(),SpinnerActions.show("Testing spinner")},handleHideSpinner:function(e){e.preventDefault(),SpinnerActions.hide()},render:function(){return React.createElement(Reset,{className:"getting-started"},this._renderDebug(),React.createElement("div",{className:"getting-started__wrapper"},this._renderSpinner(),React.createElement("div",{className:"getting-started__sections"},React.createElement(Flash,null),this._renderSection()),React.createElement(WelcomeMenu,{clickable:!this.state.newUser,currentStep:this.state.currentStep,allSteps:this.state.allSteps,progressPercent:this.state.progressPercent}),React.createElement("div",{className:"clear"})))},_renderSection:function(){return this.state.newUser?React.createElement(GetStarted,null):this._renderCurrentView()},_renderDebug:function(){return JPS.debug?React.createElement("div",null,React.createElement("a",{href:"#",className:"button",onClick:this.handleReset},"Reset Wizard"),React.createElement("a",{href:"#",className:"button",onClick:this.handleShowSpinner},"Show spinner"),React.createElement("a",{href:"#",className:"button",onClick:this.handleHideSpinner},"Hide spinner")):null},_renderSpinner:function(){return this.state.showSpinner?React.createElement("div",{className:"loading"},React.createElement("div",{className:"loading__message"},React.createElement("img",{src:"/wp-admin/images/spinner-2x.gif",width:"16px",height:"16px"}),"Â Â ",this.state.spinnerMessage)):null},_renderCurrentView:function(){return this.state.currentStep?React.createElement(this.state.currentStep.welcomeView,null):React.createElement("h3",null,"Nothing")}});module.exports=WelcomeWidget;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../actions/spinner-actions":5,"../stores/data-store":25,"../stores/setup-progress-store":27,"../stores/spinner-store":29,"./flash":10,"./get-started":11,"./welcome-menu":18,"@automattic/dops-react/js/components/reset":34}],21:[function(require,module,exports){
var keyMirror=require("keymirror");module.exports=keyMirror({STEP_COMPLETE:null,STEP_GET_STARTED:null,STEP_SELECT:null,STEP_NEXT:null,STEP_SKIP:null,SITE_SET_TITLE:null,SITE_SET_DESCRIPTION:null,SITE_SAVE_TITLE_AND_DESCRIPTION:null,SITE_SET_THEME:null,SITE_INSTALL_THEME:null,SITE_JETPACK_CONFIGURED:null,SITE_JETPACK_MODULE_ENABLED:null,SITE_JETPACK_MODULE_DISABLED:null,SITE_JETPACK_JUMPSTART_ENABLED:null,SITE_JETPACK_ADD_MODULES:null,SITE_SET_LAYOUT:null,SAVE_STARTED:null,SAVE_FINISHED:null,SET_FLASH:null,UNSET_FLASH:null,FLASH_SEVERITY_NOTICE:null,FLASH_SEVERITY_ERROR:null,RESET_DATA:null,SHOW_SPINNER:null,HIDE_SPINNER:null});


},{"keymirror":55}],22:[function(require,module,exports){
module.exports={SITE_TITLE_STEP_SLUG:"title",LAYOUT_STEP_SLUG:"layout",TRAFFIC_STEP_SLUG:"traffic",STATS_MONITORING_STEP_SLUG:"stats-monitoring",DESIGN_STEP_SLUG:"design",ADVANCED_STEP_SLUG:"advanced",JETPACK_MODULES_STEP_SLUG:"jetpack"};


},{}],23:[function(require,module,exports){
var Dispatcher=require("flux").Dispatcher;module.exports=new Dispatcher;


},{"flux":50}],24:[function(require,module,exports){
var WelcomePanel=require("./welcome-panel");WelcomePanel();


},{"./welcome-panel":31}],25:[function(require,module,exports){
function incrementSaveCounter(){_currentSaves+=1}function decrementSaveCounter(){_currentSaves-=1}var AppDispatcher=require("../dispatcher/app-dispatcher"),EventEmitter=require("events").EventEmitter,JPSConstants=require("../constants/jetpack-start-constants"),_currentSaves=0,jpsTimeout,CHANGE_EVENT="change";jQuery(window).on("beforeunload",function(){return DataStore.isSaving()?(jpsTimeout=setTimeout(function(){},1e3),"Your site changes are still saving."):void 0}),jQuery(window).on("unload",function(){clearTimeout(jpsTimeout)});var DataStore=_.extend({},EventEmitter.prototype,{isSaving:function(){return _currentSaves>0},addChangeListener:function(e){this.on(CHANGE_EVENT,e)},removeChangeListener:function(e){this.removeListener(CHANGE_EVENT,e)},emitChange:function(){this.emit(CHANGE_EVENT)}});AppDispatcher.register(function(e){switch(e.actionType){case JPSConstants.SAVE_STARTED:incrementSaveCounter(),DataStore.emitChange();break;case JPSConstants.SAVE_FINISHED:decrementSaveCounter(),DataStore.emitChange()}}),module.exports=DataStore;


},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23,"events":53}],26:[function(require,module,exports){
function setFlash(e,t){message=e,severity=t}var AppDispatcher=require("../dispatcher/app-dispatcher"),EventEmitter=require("events").EventEmitter,JPSConstants=require("../constants/jetpack-start-constants"),CHANGE_EVENT="change",message,severity,FlashStore=_.extend({},EventEmitter.prototype,{getFlash:function(){var e;switch(severity){case JPSConstants.FLASH_SEVERITY_ERROR:e="error";break;case JPSConstants.FLASH_SEVERITY_NOTICE:e="notice"}return{message:message,severity:e}},addChangeListener:function(e){this.on(CHANGE_EVENT,e)},removeChangeListener:function(e){this.removeListener(CHANGE_EVENT,e)},emitChange:function(){this.emit(CHANGE_EVENT)}});AppDispatcher.register(function(e){switch(e.actionType){case JPSConstants.SET_FLASH:setFlash(e.message,e.severity),FlashStore.emitChange();break;case JPSConstants.UNSET_FLASH:setFlash(null,null),FlashStore.emitChange()}}),module.exports=FlashStore;


},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23,"events":53}],27:[function(require,module,exports){
function setSteps(e){e.forEach(function(e){"undefined"==typeof e.completed&&(e.completed=JPS.step_status[e.slug]&&JPS.step_status[e.slug].completed||!1),"undefined"==typeof e.skipped&&(e.skipped=JPS.step_status[e.slug]&&JPS.step_status[e.slug].skipped||!1),"undefined"==typeof e["static"]&&(e["static"]=!1),"undefined"==typeof e.includeInProgress&&(e.includeInProgress=!0)}),_steps=e,ensureValidStepSlug()}function getStarted(){_started=!0,selectNextPendingStep()}function complete(e){var t=getStepFromSlug(e);t.completed=!0,t.skipped=!1}function skip(){var e=currentStepSlug(),t=getStepFromSlug(e);t.skipped=!0,selectNextPendingStep()}function getStepFromSlug(e){var t=null;return _.each(_steps,function(s){s.slug===e&&(t=s)}),t}function ensureValidStepSlug(){var e=currentStepSlug();e&&getStepFromSlug(e)||selectNextPendingStep()}function selectNextPendingStep(){var e=_.findWhere(_steps,{completed:!1,skipped:!1});null!==e&&select(e.slug)}function currentStepSlug(){if(0===window.location.hash.indexOf("#welcome/steps")){var e=window.location.hash.split("/"),t=e[e.length-1];return t}return null}function select(e){window.location.hash="welcome/steps/"+e}function reset(){JPS.step_status={},_.where(_steps,{"static":!1}).forEach(function(e){e.completed=!1,e.skipped=!1}),_started=!1}var AppDispatcher=require("../dispatcher/app-dispatcher"),EventEmitter=require("events").EventEmitter,JPSConstants=require("../constants/jetpack-start-constants"),CHANGE_EVENT="change",_steps,_started=JPS.started,SetupProgressStore=_.extend({},EventEmitter.prototype,{init:function(e){setSteps(e)},getAllSteps:function(){return _steps},isNewUser:function(){return!_started},emitChange:function(){this.emit(CHANGE_EVENT)},getCurrentStep:function(){return getStepFromSlug(currentStepSlug())},getStepFromSlug:function(e){return getStepFromSlug(e)},getProgressPercent:function(){var e=_.where(_steps,{includeInProgress:!0}).length,t=_.where(_steps,{includeInProgress:!0,completed:!0}).length,s=t/e*90+10,n=10*Math.round(s/10);return n},addChangeListener:function(e){this.on(CHANGE_EVENT,e)},removeChangeListener:function(e){this.removeListener(CHANGE_EVENT,e)}});AppDispatcher.register(function(e){switch(e.actionType){case JPSConstants.STEP_GET_STARTED:getStarted(),SetupProgressStore.emitChange();break;case JPSConstants.STEP_SELECT:select(e.slug),SetupProgressStore.emitChange();break;case JPSConstants.STEP_NEXT:selectNextPendingStep(),SetupProgressStore.emitChange();break;case JPSConstants.STEP_COMPLETE:complete(e.slug),SetupProgressStore.emitChange();break;case JPSConstants.STEP_COMPLETE_AND_NEXT:complete(e.slug),selectNextPendingStep(),SetupProgressStore.emitChange();break;case JPSConstants.RESET_DATA:reset(),SetupProgressStore.emitChange();break;case JPSConstants.STEP_SKIP:skip(),SetupProgressStore.emitChange()}}),module.exports=SetupProgressStore;


},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23,"events":53}],28:[function(require,module,exports){
function setTitle(e){JPS.bloginfo.name=e}function setDescription(e){JPS.bloginfo.description=e}function setActiveTheme(e){JPS.themes.forEach(function(t){t.id==e?t.active=!0:t.active=!1})}function installedTheme(e){JPS.themes.unshift(e),JPS.themes=JPS.themes.slice(0,3)}function setJetpackModuleActivated(e){-1===_.indexOf(JPS.jetpack.active_modules,e)&&JPS.jetpack.active_modules.push(e)}function setJetpackModuleDectivated(e){var t=_.indexOf(JPS.jetpack.active_modules,e);t>=0&&JPS.jetpack.active_modules.splice(t,1)}function setJetpackAdditionalModules(e){JPS.jetpack.additional_modules=_.filter(e,function(e){return-1==_.indexOf(JPS.jetpack.jumpstart_modules.map(function(e){return e.slug}),e.slug)})}function setLayout(e){layout=e}function setJetpackConfigured(){JPS.jetpack.configured=!0}function setJetpackJumpstartActivated(){JPS.jetpack.jumpstart_modules.forEach(function(e){setJetpackModuleActivated(e.slug)})}var AppDispatcher=require("../dispatcher/app-dispatcher"),EventEmitter=require("events").EventEmitter,JPSConstants=require("../constants/jetpack-start-constants"),WPAjax=require("../utils/wp-ajax"),CHANGE_EVENT="change",layout=JPS.steps.layout.current,SiteStore=_.extend({},EventEmitter.prototype,{getTitle:function(){return JPS.bloginfo.name},getDescription:function(){return JPS.bloginfo.description},getThemes:function(){return JPS.themes},getActiveThemeId:function(){for(var e=0;e<JPS.themes.length;e++){var t=JPS.themes[e];if(t.active)return t.id}return null},getJetpackConfigured:function(){return JPS.jetpack.configured},getActiveModuleSlugs:function(){return JPS.jetpack.active_modules},isJetpackModuleEnabled:function(e){return _.indexOf(JPS.jetpack.active_modules,e)>=0},getJetpackAdditionalModules:function(){return JPS.jetpack.additional_modules},getJumpstartModuleSlugs:function(){return JPS.jetpack.jumpstart_modules.map(function(e){return e.slug})},getJumpstartModules:function(){return JPS.jetpack.jumpstart_modules},getPopularThemes:function(){return WPAjax.post(JPS.site_actions.get_popular_themes)},getJetpackJumpstartEnabled:function(){for(var e=0;e<JPS.jetpack.jumpstart_modules.length;e++){var t=JPS.jetpack.jumpstart_modules[e];if(!this.isJetpackModuleEnabled(t.slug))return!1}return!0},getLayout:function(){return layout},emitChange:function(){this.emit(CHANGE_EVENT)},addChangeListener:function(e){this.on(CHANGE_EVENT,e)},removeChangeListener:function(e){this.removeListener(CHANGE_EVENT,e)}});AppDispatcher.register(function(e){switch(e.actionType){case JPSConstants.SITE_SET_TITLE:setTitle(e.title),SiteStore.emitChange();break;case JPSConstants.SITE_SET_DESCRIPTION:setDescription(e.description),SiteStore.emitChange();break;case JPSConstants.SITE_SET_THEME:setActiveTheme(e.themeId),SiteStore.emitChange();break;case JPSConstants.SITE_INSTALL_THEME:installedTheme(e.theme),SiteStore.emitChange();break;case JPSConstants.SITE_JETPACK_CONFIGURED:setJetpackConfigured(),SiteStore.emitChange();break;case JPSConstants.SITE_JETPACK_ADD_MODULES:setJetpackAdditionalModules(e.modules),SiteStore.emitChange();break;case JPSConstants.SITE_JETPACK_MODULE_ENABLED:setJetpackModuleActivated(e.slug),SiteStore.emitChange();break;case JPSConstants.SITE_JETPACK_MODULE_DISABLED:setJetpackModuleDectivated(e.slug),SiteStore.emitChange();break;case JPSConstants.SITE_JETPACK_JUMPSTART_ENABLED:setJetpackJumpstartActivated(),SiteStore.emitChange();break;case JPSConstants.SITE_SET_LAYOUT:setLayout(e.layout),SiteStore.emitChange()}}),module.exports=SiteStore;


},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23,"../utils/wp-ajax":30,"events":53}],29:[function(require,module,exports){
function show(e){spinnerEnabled=!0,spinnerMessage=e}function hide(){spinnerEnabled=!1,spinnerMessage=null}var AppDispatcher=require("../dispatcher/app-dispatcher"),EventEmitter=require("events").EventEmitter,JPSConstants=require("../constants/jetpack-start-constants"),CHANGE_EVENT="change",spinnerEnabled=!1,spinnerMessage=null,SpinnerStore=_.extend({},EventEmitter.prototype,{showing:function(){return spinnerEnabled},getMessage:function(){return spinnerMessage},addChangeListener:function(e){this.on(CHANGE_EVENT,e)},removeChangeListener:function(e){this.removeListener(CHANGE_EVENT,e)},emitChange:function(){this.emit(CHANGE_EVENT)}});AppDispatcher.register(function(e){switch(e.actionType){case JPSConstants.SHOW_SPINNER:show(e.message),SpinnerStore.emitChange();break;case JPSConstants.HIDE_SPINNER:hide(),SpinnerStore.emitChange()}}),module.exports=SpinnerStore;


},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23,"events":53}],30:[function(require,module,exports){
var DataActions=require("../actions/data-actions"),WPAjax=function(){return{post:function(e,t){t="undefined"!=typeof t?t:{};var n=_.extend(t,{action:e,nonce:JPS.nonce}),a=jQuery.Deferred();return DataActions.requestStarted(),jQuery.post(ajaxurl,n).success(function(e){e.success?a.resolve(e.data):a.reject(e.data)}).fail(function(){a.reject("Server error")}).always(function(){DataActions.requestFinished()}),a}}}();module.exports=WPAjax;


},{"../actions/data-actions":1}],31:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,WelcomeWidget=require("./components/welcome-widget"),Paths=require("./constants/jetpack-start-paths"),SetupProgressStore=require("./stores/setup-progress-store");module.exports=function(){jQuery(document).ready(function(){SetupProgressStore.init([{name:"Site title",slug:Paths.SITE_TITLE_STEP_SLUG,welcomeView:require("./components/site-title-step")},{name:"Pick a layout",slug:Paths.LAYOUT_STEP_SLUG,welcomeView:require("./components/layout-step")},{name:"Pick a design",slug:Paths.DESIGN_STEP_SLUG,welcomeView:require("./components/design-step")},{name:"Enable Jetpack",slug:Paths.JETPACK_MODULES_STEP_SLUG,welcomeView:require("./components/jetpack-jumpstart-step"),menuView:require("./components/jetpack-jumpstart-menu")},{name:"Advanced settings",slug:Paths.ADVANCED_STEP_SLUG,welcomeView:require("./components/advanced-settings-step"),includeInProgress:!1}]),React.render(React.createElement(WelcomeWidget,{}),document.getElementById("jps-welcome-panel"))})};


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./components/advanced-settings-step":6,"./components/design-step":9,"./components/jetpack-jumpstart-menu":12,"./components/jetpack-jumpstart-step":13,"./components/layout-step":14,"./components/site-title-step":15,"./components/welcome-widget":20,"./constants/jetpack-start-paths":22,"./stores/setup-progress-store":27}],32:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,styles=require("../styles"),Radium=require("radium"),Button=React.createClass({displayName:"Button",propTypes:{size:React.PropTypes.oneOf(["tiny","normal","big"]),color:React.PropTypes.oneOf(["gray","blue","green"]),theme:React.PropTypes.oneOf(["wp","jetpack"]),inline:React.PropTypes.bool,onClick:React.PropTypes.func,href:React.PropTypes.string},getDefaultProps:function(){return{size:"normal",inline:!0,color:"gray",theme:"wp"}},handleCallbackHref:function(e){e.preventDefault(),window.location=this.props.href},styles:{basic:{borderRadius:3,boxShadow:"inset 0 1px 0 rgba(255, 255, 255, 0.3)",borderWidth:1,borderStyle:"solid",cursor:"pointer",display:"block",fontSize:14,fontWeight:"bold",padding:"10px 20px",textAlign:"center",textDecoration:"none",WebkitFontSmoothing:"antialiased",transition:"background 0.2s"},sizes:{tiny:{fontSize:10,padding:"2px 10px"},normal:{fontSize:13,padding:"5px 10px"},big:{fontSize:16,padding:"20px 40px"}},colors:{gray:{background:"linear-gradient(#fff, #f9f9f9)",borderColor:styles.colors.lightGray,color:styles.colors.darkGray,":hover":{color:styles.colors.gray}},blue:{background:styles.colors.blue,borderColor:"rgba(0,0,0,0.6)",color:"white",":hover":{background:styles.colors.lighterBlue}},green:{background:styles.colors.green,color:"white",borderColor:"rgba(0,0,0,0.6)",":hover":{background:styles.colors.lighterGreen}}},themes:{wp:{},jetpack:{padding:"18px 24px 15px",borderRadius:6,borderStyle:"none",boxShadow:"0 6px 0 #3e6c20,0 6px 3px rgba(0,0,0,0.4)"}},inline:{display:"inline-block"},disabled:{background:"#f9f9f9",borderColor:styles.colors.lightGray,color:styles.colors.lightGray,":hover":{background:"#f9f9f9",borderColor:styles.colors.lightGray,color:styles.colors.lightGray}}},render:function(){var e,o=this.props,r=o.size,t=o.color,l=o.inline,s=o.onClick,i=o.theme,n=o.href,a=function(e,o){var r={},t=Object.prototype.hasOwnProperty;if(null==e)throw new TypeError;for(var l in e)t.call(e,l)&&!t.call(o,l)&&(r[l]=e[l]);return r}(o,{size:1,color:1,inline:1,onClick:1,theme:1,href:1}),c=[this.styles.basic,this.styles.sizes[r],this.styles.colors[t],this.styles.themes[i],this.props.disabled&&this.styles.disabled,l&&this.styles.inline,this.props.style];return e=n&&!s?this.handleCallbackHref:s,React.createElement("button",React.__spread({},a,{style:c,onClick:e,onMouseOver:this.handleMouseOver,onMouseOut:this.handleMouseOut}),this.props.children)}});module.exports=Radium(Button);


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../styles":35,"radium":42}],33:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Radium=require("radium"),ProgressBar=React.createClass({displayName:"ProgressBar",propTypes:{style:React.PropTypes.object,progressPercent:React.PropTypes.number.isRequired},styles:{wrapper:{fontWeight:400,fontSize:"80%"},progress:{background:"#4ab866",width:"0%",transition:"width 0.5s",display:"block",height:"100%"},bar:{display:"inline-block",width:80,height:12,margin:"0 8px -2px 0",padding:2,borderRadius:2,background:"#f5f5f5"}},render:function(){return React.createElement("div",{style:[this.styles.wrapper,this.props.style]},React.createElement("div",{style:this.styles.bar},React.createElement("span",{style:[this.styles.progress,{width:this.props.progressPercent+"%"}]})),this.props.progressPercent,"% complete")}});module.exports=Radium(ProgressBar);


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"radium":42}],34:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Radium=require("radium"),m=require("../utils/m"),idCounter=0,Reset=React.createClass({displayName:"Reset",propTypes:{css:React.PropTypes.object},style:{resets:{"*":{boxSizing:"border-box"},"div, ul, ol, li, h1, h2, h3, h4, h5, h6, form, fieldset, legend, input, button, textarea, p, blockquote, th, td":{margin:0,padding:0},img:{border:"none",maxWidth:"100%"},h1:{fontSize:34},h2:{fontSize:16},h3:{fontSize:18},td:{verticalAlign:"top"},a:{textDecoration:"none"},"a:hover":{textDecoration:"underline"},".slideDown-enter":{overflowY:"hidden",maxHeight:0,transition:"all .5s ease-out"},".slideDown-enter-active":{overflowY:"hidden",maxHeight:400},".slideDown-leave":{overflowY:"hidden",maxHeight:400,transition:"all .5s ease-out"},".slideDown-leave-active":{overflowY:"hidden",maxHeight:0},".slideRTL-enter":{position:"absolute",left:"100%",transition:"all .2s linear"},".slideRTL-enter-active":{position:"absolute",left:"0%"},".slideRTL-leave":{position:"absolute",left:"0%",transition:"all .2s linear"},".slideRTL-leave-active":{position:"absolute",left:"-100%"},".slideLTR-enter":{position:"absolute",left:"-100%",transition:"all .2s linear"},".slideLTR-enter-active":{position:"absolute",left:"0%"},".slideLTR-leave":{position:"absolute",left:"0%",transition:"all .2s linear"},".slideLTR-leave-active":{position:"absolute",left:"100%"}}},render:function(){var e=this.props,t=function(e,t){var i={},o=Object.prototype.hasOwnProperty;if(null==e)throw new TypeError;for(var l in e)o.call(e,l)&&!o.call(t,l)&&(i[l]=e[l]);return i}(e,{}),i=this._generateId();return React.createElement("div",React.__spread({id:i},t),React.createElement(Radium.Style,{scopeSelector:"#"+i,rules:m(this.style.resets,this.props.css)}),this.props.children)},_generateId:function(){return"dopsid"+idCounter++}});module.exports=Reset;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../utils/m":36,"radium":42}],35:[function(require,module,exports){
var styles={right:{"float":"right"},left:{"float":"left"},third:{width:"33%"},full:{width:"100%"},half:{width:"48%"},hidden:{display:"none"},clear:{clear:"both",display:"block"},accountStatus:{textTransform:"capitalize"},accountStatusNoticon:{borderRadius:"50%",width:16,height:16,marginRight:10,color:"#fff",background:"#81bf16"},box:{borderRadius:2,padding:"5px 10px",background:"#f5f5f5"},light:{color:"#999"},colors:{akismetGreen:"#5e8e14",blue:"#029dd6",lighterBlue:"#13AEE7",black:"#333",darkGray:"#444",gray:"#787878",lightGray:"#bbb",veryLightGray:"#eee",offWhite:"#f9f9f9",accountActive:"#81bf16",accountInactive:"#bbb",green:"#518d2a",lighterGreen:"#57972d"},fonts:{sans:'Open Sans, "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif',serif:"Merriweather, Georgia, serif",mono:'"Courier New", Courier, monospace'},input:{width:"100%",boxShadow:"none",background:"#fff",border:"1px solid #d5d5d5",fontSize:12,padding:"8px 10px"},select:{borderRadius:3,backgroundColor:"#fff",fontSize:12,height:35,width:"100%",border:"1px solid #d5d5d5",padding:"3px 5px",minWidth:0},checkbox:{marginRight:10},errorField:{border:"1px solid #dd3d36"},errorLabel:{border:"1px solid #dd3d36",color:"#a00",display:"block",fontSize:12,margin:"5px 0 0 0",padding:5}};styles.css={"> *":{font:"14px/1.5 "+styles.fonts.sans,color:styles.colors.black},"h1, h2, h3":{fontFamily:styles.fonts.serif,fontWeight:500},h2:{color:styles.colors.gray},a:{color:styles.colors.blue}},module.exports=styles;


},{}],36:[function(require,module,exports){
module.exports=function(){for(var e={},r=0;r<arguments.length;++r)arguments[r]&&jQuery.extend(e,arguments[r]);return e};


},{}],37:[function(require,module,exports){
(function (global){
"use strict";var createMarkupForStyles=require("../create-markup-for-styles"),Prefixer=require("../prefixer"),React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,buildCssString=function(e,t){if(e&&t){var r=Prefixer.getPrefixedStyle(t,"css"),i=createMarkupForStyles(r);return e+"{"+i+"}"}},Style=React.createClass({displayName:"Style",propTypes:{rules:React.PropTypes.object,scopeSelector:React.PropTypes.string},getDefaultProps:function(){return{scopeSelector:""}},_buildStyles:function(e){var t=this;return Object.keys(e).reduce(function(r,i){var s=e[i];if("mediaQueries"===i)r+=t._buildMediaQueryString(s);else{var n=(t.props.scopeSelector?t.props.scopeSelector+" ":"")+i;r+=buildCssString(n,s)}return r},"")},_buildMediaQueryString:function(e){var t=this,r=this._getContextMediaQueries(),i="";return Object.keys(e).forEach(function(s){var n=r[s]?r[s]:s;i+="@media "+n+"{"+t._buildStyles(e[s])+"}"}),i},_getContextMediaQueries:function(){var e={};return this.context&&this.context.mediaQueries&&Object.keys(this.context.mediaQueries).forEach(function(t){e[t]=this.context.mediaQueries[t].media}.bind(this)),e},render:function(){if(!this.props.rules)return null;var e=this._buildStyles(this.props.rules);return React.createElement("style",{dangerouslySetInnerHTML:{__html:e}})}});module.exports=Style;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../create-markup-for-styles":39,"../prefixer":45}],38:[function(require,module,exports){
"use strict";var ExecutionEnvironment=require("exenv"),_matchMediaFunction=ExecutionEnvironment.canUseDOM&&window&&window.matchMedia;module.exports={canMatchMedia:function(){return"function"==typeof _matchMediaFunction},matchMedia:function(n){return _matchMediaFunction(n)},setMatchMedia:function(n){_matchMediaFunction=n}};


},{"exenv":48}],39:[function(require,module,exports){
"use strict";var createMarkupForStyles=function(e,r){return r=r||"",Object.keys(e).map(function(t){return r+t+": "+e[t]+";"}).join("\n")};module.exports=createMarkupForStyles;


},{}],40:[function(require,module,exports){
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(e.__proto__=t)}var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),_get=function(e,t,r){for(var n=!0;n;){var o=e,i=t,a=r;s=l=u=void 0,n=!1;var s=Object.getOwnPropertyDescriptor(o,i);if(void 0!==s){if("value"in s)return s.value;var u=s.get;return void 0===u?void 0:u.call(a)}var l=Object.getPrototypeOf(o);if(null===l)return void 0;e=l,t=i,r=a,n=!0}},resolveStyles=require("./resolve-styles.js"),enhanceWithRadium=function(e){var t=e.displayName||e.name||"Component",r=function(e){function t(){_classCallCheck(this,t),_get(Object.getPrototypeOf(t.prototype),"constructor",this).apply(this,arguments),this.state=this.state||{},this.state._radiumStyleState={}}return _inherits(t,e),_createClass(t,[{key:"render",value:function(){var e=_get(Object.getPrototypeOf(t.prototype),"render",this).call(this);return resolveStyles(this,e)}},{key:"componentWillUnmount",value:function(){_get(Object.getPrototypeOf(t.prototype),"componentWillUnmount",this)&&_get(Object.getPrototypeOf(t.prototype),"componentWillUnmount",this).call(this),this._radiumMouseUpListener&&this._radiumMouseUpListener.remove(),this._radiumMediaQueryListenersByQuery&&Object.keys(this._radiumMediaQueryListenersByQuery).forEach(function(e){this._radiumMediaQueryListenersByQuery[e].remove()},this)}}]),t}(e);return r.displayName="Radium("+t+")",r};module.exports=enhanceWithRadium;


},{"./resolve-styles.js":46}],41:[function(require,module,exports){
"use strict";var VALID_KEYS=[":active",":focus",":hover"],getState=function(t,e,a){if(e=e||"main",-1===VALID_KEYS.indexOf(a))throw new Error("Radium.getState invalid value param: `"+a+"`");return!!(t&&t._radiumStyleState&&t._radiumStyleState[e]&&t._radiumStyleState[e][a])||!1};module.exports=getState;


},{}],42:[function(require,module,exports){
"use strict";var Enhancer=require("./enhancer");module.exports=function(e){return Enhancer(e)},module.exports.Style=require("./components/style"),module.exports.getState=require("./get-state"),module.exports.keyframes=require("./keyframes"),module.exports.Config=require("./config");


},{"./components/style":37,"./config":38,"./enhancer":40,"./get-state":41,"./keyframes":43}],43:[function(require,module,exports){
"use strict";var createMarkupForStyles=require("./create-markup-for-styles"),Prefixer=require("./prefixer"),ExecutionEnvironment=require("exenv"),isAnimationSupported=ExecutionEnvironment.canUseDOM&&Prefixer.getPrefixedPropertyName("animation")!==!1,animationIndex=1,animationStyleSheet=null,keyframesPrefixed=null;isAnimationSupported&&(animationStyleSheet=document.createElement("style"),document.head.appendChild(animationStyleSheet),keyframesPrefixed="keyframes",animationStyleSheet.textContent="@keyframes {}",animationStyleSheet.sheet.cssRules.length||(keyframesPrefixed=Prefixer.cssPrefix+"keyframes"));var keyframes=function(e){var t="Animation"+animationIndex;if(animationIndex+=1,!isAnimationSupported)return t;var n="@"+keyframesPrefixed+" "+t+" {\n"+Object.keys(e).map(function(t){var n=e[t],r=Prefixer.getPrefixedStyle(n,"css"),i=createMarkupForStyles(r,"  ");return"  "+t+" {\n  "+i+"\n  }"}).join("\n")+"\n}\n";if(!animationStyleSheet)throw new Error("keyframes not initialized properly");return animationStyleSheet.sheet.insertRule(n,animationStyleSheet.sheet.cssRules.length),t};module.exports=keyframes;


},{"./create-markup-for-styles":39,"./prefixer":45,"exenv":48}],44:[function(require,module,exports){
"use strict";var _callbacks=[],_mouseUpListenerIsActive=!1,_handleMouseUp=function(e){_callbacks.forEach(function(s){s(e)})},subscribe=function(e){return-1===_callbacks.indexOf(e)&&_callbacks.push(e),_mouseUpListenerIsActive||(window.addEventListener("mouseup",_handleMouseUp),_mouseUpListenerIsActive=!0),{remove:function(){var s=_callbacks.indexOf(e);_callbacks.splice(s,1),0===_callbacks.length&&_mouseUpListenerIsActive&&(window.removeEventListener("mouseup",_handleMouseUp),_mouseUpListenerIsActive=!1)}}};module.exports={subscribe:subscribe};


},{}],45:[function(require,module,exports){
"use strict";var ExecutionEnvironment=require("exenv"),arrayFind=require("array-find"),infoByCssPrefix={"-moz-":{cssPrefix:"-moz-",jsPrefix:"Moz",alternativeProperties:{flex:[{css:"-moz-box-flex",js:"MozBoxFlex"}],order:[{css:"-moz-box-ordinal-group",js:"MozBoxOrdinalGroup"}]},alternativeValues:{display:{flex:["-moz-box"]}}},"-ms-":{cssPrefix:"-ms-",jsPrefix:"ms",alternativeValues:{display:{flex:["-ms-flexbox"],order:["-ms-flex-order"]}}},"-o-":{cssPrefix:"-o-",jsPrefix:"O"},"-webkit-":{cssPrefix:"-webkit-",jsPrefix:"Webkit",alternativeProperties:{flex:[{css:"-webkit-box-flex",js:"WebkitBoxFlex"}],order:[{css:"-webkit-box-ordinal-group",js:"WebkitBoxOrdinalGroup"}]},alternativeValues:{display:{flex:["-webkit-box"]}}}},isUnitlessNumber={boxFlex:!0,boxFlexGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,strokeDashoffset:!0,strokeOpacity:!0,strokeWidth:!0},domStyle={},prefixedPropertyCache={},prefixedValueCache={},prefixInfo={cssPrefix:"",jsPrefix:""};if(ExecutionEnvironment.canUseDOM){domStyle=document.createElement("p").style;var windowStyles=window.getComputedStyle(document.documentElement,""),prefixMatch=Array.prototype.slice.call(windowStyles).join("").match(/-(moz|webkit|ms|o)-/),cssVendorPrefix=prefixMatch&&prefixMatch[0];prefixInfo=infoByCssPrefix[cssVendorPrefix]||prefixInfo}var _camelCaseRegex=/([a-z])?([A-Z])/g,_camelCaseReplacer=function(e,r,i){return r+"-"+i.toLowerCase()},_camelCaseToDashCase=function(e){return e.replace(_camelCaseRegex,_camelCaseReplacer)},getPrefixedPropertyName=function(e){if(prefixedPropertyCache.hasOwnProperty(e))return prefixedPropertyCache[e];var r={css:_camelCaseToDashCase(e),js:e,isDefaultForServer:!0},i=[{css:prefixInfo.cssPrefix+_camelCaseToDashCase(e),js:prefixInfo.jsPrefix+e[0].toUpperCase()+e.slice(1)},r];prefixInfo.alternativeProperties&&prefixInfo.alternativeProperties[e]&&(i=i.concat(prefixInfo.alternativeProperties[e]));var a=arrayFind(i,function(e){return e.js in domStyle?e:void 0})||!1;return prefixedPropertyCache[e]=a},_addPixelSuffixToValueIfNeeded=function(e,r){return 0===r||isNaN(r)||isUnitlessNumber[e]?r:r+"px"},_getPrefixedValue=function(e,r,i){if(!Array.isArray(r)){if(!isNaN(r))return _addPixelSuffixToValueIfNeeded(i,r);if("string"!=typeof r&&(r=r.toString()),!isNaN(parseInt(r,10)))return r}var a=Array.isArray(r)?r.join(" || "):e+r;if(prefixedValueCache.hasOwnProperty(a))return prefixedValueCache[a];var o;Array.isArray(r)?(o=r.map(function(e){return _addPixelSuffixToValueIfNeeded(i,e)}),o=o.concat(r.filter(function(e){return!isNaN(e)}).map(function(e){return prefixInfo.cssPrefix+e}))):o=[r,prefixInfo.cssPrefix+r],prefixInfo.alternativeValues&&prefixInfo.alternativeValues[i]&&prefixInfo.alternativeValues[i][r]&&(o=o.concat(prefixInfo.alternativeValues[i][r]));var t=arrayFind(o,function(r){return domStyle[e]="",domStyle[e]=r,!!domStyle[e]});return t?prefixedValueCache[a]=t:(prefixedValueCache[a]=r,console&&console.warn&&console.warn('Unsupported CSS value "'+r+'" for property "'+e+'"')),prefixedValueCache[a]},getPrefixedStyle=function(e,r){if(r=r||"js",!ExecutionEnvironment.canUseDOM)return Object.keys(e).reduce(function(i,a){var o=e[a],t="css"===r?_camelCaseToDashCase(a):a,s=Array.isArray(o)?o[0]:o;return i[t]=s,i},{});var i={};return Object.keys(e).forEach(function(a){var o=e[a],t=getPrefixedPropertyName(a);if(t===!1)return void(console&&console.warn&&console.warn('Unsupported CSS property "'+a+'"'));var s=_getPrefixedValue(t.js,o,a);i[t[r]]=s}),i};module.exports={getPrefixedPropertyName:getPrefixedPropertyName,getPrefixedStyle:getPrefixedStyle,cssPrefix:prefixInfo.cssPrefix,jsPrefix:prefixInfo.jsPrefix};


},{"array-find":47,"exenv":48}],46:[function(require,module,exports){
(function (process,global){
"use strict";var MouseUpListener=require("./mouse-up-listener"),getState=require("./get-state"),Prefixer=require("./prefixer"),Config=require("./config"),ExecutionEnvironment=require("exenv"),React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,objectAssign=require("object-assign"),mediaQueryListByQueryString={},_isSpecialKey=function(e){return":"===e[0]||"@"===e[0]},_getStyleState=function(e,t,r){return getState(e.state,t,r)},_setStyleState=function(e,t,r){var n=e.state&&e.state._radiumStyleState||{},i={_radiumStyleState:objectAssign({},n)};i._radiumStyleState[t]=i._radiumStyleState[t]||{},objectAssign(i._radiumStyleState[t],r),e.setState(i)},_mergeStyles=function e(t){var r={};return t.forEach(function(t){t&&"object"==typeof t&&!Array.isArray(t)&&Object.keys(t).forEach(function(n){_isSpecialKey(n)&&r[n]?r[n]=e([r[n],t[n]]):r[n]=t[n]})}),r},_mouseUp=function(e){Object.keys(e.state._radiumStyleState).forEach(function(t){_getStyleState(e,t,":active")&&_setStyleState(e,t,{":active":!1})})},_onMediaQueryChange=function(e,t,r){var n={};n[t]=r.matches,_setStyleState(e,"_all",n)},_resolveMediaQueryStyles=function(e,t){return Config.canMatchMedia()?(Object.keys(t).filter(function(e){return"@"===e[0]}).map(function(r){var n=t[r];r=r.replace("@media ","");var i=mediaQueryListByQueryString[r];if(i||(mediaQueryListByQueryString[r]=i=Config.matchMedia(r)),e._radiumMediaQueryListenersByQuery||(e._radiumMediaQueryListenersByQuery={}),!e._radiumMediaQueryListenersByQuery[r]){var o=_onMediaQueryChange.bind(null,e,r);i.addListener(o),e._radiumMediaQueryListenersByQuery[r]={remove:function(){i.removeListener(o)}}}i.matches&&(t=_mergeStyles([t,n]))}),t):t},resolveStyles=function t(e,r,n){if(n=n||{},!r)return r;var i=null,o=r.props.children;if(o){var a=typeof o;if("string"===a||"number"===a)i=o;else if(1===React.Children.count(o)&&o.type){var s=React.Children.only(o);i=t(e,s,n)}else i=React.Children.map(o,function(r){return React.isValidElement(r)?t(e,r,n):r})}if(!React.isValidElement(r)||"string"!=typeof r.type)return o===i?r:React.cloneElement(r,r.props,i);var u=r.props,c=u.style,l={};if(Array.isArray(c)&&(c=_mergeStyles(c)),"production"!==process.env.NODE_ENV){var y=["background","border","borderBottom","borderColor","borderLeft","borderRadius","borderRight","borderStyle","borderTop","borderWidth","font","listStyle","margin","padding","transform","transition"],f=function M(e){if("object"==typeof e){var t=Object.keys(e);y.forEach(function(r){e[r]&&t.some(function(e){return e!==r&&0===e.indexOf(r)})&&console.warn('Radium: property "'+r+'" in style object',c,": do not mix longhand and shorthand properties in the same style object. See https://github.com/FormidableLabs/radium/issues/95 for more information.")}),t.forEach(function(t){return M(e[t])})}};f(c)}if(!c||!Object.keys(c).some(_isSpecialKey))return c?(l.style=Prefixer.getPrefixedStyle(c),React.cloneElement(r,l,i)):i?React.cloneElement(r,{},i):r;var d=r.ref||r.key,S=d||"main";if(n[S])throw new Error("Radium requires each element with interactive styles to have a unique key, set using either the ref or key prop. "+(d?'Key "'+d+'" is a duplicate.':"Multiple elements have no key specified."));n[S]=!0,c=_resolveMediaQueryStyles(e,c);var m={};if(Object.keys(c).forEach(function(e){_isSpecialKey(e)||(m[e]=c[e])}),c[":hover"]||c[":active"]){var v=u.onMouseEnter;l.onMouseEnter=function(t){v&&v(t),_setStyleState(e,S,{":hover":!0})};var p=u.onMouseLeave;l.onMouseLeave=function(t){p&&p(t),_setStyleState(e,S,{":hover":!1})}}if(c[":active"]){var _=u.onMouseDown;l.onMouseDown=function(t){_&&_(t),e._lastMouseDown=Date.now(),_setStyleState(e,S,{":active":!0})}}if(c[":focus"]){var g=u.onFocus;l.onFocus=function(t){g&&g(t),_setStyleState(e,S,{":focus":!0})};var h=u.onBlur;l.onBlur=function(t){h&&h(t),_setStyleState(e,S,{":focus":!1})}}var b=Object.keys(c).filter(function(t){return":active"===t&&_getStyleState(e,S,":active")||":hover"===t&&_getStyleState(e,S,":hover")||":focus"===t&&_getStyleState(e,S,":focus")}).map(function(e){return c[e]});return b.length&&(m=_mergeStyles([m].concat(b))),c[":active"]&&!e._radiumMouseUpListener&&ExecutionEnvironment.canUseEventListeners&&(e._radiumMouseUpListener=MouseUpListener.subscribe(_mouseUp.bind(null,e))),l.style=Prefixer.getPrefixedStyle(m),React.cloneElement(r,l,i)};resolveStyles.__clearStateForTests=function(){mediaQueryListByQueryString={}},module.exports=resolveStyles;


}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./config":38,"./get-state":41,"./mouse-up-listener":44,"./prefixer":45,"_process":54,"exenv":48,"object-assign":49}],47:[function(require,module,exports){
"use strict";function find(n,t,r){if("function"==typeof Array.prototype.find)return n.find(t,r);r=r||this;var f,i=n.length;if("function"!=typeof t)throw new TypeError(t+" is not a function");for(f=0;i>f;f++)if(t.call(r,n[f],f,n))return n[f]}module.exports=find;


},{}],48:[function(require,module,exports){
!function(){"use strict";var e=!("undefined"==typeof window||!window.document||!window.document.createElement),n={canUseDOM:e,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:e&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:e&&!!window.screen};"function"==typeof define&&"object"==typeof define.amd&&define.amd?define(function(){return n}):"undefined"!=typeof module&&module.exports?module.exports=n:window.ExecutionEnvironment=n}();


},{}],49:[function(require,module,exports){
"use strict";function ToObject(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}function ownEnumerableKeys(e){var r=Object.getOwnPropertyNames(e);return Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(e))),r.filter(function(r){return propIsEnumerable.call(e,r)})}var propIsEnumerable=Object.prototype.propertyIsEnumerable;module.exports=Object.assign||function(e,r){for(var t,n,o=ToObject(e),c=1;c<arguments.length;c++){t=arguments[c],n=ownEnumerableKeys(Object(t));for(var u=0;u<n.length;u++)o[n[u]]=t[n[u]]}return o};


},{}],50:[function(require,module,exports){
module.exports.Dispatcher=require("./lib/Dispatcher");


},{"./lib/Dispatcher":51}],51:[function(require,module,exports){
"use strict";function Dispatcher(){this.$Dispatcher_callbacks={},this.$Dispatcher_isPending={},this.$Dispatcher_isHandled={},this.$Dispatcher_isDispatching=!1,this.$Dispatcher_pendingPayload=null}var invariant=require("./invariant"),_lastID=1,_prefix="ID_";Dispatcher.prototype.register=function(i){var t=_prefix+_lastID++;return this.$Dispatcher_callbacks[t]=i,t},Dispatcher.prototype.unregister=function(i){invariant(this.$Dispatcher_callbacks[i],"Dispatcher.unregister(...): `%s` does not map to a registered callback.",i),delete this.$Dispatcher_callbacks[i]},Dispatcher.prototype.waitFor=function(i){invariant(this.$Dispatcher_isDispatching,"Dispatcher.waitFor(...): Must be invoked while dispatching.");for(var t=0;t<i.length;t++){var a=i[t];this.$Dispatcher_isPending[a]?invariant(this.$Dispatcher_isHandled[a],"Dispatcher.waitFor(...): Circular dependency detected while waiting for `%s`.",a):(invariant(this.$Dispatcher_callbacks[a],"Dispatcher.waitFor(...): `%s` does not map to a registered callback.",a),this.$Dispatcher_invokeCallback(a))}},Dispatcher.prototype.dispatch=function(i){invariant(!this.$Dispatcher_isDispatching,"Dispatch.dispatch(...): Cannot dispatch in the middle of a dispatch."),this.$Dispatcher_startDispatching(i);try{for(var t in this.$Dispatcher_callbacks)this.$Dispatcher_isPending[t]||this.$Dispatcher_invokeCallback(t)}finally{this.$Dispatcher_stopDispatching()}},Dispatcher.prototype.isDispatching=function(){return this.$Dispatcher_isDispatching},Dispatcher.prototype.$Dispatcher_invokeCallback=function(i){this.$Dispatcher_isPending[i]=!0,this.$Dispatcher_callbacks[i](this.$Dispatcher_pendingPayload),this.$Dispatcher_isHandled[i]=!0},Dispatcher.prototype.$Dispatcher_startDispatching=function(i){for(var t in this.$Dispatcher_callbacks)this.$Dispatcher_isPending[t]=!1,this.$Dispatcher_isHandled[t]=!1;this.$Dispatcher_pendingPayload=i,this.$Dispatcher_isDispatching=!0},Dispatcher.prototype.$Dispatcher_stopDispatching=function(){this.$Dispatcher_pendingPayload=null,this.$Dispatcher_isDispatching=!1},module.exports=Dispatcher;


},{"./invariant":52}],52:[function(require,module,exports){
"use strict";var invariant=function(r,e,n,i,o,a,t,f){if(!r){var s;if(void 0===e)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var d=[n,i,o,a,t,f],l=0;s=new Error("Invariant Violation: "+e.replace(/%s/g,function(){return d[l++]}))}throw s.framesToPop=1,s}};module.exports=invariant;


},{}],53:[function(require,module,exports){
function EventEmitter(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function isFunction(e){return"function"==typeof e}function isNumber(e){return"number"==typeof e}function isObject(e){return"object"==typeof e&&null!==e}function isUndefined(e){return void 0===e}module.exports=EventEmitter,EventEmitter.EventEmitter=EventEmitter,EventEmitter.prototype._events=void 0,EventEmitter.prototype._maxListeners=void 0,EventEmitter.defaultMaxListeners=10,EventEmitter.prototype.setMaxListeners=function(e){if(!isNumber(e)||0>e||isNaN(e))throw TypeError("n must be a positive number");return this._maxListeners=e,this},EventEmitter.prototype.emit=function(e){var t,n,s,i,r,o;if(this._events||(this._events={}),"error"===e&&(!this._events.error||isObject(this._events.error)&&!this._events.error.length)){if(t=arguments[1],t instanceof Error)throw t;throw TypeError('Uncaught, unspecified "error" event.')}if(n=this._events[e],isUndefined(n))return!1;if(isFunction(n))switch(arguments.length){case 1:n.call(this);break;case 2:n.call(this,arguments[1]);break;case 3:n.call(this,arguments[1],arguments[2]);break;default:for(s=arguments.length,i=new Array(s-1),r=1;s>r;r++)i[r-1]=arguments[r];n.apply(this,i)}else if(isObject(n)){for(s=arguments.length,i=new Array(s-1),r=1;s>r;r++)i[r-1]=arguments[r];for(o=n.slice(),s=o.length,r=0;s>r;r++)o[r].apply(this,i)}return!0},EventEmitter.prototype.addListener=function(e,t){var n;if(!isFunction(t))throw TypeError("listener must be a function");if(this._events||(this._events={}),this._events.newListener&&this.emit("newListener",e,isFunction(t.listener)?t.listener:t),this._events[e]?isObject(this._events[e])?this._events[e].push(t):this._events[e]=[this._events[e],t]:this._events[e]=t,isObject(this._events[e])&&!this._events[e].warned){var n;n=isUndefined(this._maxListeners)?EventEmitter.defaultMaxListeners:this._maxListeners,n&&n>0&&this._events[e].length>n&&(this._events[e].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[e].length),"function"==typeof console.trace&&console.trace())}return this},EventEmitter.prototype.on=EventEmitter.prototype.addListener,EventEmitter.prototype.once=function(e,t){function n(){this.removeListener(e,n),s||(s=!0,t.apply(this,arguments))}if(!isFunction(t))throw TypeError("listener must be a function");var s=!1;return n.listener=t,this.on(e,n),this},EventEmitter.prototype.removeListener=function(e,t){var n,s,i,r;if(!isFunction(t))throw TypeError("listener must be a function");if(!this._events||!this._events[e])return this;if(n=this._events[e],i=n.length,s=-1,n===t||isFunction(n.listener)&&n.listener===t)delete this._events[e],this._events.removeListener&&this.emit("removeListener",e,t);else if(isObject(n)){for(r=i;r-->0;)if(n[r]===t||n[r].listener&&n[r].listener===t){s=r;break}if(0>s)return this;1===n.length?(n.length=0,delete this._events[e]):n.splice(s,1),this._events.removeListener&&this.emit("removeListener",e,t)}return this},EventEmitter.prototype.removeAllListeners=function(e){var t,n;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[e]&&delete this._events[e],this;if(0===arguments.length){for(t in this._events)"removeListener"!==t&&this.removeAllListeners(t);return this.removeAllListeners("removeListener"),this._events={},this}if(n=this._events[e],isFunction(n))this.removeListener(e,n);else for(;n.length;)this.removeListener(e,n[n.length-1]);return delete this._events[e],this},EventEmitter.prototype.listeners=function(e){var t;return t=this._events&&this._events[e]?isFunction(this._events[e])?[this._events[e]]:this._events[e].slice():[]},EventEmitter.listenerCount=function(e,t){var n;return n=e._events&&e._events[t]?isFunction(e._events[t])?1:e._events[t].length:0};


},{}],54:[function(require,module,exports){
function cleanUpNextTick(){draining=!1,currentQueue.length?queue=currentQueue.concat(queue):queueIndex=-1,queue.length&&drainQueue()}function drainQueue(){if(!draining){var e=setTimeout(cleanUpNextTick);draining=!0;for(var n=queue.length;n;){for(currentQueue=queue,queue=[];++queueIndex<n;)currentQueue[queueIndex].run();queueIndex=-1,n=queue.length}currentQueue=null,draining=!1,clearTimeout(e)}}function Item(e,n){this.fun=e,this.array=n}function noop(){}var process=module.exports={},queue=[],draining=!1,currentQueue,queueIndex=-1;process.nextTick=function(e){var n=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)n[r-1]=arguments[r];queue.push(new Item(e,n)),draining||setTimeout(drainQueue,0)},Item.prototype.run=function(){this.fun.apply(null,this.array)},process.title="browser",process.browser=!0,process.env={},process.argv=[],process.version="",process.versions={},process.on=noop,process.addListener=noop,process.once=noop,process.off=noop,process.removeListener=noop,process.removeAllListeners=noop,process.emit=noop,process.binding=function(e){throw new Error("process.binding is not supported")},process.cwd=function(){return"/"},process.chdir=function(e){throw new Error("process.chdir is not supported")},process.umask=function(){return 0};


},{}],55:[function(require,module,exports){
"use strict";var keyMirror=function(r){var e,o={};if(!(r instanceof Object)||Array.isArray(r))throw new Error("keyMirror(...): Argument must be an object.");for(e in r)r.hasOwnProperty(e)&&(o[e]=e);return o};module.exports=keyMirror;


},{}],56:[function(require,module,exports){
(function (global){
"use strict";var createMarkupForStyles=require("../create-markup-for-styles"),Prefixer=require("../prefixer"),React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,buildCssString=function(e,t){if(e&&t){var r=Prefixer.getPrefixedStyle(t,"css"),i=createMarkupForStyles(r);return e+"{"+i+"}"}},Style=React.createClass({displayName:"Style",propTypes:{rules:React.PropTypes.object,scopeSelector:React.PropTypes.string},getDefaultProps:function(){return{scopeSelector:""}},_buildStyles:function(e){var t=this;return Object.keys(e).reduce(function(r,i){var s=e[i];if("mediaQueries"===i)r+=t._buildMediaQueryString(s);else{var n=(t.props.scopeSelector?t.props.scopeSelector+" ":"")+i;r+=buildCssString(n,s)}return r},"")},_buildMediaQueryString:function(e){var t=this,r=this._getContextMediaQueries(),i="";return Object.keys(e).forEach(function(s){var n=r[s]?r[s]:s;i+="@media "+n+"{"+t._buildStyles(e[s])+"}"}),i},_getContextMediaQueries:function(){var e={};return this.context&&this.context.mediaQueries&&Object.keys(this.context.mediaQueries).forEach(function(t){e[t]=this.context.mediaQueries[t].media}.bind(this)),e},render:function(){if(!this.props.rules)return null;var e=this._buildStyles(this.props.rules);return React.createElement("style",{dangerouslySetInnerHTML:{__html:e}})}});module.exports=Style;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../create-markup-for-styles":58,"../prefixer":64}],57:[function(require,module,exports){
"use strict";var ExecutionEnvironment=require("exenv"),_matchMediaFunction=ExecutionEnvironment.canUseDOM&&window&&window.matchMedia&&function(n){return window.matchMedia(n)};module.exports={canMatchMedia:function(){return"function"==typeof _matchMediaFunction},matchMedia:function(n){return _matchMediaFunction(n)},setMatchMedia:function(n){_matchMediaFunction=n}};


},{"exenv":67}],58:[function(require,module,exports){
"use strict";var createMarkupForStyles=function(e,r){return r=r||"",Object.keys(e).map(function(t){return r+t+": "+e[t]+";"}).join("\n")};module.exports=createMarkupForStyles;


},{}],59:[function(require,module,exports){
(function (process){
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(e.__proto__=t)}var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,r,o){return r&&e(t.prototype,r),o&&e(t,o),t}}(),_get=function(e,t,r){for(var o=!0;o;){var n=e,i=t,s=r;a=c=u=void 0,o=!1;var a=Object.getOwnPropertyDescriptor(n,i);if(void 0!==a){if("value"in a)return a.value;var u=a.get;return void 0===u?void 0:u.call(s)}var c=Object.getPrototypeOf(n);if(null===c)return void 0;e=c,t=i,r=s,o=!0}},resolveStyles=require("./resolve-styles.js"),enhanceWithRadium=function(e){var t=e.displayName||e.name||"Component",r=function(e){function t(){_classCallCheck(this,t),_get(Object.getPrototypeOf(t.prototype),"constructor",this).apply(this,arguments),this.state=this.state||{},this.state._radiumStyleState={}}return _inherits(t,e),_createClass(t,[{key:"render",value:function(){var e=_get(Object.getPrototypeOf(t.prototype),"render",this).call(this);return resolveStyles(this,e)}},{key:"componentWillUnmount",value:function(){_get(Object.getPrototypeOf(t.prototype),"componentWillUnmount",this)&&_get(Object.getPrototypeOf(t.prototype),"componentWillUnmount",this).call(this),this._radiumMouseUpListener&&this._radiumMouseUpListener.remove(),this._radiumMediaQueryListenersByQuery&&Object.keys(this._radiumMediaQueryListenersByQuery).forEach(function(e){this._radiumMediaQueryListenersByQuery[e].remove()},this)}}]),t}(e),o=["defaultProps","propTypes","contextTypes","childContextTypes"];return o.forEach(function(t){e.hasOwnProperty(t)&&(r[t]=e[t])}),"production"!==process.env.NODE_ENV&&Object.keys(e.prototype).forEach(function(t){r.prototype.hasOwnProperty(t)||(r.prototype[t]=e.prototype[t])}),r.displayName="Radium("+t+")",r};module.exports=enhanceWithRadium;


}).call(this,require('_process'))

},{"./resolve-styles.js":65,"_process":54}],60:[function(require,module,exports){
"use strict";var VALID_KEYS=[":active",":focus",":hover"],getState=function(t,e,a){if(e=e||"main",-1===VALID_KEYS.indexOf(a))throw new Error("Radium.getState invalid value param: `"+a+"`");return!!(t&&t._radiumStyleState&&t._radiumStyleState[e]&&t._radiumStyleState[e][a])||!1};module.exports=getState;


},{}],61:[function(require,module,exports){
"use strict";var Enhancer=require("./enhancer");module.exports=function(e){return Enhancer(e)},module.exports.Style=require("./components/style"),module.exports.getState=require("./get-state"),module.exports.keyframes=require("./keyframes"),module.exports.Config=require("./config");


},{"./components/style":56,"./config":57,"./enhancer":59,"./get-state":60,"./keyframes":62}],62:[function(require,module,exports){
"use strict";var createMarkupForStyles=require("./create-markup-for-styles"),Prefixer=require("./prefixer"),ExecutionEnvironment=require("exenv"),isAnimationSupported=ExecutionEnvironment.canUseDOM&&Prefixer.getPrefixedPropertyName("animation")!==!1,animationIndex=1,animationStyleSheet=null,keyframesPrefixed=null;isAnimationSupported&&(animationStyleSheet=document.createElement("style"),document.head.appendChild(animationStyleSheet),keyframesPrefixed="keyframes",animationStyleSheet.textContent="@keyframes {}",animationStyleSheet.sheet.cssRules.length||(keyframesPrefixed=Prefixer.cssPrefix+"keyframes"));var keyframes=function(e){var t="Animation"+animationIndex;if(animationIndex+=1,!isAnimationSupported)return t;var n="@"+keyframesPrefixed+" "+t+" {\n"+Object.keys(e).map(function(t){var n=e[t],r=Prefixer.getPrefixedStyle(n,"css"),i=createMarkupForStyles(r,"  ");return"  "+t+" {\n  "+i+"\n  }"}).join("\n")+"\n}\n";if(!animationStyleSheet)throw new Error("keyframes not initialized properly");return animationStyleSheet.sheet.insertRule(n,animationStyleSheet.sheet.cssRules.length),t};module.exports=keyframes;


},{"./create-markup-for-styles":58,"./prefixer":64,"exenv":67}],63:[function(require,module,exports){
"use strict";var _callbacks=[],_mouseUpListenerIsActive=!1,_handleMouseUp=function(e){_callbacks.forEach(function(s){s(e)})},subscribe=function(e){return-1===_callbacks.indexOf(e)&&_callbacks.push(e),_mouseUpListenerIsActive||(window.addEventListener("mouseup",_handleMouseUp),_mouseUpListenerIsActive=!0),{remove:function(){var s=_callbacks.indexOf(e);_callbacks.splice(s,1),0===_callbacks.length&&_mouseUpListenerIsActive&&(window.removeEventListener("mouseup",_handleMouseUp),_mouseUpListenerIsActive=!1)}}};module.exports={subscribe:subscribe};


},{}],64:[function(require,module,exports){
"use strict";var ExecutionEnvironment=require("exenv"),arrayFind=require("array-find"),infoByCssPrefix={"-moz-":{cssPrefix:"-moz-",jsPrefix:"Moz",alternativeProperties:{flex:[{css:"-moz-box-flex",js:"MozBoxFlex"}],order:[{css:"-moz-box-ordinal-group",js:"MozBoxOrdinalGroup"}]},alternativeValues:{display:{flex:["-moz-box"]}}},"-ms-":{cssPrefix:"-ms-",jsPrefix:"ms",alternativeValues:{display:{flex:["-ms-flexbox"],order:["-ms-flex-order"]}}},"-o-":{cssPrefix:"-o-",jsPrefix:"O"},"-webkit-":{cssPrefix:"-webkit-",jsPrefix:"Webkit",alternativeProperties:{flex:[{css:"-webkit-box-flex",js:"WebkitBoxFlex"}],order:[{css:"-webkit-box-ordinal-group",js:"WebkitBoxOrdinalGroup"}]},alternativeValues:{display:{flex:["-webkit-box"]}}}},isUnitlessNumber={boxFlex:!0,boxFlexGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,strokeDashoffset:!0,strokeOpacity:!0,strokeWidth:!0},domStyle={},prefixedPropertyCache={},prefixedValueCache={},prefixInfo={cssPrefix:"",jsPrefix:""};if(ExecutionEnvironment.canUseDOM){domStyle=document.createElement("p").style;var windowStyles=window.getComputedStyle(document.documentElement,""),prefixMatch=Array.prototype.slice.call(windowStyles).join("").match(/-(moz|webkit|ms|o)-/),cssVendorPrefix=prefixMatch&&prefixMatch[0];prefixInfo=infoByCssPrefix[cssVendorPrefix]||prefixInfo}var _camelCaseRegex=/([a-z])?([A-Z])/g,_camelCaseReplacer=function(e,r,i){return r+"-"+i.toLowerCase()},_camelCaseToDashCase=function(e){return e.replace(_camelCaseRegex,_camelCaseReplacer)},getPrefixedPropertyName=function(e){if(prefixedPropertyCache.hasOwnProperty(e))return prefixedPropertyCache[e];var r={css:_camelCaseToDashCase(e),js:e,isDefaultForServer:!0},i=[{css:prefixInfo.cssPrefix+_camelCaseToDashCase(e),js:prefixInfo.jsPrefix+e[0].toUpperCase()+e.slice(1)},r];prefixInfo.alternativeProperties&&prefixInfo.alternativeProperties[e]&&(i=i.concat(prefixInfo.alternativeProperties[e]));var o=arrayFind(i,function(e){return e.js in domStyle?e:void 0})||!1;return prefixedPropertyCache[e]=o},_addPixelSuffixToValueIfNeeded=function(e,r){return 0===r||isNaN(r)||isUnitlessNumber[e]?r:r+"px"},_getPrefixedValue=function(e,r,i){if(!Array.isArray(r)){if(!isNaN(r))return _addPixelSuffixToValueIfNeeded(i,r);if("string"!=typeof r){if(null===r||void 0===r)return console&&console.warn&&console.warn('CSS value is "'+r+'" for property "'+e+'"'),r;r=r.toString()}if(!isNaN(parseInt(r,10)))return r}var o=Array.isArray(r)?r.join(" || "):e+r;if(prefixedValueCache.hasOwnProperty(o))return prefixedValueCache[o];var a;Array.isArray(r)?(a=r.map(function(e){return _addPixelSuffixToValueIfNeeded(i,e)}),a=a.concat(r.filter(function(e){return!isNaN(e)}).map(function(e){return prefixInfo.cssPrefix+e}))):a=[r,prefixInfo.cssPrefix+r],prefixInfo.alternativeValues&&prefixInfo.alternativeValues[i]&&prefixInfo.alternativeValues[i][r]&&(a=a.concat(prefixInfo.alternativeValues[i][r]));var t=arrayFind(a,function(r){return domStyle[e]="",domStyle[e]=r,!!domStyle[e]});return t?prefixedValueCache[o]=t:(prefixedValueCache[o]=r,console&&console.warn&&console.warn('Unsupported CSS value "'+r+'" for property "'+e+'"')),prefixedValueCache[o]},getPrefixedStyle=function(e,r){if(r=r||"js",!ExecutionEnvironment.canUseDOM)return Object.keys(e).reduce(function(i,o){var a=e[o],t="css"===r?_camelCaseToDashCase(o):o,s=Array.isArray(a)?a[0]:a;return i[t]=s,i},{});var i={};return Object.keys(e).forEach(function(o){var a=e[o],t=getPrefixedPropertyName(o);if(t===!1)return void(console&&console.warn&&console.warn('Unsupported CSS property "'+o+'"'));var s=_getPrefixedValue(t.js,a,o);i[t[r]]=s}),i};module.exports={getPrefixedPropertyName:getPrefixedPropertyName,getPrefixedStyle:getPrefixedStyle,cssPrefix:prefixInfo.cssPrefix,jsPrefix:prefixInfo.jsPrefix};


},{"array-find":66,"exenv":67}],65:[function(require,module,exports){
(function (process,global){
"use strict";var _extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o])}return e},MouseUpListener=require("./mouse-up-listener"),getState=require("./get-state"),Prefixer=require("./prefixer"),Config=require("./config"),ExecutionEnvironment=require("exenv"),React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,mediaQueryListByQueryString={},_isSpecialKey=function(e){return":"===e[0]||"@"===e[0]},_getStyleState=function(e,t,r){return getState(e.state,t,r)},_setStyleState=function(e,t,r){var o=e._lastRadiumState||e.state&&e.state._radiumStyleState||{},n={_radiumStyleState:_extends({},o)};n._radiumStyleState[t]=_extends({},n._radiumStyleState[t],r),e._lastRadiumState=n._radiumStyleState,e.setState(n)},_mergeStyles=function e(t){var r={};return t.forEach(function(t){t&&"object"==typeof t&&!Array.isArray(t)&&Object.keys(t).forEach(function(o){_isSpecialKey(o)&&r[o]?r[o]=e([r[o],t[o]]):r[o]=t[o]})}),r},_mouseUp=function(e){Object.keys(e.state._radiumStyleState).forEach(function(t){_getStyleState(e,t,":active")&&_setStyleState(e,t,{":active":!1})})},_onMediaQueryChange=function(e,t,r){var o={};o[t]=r.matches,_setStyleState(e,"_all",o)},_resolveMediaQueryStyles=function(e,t){return Config.canMatchMedia()?(Object.keys(t).filter(function(e){return"@"===e[0]}).map(function(r){var o=t[r];r=r.replace("@media ","");var n=mediaQueryListByQueryString[r];if(n||(mediaQueryListByQueryString[r]=n=Config.matchMedia(r)),e._radiumMediaQueryListenersByQuery||(e._radiumMediaQueryListenersByQuery={}),!e._radiumMediaQueryListenersByQuery[r]){var i=_onMediaQueryChange.bind(null,e,r);n.addListener(i),e._radiumMediaQueryListenersByQuery[r]={remove:function(){n.removeListener(i)}}}n.matches&&(t=_mergeStyles([t,o]))}),t):t},resolveStyles=function t(e,r,o){if(o=o||{},!r)return r;var n=null,i=r.props.children;if(i){var a=typeof i;if("string"===a||"number"===a)n=i;else if(1===React.Children.count(i)&&i.type){var s=React.Children.only(i);n=t(e,s,o)}else n=React.Children.map(i,function(r){return React.isValidElement(r)?t(e,r,o):r})}if(!React.isValidElement(r)||"string"!=typeof r.type)return i===n?r:React.cloneElement(r,r.props,n);var u=r.props,d=u.style,c={};if(Array.isArray(d)&&(d=_mergeStyles(d)),"production"!==process.env.NODE_ENV){var l={background:["backgroundAttachment","backgroundBlendMode","backgroundClip","backgroundColor","backgroundImage","backgroundOrigin","backgroundPosition","backgroundPositionX","backgroundPositionY","backgroundRepeat","backgroundRepeatX","backgroundRepeatY","backgroundSize"],border:["borderBottom","borderBottomColor","borderBottomStyle","borderBottomWidth","borderColor","borderLeft","borderLeftColor","borderLeftStyle","borderLeftWidth","borderRight","borderRightColor","borderRightStyle","borderRightWidth","borderStyle","borderTop","borderTopColor","borderTopStyle","borderTopWidth","borderWidth"],borderImage:["borderImageOutset","borderImageRepeat","borderImageSlice","borderImageSource","borderImageWidth"],borderRadius:["borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius"],font:["fontFamily","fontKerning","fontSize","fontStretch","fontStyle","fontVariant","fontVariantLigatures","fontWeight","lineHeight"],listStyle:["listStyleImage","listStylePosition","listStyleType"],margin:["marginBottom","marginLeft","marginRight","marginTop"],padding:["paddingBottom","paddingLeft","paddingRight","paddingTop"],transform:["transformOrigin","transformStyle"],transition:["transitionDelay","transitionDuration","transitionProperty","transitionTimingFunction"]},y=function R(t){if("object"==typeof t){var r=Object.keys(t);r.forEach(function(t){l[t]&&l[t].some(function(e){return-1!==r.indexOf(e)})&&console.warn('Radium: property "'+t+'" in style object',d,": do not mix longhand and shorthand properties in the same style object. Check the render method of "+e.constructor.displayName+".","See https://github.com/FormidableLabs/radium/issues/95 for more information.")}),r.forEach(function(e){return R(t[e])})}};y(d)}if(!d||!Object.keys(d).some(_isSpecialKey))return d?(c.style=Prefixer.getPrefixedStyle(d),React.cloneElement(r,c,n)):n?React.cloneElement(r,{},n):r;var f=r.ref||r.key,m=f||"main";if(o[m])throw new Error("Radium requires each element with interactive styles to have a unique key, set using either the ref or key prop. "+(f?'Key "'+f+'" is a duplicate.':"Multiple elements have no key specified."));o[m]=!0,d=_resolveMediaQueryStyles(e,d);var g={};if(Object.keys(d).forEach(function(e){_isSpecialKey(e)||(g[e]=d[e])}),d[":hover"]||d[":active"]){var S=u.onMouseEnter;c.onMouseEnter=function(t){S&&S(t),_setStyleState(e,m,{":hover":!0})};var b=u.onMouseLeave;c.onMouseLeave=function(t){b&&b(t),_setStyleState(e,m,{":hover":!1})}}if(d[":active"]){var p=u.onMouseDown;c.onMouseDown=function(t){p&&p(t),e._lastMouseDown=Date.now(),_setStyleState(e,m,{":active":!0})}}if(d[":focus"]){var h=u.onFocus;c.onFocus=function(t){h&&h(t),_setStyleState(e,m,{":focus":!0})};var v=u.onBlur;c.onBlur=function(t){v&&v(t),_setStyleState(e,m,{":focus":!1})}}var _=Object.keys(d).filter(function(t){return":active"===t&&_getStyleState(e,m,":active")||":hover"===t&&_getStyleState(e,m,":hover")||":focus"===t&&_getStyleState(e,m,":focus")}).map(function(e){return d[e]});return _.length&&(g=_mergeStyles([g].concat(_))),d[":active"]&&!e._radiumMouseUpListener&&ExecutionEnvironment.canUseEventListeners&&(e._radiumMouseUpListener=MouseUpListener.subscribe(_mouseUp.bind(null,e))),c.style=Prefixer.getPrefixedStyle(g),React.cloneElement(r,c,n)};resolveStyles.__clearStateForTests=function(){mediaQueryListByQueryString={}},module.exports=resolveStyles;


}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./config":57,"./get-state":60,"./mouse-up-listener":63,"./prefixer":64,"_process":54,"exenv":67}],66:[function(require,module,exports){
"use strict";function find(n,t,r){if("function"==typeof Array.prototype.find)return n.find(t,r);r=r||this;var f,i=n.length;if("function"!=typeof t)throw new TypeError(t+" is not a function");for(f=0;i>f;f++)if(t.call(r,n[f],f,n))return n[f]}module.exports=find;


},{}],67:[function(require,module,exports){
!function(){"use strict";var e=!("undefined"==typeof window||!window.document||!window.document.createElement),n={canUseDOM:e,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:e&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:e&&!!window.screen};"function"==typeof define&&"object"==typeof define.amd&&define.amd?define(function(){return n}):"undefined"!=typeof module&&module.exports?module.exports=n:window.ExecutionEnvironment=n}();


},{}]},{},[24])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9ncnVudC1icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2FjdGlvbnMvZGF0YS1hY3Rpb25zLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9hY3Rpb25zL2ZsYXNoLWFjdGlvbnMuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2FjdGlvbnMvc2V0dXAtcHJvZ3Jlc3MtYWN0aW9ucy5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9jbGllbnQvYWN0aW9ucy9zaXRlLWFjdGlvbnMuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2FjdGlvbnMvc3Bpbm5lci1hY3Rpb25zLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9jb21wb25lbnRzL2FkdmFuY2VkLXNldHRpbmdzLXN0ZXAuanN4IiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9jb21wb25lbnRzL2NvbnRlbnQtYm94LmpzeCIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9jbGllbnQvY29tcG9uZW50cy9kYXNoaWNvbi5qc3giLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2NvbXBvbmVudHMvZGVzaWduLXN0ZXAuanN4IiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9jb21wb25lbnRzL2ZsYXNoLmpzeCIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9jbGllbnQvY29tcG9uZW50cy9nZXQtc3RhcnRlZC5qc3giLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2NvbXBvbmVudHMvamV0cGFjay1qdW1wc3RhcnQtbWVudS5qc3giLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2NvbXBvbmVudHMvamV0cGFjay1qdW1wc3RhcnQtc3RlcC5qc3giLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2NvbXBvbmVudHMvbGF5b3V0LXN0ZXAuanN4IiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9jb21wb25lbnRzL3NpdGUtdGl0bGUtc3RlcC5qc3giLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2NvbXBvbmVudHMvc2tpcC1idXR0b24uanN4IiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9jb21wb25lbnRzL3Rvb2x0aXAuanN4IiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9jb21wb25lbnRzL3dlbGNvbWUtbWVudS5qc3giLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2NvbXBvbmVudHMvd2VsY29tZS1zZWN0aW9uLmpzeCIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9jbGllbnQvY29tcG9uZW50cy93ZWxjb21lLXdpZGdldC5qc3giLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2NvbnN0YW50cy9qZXRwYWNrLXN0YXJ0LWNvbnN0YW50cy5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9jbGllbnQvY29uc3RhbnRzL2pldHBhY2stc3RhcnQtcGF0aHMuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2Rpc3BhdGNoZXIvYXBwLWRpc3BhdGNoZXIuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L2pldHBhY2stc3RhcnQuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L3N0b3Jlcy9kYXRhLXN0b3JlLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC9zdG9yZXMvZmxhc2gtc3RvcmUuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L3N0b3Jlcy9zZXR1cC1wcm9ncmVzcy1zdG9yZS5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9jbGllbnQvc3RvcmVzL3NpdGUtc3RvcmUuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvY2xpZW50L3N0b3Jlcy9zcGlubmVyLXN0b3JlLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC91dGlscy93cC1hamF4LmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L2NsaWVudC93ZWxjb21lLXBhbmVsLmpzeCIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9qcy9jb21wb25lbnRzL2J1dHRvbi5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9qcy9jb21wb25lbnRzL3Byb2dyZXNzLWJhci5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9qcy9jb21wb25lbnRzL3Jlc2V0LmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9AYXV0b21hdHRpYy9kb3BzLXJlYWN0L2pzL3N0eWxlcy5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9qcy91dGlscy9tLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9AYXV0b21hdHRpYy9kb3BzLXJlYWN0L25vZGVfbW9kdWxlcy9yYWRpdW0vbGliL2NvbXBvbmVudHMvc3R5bGUuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL0BhdXRvbWF0dGljL2RvcHMtcmVhY3Qvbm9kZV9tb2R1bGVzL3JhZGl1bS9saWIvY29uZmlnLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9AYXV0b21hdHRpYy9kb3BzLXJlYWN0L25vZGVfbW9kdWxlcy9yYWRpdW0vbGliL2NyZWF0ZS1tYXJrdXAtZm9yLXN0eWxlcy5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9ub2RlX21vZHVsZXMvcmFkaXVtL2xpYi9lbmhhbmNlci5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9ub2RlX21vZHVsZXMvcmFkaXVtL2xpYi9nZXQtc3RhdGUuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL0BhdXRvbWF0dGljL2RvcHMtcmVhY3Qvbm9kZV9tb2R1bGVzL3JhZGl1bS9saWIvaW5kZXguanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL0BhdXRvbWF0dGljL2RvcHMtcmVhY3Qvbm9kZV9tb2R1bGVzL3JhZGl1bS9saWIva2V5ZnJhbWVzLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9AYXV0b21hdHRpYy9kb3BzLXJlYWN0L25vZGVfbW9kdWxlcy9yYWRpdW0vbGliL21vdXNlLXVwLWxpc3RlbmVyLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9AYXV0b21hdHRpYy9kb3BzLXJlYWN0L25vZGVfbW9kdWxlcy9yYWRpdW0vbGliL3ByZWZpeGVyLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9AYXV0b21hdHRpYy9kb3BzLXJlYWN0L25vZGVfbW9kdWxlcy9yYWRpdW0vbGliL3Jlc29sdmUtc3R5bGVzLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9AYXV0b21hdHRpYy9kb3BzLXJlYWN0L25vZGVfbW9kdWxlcy9yYWRpdW0vbm9kZV9tb2R1bGVzL2FycmF5LWZpbmQvZmluZC5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9ub2RlX21vZHVsZXMvcmFkaXVtL25vZGVfbW9kdWxlcy9leGVudi9pbmRleC5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9ub2RlX21vZHVsZXMvcmFkaXVtL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9mbHV4L2luZGV4LmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9mbHV4L2xpYi9EaXNwYXRjaGVyLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9mbHV4L2xpYi9pbnZhcmlhbnQuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL2dydW50LWJyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2V2ZW50cy9ldmVudHMuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL2dydW50LWJyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMva2V5bWlycm9yL2luZGV4LmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9yYWRpdW0vbGliL2NvbXBvbmVudHMvc3R5bGUuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL3JhZGl1bS9saWIvY29uZmlnLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9yYWRpdW0vbGliL2NyZWF0ZS1tYXJrdXAtZm9yLXN0eWxlcy5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvcmFkaXVtL2xpYi9lbmhhbmNlci5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvcmFkaXVtL2xpYi9nZXQtc3RhdGUuanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL3JhZGl1bS9saWIvaW5kZXguanMiLCIvVXNlcnMvZGFuL3dvcmtzcGFjZS93cC9zcmMvd3AtY29udGVudC9wbHVnaW5zL2pldHBhY2stc3RhcnQvbm9kZV9tb2R1bGVzL3JhZGl1bS9saWIva2V5ZnJhbWVzLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9yYWRpdW0vbGliL21vdXNlLXVwLWxpc3RlbmVyLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9yYWRpdW0vbGliL3ByZWZpeGVyLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9yYWRpdW0vbGliL3Jlc29sdmUtc3R5bGVzLmpzIiwiL1VzZXJzL2Rhbi93b3Jrc3BhY2Uvd3Avc3JjL3dwLWNvbnRlbnQvcGx1Z2lucy9qZXRwYWNrLXN0YXJ0L25vZGVfbW9kdWxlcy9yYWRpdW0vbm9kZV9tb2R1bGVzL2FycmF5LWZpbmQvZmluZC5qcyIsIi9Vc2Vycy9kYW4vd29ya3NwYWNlL3dwL3NyYy93cC1jb250ZW50L3BsdWdpbnMvamV0cGFjay1zdGFydC9ub2RlX21vZHVsZXMvcmFkaXVtL25vZGVfbW9kdWxlcy9leGVudi9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBLEdBQUksZUFBZ0IsUUFBUSxnQ0FDM0IsYUFBZSxRQUFRLHdDQUVwQixhQUNILGVBQWdCLFdBQ2YsY0FBYyxVQUNiLFdBQVksYUFBYSxnQkFJM0IsZ0JBQWlCLFdBQ2hCLGNBQWMsVUFDYixXQUFZLGFBQWEsaUJBSzVCLFFBQU8sUUFBVTs7OztBQ2pCakIsR0FBSSxlQUFnQixRQUFRLGdDQUMzQixhQUFlLFFBQVEsd0NBRXBCLGNBQ0gsT0FBUSxTQUFTLEdBQ2hCLGNBQWMsVUFDYixXQUFZLGFBQWEsVUFDekIsUUFBUyxFQUNULFNBQVUsYUFBYSx5QkFJekIsTUFBTyxTQUFTLEdBQ2YsY0FBYyxVQUNiLFdBQVksYUFBYSxVQUN6QixRQUFTLEVBQ1QsU0FBVSxhQUFhLHdCQUl6QixNQUFPLFdBQ04sY0FBYyxVQUNiLFdBQVksYUFBYSxlQUs1QixRQUFPLFFBQVU7Ozs7QUMzQmpCLEdBQUksZUFBZ0IsUUFBUSxnQ0FDM0IsYUFBZSxRQUFRLHdDQUN2QixNQUFRLFFBQVEsb0NBQ2hCLGFBQWUsUUFBUSxtQkFDdkIsWUFBYyxRQUFRLGtCQUN0QixPQUFTLFFBQVEsb0JBQ2pCLG1CQUFxQixRQUFRLGtDQUM3QixVQUFZLFFBQVEsd0JBRWpCLHNCQUNILFVBQVcsV0FDVixPQUNDLEtBQUssSUFBSSxhQUFhLFlBQ3RCLEtB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R0FBVSxHQUFXLElBQ3JCLElBQ0ksR0FEQSxFQUFTLEVBQU0sTUFHbkIsSUFBeUIsa0JBQWQsR0FDVCxLQUFNLElBQUksV0FBVSxFQUFZLHFCQUdsQyxLQUFLLEVBQUksRUFBTyxFQUFKLEVBQVksSUFDdEIsR0FBSSxFQUFVLEtBQUssRUFBUyxFQUFNLEdBQUksRUFBRyxHQUN2QyxNQUFPLEdBQU0sR0FLbkIsT0FBTyxRQUFVOzs7O0NDaEJoQixXQUNBLFlBRUEsSUFBSSxLQUNlLG1CQUFYLFVBQ1AsT0FBTyxXQUNQLE9BQU8sU0FBUyxlQUdiLEdBRUgsVUFBVyxFQUVYLGNBQWlDLG1CQUFYLFFBRXRCLHFCQUNDLE1BQWdCLE9BQU8sbUJBQW9CLE9BQU8sYUFFbkQsZUFBZ0IsS0FBZSxPQUFPLE9BSWpCLG1CQUFYLFNBQStDLGdCQUFmLFFBQU8sS0FBb0IsT0FBTyxJQUM1RSxPQUFPLFdBQ04sTUFBTyxLQUVvQixtQkFBWCxTQUEwQixPQUFPLFFBQ2xELE9BQU8sUUFBVSxFQUVqQixPQUFPLHFCQUF1QiIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJ2YXIgQXBwRGlzcGF0Y2hlciA9IHJlcXVpcmUoJy4uL2Rpc3BhdGNoZXIvYXBwLWRpc3BhdGNoZXInKSxcblx0SlBTQ29uc3RhbnRzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL2pldHBhY2stc3RhcnQtY29uc3RhbnRzJyk7XG5cbnZhciBEYXRhQWN0aW9ucyA9IHtcblx0cmVxdWVzdFN0YXJ0ZWQ6IGZ1bmN0aW9uKCkge1xuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlNBVkVfU1RBUlRFRFxuXHRcdH0pO1xuXHR9LFxuXG5cdHJlcXVlc3RGaW5pc2hlZDogZnVuY3Rpb24oKSB7XG5cdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU0FWRV9GSU5JU0hFRFxuXHRcdH0pO1xuXHR9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IERhdGFBY3Rpb25zOyIsInZhciBBcHBEaXNwYXRjaGVyID0gcmVxdWlyZSgnLi4vZGlzcGF0Y2hlci9hcHAtZGlzcGF0Y2hlcicpLFxuXHRKUFNDb25zdGFudHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvamV0cGFjay1zdGFydC1jb25zdGFudHMnKTtcblxudmFyIEZsYXNoQWN0aW9ucyA9IHtcblx0bm90aWNlOiBmdW5jdGlvbihtc2cpIHtcblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TRVRfRkxBU0gsXG5cdFx0XHRtZXNzYWdlOiBtc2csXG5cdFx0XHRzZXZlcml0eTogSlBTQ29uc3RhbnRzLkZMQVNIX1NFVkVSSVRZX05PVElDRVxuXHRcdH0pO1xuXHR9LFxuXG5cdGVycm9yOiBmdW5jdGlvbihtc2cpIHtcblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TRVRfRkxBU0gsXG5cdFx0XHRtZXNzYWdlOiBtc2csXG5cdFx0XHRzZXZlcml0eTogSlBTQ29uc3RhbnRzLkZMQVNIX1NFVkVSSVRZX0VSUk9SXG5cdFx0fSk7XG5cdH0sXG5cblx0dW5zZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlVOU0VUX0ZMQVNIXG5cdFx0fSk7XG5cdH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRmxhc2hBY3Rpb25zOyIsInZhciBBcHBEaXNwYXRjaGVyID0gcmVxdWlyZSgnLi4vZGlzcGF0Y2hlci9hcHAtZGlzcGF0Y2hlcicpLFxuXHRKUFNDb25zdGFudHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvamV0cGFjay1zdGFydC1jb25zdGFudHMnKSxcblx0UGF0aHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvamV0cGFjay1zdGFydC1wYXRocycpLFxuXHRGbGFzaEFjdGlvbnMgPSByZXF1aXJlKCcuL2ZsYXNoLWFjdGlvbnMnKSxcblx0U2l0ZUFjdGlvbnMgPSByZXF1aXJlKCcuL3NpdGUtYWN0aW9ucycpLFxuXHRXUEFqYXggPSByZXF1aXJlKCcuLi91dGlscy93cC1hamF4JyksXG5cdFNldHVwUHJvZ3Jlc3NTdG9yZSA9IHJlcXVpcmUoJy4uL3N0b3Jlcy9zZXR1cC1wcm9ncmVzcy1zdG9yZScpLFxuXHRTaXRlU3RvcmUgPSByZXF1aXJlKCcuLi9zdG9yZXMvc2l0ZS1zdG9yZScpO1xuXG52YXIgU2V0dXBQcm9ncmVzc0FjdGlvbnMgPSB7XG5cdHJlc2V0RGF0YTogZnVuY3Rpb24oKSB7XG5cdFx0V1BBamF4LlxuXHRcdFx0cG9zdChKUFMuc2l0ZV9hY3Rpb25zLnJlc2V0X2RhdGEpLlxuXHRcdFx0ZmFpbCggZnVuY3Rpb24gKCBtc2cgKSB7XG5cdFx0XHRcdEZsYXNoQWN0aW9ucy5lcnJvcihcIkZhaWxlZCB0byBzYXZlIGRhdGE6IFwiICsgbXNnKTtcblx0XHRcdH0pO1xuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHQgICAgICBcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5SRVNFVF9EQVRBXG5cdCAgICB9KTtcblx0fSxcblxuXHRjb21wbGV0ZVN0ZXA6IGZ1bmN0aW9uKHNsdWcsIG1ldGEpIHtcblx0XHR2YXIgc3RlcCA9IFNldHVwUHJvZ3Jlc3NTdG9yZS5nZXRTdGVwRnJvbVNsdWcoc2x1Zyk7XG5cblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TVEVQX0NPTVBMRVRFLFxuXHRcdFx0c2x1Zzogc2x1Z1xuXHQgICAgfSk7XG5cblx0XHQvLyBOT1RFOiB0aGlzIG5lZWRzIHRvIGNvbWUgYWZ0ZXIgdGhlIGRpc3BhdGNoLCBzbyB0aGF0IHRoZSBjb21wbGV0aW9uICUgXG5cdFx0Ly8gaXMgYWxyZWFkeSB1cGRhdGVkIGFuZCBjYW4gYmUgaW5jbHVkZWQgaW4gdGhlIG1ldGFkYXRhXG5cdFx0dGhpcy5fcmVjb3JkQ29tcGxldGUoc3RlcCwgbWV0YSk7XG5cdH0sXG5cblx0Y29tcGxldGVBbmROZXh0U3RlcDogZnVuY3Rpb24oc2x1ZywgbWV0YSkge1xuXHRcdHRoaXMuY29tcGxldGVTdGVwKHNsdWcsIG1ldGEpO1xuXG5cdCAgICBBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0ICAgICAgYWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlNURVBfTkVYVCxcblx0ICAgICAgc2x1Zzogc2x1Z1xuXHQgICAgfSk7XG5cdH0sXG5cblx0X3JlY29yZENvbXBsZXRlOiBmdW5jdGlvbihzdGVwLCBtZXRhKSB7XG5cdFx0aWYgKHR5cGVvZihtZXRhKSA9PT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRcdG1ldGEgPSB7fTtcblx0XHR9XG5cblx0XHRtZXRhLmNvbXBsZXRpb24gPSBTZXR1cFByb2dyZXNzU3RvcmUuZ2V0UHJvZ3Jlc3NQZXJjZW50KCk7XG5cblx0XHRXUEFqYXguXG5cdFx0ICBcdHBvc3QoSlBTLnN0ZXBfYWN0aW9ucy5jb21wbGV0ZSwgeyBzdGVwOiBzdGVwLnNsdWcsIGRhdGE6IG1ldGEgfSkuXG5cdFx0XHRmYWlsKCBmdW5jdGlvbihtc2cpIHtcblx0XHRcdFx0Rmxhc2hBY3Rpb25zLmVycm9yKG1zZyk7XG5cdFx0XHR9KTtcblx0fSxcblxuXHQvLyBtYXJrIGN1cnJlbnQgc3RlcCBhcyBza2lwcGVkIGFuZCBtb3ZlIG9uXG5cdHNraXBTdGVwOiBmdW5jdGlvbigpIHtcblx0XHRGbGFzaEFjdGlvbnMudW5zZXQoKTtcblx0XHRcblx0XHR2YXIgc3RlcCA9IFNldHVwUHJvZ3Jlc3NTdG9yZS5nZXRDdXJyZW50U3RlcCgpO1xuXG5cdFx0aWYgKCAhIHN0ZXAuc2tpcHBlZCApIHtcblx0XHQgICAgV1BBamF4LlxuXHRcdFx0XHRwb3N0KEpQUy5zdGVwX2FjdGlvbnMuc2tpcCwgeyBzdGVwOiBzdGVwLnNsdWcgfSkuXG5cdFx0XHRcdGZhaWwoIGZ1bmN0aW9uKG1zZykge1xuXHRcdFx0XHRcdEZsYXNoQWN0aW9ucy5lcnJvcihtc2cpO1xuXHRcdFx0XHR9KTtcblx0XHR9XG5cblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TVEVQX1NLSVBcblx0ICAgIH0pO1xuXHR9LFxuXG5cdGdldFN0YXJ0ZWQ6IGZ1bmN0aW9uKCkge1xuXHQgICAgV1BBamF4LlxuXHRcdFx0cG9zdChKUFMuc3RlcF9hY3Rpb25zLnN0YXJ0KS5cblx0XHRcdGZhaWwoIGZ1bmN0aW9uKG1zZykge1xuXHRcdFx0XHRGbGFzaEFjdGlvbnMuZXJyb3IobXNnKTtcblx0XHRcdH0pO1xuXG5cdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdCAgICAgIGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TVEVQX0dFVF9TVEFSVEVEXG5cdCAgICB9KTtcblx0fSxcblxuXHRzZXRDdXJyZW50U3RlcDogZnVuY3Rpb24oc2x1Zykge1xuXHRcdEZsYXNoQWN0aW9ucy51bnNldCgpO1xuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHQgICAgICBhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU1RFUF9TRUxFQ1QsXG5cdCAgICAgIHNsdWc6IHNsdWdcblx0ICAgIH0pO1xuXHR9LFxuXG5cdC8vIG1vdmVzIG9uIHRvIHRoZSBuZXh0IHN0ZXAsIGJ1dCBkb2Vzbid0IG1hcmsgaXQgYXMgXCJza2lwcGVkXCJcblx0c2VsZWN0TmV4dFN0ZXA6IGZ1bmN0aW9uKCkge1xuXHRcdEZsYXNoQWN0aW9ucy51bnNldCgpO1xuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlNURVBfTkVYVFxuXHQgICAgfSk7XG5cdH0sXG5cblx0c3VibWl0VGl0bGVTdGVwOiBmdW5jdGlvbigpIHtcblx0XHRTaXRlQWN0aW9ucy5zYXZlVGl0bGVBbmREZXNjcmlwdGlvbigpLmRvbmUoZnVuY3Rpb24oKSB7XG5cdFx0XHR0aGlzLmNvbXBsZXRlQW5kTmV4dFN0ZXAoUGF0aHMuU0lURV9USVRMRV9TVEVQX1NMVUcpO1xuXHRcdH0uYmluZCh0aGlzKSk7XG5cdH0sXG5cblx0c3VibWl0TGF5b3V0U3RlcDogZnVuY3Rpb24obGF5b3V0KSB7XG5cdFx0U2l0ZUFjdGlvbnMuc2V0TGF5b3V0KGxheW91dCkuZG9uZShmdW5jdGlvbigpIHtcblx0XHRcdHRoaXMuY29tcGxldGVBbmROZXh0U3RlcChQYXRocy5MQVlPVVRfU1RFUF9TTFVHKTtcblx0XHR9LmJpbmQodGhpcykpO1xuXHR9LFxuXG5cdHN1Ym1pdEpldHBhY2tKdW1wc3RhcnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFNpdGVBY3Rpb25zLmVuYWJsZUp1bXBzdGFydCgpLmRvbmUoZnVuY3Rpb24oKSB7XG5cdFx0XHR0aGlzLmNvbXBsZXRlU3RlcChQYXRocy5KRVRQQUNLX01PRFVMRVNfU1RFUF9TTFVHKTtcblx0XHR9LmJpbmQodGhpcykpO1xuXHR9LFxuXG5cdHNldEFjdGl2ZVRoZW1lOiBmdW5jdGlvbih0aGVtZSkge1xuXHRcdFNpdGVBY3Rpb25zLnNldEFjdGl2ZVRoZW1lKHRoZW1lKS5kb25lKCBmdW5jdGlvbiAoKSB7XG5cdFx0XHR0aGlzLmNvbXBsZXRlU3RlcChQYXRocy5ERVNJR05fU1RFUF9TTFVHLCB7dGhlbWVJZDogdGhlbWUuaWR9KTtcblx0XHR9LmJpbmQodGhpcykpO1xuXHR9LFxuXG5cdHNhdmVEZXNpZ25TdGVwOiBmdW5jdGlvbigpIHtcblx0XHR0aGlzLmNvbXBsZXRlQW5kTmV4dFN0ZXAoUGF0aHMuREVTSUdOX1NURVBfU0xVRywge3RoZW1lSWQ6IFNpdGVTdG9yZS5nZXRBY3RpdmVUaGVtZUlkKCl9KTtcblx0fVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBTZXR1cFByb2dyZXNzQWN0aW9uczsiLCJ2YXIgQXBwRGlzcGF0Y2hlciA9IHJlcXVpcmUoJy4uL2Rpc3BhdGNoZXIvYXBwLWRpc3BhdGNoZXInKSxcblx0SlBTQ29uc3RhbnRzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL2pldHBhY2stc3RhcnQtY29uc3RhbnRzJyksXG5cdFNpdGVTdG9yZSA9IHJlcXVpcmUoJy4uL3N0b3Jlcy9zaXRlLXN0b3JlJyksXG5cdEZsYXNoQWN0aW9ucyA9IHJlcXVpcmUoJy4vZmxhc2gtYWN0aW9ucy5qcycpLFxuXHRTcGlubmVyQWN0aW9ucyA9IHJlcXVpcmUoJy4vc3Bpbm5lci1hY3Rpb25zLmpzJyksXG5cdFdQQWpheCA9IHJlcXVpcmUoJy4uL3V0aWxzL3dwLWFqYXgnKTtcblxudmFyIFNpdGVBY3Rpb25zID0ge1xuXHRzZXRUaXRsZTogZnVuY3Rpb24odGl0bGUpIHtcblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TSVRFX1NFVF9USVRMRSxcblx0XHRcdHRpdGxlOiB0aXRsZVxuXHQgICAgfSk7XG5cdH0sXG5cblx0c2V0RGVzY3JpcHRpb246IGZ1bmN0aW9uKGRlc2NyaXB0aW9uKSB7XG5cdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU0lURV9TRVRfREVTQ1JJUFRJT04sXG5cdFx0XHRkZXNjcmlwdGlvbjogZGVzY3JpcHRpb25cblx0ICAgIH0pO1xuXHR9LFxuXG5cdHNhdmVUaXRsZUFuZERlc2NyaXB0aW9uOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgdGl0bGUgPSBTaXRlU3RvcmUuZ2V0VGl0bGUoKTtcblx0XHR2YXIgZGVzY3JpcHRpb24gPSBTaXRlU3RvcmUuZ2V0RGVzY3JpcHRpb24oKTtcblx0XHRcblx0XHRXUEFqYXguXG5cdFx0XHRwb3N0KCBKUFMuc2l0ZV9hY3Rpb25zLnNldF90aXRsZSwgeyB0aXRsZTogdGl0bGUsIGRlc2NyaXB0aW9uOiBkZXNjcmlwdGlvbiB9ICkuXG5cdFx0XHRmYWlsKCBmdW5jdGlvbiAoIG1zZyApIHtcblx0XHRcdFx0Rmxhc2hBY3Rpb25zLmVycm9yKFwiRXJyb3Igc2V0dGluZyB0aXRsZTogXCIrbXNnKTtcblx0XHRcdH0pO1xuXG5cdFx0alF1ZXJ5KCcjd3AtYWRtaW4tYmFyLXNpdGUtbmFtZSAuYWItaXRlbScpLmh0bWwodGl0bGUpO1xuXHRcdC8vIEZsYXNoQWN0aW9ucy5ub3RpY2UoIFwiU2V0IHRpdGxlIHRvICdcIit0aXRsZStcIicgYW5kIGRlc2NyaXB0aW9uIHRvICdcIitkZXNjcmlwdGlvbitcIidcIiApO1xuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlNJVEVfU0FWRV9USVRMRV9BTkRfREVTQ1JJUFRJT04sXG5cdFx0XHR0aXRsZTogdGl0bGVcblx0ICAgIH0pO1xuXG5cdFx0cmV0dXJuIGpRdWVyeS5EZWZlcnJlZCgpLnJlc29sdmUoKTsgLy8gWFhYIEhBQ0tcblx0fSxcblxuXHRfaW5zdGFsbFRoZW1lOiBmdW5jdGlvbiAoIHRoZW1lICkge1xuXHRcdGlmICggISB0aGVtZS5pbnN0YWxsZWQgKSB7XG5cdFx0XHRTcGlubmVyQWN0aW9ucy5zaG93KFwiSW5zdGFsbGluZyAnXCIrdGhlbWUubmFtZStcIidcIik7XG5cdFx0XHRyZXR1cm4gV1BBamF4LlxuXHRcdFx0XHRwb3N0KCBKUFMuc2l0ZV9hY3Rpb25zLmluc3RhbGxfdGhlbWUsIHsgdGhlbWVJZDogdGhlbWUuaWQgfSApLlxuXHRcdFx0XHRkb25lKCBmdW5jdGlvbiAoICkge1xuXHRcdFx0XHRcdHRoZW1lLmluc3RhbGxlZCA9IHRydWU7XG5cdFx0XHRcdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRcdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU0lURV9JTlNUQUxMX1RIRU1FLFxuXHRcdFx0XHRcdFx0dGhlbWU6IHRoZW1lXG5cdFx0XHRcdCAgICB9KTtcblx0XHRcdFx0fSkuXG5cdFx0XHRcdGZhaWwoIGZ1bmN0aW9uICggbXNnICkge1xuXHRcdFx0XHRcdEZsYXNoQWN0aW9ucy5lcnJvcihcIlNlcnZlciBlcnJvciBpbnN0YWxsaW5nIHRoZW1lOiBcIittc2cpO1xuXHRcdFx0XHR9KS5cblx0XHRcdFx0YWx3YXlzKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRTcGlubmVyQWN0aW9ucy5oaWRlKCk7XG5cdFx0XHRcdH0pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LkRlZmVycmVkKCkucmVzb2x2ZSgpO1xuXHRcdH1cblx0fSxcblxuXHRfYWN0aXZhdGVUaGVtZTogZnVuY3Rpb24gKCB0aGVtZSApIHtcblx0XHRXUEFqYXguXG5cdFx0XHRwb3N0KCBKUFMuc2l0ZV9hY3Rpb25zLnNldF90aGVtZSwgeyB0aGVtZUlkOiB0aGVtZS5pZCB9ICkuXG5cdFx0XHRmYWlsKCBmdW5jdGlvbiAoIG1zZyApIHtcblx0XHRcdFx0Rmxhc2hBY3Rpb25zLmVycm9yKFwiU2VydmVyIGVycm9yIHNldHRpbmcgdGhlbWU6IFwiK21zZyk7XG5cdFx0XHR9KTtcblxuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlNJVEVfU0VUX1RIRU1FLFxuXHRcdFx0dGhlbWVJZDogdGhlbWUuaWRcblx0ICAgIH0pO1xuXHR9LFxuXG5cdHNldEFjdGl2ZVRoZW1lOiBmdW5jdGlvbiggdGhlbWUgKSB7XG5cblx0XHR0aGlzLl9pbnN0YWxsVGhlbWUodGhlbWUpLlxuXHRcdFx0ZG9uZSggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHRoaXMuX2FjdGl2YXRlVGhlbWUodGhlbWUpO1xuXHRcdFx0fS5iaW5kKHRoaXMpKTtcblxuXHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoKS5yZXNvbHZlKCk7IC8vIFhYWCBIQUNLXG5cdH0sXG5cblx0c2V0TGF5b3V0OiBmdW5jdGlvbiggbGF5b3V0TmFtZSApIHtcblx0XG5cdFx0V1BBamF4LlxuXHRcdFx0cG9zdCggSlBTLnNpdGVfYWN0aW9ucy5zZXRfbGF5b3V0LCB7IGxheW91dDogbGF5b3V0TmFtZSB9ICkuXG5cdFx0XHRmYWlsKCBmdW5jdGlvbiAobXNnICkge1xuXHRcdFx0XHRGbGFzaEFjdGlvbnMuZXJyb3IoXCJFcnJvciBzZXR0aW5nIGxheW91dDogXCIrbXNnKTtcblx0XHRcdH0pO1xuXG5cdFx0Ly8gRmxhc2hBY3Rpb25zLm5vdGljZShcIlNldCBsYXlvdXQgdG8gXCIrbGF5b3V0TmFtZSk7XG5cdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU0lURV9TRVRfTEFZT1VULFxuXHRcdFx0bGF5b3V0OiBsYXlvdXROYW1lXG5cdCAgICB9KTtcblxuXHQgICAgcmV0dXJuIGpRdWVyeS5EZWZlcnJlZCgpLnJlc29sdmUoKTsgLy8gWFhYIEhBQ0tcblx0fSxcblxuXHRjb25maWd1cmVKZXRwYWNrOiBmdW5jdGlvbihyZXR1cm5fdG9fc3RlcCkge1xuXHRcdFNwaW5uZXJBY3Rpb25zLnNob3coXCJDb25uZWN0aW5nIHRvIFdvcmRQcmVzcy5jb21cIik7XG5cdFx0cmV0dXJuIFdQQWpheC5cblx0XHRcdHBvc3QoIEpQUy5zaXRlX2FjdGlvbnMuY29uZmlndXJlX2pldHBhY2ssIHsgcmV0dXJuX3RvX3N0ZXA6IHJldHVybl90b19zdGVwIH0gKS5cblx0XHRcdGRvbmUoIGZ1bmN0aW9uICggZGF0YSApIHtcblx0XHRcdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlNJVEVfSkVUUEFDS19DT05GSUdVUkVEXG5cdFx0XHQgICAgfSk7XG5cblx0XHRcdFx0aWYgKCBkYXRhLm5leHQgKSB7XG5cdFx0XHRcdFx0d2luZG93LmxvY2F0aW9uLnJlcGxhY2UoZGF0YS5uZXh0KTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRTcGlubmVyQWN0aW9ucy5oaWRlKCk7XG5cdFx0XHRcdH1cblx0XHRcdH0pLlxuXHRcdFx0ZmFpbCggZnVuY3Rpb24gKCBtc2cgKSB7XG5cdFx0XHRcdEZsYXNoQWN0aW9ucy5lcnJvcihcIkVycm9yIGVuYWJsaW5nIEpldHBhY2s6IFwiK21zZyk7XG5cdFx0XHRcdFNwaW5uZXJBY3Rpb25zLmhpZGUoKTtcblx0XHRcdH0pO1xuXHR9LFxuXG5cdGFjdGl2YXRlSmV0cGFja01vZHVsZTogZnVuY3Rpb24obW9kdWxlX3NsdWcpIHtcblxuXHRcdFdQQWpheC5cblx0XHRcdHBvc3QoIEpQUy5zaXRlX2FjdGlvbnMuYWN0aXZhdGVfamV0cGFja19tb2R1bGVzLCB7IG1vZHVsZXM6IFttb2R1bGVfc2x1Z10gfSkuXG5cdFx0XHRmYWlsKCBmdW5jdGlvbiAoIG1zZyApIHtcblx0XHRcdFx0Rmxhc2hBY3Rpb25zLmVycm9yKFwiRXJyb3IgYWN0aXZhdGluZyBKZXRwYWNrIG1vZHVsZTogXCIrbXNnKTtcblx0XHRcdH0pO1xuXG5cdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU0lURV9KRVRQQUNLX01PRFVMRV9FTkFCTEVELFxuXHRcdFx0c2x1ZzogbW9kdWxlX3NsdWdcblx0ICAgIH0pO1xuXG5cdFx0cmV0dXJuIGpRdWVyeS5EZWZlcnJlZCgpLnJlc29sdmUoKTsgLy8gWFhYIEhBQ0tcblx0fSxcblxuXHRkZWFjdGl2YXRlSmV0cGFja01vZHVsZTogZnVuY3Rpb24obW9kdWxlX3NsdWcpIHtcblxuXHRcdFdQQWpheC5cblx0XHRcdHBvc3QoIEpQUy5zaXRlX2FjdGlvbnMuZGVhY3RpdmF0ZV9qZXRwYWNrX21vZHVsZXMsIHsgbW9kdWxlczogW21vZHVsZV9zbHVnXSB9KS5cblx0XHRcdGZhaWwoIGZ1bmN0aW9uICggbXNnICkge1xuXHRcdFx0XHRGbGFzaEFjdGlvbnMuZXJyb3IoXCJFcnJvciBkZWFjdGl2YXRpbmcgSmV0cGFjayBtb2R1bGU6IFwiK21zZyk7XG5cdFx0XHR9KTtcblxuXHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlNJVEVfSkVUUEFDS19NT0RVTEVfRElTQUJMRUQsXG5cdFx0XHRzbHVnOiBtb2R1bGVfc2x1Z1xuXHQgICAgfSk7XG5cblx0XHRyZXR1cm4galF1ZXJ5LkRlZmVycmVkKCkucmVzb2x2ZSgpOyAvLyBYWFggSEFDS1xuXHR9LFxuXG5cdGxvYWRBbGxKZXRwYWNrTW9kdWxlczogZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCBTaXRlU3RvcmUuZ2V0SmV0cGFja0FkZGl0aW9uYWxNb2R1bGVzKCkubGVuZ3RoID09PSAwICkge1xuXHRcdFx0cmV0dXJuIFdQQWpheC5cblx0XHRcdFx0cG9zdCggSlBTLnNpdGVfYWN0aW9ucy5saXN0X2pldHBhY2tfbW9kdWxlcyApLlxuXHRcdFx0XHRkb25lKCBmdW5jdGlvbiAoIGFsbF9tb2R1bGVzICkge1xuXHRcdFx0XHRcdEFwcERpc3BhdGNoZXIuZGlzcGF0Y2goe1xuXHRcdFx0XHRcdFx0YWN0aW9uVHlwZTogSlBTQ29uc3RhbnRzLlNJVEVfSkVUUEFDS19BRERfTU9EVUxFUyxcblx0XHRcdFx0XHRcdG1vZHVsZXM6IGFsbF9tb2R1bGVzXG5cdFx0XHRcdCAgICB9KTtcblx0XHRcdFx0fSkuXG5cdFx0XHRcdGZhaWwoIGZ1bmN0aW9uICggbXNnICkge1xuXHRcdFx0XHRcdEZsYXNoQWN0aW9ucy5lcnJvcihcIkVycm9yIGZldGNoaW5nIGFsbCBKZXRwYWNrIG1vZHVsZXM6IFwiK21zZyk7XG5cdFx0XHRcdH0pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LkRlZmVycmVkKCkucmVzb2x2ZSgpOyAvLyBYWFggSEFDS1xuXHRcdH1cblx0fSxcblxuXHRlbmFibGVKdW1wc3RhcnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFdQQWpheC5cblx0XHRcdHBvc3QoIEpQUy5zaXRlX2FjdGlvbnMuYWN0aXZhdGVfamV0cGFja19tb2R1bGVzLCB7IG1vZHVsZXM6IFNpdGVTdG9yZS5nZXRKdW1wc3RhcnRNb2R1bGVTbHVncygpIH0pLlxuXHRcdFx0ZmFpbCggZnVuY3Rpb24gKCBtc2cgKSB7XG5cdFx0XHRcdEZsYXNoQWN0aW9ucy5lcnJvcihcIkVycm9yIGFjdGl2YXRpbmcgSmV0cGFjayBtb2R1bGVzOiBcIittc2cpO1xuXHRcdFx0fSk7XG5cblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TSVRFX0pFVFBBQ0tfSlVNUFNUQVJUX0VOQUJMRURcblx0ICAgIH0pO1xuXG5cdFx0cmV0dXJuIGpRdWVyeS5EZWZlcnJlZCgpLnJlc29sdmUoKTsgLy8gWFhYIEhBQ0tcblx0fVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBTaXRlQWN0aW9uczsiLCJ2YXIgQXBwRGlzcGF0Y2hlciA9IHJlcXVpcmUoJy4uL2Rpc3BhdGNoZXIvYXBwLWRpc3BhdGNoZXInKSxcblx0SlBTQ29uc3RhbnRzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL2pldHBhY2stc3RhcnQtY29uc3RhbnRzJyk7XG5cbnZhciBTcGlubmVyQWN0aW9ucyA9IHtcblx0c2hvdzogZnVuY3Rpb24obXNnKSB7XG5cdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuU0hPV19TUElOTkVSLFxuXHRcdFx0bWVzc2FnZTogbXNnXG5cdFx0fSk7XG5cdH0sXG5cblx0aGlkZTogZnVuY3Rpb24oKSB7XG5cdFx0QXBwRGlzcGF0Y2hlci5kaXNwYXRjaCh7XG5cdFx0XHRhY3Rpb25UeXBlOiBKUFNDb25zdGFudHMuSElERV9TUElOTkVSLFxuXHRcdH0pO1x0XG5cdH0sXG5cblx0c2hvd0FzeW5jOiBmdW5jdGlvbihtc2cpIHtcblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5TSE9XX0FTWU5DX1NQSU5ORVIsXG5cdFx0XHRtZXNzYWdlOiBtc2dcblx0XHR9KTtcdFx0XG5cdH0sXG5cblx0aGlkZUFzeW5jOiBmdW5jdGlvbigpIHtcblx0XHRBcHBEaXNwYXRjaGVyLmRpc3BhdGNoKHtcblx0XHRcdGFjdGlvblR5cGU6IEpQU0NvbnN0YW50cy5ISURFX0FTWU5DX1NQSU5ORVJcblx0XHR9KTtcdFx0XHRcblx0fVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBTcGlubmVyQWN0aW9uczsiLCJ2YXIgUmVhY3QgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdy5SZWFjdCA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwuUmVhY3QgOiBudWxsKSxcblx0QnV0dG9uID0gcmVxdWlyZSgnQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9qcy9jb21wb25lbnRzL2J1dHRvbicpLFxuXHRTaXRlU3RvcmUgPSByZXF1aXJlKCcuLi9zdG9yZXMvc2l0ZS1zdG9yZScpLFxuXHRXZWxjb21lU2VjdGlvbiA9IHJlcXVpcmUoJy4vd2VsY29tZS1zZWN0aW9uJyk7XG5cbnZhciBTZXR0aW5nc0l0ZW0gPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiU2V0dGluZ3NJdGVtXCIsXG5cdHN0eWxlczoge1xuXHRcdGl0ZW06IHtcblx0XHRcdHBhZGRpbmc6ICcxZW0nLFxuXHRcdFx0bWFyZ2luQm90dG9tOiAnMWVtJyxcblx0XHRcdGxpc3RTdHlsZTogJ25vbmUnLFxuXHRcdFx0YmFja2dyb3VuZDogJyNmNWY1ZjUnLFxuXHRcdFx0Ym9yZGVyOiAnMXB4IHNvbGlkICNkZGQnXG5cdFx0fSxcblxuXHRcdGhlYWRpbmc6IHtcblx0XHRcdG1hcmdpbjogMCxcblx0XHRcdGZvbnRTaXplOiAnMS4yZW0nLFxuXHRcdFx0Zm9udFdlaWdodDogODAwXG5cdFx0fVxuXHR9LFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCB7c3R5bGU6IHRoaXMuc3R5bGVzLml0ZW19LCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImg1XCIsIHtzdHlsZTogdGhpcy5zdHlsZXMuaGVhZGluZ30sIHRoaXMucHJvcHMudGl0bGUpLCBcblx0XHRcdFx0dGhpcy5wcm9wcy5jaGlsZHJlblx0XHRcdFx0XG5cdFx0XHQpXG5cdFx0KTtcblx0fVxufSk7XG5cbnZhciBBZHZhbmNlZFNldHRpbmdzU3RlcCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtkaXNwbGF5TmFtZTogXCJBZHZhbmNlZFNldHRpbmdzU3RlcFwiLFxuXG5cdHN0eWxlczoge1xuXHRcdHdyYXBwZXI6IHtcblx0XHRcdG1hcmdpbkxlZnQ6IDBcblx0XHR9XG5cdH0sXG5cblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gKFxuXHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChXZWxjb21lU2VjdGlvbiwgbnVsbCwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoNFwiLCBudWxsLCBcIkFkdmFuY2VkIHNldHRpbmdzXCIpLCBcblxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwidWxcIiwge3N0eWxlOiB0aGlzLnN0eWxlcy53cmFwcGVyfSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChTZXR0aW5nc0l0ZW0sIHt0aXRsZTogXCJGaW5lLXR1bmUgeW91ciBzaXRlJ3MgbGF5b3V0IGFuZCBhcHBlYXJhbmNlXCJ9LCBcblx0XHRcdFx0XHRcdFwiQ3VzdG9taXplIHlvdXIgc2l0ZeKAmXMgY29sb3JzLCBmb250cywgc2lkZWJhcnMgYW5kIG90aGVyIHNldHRpbmdzLlwiLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJiclwiLCBudWxsKSwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwge2NvbG9yOiBcImJsdWVcIiwgaHJlZjogSlBTLnN0ZXBzLmFkdmFuY2VkX3NldHRpbmdzLmN1c3RvbWl6ZV91cmx9LCBcIkN1c3RvbWl6ZSBteSBzaXRlXCIpLCBcblx0XHRcdFx0XHRcdFwiwqDCoFwiLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7Y29sb3I6IFwiYmx1ZVwiLCBocmVmOiBKUFMuc3RlcHMuYWR2YW5jZWRfc2V0dGluZ3MudGhlbWVzX3VybH0sIFwiQnJvd3NlIGFuZCBhZGQgdGhlbWVzXCIpXG5cdFx0XHRcdFx0KSwgXG5cblx0XHRcdFx0XHQoU2l0ZVN0b3JlLmdldExheW91dCgpID09ICdibG9nJyB8fCBTaXRlU3RvcmUuZ2V0TGF5b3V0KCkgPT0gJ3NpdGUtYmxvZycpICYmIChcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoU2V0dGluZ3NJdGVtLCB7dGl0bGU6IFwiQ3JlYXRlIHlvdXIgZmlyc3QgYmxvZyBwb3N0XCJ9LCBcblx0XHRcdFx0XHRcdFx0XCJBbiBlcGljIGVzc2F5IG9yIGp1c3QgXFxcIkhlbGxvIFdvcmxkIVxcXCJcIiwgXG5cdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJiclwiLCBudWxsKSwgXG5cdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7Y29sb3I6IFwiYmx1ZVwiLCBocmVmOiBKUFMuc3RlcHMuYWR2YW5jZWRfc2V0dGluZ3MubmV3X2Jsb2dfcG9zdF91cmx9LCBcIldyaXRlIGEgbmV3IGJsb2cgcG9zdFwiKSwgXG5cdFx0XHRcdFx0XHRcdFwiwqDCoFwiLCBcblx0XHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHtjb2xvcjogXCJibHVlXCIsIGhyZWY6IEpQUy5zdGVwcy5hZHZhbmNlZF9zZXR0aW5ncy5tYW5hZ2VfcG9zdHNfdXJsfSwgXCJNYW5hZ2UgcG9zdHNcIilcblx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHQpLCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFNldHRpbmdzSXRlbSwge3RpdGxlOiBcIkNyZWF0ZSBhIHN0YXRpYyBwYWdlXCJ9LCBcblx0XHRcdFx0XHRcdFwiXFxcIkFib3V0IG1lXFxcIiwgXFxcIk91ciBTZXJ2aWNlc1xcXCIgb3IgYW55dGhpbmcgZWxzZSB5b3UgY2FuIGltYWdpbmUuXCIsIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImJyXCIsIG51bGwpLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7Y29sb3I6IFwiYmx1ZVwiLCBocmVmOiBKUFMuc3RlcHMuYWR2YW5jZWRfc2V0dGluZ3MubmV3X3BhZ2VfdXJsfSwgXCJDcmVhdGUgYSBuZXcgcGFnZVwiKSwgXG5cdFx0XHRcdFx0XHRcIsKgwqBcIiwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwge2NvbG9yOiBcImJsdWVcIiwgaHJlZjogSlBTLnN0ZXBzLmFkdmFuY2VkX3NldHRpbmdzLm1hbmFnZV9wYWdlc191cmx9LCBcIk1hbmFnZSBwYWdlc1wiKVxuXHRcdFx0XHRcdCksIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoU2V0dGluZ3NJdGVtLCB7dGl0bGU6IFwiRXh0ZW5kIHlvdXIgc2l0ZSdzIGZ1bmN0aW9uYWxpdHlcIn0sIFxuXHRcdFx0XHRcdFx0XCJXb3JkUHJlc3Mgb2ZmZXJzIHRob3VzYW5kcyBvZiBwbHVnaW5zIGZyb20gSmV0cGFjayBhbmQgdGhlIFdvcmRQcmVzcyBjb21tdW5pdHkuXCIsIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImJyXCIsIG51bGwpLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7Y29sb3I6IFwiYmx1ZVwiLCBocmVmOiBKUFMuc3RlcHMuYWR2YW5jZWRfc2V0dGluZ3MucGx1Z2luc191cmx9LCBcIk1hbmFnZSBwbHVnaW5zXCIpLCBcblx0XHRcdFx0XHRcdFwiwqDCoFwiLCBcblx0XHRcdFx0XHRcdFNpdGVTdG9yZS5nZXRKZXRwYWNrQ29uZmlndXJlZCgpICYmIChcblx0XHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHtjb2xvcjogXCJibHVlXCIsIGhyZWY6IEpQUy5zdGVwcy5hZHZhbmNlZF9zZXR0aW5ncy5qZXRwYWNrX21vZHVsZXNfdXJsfSwgXCJNYW5hZ2UgSmV0cGFjayBtb2R1bGVzXCIpXG5cdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0KSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChTZXR0aW5nc0l0ZW0sIHt0aXRsZTogXCJMZWFybiBtb3JlXCJ9LCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIHtocmVmOiBcImh0dHBzOi8vY29kZXgud29yZHByZXNzLm9yZy9GaXJzdF9TdGVwc19XaXRoX1dvcmRQcmVzc1wifSwgXCJGaXJzdCBTdGVwcyB3aXRoIFdvcmRQcmVzc1wiKSwgXCIgLSBhbiBvbmxpbmUgZ3VpZGUgZnJvbSB0aGUgY3JlYXRvcnMgb2YgV29yZFByZXNzXCJcblx0XHRcdFx0XHQpXG5cdFx0XHRcdClcblx0XHRcdClcblx0XHQpO1xuXHR9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBBZHZhbmNlZFNldHRpbmdzU3RlcDsiLCJ2YXIgUmVhY3QgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdy5SZWFjdCA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwuUmVhY3QgOiBudWxsKTtcblxudmFyIENvbnRlbnRCb3ggPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiQ29udGVudEJveFwiLFxuXHRyZW5kZXI6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiAoXG5cdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IFwid2VsY29tZV9fY29udGVudF9ib3hcIn0sIFxuXHRcdFx0XHR0aGlzLnByb3BzLmNoaWxkcmVuLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiBcImNsZWFyXCJ9KVxuXHRcdFx0KVxuXHRcdCk7XG5cdH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENvbnRlbnRCb3g7IiwiLy8gc2ltcGxlIG5vdGljb24gd3JhcHBlclxuXG52YXIgUmVhY3QgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdy5SZWFjdCA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwuUmVhY3QgOiBudWxsKTtcblxudmFyIERhc2hpY29uID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiBcIkRhc2hpY29uXCIsXG5cdFxuXHRwcm9wVHlwZXM6IHtcblx0XHRuYW1lOiBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG5cdFx0c3R5bGU6IFJlYWN0LlByb3BUeXBlcy5vYmplY3QsXG5cdFx0b25Nb3VzZU92ZXI6IFJlYWN0LlByb3BUeXBlcy5mdW5jLFxuXHRcdG9uTW91c2VPdXQ6IFJlYWN0LlByb3BUeXBlcy5mdW5jXG5cdH0sXG5cblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gKFxuXHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwge1xuXHRcdFx0XHRzdHlsZTogdGhpcy5wcm9wcy5zdHlsZSwgXG5cdFx0XHRcdG9uTW91c2VPdmVyOiB0aGlzLnByb3BzLm9uTW91c2VPdmVyLCBcblx0XHRcdFx0b25Nb3VzZU91dDogdGhpcy5wcm9wcy5vbk1vdXNlT3V0LCBcblx0XHRcdFx0Y2xhc3NOYW1lOiBcImRhc2hpY29ucyBkYXNoaWNvbnMtXCIrdGhpcy5wcm9wcy5uYW1lfSwgXG5cblx0XHRcdFx0dGhpcy5wcm9wcy5jaGlsZHJlblxuXHRcdFx0XHRcblx0XHRcdClcblx0XHQpO1xuXHR9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBEYXNoaWNvbjsiLCJ2YXIgUmVhY3QgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdy5SZWFjdCA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwuUmVhY3QgOiBudWxsKSxcblx0U2l0ZVN0b3JlID0gcmVxdWlyZSgnLi4vc3RvcmVzL3NpdGUtc3RvcmUnKSxcblx0U2V0dXBQcm9ncmVzc0FjdGlvbnMgPSByZXF1aXJlKCcuLi9hY3Rpb25zL3NldHVwLXByb2dyZXNzLWFjdGlvbnMnKSxcblx0VG9vbHRpcCA9IHJlcXVpcmUoJy4vdG9vbHRpcCcpLFxuXHRXZWxjb21lU2VjdGlvbiA9IHJlcXVpcmUoJy4vd2VsY29tZS1zZWN0aW9uJyksXG5cdENvbnRlbnRCb3ggPSByZXF1aXJlKCcuL2NvbnRlbnQtYm94JyksXG5cdEJ1dHRvbiA9IHJlcXVpcmUoJ0BhdXRvbWF0dGljL2RvcHMtcmVhY3QvanMvY29tcG9uZW50cy9idXR0b24nKTtcblxuZnVuY3Rpb24gZ2V0VGhlbWVTdGF0ZSgpIHtcblx0cmV0dXJuIHsgdGhlbWVzOiBTaXRlU3RvcmUuZ2V0VGhlbWVzKCksIHNpdGVfdGl0bGU6IFNpdGVTdG9yZS5nZXRUaXRsZSgpIH07XG59XG5cbnZhciBEZXNpZ25TdGVwID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiBcIkRlc2lnblN0ZXBcIixcblxuXHRjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0U2l0ZVN0b3JlLmFkZENoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0XHR0aGlzLl9sb2FkUG9wdWxhclRoZW1lcygpO1xuXHR9LFxuXG5cdGNvbXBvbmVudFdpbGxVbm1vdW50OiBmdW5jdGlvbigpIHtcblx0XHRTaXRlU3RvcmUucmVtb3ZlQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuXHR9LFxuXG5cdF9vbkNoYW5nZTogZnVuY3Rpb24oKSB7XG4gICAgXHR0aGlzLnNldFN0YXRlKGdldFRoZW1lU3RhdGUoKSk7XG4gIFx0fSxcblxuXHRnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBpbml0aWFsU3RhdGUgPSBnZXRUaGVtZVN0YXRlKCk7XG5cdFx0aW5pdGlhbFN0YXRlLnBvcHVsYXJUaGVtZXMgPSBbXTtcblx0XHRyZXR1cm4gaW5pdGlhbFN0YXRlO1xuXHR9LFxuXG5cdGhhbmRsZUFjdGl2YXRlVGhlbWU6IGZ1bmN0aW9uICggZSApIHtcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XG5cdFx0dGhpcy5zZXRTdGF0ZSh7dG9vbHRpcFRoZW1lOiBudWxsLCB0b29sdGlwUG9zaXRpb246IG51bGx9KTtcblxuXHRcdHZhciAkZWwgPSBqUXVlcnkoZS5jdXJyZW50VGFyZ2V0KSxcblx0XHRcdHRoZW1lSWQgPSAkZWwuZGF0YSgndGhlbWUtaWQnKSxcblx0XHRcdHRoZW1lID0gdGhpcy5maW5kVGhlbWUodGhlbWVJZCksXG5cdFx0XHRuZWVkc0luc3RhbGxhdGlvbiA9ICF0aGVtZS5pbnN0YWxsZWQ7XG5cblx0XHR2YXIgcmVzcG9uc2UgPSBTZXR1cFByb2dyZXNzQWN0aW9ucy5zZXRBY3RpdmVUaGVtZSh0aGVtZSk7XG5cblx0XHQvLyBpZiB3ZSBqdXN0IGluc3RhbGxlZCBhIHRoZW1lIGZyb20gdGhlIFwicG9wdWxhclwiIGxpc3QsIGxldCdzIGxvYWQgc29tZSBuZXdcblx0XHQvLyBzZWxlY3Rpb25zIG9uY2UgaW5zdGFsbGF0aW9uIGlzIGZpbmlzaGVkXG5cdFx0aWYgKCBuZWVkc0luc3RhbGxhdGlvbiApIHtcblx0XHRcdHJlc3BvbnNlLmRvbmUoIGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0dGhpcy5fbG9hZFBvcHVsYXJUaGVtZXMoKTtcblx0XHRcdH0uYmluZCh0aGlzKSk7XG5cdFx0fVxuXHR9LFxuXG5cdGZpbmRUaGVtZTogZnVuY3Rpb24gKCB0aGVtZUlkIClcdHtcblx0XHRyZXR1cm4gXy5maW5kV2hlcmUodGhpcy5zdGF0ZS50aGVtZXMsIHtpZDogdGhlbWVJZH0pIHx8IF8uZmluZFdoZXJlKHRoaXMuc3RhdGUucG9wdWxhclRoZW1lcywge2lkOiB0aGVtZUlkfSk7XG5cdH0sXG5cblx0aGFuZGxlQ29udGludWU6IGZ1bmN0aW9uICggZSApIHtcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0U2V0dXBQcm9ncmVzc0FjdGlvbnMuc2F2ZURlc2lnblN0ZXAoKTtcblx0fSxcblxuXHRoYW5kbGVTaG93VG9vbHRpcDogZnVuY3Rpb24gKCBlICkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblxuXHRcdHZhciAkZWwgICA9IGpRdWVyeShlLmN1cnJlbnRUYXJnZXQpLFxuXHRcdFx0dGhlbWUgPSB0aGlzLmZpbmRUaGVtZSgkZWwuZGF0YSgndGhlbWUtaWQnKSksXG5cdFx0XHRvZmZzZXQgPSAkZWwucG9zaXRpb24oKSxcblx0XHRcdHdpZHRoID0gJGVsLm91dGVyV2lkdGgoKSxcblx0XHRcdGhlaWdodCA9ICRlbC5vdXRlckhlaWdodCgpO1xuXHRcdFxuXHRcdC8vZGVzY3JpYmVzIGEgcG9zaXRpb24gaW4gdGhlIG1pZGRsZSBvZiB0aGUgcmlnaHQgc2lkZVxuXHRcdHZhciBwb3NpdGlvbiA9IHtcblx0XHRcdHRvcDogb2Zmc2V0LnRvcCArIChoZWlnaHQvMiksXG5cdFx0XHRsZWZ0OiBvZmZzZXQubGVmdCArIHdpZHRoXG5cdFx0fTtcblxuXHRcdHRoaXMuc2V0U3RhdGUoe3Rvb2x0aXBUaGVtZTogdGhlbWUsIHRvb2x0aXBQb3NpdGlvbjogcG9zaXRpb259KTtcblx0fSxcblxuXHRoYW5kbGVIaWRlVG9vbHRpcDogZnVuY3Rpb24gKCBlICkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHR0aGlzLnNldFN0YXRlKHt0b29sdGlwVGhlbWU6IG51bGwsIHRvb2x0aXBQb3NpdGlvbjogbnVsbH0pO1xuXHR9LFxuXG5cdGhhbmRsZUdldFBvcHVsYXJUaGVtZXM6IGZ1bmN0aW9uICggZSApIHtcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0dGhpcy5fbG9hZFBvcHVsYXJUaGVtZXMoKTtcdFx0XG5cdH0sXG5cblx0X2xvYWRQb3B1bGFyVGhlbWVzOiBmdW5jdGlvbigpIHtcblx0XHRTaXRlU3RvcmUuZ2V0UG9wdWxhclRoZW1lcygpLmRvbmUoZnVuY3Rpb24odGhlbWVzKSB7XG5cdFx0XHR0aGlzLnNldFN0YXRlKHtwb3B1bGFyVGhlbWVzOiB0aGVtZXN9KTtcblx0XHR9LmJpbmQodGhpcykpO1xuXHR9LFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cblx0XHRyZXR1cm4gKFxuXHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChXZWxjb21lU2VjdGlvbiwge2lkOiBcIndlbGNvbWVfX2Rlc2lnblwifSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoM1wiLCBudWxsLCBcIkxldCdzIGxhdW5jaCBcIiwgUmVhY3QuY3JlYXRlRWxlbWVudChcImVtXCIsIG51bGwsIHRoaXMuc3RhdGUuc2l0ZV90aXRsZSkpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImg0XCIsIG51bGwsIFwiUGljayBhIGRlc2lnblwiKSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHtjbGFzc05hbWU6IFwic3RlcC1kZXNjcmlwdGlvblwifSwgXCJBIFxcXCJ0aGVtZVxcXCIgY29udHJvbHMgdGhlIGRlc2lnbiBvZiB5b3VyIHNpdGUgLSBjb2xvdXJzLCBmb250cyBhbmQgbGF5b3V0LlwiKSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHtjbGFzc05hbWU6IFwic3RlcC1kZXNjcmlwdGlvblwifSwgXCJDbGljayBhbnkgdGhlbWUgYmVsb3cgdG8gY2hvb3NlIGl0IGZvciB5b3VyIHNpdGUuIEFuZCBkb24ndCB3b3JyeSAtIHlvdSBjYW4gZWFzaWx5IGNoYW5nZSB0aGlzIGxhdGVyLlwiKSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHtjbGFzc05hbWU6IFwic3VibWl0XCJ9LCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwge2NvbG9yOiBcImJsdWVcIiwgb25DbGljazogdGhpcy5oYW5kbGVDb250aW51ZX0sIFwiTmV4dCBTdGVwIOKGklwiKVxuXHRcdFx0XHQpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChDb250ZW50Qm94LCBudWxsLCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgXCJJbnN0YWxsZWQgdGhlbWVzXCIpLCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IFwidGhlbWUtYnJvd3NlciByZW5kZXJlZFwifSwgXG5cdFx0XHRcdFx0XHR0aGlzLl9yZW5kZXJUaGVtZUxpc3QoKVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KSwgXG5cdFx0XHRcdFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KENvbnRlbnRCb3gsIG51bGwsIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoM1wiLCBudWxsLCBcIlBvcHVsYXIgdGhlbWVzIGZyb20gV29yZFByZXNzLm9yZ1wiLCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwge2NvbG9yOiBcImJsdWVcIiwgc3R5bGU6IHtmbG9hdDogJ3JpZ2h0J30sIG9uQ2xpY2s6IHRoaXMuaGFuZGxlR2V0UG9wdWxhclRoZW1lc30sIFwiTG9hZCBtb3JlIHRoZW1lc1wiKVxuXHRcdFx0XHRcdCksIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2NsYXNzTmFtZTogXCJ0aGVtZS1icm93c2VyIHJlbmRlcmVkXCJ9LCBcblx0XHRcdFx0XHRcdHRoaXMuX3JlbmRlclBvcHVsYXJUaGVtZUxpc3QoKVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KSwgXG5cblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7c3R5bGU6IHtjbGVhcjogJ2JvdGgnfX0pLCBcblx0XHRcdFx0dGhpcy5zdGF0ZS50b29sdGlwVGhlbWUgJiYgdGhpcy5fcmVuZGVyVG9vbHRpcCgpXG5cdFx0XHQpXG5cdFx0KTtcblx0fSxcblxuXHRfcmVuZGVyVG9vbHRpcDogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIHRoZW1lID0gdGhpcy5zdGF0ZS50b29sdGlwVGhlbWUsIHBvc2l0aW9uID0gdGhpcy5zdGF0ZS50b29sdGlwUG9zaXRpb247XG5cdFx0cmV0dXJuIChcblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoVG9vbHRpcCwge1xuXHRcdFx0XHRsZWZ0OiBwb3NpdGlvbi5sZWZ0LCBcblx0XHRcdFx0dG9wOiBwb3NpdGlvbi50b3AsIFxuXHRcdFx0XHR3aWR0aDogMzIwLCBcblx0XHRcdFx0dGl0bGU6IHRoZW1lLm5hbWV9LCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwgbnVsbCwgXCJCeSBcIiwgdGhlbWUuYXV0aG9yKSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHtkYW5nZXJvdXNseVNldElubmVySFRNTDoge19faHRtbDogXy51bmVzY2FwZSh0aGVtZS5kZXNjcmlwdGlvbil9fSlcblx0XHRcdClcblx0XHQpO1xuXHR9LFxuXG5cdF9yZW5kZXJUaGVtZTogZnVuY3Rpb24odGhlbWUpIHtcblx0XHRyZXR1cm4gKFxuXHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7a2V5OiB0aGVtZS5pZCwgXG5cdFx0XHRcdGNsYXNzTmFtZTogJ3RoZW1lJyArICh0aGVtZS5hY3RpdmUgPyAnIGFjdGl2ZScgOiAnJyksIFxuXHRcdFx0XHRcImRhdGEtdGhlbWUtaWRcIjogdGhlbWUuaWQsIFxuXHRcdFx0XHRvbkNsaWNrOiB0aGlzLmhhbmRsZUFjdGl2YXRlVGhlbWUsIFxuXHRcdFx0XHRvbk1vdXNlRW50ZXI6IHRoaXMuaGFuZGxlU2hvd1Rvb2x0aXAsIFxuXHRcdFx0XHRvbk1vdXNlTGVhdmU6IHRoaXMuaGFuZGxlSGlkZVRvb2x0aXAsIFxuXHRcdFx0XHRcImFyaWEtZGVzY3JpYmVkYnlcIjogdGhlbWUuaWQrJy1hY3Rpb24gJyt0aGVtZS5pZCsnLW5hbWUnfSwgXG5cblx0XHRcdFx0dGhlbWUuc2NyZWVuc2hvdCA/IChcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IFwidGhlbWUtc2NyZWVuc2hvdFwifSwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaW1nXCIsIHtzcmM6IHRoZW1lLnNjcmVlbnNob3QsIGFsdDogXCJcIn0pXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpIDogKFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2NsYXNzTmFtZTogXCJ0aGVtZS1zY3JlZW5zaG90IGJsYW5rXCJ9KVxuXHRcdFx0XHQpLCBcblx0XHRcdFx0IXRoZW1lLmFjdGl2ZSAmJiAoUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwge2NsYXNzTmFtZTogXCJtb3JlLWRldGFpbHNcIn0sIHRoZW1lLmluc3RhbGxlZCA/ICdDbGljayB0byBzZWxlY3QnIDogJ0NsaWNrIHRvIGluc3RhbGwnKSksIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwge2NsYXNzTmFtZTogXCJ0aGVtZS1uYW1lXCIsIGlkOiB0aGVtZS5pZCsnLW5hbWUnfSwgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgdGhlbWUuYWN0aXZlID8gJ1NlbGVjdGVkOicgOiAnJyksIFwiIFwiLCB0aGVtZS5uYW1lKVxuXHRcdFx0KVxuXHRcdCk7XG5cdH0sXG5cblx0X3JlbmRlclBvcHVsYXJUaGVtZUxpc3Q6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLnN0YXRlLnBvcHVsYXJUaGVtZXMubWFwKCB0aGlzLl9yZW5kZXJUaGVtZSApO1xuXHR9LFxuXG5cdF9yZW5kZXJUaGVtZUxpc3Q6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLnN0YXRlLnRoZW1lcy5tYXAoIHRoaXMuX3JlbmRlclRoZW1lICk7XG5cdH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IERlc2lnblN0ZXA7IiwiLyoqXG4gKiBEaXNwbGF5cyBhIGZsYXNoIG1lc3NhZ2UsIGlmIHNldC5cbiAqIEpTT04gc3RydWN0dXJlOlxuICogeyBzZXZlcml0eTogJ25vdGljZScsIG1lc3NhZ2U6ICdNeSBtZXNzYWdlJyB9XG4gKlxuICogVmFsaWQgc2V2ZXJpdGllczpcbiAqIC0gZXJyb3IsIG5vdGljZVxuICovXG5cbnZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93LlJlYWN0IDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbC5SZWFjdCA6IG51bGwpLFxuXHRGbGFzaFN0b3JlID0gcmVxdWlyZSgnLi4vc3RvcmVzL2ZsYXNoLXN0b3JlJyk7XG5cbmZ1bmN0aW9uIGdldEZsYXNoU3RhdGUoKSB7XG5cdHJldHVybiBGbGFzaFN0b3JlLmdldEZsYXNoKCk7XG59XG5cbnZhciBGbGFzaCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtkaXNwbGF5TmFtZTogXCJGbGFzaFwiLFxuXHRjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0Rmxhc2hTdG9yZS5hZGRDaGFuZ2VMaXN0ZW5lcih0aGlzLl9vbkNoYW5nZSk7XG5cdH0sXG5cblx0Y29tcG9uZW50V2lsbFVubW91bnQ6IGZ1bmN0aW9uKCkge1xuXHRcdEZsYXNoU3RvcmUucmVtb3ZlQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuXHR9LFxuXG5cdF9vbkNoYW5nZTogZnVuY3Rpb24oKSB7XG4gICAgXHR0aGlzLnNldFN0YXRlKGdldEZsYXNoU3RhdGUoKSk7XG4gIFx0fSxcblxuXHRnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBnZXRGbGFzaFN0YXRlKCk7XG5cdH0sXG5cblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHRpZiAoIHRoaXMuc3RhdGUubWVzc2FnZSApIHtcblx0XHRcdHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiB0aGlzLnN0YXRlLnNldmVyaXR5ICsgJyB1cGRhdGVkJ30sIHRoaXMuc3RhdGUubWVzc2FnZSkpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXR1cm4gbnVsbDtcblx0XHR9XG5cdH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEZsYXNoOyIsInZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93LlJlYWN0IDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbC5SZWFjdCA6IG51bGwpLFxuXHRTZXR1cFByb2dyZXNzU3RvcmUgPSByZXF1aXJlKCcuLi9zdG9yZXMvc2V0dXAtcHJvZ3Jlc3Mtc3RvcmUnKSxcblx0U2V0dXBQcm9ncmVzc0FjdGlvbnMgPSByZXF1aXJlKCcuLi9hY3Rpb25zL3NldHVwLXByb2dyZXNzLWFjdGlvbnMnKSxcblx0QnV0dG9uID0gcmVxdWlyZSgnQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9qcy9jb21wb25lbnRzL2J1dHRvbicpLFxuXHRSYWRpdW0gPSByZXF1aXJlKCdyYWRpdW0nKTtcblxuZnVuY3Rpb24gZ2V0U2V0dXBTdGF0ZSgpIHtcblx0cmV0dXJuIHt9O1xufVxuXG52YXIgR2V0U3RhcnRlZCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtkaXNwbGF5TmFtZTogXCJHZXRTdGFydGVkXCIsXG5cdGNvbXBvbmVudERpZE1vdW50OiBmdW5jdGlvbigpIHtcblx0XHRTZXR1cFByb2dyZXNzU3RvcmUuYWRkQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuXHR9LFxuXG5cdGNvbXBvbmVudFdpbGxVbm1vdW50OiBmdW5jdGlvbigpIHtcblx0XHRTZXR1cFByb2dyZXNzU3RvcmUucmVtb3ZlQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuXHR9LFxuXG5cdF9vbkNoYW5nZTogZnVuY3Rpb24oKSB7XG4gICAgXHR0aGlzLnNldFN0YXRlKGdldFNldHVwU3RhdGUoKSk7XG4gIFx0fSxcblxuXHRnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBnZXRTZXR1cFN0YXRlKCk7XG5cdH0sXG5cblx0aGFuZGxlR2V0U3RhcnRlZDogZnVuY3Rpb24oZSkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRTZXR1cFByb2dyZXNzQWN0aW9ucy5nZXRTdGFydGVkKCk7XG5cdH0sXG5cblx0X2lzSUU4OiBmdW5jdGlvbigpIHtcblx0XHRqUXVlcnkoJ2h0bWwnKS5pcygnLmllOCcpO1xuXHR9LFxuXG5cdHN0eWxlczoge1xuXHRcdHdyYXBwZXI6IHtcblx0XHRcdHRleHRBbGlnbjogJ2NlbnRlcicsXG5cdFx0XHRiYWNrZ3JvdW5kSW1hZ2U6ICd1cmwoJytKUFMuYmFzZV91cmwrJy9pbWcvanBzLXdlbGNvbWUucG5nKScsXG5cdFx0XHRiYWNrZ3JvdW5kUmVwZWF0OiAnbm8tcmVwZWF0Jyxcblx0XHRcdGJhY2tncm91bmRQb3NpdGlvbjogJ2NlbnRlciBib3R0b20nLFxuXHRcdFx0YmFja2dyb3VuZFNpemU6ICc1MjBweCBhdXRvJyxcblx0XHRcdHBhZGRpbmdCb3R0b206IDIwMCxcblx0XHRcdCdAbWVkaWEgKG1heC13aWR0aDogNzgycHgpJzoge1xuXHRcdFx0XHRiYWNrZ3JvdW5kSW1hZ2U6ICdub25lJyxcblx0XHRcdFx0cGFkZGluZ0JvdHRvbTogMzBcblx0XHRcdH1cblx0XHR9LFxuXHRcdHdyYXBwZXJJRTg6IHtcblx0XHRcdGJhY2tncm91bmRJbWFnZTogJ25vbmUnXG5cdFx0fSxcblx0XHRzdWJoZWFkOiB7XG5cdFx0XHRtYXJnaW46ICcwIDAgMzBweCcsXG5cdFx0XHRjb2xvcjogJyM2NjYnLFxuXHRcdFx0Zm9udFNpemU6IDE4LFxuXHRcdFx0bGluZUhlaWdodDogMS42LFxuXHRcdFx0dGV4dEFsaWduOiAnY2VudGVyJyxcblx0XHRcdCdAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpJzoge1xuXHRcdFx0XHRtYXJnaW5Cb3R0b206IDE1LFxuXHRcdFx0XHRmb250U2l6ZTogMTVcblx0XHRcdH0sXG5cdFx0XHQnQG1lZGlhIChtYXgtd2lkdGg6IDMyMHB4KSc6IHtcblx0XHRcdFx0Zm9udFNpemU6IDEzXG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2tleTogXCJ3ZWxjb21lLWludHJvXCIsIHN0eWxlOiBbdGhpcy5zdHlsZXMud3JhcHBlciwgdGhpcy5faXNJRTgoKSAmJiB0aGlzLnN0eWxlcy53cmFwcGVySUU4XX0sIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgXCJZb3UncmUgYWxtb3N0IGRvbmUhXCIpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge3N0eWxlOiB0aGlzLnN0eWxlcy5zdWJoZWFkfSwgXG5cdFx0XHRcdFx0XCJUYWtlIHRoZXNlIHN0ZXBzIHRvIHN1cGVyY2hhcmdlIHlvdXIgV29yZFByZXNzIHNpdGUuXCJcblx0XHRcdFx0KSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIG51bGwsIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7Y29sb3I6IFwiZ3JlZW5cIiwgc2l6ZTogXCJiaWdcIiwgdGhlbWU6IFwiamV0cGFja1wiLCBvbkNsaWNrOiB0aGlzLmhhbmRsZUdldFN0YXJ0ZWR9LCBcIkdldCBTdGFydGVkIOKGklwiKVxuXHRcdFx0XHQpXG5cdFx0XHQpXG5cdFx0KTtcblx0fVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gUmFkaXVtKEdldFN0YXJ0ZWQpOyIsInZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93LlJlYWN0IDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbC5SZWFjdCA6IG51bGwpLFxuXHRTaXRlU3RvcmUgPSByZXF1aXJlKCcuLi9zdG9yZXMvc2l0ZS1zdG9yZScpLFxuXHRTaXRlQWN0aW9ucyA9IHJlcXVpcmUoJy4uL2FjdGlvbnMvc2l0ZS1hY3Rpb25zJyksXG5cdFBhdGhzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL2pldHBhY2stc3RhcnQtcGF0aHMnKTtcblxuZnVuY3Rpb24gZ2V0SmV0cGFja1Byb2dyZXNzKCkge1xuXHRyZXR1cm4geyBcblx0XHRqZXRwYWNrQ29uZmlndXJlZDogU2l0ZVN0b3JlLmdldEpldHBhY2tDb25maWd1cmVkKClcblx0fTtcbn1cblxudmFyIEpldHBhY2tKdW1wc3RhcnRNZW51ID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiBcIkpldHBhY2tKdW1wc3RhcnRNZW51XCIsXG5cdGNvbXBvbmVudERpZE1vdW50OiBmdW5jdGlvbigpIHtcblx0XHRTaXRlU3RvcmUuYWRkQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuXHR9LFxuXG5cdGNvbXBvbmVudFdpbGxVbm1vdW50OiBmdW5jdGlvbigpIHtcblx0XHRTaXRlU3RvcmUucmVtb3ZlQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuXHR9LFxuXG5cdF9vbkNoYW5nZTogZnVuY3Rpb24oKSB7XG4gICAgXHR0aGlzLnNldFN0YXRlKGdldEpldHBhY2tQcm9ncmVzcygpKTtcbiAgXHR9LFxuXG4gIFx0Z2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZ2V0SmV0cGFja1Byb2dyZXNzKCk7XG5cdH0sXG5cblx0aGFuZGxlQ2xpY2tDb25uZWN0OiBmdW5jdGlvbihlKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdGNvbnNvbGUubG9nKFwiY2xpY2tlZFwiKTtcblx0XHRTaXRlQWN0aW9ucy5jb25maWd1cmVKZXRwYWNrKFBhdGhzLkpFVFBBQ0tfTU9EVUxFU19TVEVQX1NMVUcpO1xuXHR9LFxuXG5cdHN0eWxlOiB7XG5cdFx0Y29sb3I6ICdibGFjaycsXG5cdFx0Zm9udFNpemU6IDEyXG5cdH0sXG5cblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gKFxuXHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7c3R5bGU6IHRoaXMuc3R5bGV9LCBcblx0XHRcdFx0dGhpcy5zdGF0ZS5qZXRwYWNrQ29uZmlndXJlZCA/IChcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwpXG5cdFx0XHRcdCkgOiAoXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLCBcblx0XHRcdFx0XHRcdFwiQm9vc3QgdHJhZmZpYywgZW5oYW5jZSBzZWN1cml0eSwgYW5kIGltcHJvdmUgcGVyZm9ybWFuY2Ugd2l0aCBhIGNvbm5lY3Rpb24gdG8gV29yZFByZXNzLmNvbVwiLCBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYnJcIiwgbnVsbCksIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwge2NsYXNzTmFtZTogXCJidXR0b24gYnV0dG9uLXByaW1hcnkgYnV0dG9uLWxhcmdlXCIsIGhyZWY6IFwiI1wiLCBvbkNsaWNrOiB0aGlzLmhhbmRsZUNsaWNrQ29ubmVjdH0sIFwiQ29ubmVjdCB0byBXb3JkUHJlc3MuY29tXCIpXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpXG5cdFx0XHRcdFxuXHRcdFx0KVxuXHRcdCk7XG5cdH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEpldHBhY2tKdW1wc3RhcnRNZW51OyIsInZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93LlJlYWN0IDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbC5SZWFjdCA6IG51bGwpLFxuXHRSYWRpdW0gPSByZXF1aXJlKCdyYWRpdW0nKSxcblx0U2tpcEJ1dHRvbiA9IHJlcXVpcmUoJy4vc2tpcC1idXR0b24nKSxcblx0U2l0ZVN0b3JlID0gcmVxdWlyZSgnLi4vc3RvcmVzL3NpdGUtc3RvcmUnKSxcblx0U2l0ZUFjdGlvbnMgPSByZXF1aXJlKCcuLi9hY3Rpb25zL3NpdGUtYWN0aW9ucycpLFxuXHRQYXRocyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9qZXRwYWNrLXN0YXJ0LXBhdGhzJyksIFxuXHRDb250ZW50Qm94ID0gcmVxdWlyZSgnLi9jb250ZW50LWJveCcpLFxuXHRXZWxjb21lU2VjdGlvbiA9IHJlcXVpcmUoJy4vd2VsY29tZS1zZWN0aW9uJyksXG5cdFNldHVwUHJvZ3Jlc3NBY3Rpb25zID0gcmVxdWlyZSgnLi4vYWN0aW9ucy9zZXR1cC1wcm9ncmVzcy1hY3Rpb25zJyksXG5cdFNwaW5uZXJTdG9yZSA9IHJlcXVpcmUoJy4uL3N0b3Jlcy9zcGlubmVyLXN0b3JlJyksXG5cdEJ1dHRvbiA9IHJlcXVpcmUoJ0BhdXRvbWF0dGljL2RvcHMtcmVhY3QvanMvY29tcG9uZW50cy9idXR0b24nKTtcblxuXG52YXIgSmV0cGFja0xvZ28gPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiSmV0cGFja0xvZ29cIixcblx0c3R5bGVzOiB7XG5cdFx0amV0cGFja0xvZ29XcmFwcGVyOiB7XG5cdFx0XHRkaXNwbGF5OiAnYmxvY2snLFxuXHRcdFx0dGV4dEFsaWduOiAnY2VudGVyJyxcblx0XHRcdGhlaWdodDogNzAsXG5cdFx0XHRjb2xvcjogJ3doaXRlJyxcblx0XHRcdG1hcmdpbkxlZnQ6IDUsXG5cdFx0XHRiYWNrZ3JvdW5kQ29sb3I6ICcjODFhODQ0J1xuXHRcdH0sXG5cdFx0amV0cGFja0xvZ286IHtcblx0XHRcdGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuXHRcdFx0cG9zaXRpb246ICdyZWxhdGl2ZScsXG5cdFx0XHR3aWR0aDogMjE0LFxuXHRcdFx0bWFyZ2luUmlnaHQ6IDYsXG5cdFx0XHRiYWNrZ3JvdW5kOiAndXJsKCcrSlBTLmJhc2VfdXJsKycvLi4vamV0cGFjay9pbWFnZXMvamV0cGFjay1sb2dvLnBuZykgY2VudGVyIGNlbnRlciBuby1yZXBlYXQnLFxuXHRcdFx0YmFja2dyb3VuZFNpemU6ICcxODNweCBhdXRvJyxcblx0XHRcdGNvbG9yOiAnI2ZmZicsXG5cdFx0XHRmb250V2VpZ2h0OiAnbm9ybWFsJ1xuXHRcdH0sXG5cdFx0amV0cGFja0xvZ29OYW1lOiB7XG5cdFx0XHR0ZXh0SW5kZW50OiAtOTk5OSxcblx0XHRcdHZpc2liaWxpdHk6ICdoaWRkZW4nXG5cdFx0fVxuXG5cdH0sXG5cblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gKFxuXHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwge3N0eWxlOiBbdGhpcy5zdHlsZXMuamV0cGFja0xvZ29XcmFwcGVyLCB0aGlzLnByb3BzLnN0eWxlXX0sIFxuXHRcdFx0XHRcIlBvd2VyZWQgYnlcIiwgUmVhY3QuY3JlYXRlRWxlbWVudChcImJyXCIsIG51bGwpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwge2hyZWY6IFwiL3dwLWFkbWluL2FkbWluLnBocD9wYWdlPWpldHBhY2tcIiwgdGl0bGU6IFwiSmV0cGFja1wiLCBzdHlsZTogdGhpcy5zdHlsZXMuamV0cGFja0xvZ299LCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7c3R5bGU6IHRoaXMuc3R5bGVzLmpldHBhY2tMb2dvTmFtZX0sIFwiSmV0cGFja1wiKVxuXHRcdFx0XHQpXG5cdFx0XHQpXG5cdFx0KTtcblx0fVxufSk7XG5cbkpldHBhY2tMb2dvID0gUmFkaXVtKEpldHBhY2tMb2dvKTtcblxuZnVuY3Rpb24gZ2V0SmV0cGFja1N0YXRlKCkge1xuXHRyZXR1cm4ge1xuXHRcdHNpdGVfdGl0bGU6IFNpdGVTdG9yZS5nZXRUaXRsZSgpLFxuXHRcdGpldHBhY2tDb25maWd1cmVkOiBTaXRlU3RvcmUuZ2V0SmV0cGFja0NvbmZpZ3VyZWQoKSxcblx0XHRqdW1wc3RhcnRFbmFibGVkOiBTaXRlU3RvcmUuZ2V0SmV0cGFja0p1bXBzdGFydEVuYWJsZWQoKSxcblx0XHRtb2R1bGVzRW5hYmxlZDogU2l0ZVN0b3JlLmdldEFjdGl2ZU1vZHVsZVNsdWdzKClcdFxuXHR9O1xufVxuXG52YXIgSmV0cGFja0p1bXBzdGFydCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtkaXNwbGF5TmFtZTogXCJKZXRwYWNrSnVtcHN0YXJ0XCIsXG5cblx0c3R5bGVzOiB7XG5cdFx0amV0cGFja0xvZ286IHtcblx0XHRcdGZsb2F0OiAnbGVmdCcsXG5cdFx0XHQnQG1lZGlhIChtaW4td2lkdGg6IDc4MnB4KSc6IHtcblx0XHRcdFx0ZmxvYXQ6ICdub25lJyxcblx0XHRcdFx0bWFyZ2luTGVmdDogMFxuXHRcdFx0fVxuXHRcdH0sXG5cdFx0anVtcHN0YXJ0TW9kdWxlOiB7XG5cdFx0XHRmbG9hdDogJ2xlZnQnLFxuXHRcdFx0cG9zaXRpb246ICdyZWxhdGl2ZScsXG5cdFx0XHRoZWlnaHQ6IDE2MCxcblx0XHRcdHBhZGRpbmc6IDEwLFxuXHRcdFx0J0BtZWRpYSAobWluLXdpZHRoOiA3ODJweCknOiB7XG5cdFx0XHRcdHdpZHRoOiAnMzMlJ1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRqdW1wc3RhcnRNb2R1bGVEZXNjOiB7XG5cdFx0XHRkaXNwbGF5OiAnYmxvY2snLFxuXHRcdFx0bWFyZ2luVG9wOiA1LFxuXHRcdFx0bGluZUhlaWdodDogJzE1MCUnXG5cdFx0fVxuXHR9LFxuXG5cdGNvbXBvbmVudERpZE1vdW50OiBmdW5jdGlvbigpIHtcblx0XHRTaXRlU3RvcmUuYWRkQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuXHR9LFxuXG5cdGNvbXBvbmVudFdpbGxVbm1vdW50OiBmdW5jdGlvbigpIHtcblx0XHRTaXRlU3RvcmUucmVtb3ZlQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuXHR9LFxuXG5cdF9vbkNoYW5nZTogZnVuY3Rpb24oKSB7XG4gICAgXHR0aGlzLnNldFN0YXRlKGdldEpldHBhY2tTdGF0ZSgpKTtcbiAgXHR9LFxuXG5cdGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIHN0YXRlID0gZ2V0SmV0cGFja1N0YXRlKCk7XG5cdFx0c3RhdGUuc2hvd01vcmVNb2R1bGVzID0gZmFsc2U7XG5cdFx0cmV0dXJuIHN0YXRlO1xuXHR9LFxuXG5cdGhhbmRsZUpldHBhY2tDb25uZWN0OiBmdW5jdGlvbiAoZSkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblxuXHRcdFNpdGVBY3Rpb25zLmNvbmZpZ3VyZUpldHBhY2soUGF0aHMuSkVUUEFDS19NT0RVTEVTX1NURVBfU0xVRyk7XG5cdH0sXG5cblx0aGFuZGxlQ2hhbmdlTW9kdWxlU3RhdHVzOiBmdW5jdGlvbiAoZSkge1xuXHRcdHZhciAkdGFyZ2V0ID0galF1ZXJ5KGUuY3VycmVudFRhcmdldCksXG5cdFx0XHRtb2R1bGVfc2x1ZyA9ICR0YXJnZXQuZGF0YSgnbW9kdWxlLXNsdWcnKTtcblxuXHRcdGlmICggU2l0ZVN0b3JlLmlzSmV0cGFja01vZHVsZUVuYWJsZWQobW9kdWxlX3NsdWcpICkge1xuXHRcdFx0U2l0ZUFjdGlvbnMuZGVhY3RpdmF0ZUpldHBhY2tNb2R1bGUobW9kdWxlX3NsdWcpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRTaXRlQWN0aW9ucy5hY3RpdmF0ZUpldHBhY2tNb2R1bGUobW9kdWxlX3NsdWcpO1xuXHRcdH1cblx0fSxcblxuXHRoYW5kbGVFbmFibGVBbGxNb2R1bGVzOiBmdW5jdGlvbihlKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFNpdGVBY3Rpb25zLmVuYWJsZUp1bXBzdGFydCgpO1xuXHR9LFxuXG5cdGhhbmRsZU5leHQ6IGZ1bmN0aW9uIChlKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG5cdFx0U2V0dXBQcm9ncmVzc0FjdGlvbnMuY29tcGxldGVBbmROZXh0U3RlcChQYXRocy5KRVRQQUNLX01PRFVMRVNfU1RFUF9TTFVHKTtcblx0fSxcblxuXHRoYW5kbGVTaG93TW9yZU1vZHVsZXM6IGZ1bmN0aW9uIChlKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFxuXHRcdFNpdGVBY3Rpb25zLmxvYWRBbGxKZXRwYWNrTW9kdWxlcygpLmRvbmUoZnVuY3Rpb24oKSB7XG5cdFx0XHR0aGlzLnNldFN0YXRlKHtzaG93TW9yZU1vZHVsZXM6IHRydWV9KTtcblx0XHR9LmJpbmQodGhpcykpO1xuXHR9LFxuXG5cdGhhbmRsZVNob3dGZXdlck1vZHVsZXM6IGZ1bmN0aW9uIChlKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdHRoaXMuc2V0U3RhdGUoe3Nob3dNb3JlTW9kdWxlczogZmFsc2V9KTtcblx0fSxcblxuXHRfcmVuZGVyTW9kdWxlOiBmdW5jdGlvbihtb2R1bGUpIHtcblx0XHR2YXIgaXNBY3RpdmUgPSBTaXRlU3RvcmUuaXNKZXRwYWNrTW9kdWxlRW5hYmxlZChtb2R1bGUuc2x1Zyk7XG5cdFx0dmFyIG1vZHVsZUlkID0gJ2pwLW1vZHVsZS0nK21vZHVsZS5zbHVnO1xuXHRcdFxuXHRcdHJldHVybiAoXG5cdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtrZXk6ICdtb2R1bGVzLScrbW9kdWxlLnNsdWcsIHN0eWxlOiB0aGlzLnN0eWxlcy5qdW1wc3RhcnRNb2R1bGV9LCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHtpZDogbW9kdWxlSWQsIHR5cGU6IFwiY2hlY2tib3hcIiwgY2hlY2tlZDogaXNBY3RpdmUsIFwiZGF0YS1tb2R1bGUtc2x1Z1wiOiBtb2R1bGUuc2x1Zywgb25DaGFuZ2U6IHRoaXMuaGFuZGxlQ2hhbmdlTW9kdWxlU3RhdHVzfSksIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIiwge2h0bWxGb3I6IG1vZHVsZUlkfSwgUmVhY3QuY3JlYXRlRWxlbWVudChcInN0cm9uZ1wiLCBudWxsLCBtb2R1bGUubmFtZSkpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7c3R5bGU6IHRoaXMuc3R5bGVzLmp1bXBzdGFydE1vZHVsZURlc2N9LCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtkYW5nZXJvdXNseVNldElubmVySFRNTDoge19faHRtbDogbW9kdWxlLmRlc2NyaXB0aW9ufX0pLCBcblx0XHRcdFx0XHRpc0FjdGl2ZSAmJiBtb2R1bGUuY29uZmlndXJlX3VybCAmJiAoXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIHt0YXJnZXQ6IFwiX2NvbmZpZ3VyZVwiLCBocmVmOiBtb2R1bGUuY29uZmlndXJlX3VybH0sIFwiY29uZmlndXJlXCIpKVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KVxuXHRcdFx0KVxuXHRcdCk7XG5cdH0sXG5cblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgbW9kdWxlT3ZlcmxheSwgbW9kdWxlT3ZlcmxheUJvZHk7XG5cblxuXHRcdGlmICggISB0aGlzLnN0YXRlLmpldHBhY2tDb25maWd1cmVkICYmICFTcGlubmVyU3RvcmUuc2hvd2luZygpICkge1xuXHRcdFx0bW9kdWxlT3ZlcmxheSA9IChcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiBcIndlbGNvbWVfX2p1bXBzdGFydF9vdmVybGF5XCJ9KVxuXHRcdFx0KTtcblx0XHRcdG1vZHVsZU92ZXJsYXlCb2R5ID0gKFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IFwid2VsY29tZV9fanVtcHN0YXJ0X292ZXJsYXlfX2JvZHlcIn0sIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIG51bGwsIFwiVGhlc2UgbW9kdWxlcyByZXF1aXJlIGEgV29yZFByZXNzLmNvbSBhY2NvdW50IC0gaXQncyBmcmVlIVwiKSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHtjb2xvcjogXCJncmVlblwiLCBzaXplOiBcImJpZ1wiLCB0aGVtZTogXCJqZXRwYWNrXCIsIG9uQ2xpY2s6IHRoaXMuaGFuZGxlSmV0cGFja0Nvbm5lY3R9LCBcIkNvbm5lY3QgdG8gV29yZFByZXNzLmNvbVwiKSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwgbnVsbCwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFNraXBCdXR0b24sIG51bGwpXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpXG5cdFx0XHQpO1xuXHRcdH1cblxuXHRcdHZhciBtb2R1bGVEZXNjcmlwdGlvbnMgPSBTaXRlU3RvcmUuZ2V0SnVtcHN0YXJ0TW9kdWxlcygpLm1hcCh0aGlzLl9yZW5kZXJNb2R1bGUpO1xuXHRcdHZhciBtb3JlTW9kdWxlRGVzY3JpcHRpb25zID0gU2l0ZVN0b3JlLmdldEpldHBhY2tBZGRpdGlvbmFsTW9kdWxlcygpLm1hcCh0aGlzLl9yZW5kZXJNb2R1bGUpO1xuXG5cdFx0cmV0dXJuIChcblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoV2VsY29tZVNlY3Rpb24sIG51bGwsIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgXCJMZXQncyBsYXVuY2ggXCIsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJlbVwiLCBudWxsLCB0aGlzLnN0YXRlLnNpdGVfdGl0bGUpKSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoNFwiLCBudWxsLCBcIkVuYWJsZSBKZXRwYWNrIGZlYXR1cmVzXCIpLCBcblx0XHRcdFx0dGhpcy5zdGF0ZS5qZXRwYWNrQ29uZmlndXJlZCAmJiAoXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoSmV0cGFja0xvZ28sIHtzdHlsZTogdGhpcy5zdHlsZXMuamV0cGFja0xvZ299KSwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCB7c3R5bGU6IHtmb250U2l6ZTogJ2xhcmdlcid9fSwgXCJDb25ncmF0dWxhdGlvbnMhIFlvdSd2ZSBlbmFibGVkIEpldHBhY2sgYW5kIHVubG9ja2VkIGRvemVucyBvZiBwb3dlcmZ1bCBmZWF0dXJlcy5cIiksIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge3N0eWxlOiB7Zm9udFNpemU6ICdsYXJnZXInfX0sIFwiQ2hlY2sgdGhlIGJveGVzIGJlbG93IHRvIGVuYWJsZSBvdXIgbW9zdCBwb3B1bGFyIGZlYXR1cmVzLlwiKVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2NsYXNzTmFtZTogXCJ3ZWxjb21lX19jb25uZWN0XCJ9LCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IFwid2VsY29tZV9fanVtcHN0YXJ0X3dyYXBwZXJcIn0sIFxuXHRcdFx0XHRcdFx0bW9kdWxlT3ZlcmxheSwgXG5cdFx0XHRcdFx0XHRtb2R1bGVPdmVybGF5Qm9keSwgXG5cdFx0XHRcdFx0XHRcblx0XHRcdFx0XHRcdHRoaXMuc3RhdGUuamV0cGFja0NvbmZpZ3VyZWQgJiYgKFxuXHRcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IFwic3VibWl0XCJ9LCBcblx0XHRcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwge3N0eWxlOiB7ZmxvYXQ6ICdyaWdodCd9LCBjb2xvcjogXCJibHVlXCIsIG9uQ2xpY2s6IHRoaXMuaGFuZGxlTmV4dH0sIFwiTmV4dCBTdGVwIOKGklwiKSwgXG5cdFx0XHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiBcImNsZWFyXCJ9KVxuXHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHQpLCBcblxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChDb250ZW50Qm94LCBudWxsLCBcblx0XHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImgzXCIsIG51bGwsIFwiUG9wdWxhciBmZWF0dXJlc1wiICsgJyAnICtcblx0XHRcdFx0XHRcdFx0XHRcIsKgwqBcIiwgUmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHtkaXNhYmxlZDogdGhpcy5zdGF0ZS5qdW1wc3RhcnRFbmFibGVkLCBjb2xvcjogXCJibHVlXCIsIG9uQ2xpY2s6IHRoaXMuaGFuZGxlRW5hYmxlQWxsTW9kdWxlc30sIHRoaXMuc3RhdGUuanVtcHN0YXJ0RW5hYmxlZCA/ICdFbmFibGVkJyA6ICdFbmFibGUgYWxsIChyZWNvbW1lbmRlZCknKVxuXHRcdFx0XHRcdFx0XHQpLCBcblx0XHRcdFx0XHRcdFx0bW9kdWxlRGVzY3JpcHRpb25zXG5cdFx0XHRcdFx0XHQpLCBcblx0XHRcdFx0XHRcdFxuXHRcdFx0XHRcdFx0dGhpcy5zdGF0ZS5zaG93TW9yZU1vZHVsZXMgPyAoXG5cdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHtjbGFzc05hbWU6IFwibW9yZVwifSwgXG5cdFx0XHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwge2hyZWY6IFwiI1wiLCBvbkNsaWNrOiB0aGlzLmhhbmRsZVNob3dGZXdlck1vZHVsZXN9LCBcImhpZGUgYWRkaXRpb25hbCBmZWF0dXJlc1wiKVxuXHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHQpIDogKFxuXHRcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCB7Y2xhc3NOYW1lOiBcIm1vcmVcIn0sIFxuXHRcdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIHtocmVmOiBcIiNcIiwgb25DbGljazogdGhpcy5oYW5kbGVTaG93TW9yZU1vZHVsZXN9LCBcInNob3cgYWRkaXRpb25hbCBmZWF0dXJlc1wiKVxuXHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHQpLCBcblxuXHRcdFx0XHRcdFx0dGhpcy5zdGF0ZS5zaG93TW9yZU1vZHVsZXMgJiYgKFxuXHRcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KENvbnRlbnRCb3gsIG51bGwsIFxuXHRcdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoM1wiLCBudWxsLCBcIkFkZGl0aW9uYWwgbW9kdWxlc1wiKSwgXG5cdFx0XHRcdFx0XHRcdFx0bW9yZU1vZHVsZURlc2NyaXB0aW9uc1xuXHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQpXG5cdFx0XHQpXG5cdFx0KTtcblx0fVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gUmFkaXVtKEpldHBhY2tKdW1wc3RhcnQpOyIsInZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93LlJlYWN0IDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbC5SZWFjdCA6IG51bGwpLFxuXHRTaXRlU3RvcmUgPSByZXF1aXJlKCcuLi9zdG9yZXMvc2l0ZS1zdG9yZScpLFxuXHRCdXR0b24gPSByZXF1aXJlKCdAYXV0b21hdHRpYy9kb3BzLXJlYWN0L2pzL2NvbXBvbmVudHMvYnV0dG9uJyksXG5cdFdlbGNvbWVTZWN0aW9uID0gcmVxdWlyZSgnLi93ZWxjb21lLXNlY3Rpb24nKSxcblx0U2V0dXBQcm9ncmVzc0FjdGlvbnMgPSByZXF1aXJlKCcuLi9hY3Rpb25zL3NldHVwLXByb2dyZXNzLWFjdGlvbnMnKTtcblxuZnVuY3Rpb24gZ2V0U2l0ZUxheW91dFN0YXRlKCkge1xuXHRyZXR1cm4ge1xuXHRcdHNpdGVfdGl0bGU6IFNpdGVTdG9yZS5nZXRUaXRsZSgpLFxuXHRcdGxheW91dDogU2l0ZVN0b3JlLmdldExheW91dCgpXG5cdH07XG59XG5cbnZhciBMYXlvdXRTdGVwID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiBcIkxheW91dFN0ZXBcIixcblxuXHRjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0U2l0ZVN0b3JlLmFkZENoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0fSxcblxuXHRjb21wb25lbnRXaWxsVW5tb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0U2l0ZVN0b3JlLnJlbW92ZUNoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0fSxcblxuXHRfb25DaGFuZ2U6IGZ1bmN0aW9uKCkge1xuICAgIFx0dGhpcy5zZXRTdGF0ZShnZXRTaXRlTGF5b3V0U3RhdGUoKSk7XG4gIFx0fSxcblxuXHRnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBnZXRTaXRlTGF5b3V0U3RhdGUoKTtcblx0fSxcblxuXHRoYW5kbGVTZXRMYXlvdXQ6IGZ1bmN0aW9uKCBlICkge1xuXHRcdHRoaXMuc2V0U3RhdGUoeyBsYXlvdXQ6IGpRdWVyeShlLmN1cnJlbnRUYXJnZXQpLnZhbCgpIH0pO1xuXHR9LFxuXG5cdGhhbmRsZVN1Ym1pdDogZnVuY3Rpb24oIGUgKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFNldHVwUHJvZ3Jlc3NBY3Rpb25zLnN1Ym1pdExheW91dFN0ZXAodGhpcy5zdGF0ZS5sYXlvdXQpO1xuXHR9LFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoV2VsY29tZVNlY3Rpb24sIHtpZDogXCJ3ZWxjb21lX19sYXlvdXRcIn0sIFxuXHRcdFx0XG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoM1wiLCBudWxsLCBcIkxldCdzIGxhdW5jaCBcIiwgUmVhY3QuY3JlYXRlRWxlbWVudChcImVtXCIsIG51bGwsIHRoaXMuc3RhdGUuc2l0ZV90aXRsZSkpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImg0XCIsIG51bGwsIFwiU2VsZWN0IGEgbGF5b3V0XCIpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge2NsYXNzTmFtZTogXCJzdGVwLWRlc2NyaXB0aW9uXCJ9LCBcIldvcmRQcmVzcyBjYW4gYmUgYSBibG9nLCBhIHdlYiBzaXRlIHdpdGggYSBoaWVyYXJjaHkgb2Ygc3RhdGljIHBhZ2VzLCBvciBhIGNvbWJpbmF0aW9uIG9mIHRoZSB0d28uXCIpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImZvcm1cIiwge29uU3VibWl0OiB0aGlzLmhhbmRsZVN1Ym1pdH0sIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiLCBudWxsLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7dHlwZTogXCJyYWRpb1wiLCBuYW1lOiBcInNpdGVfbGF5b3V0XCIsIHZhbHVlOiBcIndlYnNpdGVcIiwgY2hlY2tlZDogdGhpcy5zdGF0ZS5sYXlvdXQgPT09ICd3ZWJzaXRlJywgb25DaGFuZ2U6IHRoaXMuaGFuZGxlU2V0TGF5b3V0fSksIFwiIFN0YXRpYyBXZWJzaXRlXCIsIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge2NsYXNzTmFtZTogXCJkZXNjcmlwdGlvblwifSwgXCJBIHdlYiBzaXRlIHdpdGggYSBoaWVyYXJjaHkgb2YgcGFnZXNcIilcblx0XHRcdFx0XHQpLCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiYnJcIiwgbnVsbCksIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiLCBudWxsLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7dHlwZTogXCJyYWRpb1wiLCBuYW1lOiBcInNpdGVfbGF5b3V0XCIsIHZhbHVlOiBcInNpdGUtYmxvZ1wiLCBjaGVja2VkOiB0aGlzLnN0YXRlLmxheW91dCA9PT0gJ3NpdGUtYmxvZycsIG9uQ2hhbmdlOiB0aGlzLmhhbmRsZVNldExheW91dH0pLCBcIiBTdGF0aWMgV2Vic2l0ZSB3aXRoIGEgYmxvZ1wiLCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHtjbGFzc05hbWU6IFwiZGVzY3JpcHRpb25cIn0sIFwiQSB3ZWIgc2l0ZSB3aXRoIHBhZ2VzIHRoYXQgYWxzbyBoYXMgYSBibG9nIG9yIG5ld3Mgc2VjdGlvblwiKVxuXHRcdFx0XHRcdCksIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJiclwiLCBudWxsKSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImxhYmVsXCIsIG51bGwsIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHt0eXBlOiBcInJhZGlvXCIsIG5hbWU6IFwic2l0ZV9sYXlvdXRcIiwgdmFsdWU6IFwiYmxvZ1wiLCBjaGVja2VkOiB0aGlzLnN0YXRlLmxheW91dCA9PT0gJ2Jsb2cnLCBvbkNoYW5nZTogdGhpcy5oYW5kbGVTZXRMYXlvdXR9KSwgXCIgSnVzdCBhIGJsb2dcIiwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCB7Y2xhc3NOYW1lOiBcImRlc2NyaXB0aW9uXCJ9LCBcIkEgd2ViIHNpdGUgdGhhdCB3aWxsIGNvbnN0YW50bHkgc2hvdyBuZXcgY29udGVudCAoYXJ0aWNsZXMsIHBob3RvcywgdmlkZW9zLCBldGMuKVwiKVxuXHRcdFx0XHRcdCksIFxuXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge2NsYXNzTmFtZTogXCJzdWJtaXRcIn0sIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHtjb2xvcjogXCJibHVlXCJ9LCBcIk5leHQgU3RlcCDihpJcIilcblx0XHRcdFx0XHQpXG5cdFx0XHRcdClcblx0XHRcdClcblx0XHQpO1xuXHR9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBMYXlvdXRTdGVwOyIsInZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93LlJlYWN0IDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbC5SZWFjdCA6IG51bGwpLFxuXHRTaXRlQWN0aW9ucyA9IHJlcXVpcmUoJy4uL2FjdGlvbnMvc2l0ZS1hY3Rpb25zJyksXG5cdFNpdGVTdG9yZSA9IHJlcXVpcmUoJy4uL3N0b3Jlcy9zaXRlLXN0b3JlJyksXG5cdFdlbGNvbWVTZWN0aW9uID0gcmVxdWlyZSgnLi93ZWxjb21lLXNlY3Rpb24nKSxcblx0QnV0dG9uID0gcmVxdWlyZSgnQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9qcy9jb21wb25lbnRzL2J1dHRvbicpLFxuXHRTZXR1cFByb2dyZXNzQWN0aW9ucyA9IHJlcXVpcmUoJy4uL2FjdGlvbnMvc2V0dXAtcHJvZ3Jlc3MtYWN0aW9ucycpO1xuXG5mdW5jdGlvbiBnZXRTaXRlVGl0bGVTdGF0ZSgpIHtcblx0cmV0dXJuIHtcblx0XHR0aXRsZTogU2l0ZVN0b3JlLmdldFRpdGxlKCksXG5cdFx0ZGVzY3JpcHRpb246IFNpdGVTdG9yZS5nZXREZXNjcmlwdGlvbigpXG5cdH07XG59XG5cbnZhciBTaXRlVGl0bGVTdGVwID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiBcIlNpdGVUaXRsZVN0ZXBcIixcblxuXHRjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0U2l0ZVN0b3JlLmFkZENoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0fSxcblxuXHRjb21wb25lbnRXaWxsVW5tb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0U2l0ZVN0b3JlLnJlbW92ZUNoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0fSxcblxuXHRfb25DaGFuZ2U6IGZ1bmN0aW9uKCkge1xuICAgIFx0dGhpcy5zZXRTdGF0ZShnZXRTaXRlVGl0bGVTdGF0ZSgpKTtcbiAgXHR9LFxuXG5cdGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGdldFNpdGVUaXRsZVN0YXRlKCk7XG5cdH0sXG5cblx0aGFuZGxlQ2hhbmdlVGl0bGU6IGZ1bmN0aW9uKGUpIHtcblx0XHRTaXRlQWN0aW9ucy5zZXRUaXRsZShlLmN1cnJlbnRUYXJnZXQudmFsdWUpO1xuXHR9LFxuXG5cdGhhbmRsZUNoYW5nZURlc2NyaXB0aW9uOiBmdW5jdGlvbihlKSB7XG5cdFx0U2l0ZUFjdGlvbnMuc2V0RGVzY3JpcHRpb24oZS5jdXJyZW50VGFyZ2V0LnZhbHVlKTtcblx0fSxcblxuXHRoYW5kbGVTdWJtaXQ6IGZ1bmN0aW9uKGUpIHtcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0U2V0dXBQcm9ncmVzc0FjdGlvbnMuc3VibWl0VGl0bGVTdGVwKCk7XG5cdH0sXG5cblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gKFxuXG5cdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFdlbGNvbWVTZWN0aW9uLCB7aWQ6IFwid2VsY29tZV9fc2l0ZS10aXRsZVwifSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoM1wiLCBudWxsLCBcIkxldCdzIGxhdW5jaCB5b3VyIG5ldyB3ZWJzaXRlXCIpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImg0XCIsIG51bGwsIFwiVGl0bGUgYW5kIERlc2NyaXB0aW9uXCIpLCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge2NsYXNzTmFtZTogXCJzdGVwLWRlc2NyaXB0aW9uXCJ9LCBcblx0XHRcdFx0XHRcIk1ha2UgeW91ciBzaXRlIHN0YW5kIG91dCB3aXRoIGEgY2F0Y2h5IG5hbWUuXCJcblx0XHRcdFx0KSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJmb3JtXCIsIHtvblN1Ym1pdDogdGhpcy5oYW5kbGVTdWJtaXR9LCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwidGFibGVcIiwge2NsYXNzTmFtZTogXCJmb3JtLXRhYmxlXCJ9LCBcblx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0Ym9keVwiLCBudWxsLCBcblx0XHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInRyXCIsIG51bGwsIFxuXHRcdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0aFwiLCBudWxsLCBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIiwge2h0bWxGb3I6IFwic2l0ZV90aXRsZVwifSwgXCJTaXRlIFRpdGxlXCIpKSwgXG5cdFx0XHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInRkXCIsIG51bGwsIFxuXHRcdFx0XHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHt0eXBlOiBcInRleHRcIiwgbmFtZTogXCJzaXRlX3RpdGxlXCIsIGlkOiBcInNpdGUtdGl0bGVcIiwgYXV0b0NvbXBsZXRlOiBcIm9mZlwiLCBvbkNoYW5nZTogdGhpcy5oYW5kbGVDaGFuZ2VUaXRsZSwgdmFsdWU6IHRoaXMuc3RhdGUudGl0bGUsIFxuXHRcdFx0XHRcdCAgICAgICBwbGFjZWhvbGRlcjogXCJTaXRlIFRpdGxlICh0aGlzIGNhbiBiZSBjaGFuZ2VkIGxhdGVyKVwiLCByZXF1aXJlZDogdHJ1ZX0pLCBcblx0XHRcdFx0XHQgICAgICAgXHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge2NsYXNzTmFtZTogXCJkZXNjcmlwdGlvblwifSwgXCJUaGUgbmFtZSBvZiB5b3VyIHNpdGUuIFRoaXMgdGl0bGUgYXBwZWFycyBhdCB0aGUgdG9wIG9mIHBhZ2VzIGFuZCBpbiBzZWFyY2ggcmVzdWx0cy5cIilcblx0XHRcdFx0XHQgICAgICAgXHRcdClcblx0XHRcdFx0XHQgICAgICBcdCksIFxuXHRcdFx0XHRcdCAgICAgIFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInRyXCIsIG51bGwsIFxuXHRcdFx0XHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0aFwiLCBudWxsLCBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIiwge2h0bWxGb3I6IFwic2l0ZV9kZXNjcmlwdGlvblwifSwgXCJTaXRlIERlc2NyaXB0aW9uXCIpKSwgXG5cdFx0XHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcInRkXCIsIG51bGwsIFxuXHRcdFx0XHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHt0eXBlOiBcInRleHRcIiwgbmFtZTogXCJzaXRlX2Rlc2NyaXB0aW9uXCIsIGlkOiBcInNpdGUtZGVzY3JpcHRpb25cIiwgYXV0b0NvbXBsZXRlOiBcIm9mZlwiLCBvbkNoYW5nZTogdGhpcy5oYW5kbGVDaGFuZ2VEZXNjcmlwdGlvbiwgdmFsdWU6IHRoaXMuc3RhdGUuZGVzY3JpcHRpb24sIFxuXHRcdFx0XHRcdCAgICAgICBwbGFjZWhvbGRlcjogXCJTaXRlIERlc2NyaXB0aW9uXCIsIHJlcXVpcmVkOiB0cnVlfSksIFxuXHRcdFx0XHRcdCAgICAgICBcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCB7Y2xhc3NOYW1lOiBcImRlc2NyaXB0aW9uXCJ9LCBcIkEgbW90dG8gb3IgdGFnbGluZS4gVGhpcyBhcHBlYXJzIGJlbG93IHRoZSB0aXRsZSBvbiB5b3VyIHNpdGUsIGFuZCBuZXh0IHRvIHRoZSB0aXRsZSBpbiBzZWFyY2ggcmVzdWx0cy4gVHJ5IHRvIGJlIGJyaWVmIGFuZCBkZXNjcmlwdGl2ZSwgZS5nLiBcXFwiWW91ciBvbmxpbmUgYmFpdCBhbmQgdGFja2xlIHN0b3JlXFxcIlwiKVxuXHRcdFx0XHRcdCAgICAgICBcdFx0KVxuXHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0KSwgXG5cblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCB7Y2xhc3NOYW1lOiBcInN1Ym1pdFwifSwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwge2NvbG9yOiBcImJsdWVcIn0sIFwiTmV4dCBTdGVwIOKGklwiKVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KVxuXHRcdFx0KVxuXHRcdCk7XG5cdH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNpdGVUaXRsZVN0ZXA7IiwidmFyIFJlYWN0ID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3cuUmVhY3QgOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsLlJlYWN0IDogbnVsbCksXG5cdFNldHVwUHJvZ3Jlc3NTdG9yZSA9IHJlcXVpcmUoJy4uL3N0b3Jlcy9zZXR1cC1wcm9ncmVzcy1zdG9yZScpLFxuXHRTZXR1cFByb2dyZXNzQWN0aW9ucyA9IHJlcXVpcmUoJy4uL2FjdGlvbnMvc2V0dXAtcHJvZ3Jlc3MtYWN0aW9ucycpO1xuXG5mdW5jdGlvbiBnZXRTZXR1cFByb2dyZXNzKCkge1xuXHRyZXR1cm4ge1xuXHRcdGNvbXBsZXRlZDogU2V0dXBQcm9ncmVzc1N0b3JlLmdldEN1cnJlbnRTdGVwKCkuY29tcGxldGVkXG5cdH07XG59XG5cbnZhciBTa2lwQnV0dG9uID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiBcIlNraXBCdXR0b25cIixcblxuXHRzdHlsZToge1xuXHRcdGNvbG9yOiAnI2JiYicsXG5cdFx0Zm9udFNpemU6ICc5MCUnLFxuXHRcdG1hcmdpbkxlZnQ6IDIwLFxuXHRcdGJvcmRlckJvdHRvbTogJzFweCBkb3R0ZWQgI2JiYidcblx0fSxcblxuXHRjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0U2V0dXBQcm9ncmVzc1N0b3JlLmFkZENoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0fSxcblxuXHRjb21wb25lbnRXaWxsVW5tb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0U2V0dXBQcm9ncmVzc1N0b3JlLnJlbW92ZUNoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0fSxcblxuXHRfb25DaGFuZ2U6IGZ1bmN0aW9uKCkge1xuICAgIFx0dGhpcy5zZXRTdGF0ZShnZXRTZXR1cFByb2dyZXNzKCkpO1xuICBcdH0sXG5cbiAgXHRnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBnZXRTZXR1cFByb2dyZXNzKCk7XG5cdH0sXG5cblx0aGFuZGxlU2tpcDogZnVuY3Rpb24gKGUpIHtcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0U2V0dXBQcm9ncmVzc0FjdGlvbnMuc2tpcFN0ZXAoKTtcblx0fSxcblxuXHRyZW5kZXI6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBjb21wbGV0ZWQgPSAodGhpcy5zdGF0ZS5jb21wbGV0ZWQpO1xuXHRcdGlmICggY29tcGxldGVkICkge1xuXHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwge3N0eWxlOiB0aGlzLnN0eWxlLCBocmVmOiBcIiNcIiwgb25DbGljazogdGhpcy5oYW5kbGVTa2lwfSwgXCJOb3Qgbm93XCIpKTtcblx0XHR9XG5cdH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNraXBCdXR0b247IiwiXG52YXIgUmVhY3QgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdy5SZWFjdCA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwuUmVhY3QgOiBudWxsKTtcblxudmFyIFRvb2x0aXAgPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiVG9vbHRpcFwiLFxuXHRwcm9wVHlwZXM6IHtcblx0XHRsZWZ0OiBSZWFjdC5Qcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsICAvLyBlLmcuIDYwMFxuXHRcdHRvcDogUmVhY3QuUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLCAgIC8vZS5nLiAxNTdcblx0XHR3aWR0aDogUmVhY3QuUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLCAvL2UuZy4gMzIwXG5cdFx0dGl0bGU6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCwgIC8vIGUuZy4gRGlzdHJhY3Rpb24tRnJlZSBXcml0aW5nXG5cdH0sXG5cblx0aGFuZGxlRGlzbWlzczogZnVuY3Rpb24gKCBlICkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0fSxcblxuXHRjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24gKCkge1xuXHRcdHRoaXMuX3JlY29tcHV0ZVBvc2l0aW9uKCk7XG5cdH0sXG5cblx0Y29tcG9uZW50V2lsbFJlY2VpdmVQcm9wczogZnVuY3Rpb24gKCkge1xuXHRcdHRoaXMuX3JlY29tcHV0ZVBvc2l0aW9uKCk7XG5cdH0sXG5cblx0Z2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbiAoKSB7XG5cdFx0cmV0dXJuIHtcblx0XHRcdHJlYWxUb3A6IHRoaXMucHJvcHMudG9wXG5cdFx0fTtcblx0fSxcblxuXHRfcmVjb21wdXRlUG9zaXRpb246IGZ1bmN0aW9uICgpIHtcblx0XHR2YXIgJHdyYXBwZXIgPSBqUXVlcnkoUmVhY3QuZmluZERPTU5vZGUodGhpcy5yZWZzLndyYXBwZXIpKTtcblxuXHRcdHRoaXMuc2V0U3RhdGUoe1xuXHRcdFx0cmVhbFRvcDogdGhpcy5wcm9wcy50b3AgLSAoJHdyYXBwZXIub3V0ZXJIZWlnaHQoKS8yKVxuXHRcdH0pO1xuXHR9LFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIChcblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge3JlZjogXCJ3cmFwcGVyXCIsIGNsYXNzTmFtZTogXCJ3cC1wb2ludGVyIHdwLXBvaW50ZXItbGVmdFwiLCBzdHlsZToge3Bvc2l0aW9uOiAnYWJzb2x1dGUnLCB3aWR0aDogdGhpcy5wcm9wcy53aWR0aCwgdG9wOiB0aGlzLnN0YXRlLnJlYWxUb3AsIGxlZnQ6IHRoaXMucHJvcHMubGVmdCwgekluZGV4OiA5OTk5fX0sIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IFwid3AtcG9pbnRlci1jb250ZW50XCJ9LCBcblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwgbnVsbCwgdGhpcy5wcm9wcy50aXRsZSksIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIG51bGwsIHRoaXMucHJvcHMuY2hpbGRyZW4pXG5cdFx0XHRcdCksIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtjbGFzc05hbWU6IFwid3AtcG9pbnRlci1hcnJvd1wifSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiBcIndwLXBvaW50ZXItYXJyb3ctaW5uZXJcIn0pXG5cdFx0XHRcdClcblx0XHRcdClcblx0XHQpO1xuXHR9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBUb29sdGlwOyIsInZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93LlJlYWN0IDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbC5SZWFjdCA6IG51bGwpLFxuXHRSYWRpdW0gPSByZXF1aXJlKCdyYWRpdW0nKSxcblx0UHJvZ3Jlc3NCYXIgPSByZXF1aXJlKCdAYXV0b21hdHRpYy9kb3BzLXJlYWN0L2pzL2NvbXBvbmVudHMvcHJvZ3Jlc3MtYmFyJyksXG5cdFNldHVwUHJvZ3Jlc3NBY3Rpb25zID0gcmVxdWlyZSgnLi4vYWN0aW9ucy9zZXR1cC1wcm9ncmVzcy1hY3Rpb25zJyksXG5cdERhc2hpY29uID0gcmVxdWlyZSgnLi9kYXNoaWNvbicpO1xuXG52YXIgc3RlcFNoYXBlID0gUmVhY3QuUHJvcFR5cGVzLnNoYXBlKHtcblx0bmFtZTogUmVhY3QuUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuXHRzbHVnOiBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nXG59KTtcblxuLyoqXG4gKiBUaGUgbWVudSB3aGljaCBhbGxvd3MgdGhlIHVzZXIgdG8gc3dpdGNoIHN0ZXBzXG4gKiovXG52YXIgV2VsY29tZU1lbnUgPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiV2VsY29tZU1lbnVcIixcblx0XG5cdHByb3BUeXBlczoge1xuXHRcdGN1cnJlbnRTdGVwOiBzdGVwU2hhcGUuaXNSZXF1aXJlZCxcblx0XHRjbGlja2FibGU6IFJlYWN0LlByb3BUeXBlcy5ib29sLFxuXHRcdGFsbFN0ZXBzOiBSZWFjdC5Qcm9wVHlwZXMuYXJyYXlPZihzdGVwU2hhcGUpLmlzUmVxdWlyZWQsXG5cdFx0cHJvZ3Jlc3NQZXJjZW50OiBSZWFjdC5Qcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWRcblx0fSxcblxuXHRnZXREZWZhdWx0UHJvcHM6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB7XG5cdFx0XHRjbGlja2FibGU6IHRydWVcblx0XHR9O1xuXHR9LFxuXG5cdHN0eWxlczoge1xuXHRcdHdyYXBwZXI6IHtcblx0XHRcdGZsb2F0OiAncmlnaHQnLFxuXHRcdFx0d2lkdGg6ICcyOCUnLFxuXHRcdFx0aGVpZ2h0OiAnMTAwJScsXG5cdFx0XHRiYWNrZ3JvdW5kOiAnI2ZhZmFmYScsXG5cdFx0XHRib3JkZXI6ICcxcHggc29saWQgI2VlZScsXG5cdFx0fSxcblx0XHR0aXRsZToge1xuXHRcdFx0bWFyZ2luOiAwLFxuXHRcdFx0cGFkZGluZzogMTIsXG5cdFx0XHRvdmVyZmxvdzogJ2hpZGRlbicsXG5cdFx0XHRiYWNrZ3JvdW5kOiAnIzQ0NCcsXG5cdFx0XHRjb2xvcjogJyNmZmYnLFxuXHRcdFx0Zm9udFNpemU6IDEyLFxuXHRcdFx0dGV4dFRyYW5zZm9ybTogJ3VwcGVyY2FzZSdcblx0XHR9LFxuXHRcdGxpc3Q6IHtcblx0XHRcdG1hcmdpblJpZ2h0OiAxMCxcblx0XHRcdGxpc3RTdHlsZTogJ25vbmUnXG5cdFx0fSxcblx0XHRtZW51SXRlbToge1xuXHRcdFx0cG9zaXRpb246ICdyZWxhdGl2ZScsXG5cdFx0XHRjb2xvcjogJyNjY2MnLFxuXHRcdFx0bGluZUhlaWdodDogMS43LFxuXHRcdFx0J0BtZWRpYSAobWF4LXdpZHRoOiA3ODJweCknOiB7XG5cdFx0XHRcdGZvbnRTaXplOiAnc21hbGwnXG5cdFx0XHR9LFxuXHRcdFx0J0BtZWRpYSAobWF4LXdpZHRoOiA2MDBweCknOiB7XG5cdFx0XHRcdGZvbnRTaXplOiAnc21hbGxlcidcblx0XHRcdH1cblx0XHR9LFxuXHRcdG1lbnVJdGVtQ29tcGxldGVkOiB7XG5cdFx0XHRjb2xvcjogJyM0QUI4NjYnXG5cdFx0fSxcblx0XHRpY29uOiB7XG5cdFx0XHRmb250U2l6ZTogMTYsXG5cdFx0XHR0b3A6IDMsXG5cdFx0XHRwb3NpdGlvbjogJ3JlbGF0aXZlJ1xuXHRcdH0sXG5cdFx0bWVudUl0ZW1MaW5rOiB7XG5cdFx0XHRjb2xvcjogJ2luaGVyaXQnLFxuXHRcdFx0Ym9yZGVyQm90dG9tOiAnMXB4IGRhc2hlZCdcblx0XHR9LFxuXHRcdG1lbnVJdGVtQ3VycmVudDoge1xuXHRcdFx0Y29sb3I6ICcjMDA3NEEyJ1xuXHRcdH1cblx0fSxcblxuXHRzZWxlY3RTdGVwOiBmdW5jdGlvbihlKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFxuXHRcdHZhciBzbHVnID0galF1ZXJ5KGUuY3VycmVudFRhcmdldCkuZGF0YSgnc3RlcC1zbHVnJyk7XG5cblx0XHRTZXR1cFByb2dyZXNzQWN0aW9ucy5zZXRDdXJyZW50U3RlcChzbHVnKTtcblx0fSxcblxuXHRyZW5kZXI6IGZ1bmN0aW9uKCkge1xuXG5cdFx0dmFyIG1lbnVJdGVtcyA9IHRoaXMucHJvcHMuYWxsU3RlcHMubWFwKGZ1bmN0aW9uICggc3RlcCApIHtcblx0XHRcdHZhciB0aXRsZSwgY3VycmVudCwgbWVudVZpZXcsIGljb25OYW1lO1xuXG5cdFx0XHRpZiAoIHRoaXMucHJvcHMuY2xpY2thYmxlICYmIHRoaXMucHJvcHMuY3VycmVudFN0ZXAgKSB7XG5cdFx0XHRcdGN1cnJlbnQgPSAoIHRoaXMucHJvcHMuY3VycmVudFN0ZXAuc2x1ZyA9PSBzdGVwLnNsdWcgKTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCAhc3RlcC5zdGF0aWMgJiYgdGhpcy5wcm9wcy5jbGlja2FibGUgKSB7XG5cdFx0XHRcdHRpdGxlID0gUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwge2hyZWY6IFwiI1wiLCBzdHlsZTogdGhpcy5zdHlsZXMubWVudUl0ZW1MaW5rLCBcImRhdGEtc3RlcC1zbHVnXCI6IHN0ZXAuc2x1Zywgb25DbGljazogdGhpcy5zZWxlY3RTdGVwfSwgc3RlcC5uYW1lKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRpdGxlID0gc3RlcC5uYW1lO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHN0ZXAubWVudVZpZXcgJiYgdGhpcy5wcm9wcy5jbGlja2FibGUgKSB7XG5cdFx0XHRcdG1lbnVWaWV3ID0gUmVhY3QuY3JlYXRlRWxlbWVudChzdGVwLm1lbnVWaWV3LCBudWxsKTtcblx0XHRcdH1cblx0XHRcdFxuXHRcdFx0aWNvbk5hbWUgPSBzdGVwLmNvbXBsZXRlZCA/ICd5ZXMnIDogJ2Fycm93LXJpZ2h0LWFsdDInO1xuXG5cdFx0XHRyZXR1cm4gKFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwibGlcIiwge2tleTogc3RlcC5zbHVnLCBzdHlsZTogW3RoaXMuc3R5bGVzLm1lbnVJdGVtLCBzdGVwLmNvbXBsZXRlZCAmJiB0aGlzLnN0eWxlcy5tZW51SXRlbUNvbXBsZXRlZCwgY3VycmVudCAmJiB0aGlzLnN0eWxlcy5tZW51SXRlbUN1cnJlbnRdfSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChEYXNoaWNvbiwge3N0eWxlOiB0aGlzLnN0eWxlcy5pY29uLCBuYW1lOiBpY29uTmFtZX0pLCBcblx0XHRcdFx0XHR0aXRsZSwgXCIgXCIsIHN0ZXAuc2tpcHBlZCA/ICcoc2tpcHBlZCknIDogbnVsbCwgXG5cdFx0XHRcdFx0bWVudVZpZXdcblx0XHRcdFx0KVxuXHRcdFx0KTtcblx0XHR9LmJpbmQodGhpcykgKTtcblxuXHRcdHJldHVybiAoXG5cdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtzdHlsZTogdGhpcy5zdHlsZXMud3JhcHBlcn0sIFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDNcIiwge3N0eWxlOiB0aGlzLnN0eWxlcy50aXRsZX0sIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtzdHlsZToge2Zsb2F0OiAnbGVmdCcsIG1hcmdpblJpZ2h0OiAxMH19LCBcIllvdXIgUHJvZ3Jlc3NcIiksIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCwgXG5cdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFByb2dyZXNzQmFyLCB7c3R5bGU6IHsgZmxvYXQ6ICdsZWZ0J30sIHByb2dyZXNzUGVyY2VudDogdGhpcy5wcm9wcy5wcm9ncmVzc1BlcmNlbnR9KVxuXHRcdFx0XHRcdClcblx0XHRcdFx0KSwgXG5cdFx0XHRcdFxuXHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwib2xcIiwge3N0eWxlOiB0aGlzLnN0eWxlcy5saXN0fSwgXG5cdFx0XHRcdFx0bWVudUl0ZW1zXG5cdFx0XHRcdClcblx0XHRcdClcblx0XHQpO1xuXHR9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBSYWRpdW0oV2VsY29tZU1lbnUpOyIsInZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93LlJlYWN0IDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbC5SZWFjdCA6IG51bGwpO1xuXG52YXIgV2VsY29tZVNlY3Rpb24gPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiV2VsY29tZVNlY3Rpb25cIixcblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgJF9fMD0gIHRoaXMucHJvcHMsb3RoZXI9KGZ1bmN0aW9uKHNvdXJjZSwgZXhjbHVzaW9uKSB7dmFyIHJlc3QgPSB7fTt2YXIgaGFzT3duID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtpZiAoc291cmNlID09IG51bGwpIHt0aHJvdyBuZXcgVHlwZUVycm9yKCk7fWZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtpZiAoaGFzT3duLmNhbGwoc291cmNlLCBrZXkpICYmICFoYXNPd24uY2FsbChleGNsdXNpb24sIGtleSkpIHtyZXN0W2tleV0gPSBzb3VyY2Vba2V5XTt9fXJldHVybiByZXN0O30pKCRfXzAse30pO1xuXHRcdHJldHVybiAoXG5cdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIFJlYWN0Ll9fc3ByZWFkKHt9LCAgb3RoZXIsIHtjbGFzc05hbWU6IFwid2VsY29tZV9fc2VjdGlvblwifSksIFxuXHRcdFx0XHR0aGlzLnByb3BzLmNoaWxkcmVuXG5cdFx0XHQpXG5cdFx0KTtcblx0fVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gV2VsY29tZVNlY3Rpb247IiwidmFyIFJlYWN0ID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3cuUmVhY3QgOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsLlJlYWN0IDogbnVsbCksXG5cdFdlbGNvbWVNZW51ID0gcmVxdWlyZSgnLi93ZWxjb21lLW1lbnUnKSxcblx0U2V0dXBQcm9ncmVzc1N0b3JlID0gcmVxdWlyZSgnLi4vc3RvcmVzL3NldHVwLXByb2dyZXNzLXN0b3JlJyksXG5cdFJlc2V0ID0gcmVxdWlyZSgnQGF1dG9tYXR0aWMvZG9wcy1yZWFjdC9qcy9jb21wb25lbnRzL3Jlc2V0JyksXG5cdFNldHVwUHJvZ3Jlc3NBY3Rpb25zID0gcmVxdWlyZSgnLi4vYWN0aW9ucy9zZXR1cC1wcm9ncmVzcy1hY3Rpb25zJyksXG5cdEZsYXNoID0gcmVxdWlyZSgnLi9mbGFzaCcpLFxuXHRHZXRTdGFydGVkID0gcmVxdWlyZSgnLi9nZXQtc3RhcnRlZCcpLFxuXHRTcGlubmVyU3RvcmUgPSByZXF1aXJlKCcuLi9zdG9yZXMvc3Bpbm5lci1zdG9yZScpLFxuXHRTcGlubmVyQWN0aW9ucyA9IHJlcXVpcmUoJy4uL2FjdGlvbnMvc3Bpbm5lci1hY3Rpb25zJyksXG5cdERhdGFTdG9yZSA9IHJlcXVpcmUoJy4uL3N0b3Jlcy9kYXRhLXN0b3JlJyk7XG5cbmZ1bmN0aW9uIGdldFNldHVwUHJvZ3Jlc3MoKSB7XG5cdHJldHVybiB7IFxuXHRcdG5ld1VzZXI6IFNldHVwUHJvZ3Jlc3NTdG9yZS5pc05ld1VzZXIoKSwgXG5cdFx0c2hvd1NwaW5uZXI6IFNwaW5uZXJTdG9yZS5zaG93aW5nKCksIFxuXHRcdHNwaW5uZXJNZXNzYWdlOiBTcGlubmVyU3RvcmUuZ2V0TWVzc2FnZSgpLCBcblx0XHRjdXJyZW50U3RlcDogU2V0dXBQcm9ncmVzc1N0b3JlLmdldEN1cnJlbnRTdGVwKCksIFxuXHRcdGFsbFN0ZXBzOiBTZXR1cFByb2dyZXNzU3RvcmUuZ2V0QWxsU3RlcHMoKSwgXG5cdFx0cHJvZ3Jlc3NQZXJjZW50OiBTZXR1cFByb2dyZXNzU3RvcmUuZ2V0UHJvZ3Jlc3NQZXJjZW50KCkgXG5cdH07XG59XG5cbi8vIFRPRE86IHZpc3VhbCBcInNhdmluZ1wiIGZvciB0aGlzLnN0YXRlLnNhdmluZ1xudmFyIFdlbGNvbWVXaWRnZXQgPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiV2VsY29tZVdpZGdldFwiLFxuXHRjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0U2V0dXBQcm9ncmVzc1N0b3JlLmFkZENoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0XHRTcGlubmVyU3RvcmUuYWRkQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25TcGlubmVyQ2hhbmdlKTtcblx0XHREYXRhU3RvcmUuYWRkQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25EYXRhQ2hhbmdlKTtcblx0fSxcblxuXHRjb21wb25lbnRXaWxsVW5tb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0U2V0dXBQcm9ncmVzc1N0b3JlLnJlbW92ZUNoYW5nZUxpc3RlbmVyKHRoaXMuX29uQ2hhbmdlKTtcblx0XHRTcGlubmVyU3RvcmUucmVtb3ZlQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25TcGlubmVyQ2hhbmdlKTtcblx0XHREYXRhU3RvcmUucmVtb3ZlQ2hhbmdlTGlzdGVuZXIodGhpcy5fb25EYXRhQ2hhbmdlKTtcblx0fSxcblxuXHRfb25DaGFuZ2U6IGZ1bmN0aW9uKCkge1xuICAgIFx0dGhpcy5zZXRTdGF0ZShnZXRTZXR1cFByb2dyZXNzKCkpO1xuICBcdH0sXG5cbiAgXHRfb25TcGlubmVyQ2hhbmdlOiBmdW5jdGlvbigpIHtcbiAgXHRcdHRoaXMuc2V0U3RhdGUoeyBzaG93U3Bpbm5lcjogU3Bpbm5lclN0b3JlLnNob3dpbmcoKSwgc3Bpbm5lck1lc3NhZ2U6IFNwaW5uZXJTdG9yZS5nZXRNZXNzYWdlKCkgfSk7XG4gIFx0fSxcblxuICBcdF9vbkRhdGFDaGFuZ2U6IGZ1bmN0aW9uKCkge1xuICBcdFx0dGhpcy5zZXRTdGF0ZSh7IHNhdmluZzogRGF0YVN0b3JlLmlzU2F2aW5nKCkgfSk7XG4gIFx0fSxcblxuXHRnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBnZXRTZXR1cFByb2dyZXNzKCk7XG5cdH0sXG5cblx0aGFuZGxlUmVzZXQ6IGZ1bmN0aW9uKCBlICkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRTZXR1cFByb2dyZXNzQWN0aW9ucy5yZXNldERhdGEoKTtcblx0fSxcblxuXHRoYW5kbGVTaG93U3Bpbm5lcjogZnVuY3Rpb24gKCBlICkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRTcGlubmVyQWN0aW9ucy5zaG93KFwiVGVzdGluZyBzcGlubmVyXCIpO1xuXHR9LFxuXG5cdGhhbmRsZUhpZGVTcGlubmVyOiBmdW5jdGlvbiAoIGUgKSB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFNwaW5uZXJBY3Rpb25zLmhpZGUoKTtcblx0fSxcblx0XG5cbiAgXHRyZW5kZXI6IGZ1bmN0aW9uKCkge1xuICBcdFx0cmV0dXJuIChcblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVzZXQsIHtjbGFzc05hbWU6IFwiZ2V0dGluZy1zdGFydGVkXCJ9LCBcblx0XHRcdFx0dGhpcy5fcmVuZGVyRGVidWcoKSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge2NsYXNzTmFtZTogXCJnZXR0aW5nLXN0YXJ0ZWRfX3dyYXBwZXJcIn0sIFxuXHRcdFx0XHRcdHRoaXMuX3JlbmRlclNwaW5uZXIoKSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiBcImdldHRpbmctc3RhcnRlZF9fc2VjdGlvbnNcIn0sIFxuXHRcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChGbGFzaCwgbnVsbCksIFxuXHRcdFx0XHRcdFx0dGhpcy5fcmVuZGVyU2VjdGlvbigpXG5cdFx0XHRcdFx0KSwgXG5cblx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFdlbGNvbWVNZW51LCB7Y2xpY2thYmxlOiAhdGhpcy5zdGF0ZS5uZXdVc2VyLCBjdXJyZW50U3RlcDogdGhpcy5zdGF0ZS5jdXJyZW50U3RlcCwgYWxsU3RlcHM6IHRoaXMuc3RhdGUuYWxsU3RlcHMsIHByb2dyZXNzUGVyY2VudDogdGhpcy5zdGF0ZS5wcm9ncmVzc1BlcmNlbnR9KSwgXG5cdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiBcImNsZWFyXCJ9KVxuXHRcdFx0XHQpXG5cdFx0XHQpXG5cdFx0KTtcblx0fSxcblxuXHRfcmVuZGVyU2VjdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCB0aGlzLnN0YXRlLm5ld1VzZXIgKSB7XG4gIFx0XHRcdHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChHZXRTdGFydGVkLCBudWxsKSk7XG4gIFx0XHR9IGVsc2Uge1xuICBcdFx0XHRyZXR1cm4gdGhpcy5fcmVuZGVyQ3VycmVudFZpZXcoKTtcbiAgXHRcdH1cblx0fSxcblxuXHRfcmVuZGVyRGVidWc6IGZ1bmN0aW9uKCkge1xuXHRcdGlmICggSlBTLmRlYnVnICkge1xuICBcdFx0XHRyZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCwgXG4gIFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwge2hyZWY6IFwiI1wiLCBjbGFzc05hbWU6IFwiYnV0dG9uXCIsIG9uQ2xpY2s6IHRoaXMuaGFuZGxlUmVzZXR9LCBcIlJlc2V0IFdpemFyZFwiKSwgXG4gIFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwge2hyZWY6IFwiI1wiLCBjbGFzc05hbWU6IFwiYnV0dG9uXCIsIG9uQ2xpY2s6IHRoaXMuaGFuZGxlU2hvd1NwaW5uZXJ9LCBcIlNob3cgc3Bpbm5lclwiKSwgXG4gIFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwge2hyZWY6IFwiI1wiLCBjbGFzc05hbWU6IFwiYnV0dG9uXCIsIG9uQ2xpY2s6IHRoaXMuaGFuZGxlSGlkZVNwaW5uZXJ9LCBcIkhpZGUgc3Bpbm5lclwiKVxuICBcdFx0XHQpKTtcbiAgXHRcdH0gZWxzZSB7XG4gIFx0XHRcdHJldHVybiBudWxsO1xuICBcdFx0fVxuXHR9LFxuXG5cdF9yZW5kZXJTcGlubmVyOiBmdW5jdGlvbigpIHtcblx0XHRpZiAoIHRoaXMuc3RhdGUuc2hvd1NwaW5uZXIgKSB7XG4gIFx0XHRcdHJldHVybiAoXG4gIFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiBcImxvYWRpbmdcIn0sIFxuICBcdFx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7Y2xhc3NOYW1lOiBcImxvYWRpbmdfX21lc3NhZ2VcIn0sIFxuICBcdFx0XHRcdFx0XHRSZWFjdC5jcmVhdGVFbGVtZW50KFwiaW1nXCIsIHtzcmM6IFwiL3dwLWFkbWluL2ltYWdlcy9zcGlubmVyLTJ4LmdpZlwiLCB3aWR0aDogXCIxNnB4XCIsIGhlaWdodDogXCIxNnB4XCJ9KSwgXG4gIFx0XHRcdFx0XHRcdFwiwqDCoFwiLCB0aGlzLnN0YXRlLnNwaW5uZXJNZXNzYWdlXG4gIFx0XHRcdFx0XHQpXG4gIFx0XHRcdFx0KVxuICBcdFx0XHQpO1xuXG4gIFx0XHR9IGVsc2Uge1xuICBcdFx0XHRyZXR1cm4gbnVsbDtcbiAgXHRcdH1cblx0fSxcblxuXHRfcmVuZGVyQ3VycmVudFZpZXc6IGZ1bmN0aW9uKCkge1xuXHRcdGlmICggdGhpcy5zdGF0ZS5jdXJyZW50U3RlcCApIHtcbiAgXHRcdFx0cmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KHRoaXMuc3RhdGUuY3VycmVudFN0ZXAud2VsY29tZVZpZXcsIG51bGwpKTtcbiAgXHRcdH0gZWxzZSB7XG4gIFx0XHRcdHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImgzXCIsIG51bGwsIFwiTm90aGluZ1wiKSk7XG4gIFx0XHR9XG5cdH0sXG5cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFdlbGNvbWVXaWRnZXQ7IiwidmFyIGtleU1pcnJvciA9IHJlcXVpcmUoJ2tleW1pcnJvcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGtleU1pcnJvcih7XG5cdFNURVBfQ09NUExFVEU6IG51bGwsXG5cdFNURVBfR0VUX1NUQVJURUQ6IG51bGwsXG5cdFNURVBfU0VMRUNUOiBudWxsLFxuXHRTVEVQX05FWFQ6IG51bGwsXG5cdFNURVBfU0tJUDogbnVsbCxcblx0U0lURV9TRVRfVElUTEU6IG51bGwsXG5cdFNJVEVfU0VUX0RFU0NSSVBUSU9OOiBudWxsLFxuXHRTSVRFX1NBVkVfVElUTEVfQU5EX0RFU0NSSVBUSU9OOiBudWxsLFxuXHRTSVRFX1NFVF9USEVNRTogbnVsbCxcblx0U0lURV9JTlNUQUxMX1RIRU1FOiBudWxsLFxuXHRTSVRFX0pFVFBBQ0tfQ09ORklHVVJFRDogbnVsbCxcblx0U0lURV9KRVRQQUNLX01PRFVMRV9FTkFCTEVEOiBudWxsLFxuXHRTSVRFX0pFVFBBQ0tfTU9EVUxFX0RJU0FCTEVEOiBudWxsLFxuXHRTSVRFX0pFVFBBQ0tfSlVNUFNUQVJUX0VOQUJMRUQ6IG51bGwsXG5cdFNJVEVfSkVUUEFDS19BRERfTU9EVUxFUzogbnVsbCxcblx0U0lURV9TRVRfTEFZT1VUOiBudWxsLFxuXG5cdFNBVkVfU1RBUlRFRDogbnVsbCxcblx0U0FWRV9GSU5JU0hFRDogbnVsbCxcblxuXHRTRVRfRkxBU0g6IG51bGwsXG5cdFVOU0VUX0ZMQVNIOiBudWxsLFxuXHRGTEFTSF9TRVZFUklUWV9OT1RJQ0U6IG51bGwsXG5cdEZMQVNIX1NFVkVSSVRZX0VSUk9SOiBudWxsLFxuXG5cdFJFU0VUX0RBVEE6IG51bGwsXG5cblx0U0hPV19TUElOTkVSOiBudWxsLFxuXHRISURFX1NQSU5ORVI6IG51bGxcbn0pOyIsIm1vZHVsZS5leHBvcnRzID0ge1xuXHQvLyBzdGVwc1xuXHRTSVRFX1RJVExFX1NURVBfU0xVRzogJ3RpdGxlJyxcblx0TEFZT1VUX1NURVBfU0xVRzogJ2xheW91dCcsXG5cdFRSQUZGSUNfU1RFUF9TTFVHOiAndHJhZmZpYycsXG5cdFNUQVRTX01PTklUT1JJTkdfU1RFUF9TTFVHOiAnc3RhdHMtbW9uaXRvcmluZycsXG5cdERFU0lHTl9TVEVQX1NMVUc6ICdkZXNpZ24nLFxuXHRBRFZBTkNFRF9TVEVQX1NMVUc6ICdhZHZhbmNlZCcsXG5cdEpFVFBBQ0tfTU9EVUxFU19TVEVQX1NMVUc6ICdqZXRwYWNrJ1xufTsiLCIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBBcHBEaXNwYXRjaGVyXG4gKlxuICogQSBzaW5nbGV0b24gdGhhdCBvcGVyYXRlcyBhcyB0aGUgY2VudHJhbCBodWIgZm9yIGFwcGxpY2F0aW9uIHVwZGF0ZXMuXG4gKi9cblxudmFyIERpc3BhdGNoZXIgPSByZXF1aXJlKCdmbHV4JykuRGlzcGF0Y2hlcjtcblxubW9kdWxlLmV4cG9ydHMgPSBuZXcgRGlzcGF0Y2hlcigpOyIsInZhciBXZWxjb21lUGFuZWwgPSByZXF1aXJlKCcuL3dlbGNvbWUtcGFuZWwnKTtcblxuV2VsY29tZVBhbmVsKCk7IiwidmFyIEFwcERpc3BhdGNoZXIgPSByZXF1aXJlKCcuLi9kaXNwYXRjaGVyL2FwcC1kaXNwYXRjaGVyJyksXG5cdEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlcixcblx0SlBTQ29uc3RhbnRzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL2pldHBhY2stc3RhcnQtY29uc3RhbnRzJyk7XG5cbi8qXG4gKiBUaGlzIGlzIGEgcmVmY291bnRlZCBzYXZlIG1vbml0b3Igd2hpY2ggd2FybnMgaWYgeW91IHRyeSB0byBsZWF2ZSB0aGUgcGFnZSB3aGlsZSB0aGUgZGF0YSBpcyBzdGlsbCBzYXZpbmdcbiAqL1xuXG52YXIgX2N1cnJlbnRTYXZlcyA9IDAsIGpwc1RpbWVvdXQsIENIQU5HRV9FVkVOVCA9ICdjaGFuZ2UnO1xuXG5qUXVlcnkod2luZG93KS5vbignYmVmb3JldW5sb2FkJywgZnVuY3Rpb24oKSB7XG5cdGlmKERhdGFTdG9yZS5pc1NhdmluZygpKSB7XG5cdFx0anBzVGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG5cdCAgICAgICAgLy8gYWxlcnQoJ1lvdSBzdGF5ZWQnKTtcblx0ICAgICAgICAvLyBub29wXG5cdCAgICB9LCAxMDAwKTtcblx0ICAgIHJldHVybiBcIllvdXIgc2l0ZSBjaGFuZ2VzIGFyZSBzdGlsbCBzYXZpbmcuXCI7XG5cdH1cbn0pO1xuXG5qUXVlcnkod2luZG93KS5vbigndW5sb2FkJywgZnVuY3Rpb24oKSB7XG5cdGNsZWFyVGltZW91dChqcHNUaW1lb3V0KTtcbn0pO1xuXG5mdW5jdGlvbiBpbmNyZW1lbnRTYXZlQ291bnRlcigpIHtcblx0X2N1cnJlbnRTYXZlcyA9IF9jdXJyZW50U2F2ZXMgKyAxO1xufVxuXG5mdW5jdGlvbiBkZWNyZW1lbnRTYXZlQ291bnRlcigpIHtcblx0X2N1cnJlbnRTYXZlcyA9IF9jdXJyZW50U2F2ZXMgLSAxO1xufVxuXG52YXIgRGF0YVN0b3JlID0gXy5leHRlbmQoe30sIEV2ZW50RW1pdHRlci5wcm90b3R5cGUsIHtcblx0aXNTYXZpbmc6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBfY3VycmVudFNhdmVzID4gMDtcblx0fSxcblxuXHRhZGRDaGFuZ2VMaXN0ZW5lcjogZnVuY3Rpb24oY2FsbGJhY2spIHtcblx0XHR0aGlzLm9uKENIQU5HRV9FVkVOVCwgY2FsbGJhY2spO1xuXHR9LFxuXG5cdHJlbW92ZUNoYW5nZUxpc3RlbmVyOiBmdW5jdGlvbihjYWxsYmFjaykge1xuXHRcdHRoaXMucmVtb3ZlTGlzdGVuZXIoQ0hBTkdFX0VWRU5ULCBjYWxsYmFjayk7XG5cdH0sXG5cblx0ZW1pdENoYW5nZTogZnVuY3Rpb24oKSB7XG5cdCAgICB0aGlzLmVtaXQoQ0hBTkdFX0VWRU5UKTtcblx0fSxcbn0pO1xuXG5BcHBEaXNwYXRjaGVyLnJlZ2lzdGVyKGZ1bmN0aW9uKGFjdGlvbikge1xuXG4gIHN3aXRjaChhY3Rpb24uYWN0aW9uVHlwZSkge1xuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNBVkVfU1RBUlRFRDpcbiAgICBcdGluY3JlbWVudFNhdmVDb3VudGVyKCk7XG5cdFx0RGF0YVN0b3JlLmVtaXRDaGFuZ2UoKTtcblx0XHRicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNBVkVfRklOSVNIRUQ6XG4gICAgXHRkZWNyZW1lbnRTYXZlQ291bnRlcigpO1xuICAgICBcdERhdGFTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgIFx0YnJlYWs7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgLy8gbm8gb3BcbiAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gRGF0YVN0b3JlOyIsInZhciBBcHBEaXNwYXRjaGVyID0gcmVxdWlyZSgnLi4vZGlzcGF0Y2hlci9hcHAtZGlzcGF0Y2hlcicpLFxuXHRFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXIsXG5cdEpQU0NvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9qZXRwYWNrLXN0YXJ0LWNvbnN0YW50cycpO1xuXG52YXIgQ0hBTkdFX0VWRU5UID0gJ2NoYW5nZSc7XG52YXIgbWVzc2FnZSwgc2V2ZXJpdHk7XG5cbmZ1bmN0aW9uIHNldEZsYXNoKG5ld01lc3NhZ2UsIG5ld1NldmVyaXR5KSB7XG5cdG1lc3NhZ2UgPSBuZXdNZXNzYWdlO1xuXHRzZXZlcml0eSA9IG5ld1NldmVyaXR5O1xufVxuXG52YXIgRmxhc2hTdG9yZSA9IF8uZXh0ZW5kKHt9LCBFdmVudEVtaXR0ZXIucHJvdG90eXBlLCB7XG5cdGdldEZsYXNoOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgc2V2ZXJpdHlTdHJpbmc7XG5cblx0XHRzd2l0Y2goc2V2ZXJpdHkpIHtcblx0XHRcdGNhc2UgSlBTQ29uc3RhbnRzLkZMQVNIX1NFVkVSSVRZX0VSUk9SOlxuXHRcdFx0XHRzZXZlcml0eVN0cmluZyA9ICdlcnJvcic7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBKUFNDb25zdGFudHMuRkxBU0hfU0VWRVJJVFlfTk9USUNFOlxuXHRcdFx0XHRzZXZlcml0eVN0cmluZyA9ICdub3RpY2UnO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdC8vbm9vcFxuXHRcdH1cblx0XHRyZXR1cm4ge21lc3NhZ2U6IG1lc3NhZ2UsIHNldmVyaXR5OiBzZXZlcml0eVN0cmluZ307XG5cblx0fSxcblxuXHRhZGRDaGFuZ2VMaXN0ZW5lcjogZnVuY3Rpb24oY2FsbGJhY2spIHtcblx0XHR0aGlzLm9uKENIQU5HRV9FVkVOVCwgY2FsbGJhY2spO1xuXHR9LFxuXG5cdHJlbW92ZUNoYW5nZUxpc3RlbmVyOiBmdW5jdGlvbihjYWxsYmFjaykge1xuXHRcdHRoaXMucmVtb3ZlTGlzdGVuZXIoQ0hBTkdFX0VWRU5ULCBjYWxsYmFjayk7XG5cdH0sXG5cblx0ZW1pdENoYW5nZTogZnVuY3Rpb24oKSB7XG5cdCAgICB0aGlzLmVtaXQoQ0hBTkdFX0VWRU5UKTtcblx0fSxcbn0pO1xuXG5BcHBEaXNwYXRjaGVyLnJlZ2lzdGVyKGZ1bmN0aW9uKGFjdGlvbikge1xuXG4gIHN3aXRjaChhY3Rpb24uYWN0aW9uVHlwZSkge1xuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNFVF9GTEFTSDpcblx0XHRzZXRGbGFzaChhY3Rpb24ubWVzc2FnZSwgYWN0aW9uLnNldmVyaXR5KTtcblx0XHRGbGFzaFN0b3JlLmVtaXRDaGFuZ2UoKTtcblx0XHRicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlVOU0VUX0ZMQVNIOlxuICAgICBcdHNldEZsYXNoKG51bGwsIG51bGwpO1xuICAgICBcdEZsYXNoU3RvcmUuZW1pdENoYW5nZSgpO1xuICAgICBcdGJyZWFrO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIC8vIG5vIG9wXG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEZsYXNoU3RvcmU7IiwiLypcbiAqIFN0b3JlIHdoaWNoIG1hbmFnZXMgYW5kIHBlcnNpc3RzIHNldHVwIHdpemFyZCBwcm9ncmVzc1xuICovXG5cbnZhciBBcHBEaXNwYXRjaGVyID0gcmVxdWlyZSgnLi4vZGlzcGF0Y2hlci9hcHAtZGlzcGF0Y2hlcicpLFxuICBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXIsXG4gIEpQU0NvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9qZXRwYWNrLXN0YXJ0LWNvbnN0YW50cycpO1xuXG52YXIgQ0hBTkdFX0VWRU5UID0gJ2NoYW5nZSc7XG5cbnZhciBfc3RlcHMsIF9zdGFydGVkID0gSlBTLnN0YXJ0ZWQ7IFxuXG5mdW5jdGlvbiBzZXRTdGVwcyhzdGVwcykge1xuXG4gIC8vIHNldCB0aGUgY29tcGxldGlvbiBzdGF0dXMgb2YgZWFjaCBzdGVwIHRvIHRoZSBzYXZlZCB2YWx1ZXNcbiAgc3RlcHMuZm9yRWFjaCggZnVuY3Rpb24oc3RlcCkge1xuICAgIFxuICAgIC8vIGRlZmF1bHQgdmFsdWVzIGZvciBza2lwcGVkLCBjb21wbGV0ZWQgYW5kIHN0YXRpY1xuICAgIGlmICggdHlwZW9mKCBzdGVwLmNvbXBsZXRlZCApID09PSAndW5kZWZpbmVkJyApIHtcbiAgICAgIHN0ZXAuY29tcGxldGVkID0gKEpQUy5zdGVwX3N0YXR1c1tzdGVwLnNsdWddICYmIEpQUy5zdGVwX3N0YXR1c1tzdGVwLnNsdWddLmNvbXBsZXRlZCkgfHwgZmFsc2U7ICBcbiAgICB9XG5cbiAgICBpZiAoIHR5cGVvZiggc3RlcC5za2lwcGVkICkgPT09ICd1bmRlZmluZWQnICkge1xuICAgICAgc3RlcC5za2lwcGVkID0gKEpQUy5zdGVwX3N0YXR1c1tzdGVwLnNsdWddICYmIEpQUy5zdGVwX3N0YXR1c1tzdGVwLnNsdWddLnNraXBwZWQpIHx8IGZhbHNlOyAgXG4gICAgfVxuXG4gICAgaWYgKCB0eXBlb2YoIHN0ZXAuc3RhdGljICkgPT09ICd1bmRlZmluZWQnICkge1xuICAgICAgc3RlcC5zdGF0aWMgPSBmYWxzZTtcbiAgICB9XG5cbiAgICAvLyBkZWZhdWx0IHZhbHVlIGZvciBpbmNsdWRlSW5Qcm9ncmVzc1xuICAgIGlmICggdHlwZW9mKCBzdGVwLmluY2x1ZGVJblByb2dyZXNzICkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBzdGVwLmluY2x1ZGVJblByb2dyZXNzID0gdHJ1ZTtcbiAgICB9XG4gIH0pOyBcbiAgXG4gIF9zdGVwcyA9IHN0ZXBzO1xuICBcbiAgLy8gc2V0IGxvY2F0aW9uIHRvIGZpcnN0IHBlbmRpbmcgc3RlcCwgaWYgbm90IHNldFxuICBlbnN1cmVWYWxpZFN0ZXBTbHVnKCk7IFxufVxuXG5mdW5jdGlvbiBnZXRTdGFydGVkKCkge1xuICBfc3RhcnRlZCA9IHRydWU7XG4gIHNlbGVjdE5leHRQZW5kaW5nU3RlcCgpO1xufVxuXG5mdW5jdGlvbiBjb21wbGV0ZShzdGVwU2x1Zykge1xuICB2YXIgc3RlcCA9IGdldFN0ZXBGcm9tU2x1ZyhzdGVwU2x1Zyk7XG4gIHN0ZXAuY29tcGxldGVkID0gdHJ1ZTtcbiAgc3RlcC5za2lwcGVkID0gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIHNraXAoKSB7XG4gIHZhciBzdGVwU2x1ZyA9IGN1cnJlbnRTdGVwU2x1ZygpO1xuICB2YXIgc3RlcCA9IGdldFN0ZXBGcm9tU2x1ZyhzdGVwU2x1Zyk7XG4gIHN0ZXAuc2tpcHBlZCA9IHRydWU7XG4gIHNlbGVjdE5leHRQZW5kaW5nU3RlcCgpO1xufVxuXG5mdW5jdGlvbiBnZXRTdGVwRnJvbVNsdWcoIHN0ZXBTbHVnICkge1xuICB2YXIgY3VycmVudFN0ZXAgPSBudWxsO1xuICBfLmVhY2goIF9zdGVwcywgZnVuY3Rpb24oIHN0ZXAgKSB7XG4gICAgaWYoIHN0ZXAuc2x1ZyA9PT0gc3RlcFNsdWcgKSB7XG4gICAgICBjdXJyZW50U3RlcCA9IHN0ZXA7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGN1cnJlbnRTdGVwO1xufVxuXG5mdW5jdGlvbiBlbnN1cmVWYWxpZFN0ZXBTbHVnKCkge1xuICB2YXIgc3RlcFNsdWcgPSBjdXJyZW50U3RlcFNsdWcoKTtcbiAgaWYgKCAhICggc3RlcFNsdWcgJiYgZ2V0U3RlcEZyb21TbHVnKCBzdGVwU2x1ZyApICkgKSB7XG4gICAgc2VsZWN0TmV4dFBlbmRpbmdTdGVwKCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gc2VsZWN0TmV4dFBlbmRpbmdTdGVwKCkge1xuICB2YXIgcGVuZGluZ1N0ZXAgPSBfLmZpbmRXaGVyZSggX3N0ZXBzLCB7IGNvbXBsZXRlZDogZmFsc2UsIHNraXBwZWQ6IGZhbHNlIH0gKTtcbiAgaWYgKCBwZW5kaW5nU3RlcCAhPT0gbnVsbCApIHtcbiAgICBzZWxlY3QocGVuZGluZ1N0ZXAuc2x1Zyk7IC8vIGFsc28gc2V0cyB0aGUgd2luZG93IGxvY2F0aW9uIGhhc2hcbiAgfVxufVxuXG5mdW5jdGlvbiBjdXJyZW50U3RlcFNsdWcoKSB7XG4gIGlmICggd2luZG93LmxvY2F0aW9uLmhhc2guaW5kZXhPZignI3dlbGNvbWUvc3RlcHMnKSA9PT0gMCApIHtcbiAgICB2YXIgcGFydHMgPSB3aW5kb3cubG9jYXRpb24uaGFzaC5zcGxpdCgnLycpO1xuICAgIHZhciBzdGVwU2x1ZyA9IHBhcnRzW3BhcnRzLmxlbmd0aC0xXTtcbiAgICByZXR1cm4gc3RlcFNsdWc7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuZnVuY3Rpb24gc2VsZWN0KHN0ZXBTbHVnKSB7XG4gIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gJ3dlbGNvbWUvc3RlcHMvJytzdGVwU2x1Zztcbn1cblxuLy9yZXNldCBldmVyeXRoaW5nIGJhY2sgdG8gZGVmYXVsdHNcbmZ1bmN0aW9uIHJlc2V0KCkge1xuICBKUFMuc3RlcF9zdGF0dXMgPSB7fTtcbiAgXy53aGVyZSggX3N0ZXBzLCB7IHN0YXRpYzogZmFsc2V9ICkuZm9yRWFjaCggZnVuY3Rpb24gKCBzdGVwICkgeyBcbiAgICBzdGVwLmNvbXBsZXRlZCA9IGZhbHNlO1xuICAgIHN0ZXAuc2tpcHBlZCA9IGZhbHNlO1xuICB9ICk7XG4gIF9zdGFydGVkID0gZmFsc2U7XG59XG5cbnZhciBTZXR1cFByb2dyZXNzU3RvcmUgPSBfLmV4dGVuZCh7fSwgRXZlbnRFbWl0dGVyLnByb3RvdHlwZSwge1xuXG4gIGluaXQ6IGZ1bmN0aW9uKHN0ZXBzKSB7XG4gICAgc2V0U3RlcHMoc3RlcHMpO1xuICB9LFxuXG4gIGdldEFsbFN0ZXBzOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gX3N0ZXBzO1xuICB9LFxuXG4gIGlzTmV3VXNlcjogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuICFfc3RhcnRlZDtcbiAgfSxcblxuICBlbWl0Q2hhbmdlOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLmVtaXQoIENIQU5HRV9FVkVOVCApO1xuICB9LFxuXG4gIGdldEN1cnJlbnRTdGVwOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZ2V0U3RlcEZyb21TbHVnKCBjdXJyZW50U3RlcFNsdWcoKSApO1xuICB9LFxuXG4gIGdldFN0ZXBGcm9tU2x1ZzogZnVuY3Rpb24oc2x1Zykge1xuICAgIHJldHVybiBnZXRTdGVwRnJvbVNsdWcoIHNsdWcgKTtcbiAgfSxcblxuICBnZXRQcm9ncmVzc1BlcmNlbnQ6IGZ1bmN0aW9uKCkge1xuICBcdHZhciBudW1TdGVwcyA9IF8ud2hlcmUoIF9zdGVwcywgeyBpbmNsdWRlSW5Qcm9ncmVzczogdHJ1ZSB9ICkubGVuZ3RoO1xuICAgIHZhciBjb21wbGV0ZWRTdGVwcyA9IF8ud2hlcmUoIF9zdGVwcywgeyBpbmNsdWRlSW5Qcm9ncmVzczogdHJ1ZSwgY29tcGxldGVkOiB0cnVlIH0gKS5sZW5ndGg7XG4gICAgdmFyIHBlcmNlbnRDb21wbGV0ZSA9IChjb21wbGV0ZWRTdGVwcyAvIG51bVN0ZXBzKSAqIDkwICsgMTA7XG4gICAgdmFyIG91dHB1dCA9IE1hdGgucm91bmQocGVyY2VudENvbXBsZXRlIC8gMTApICogMTA7XG4gICAgcmV0dXJuIG91dHB1dDtcbiAgfSxcblxuICBhZGRDaGFuZ2VMaXN0ZW5lcjogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICB0aGlzLm9uKCBDSEFOR0VfRVZFTlQsIGNhbGxiYWNrICk7XG4gIH0sXG5cbiAgcmVtb3ZlQ2hhbmdlTGlzdGVuZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgdGhpcy5yZW1vdmVMaXN0ZW5lciggQ0hBTkdFX0VWRU5ULCBjYWxsYmFjayApO1xuICB9XG59KTtcblxuLy8gUmVnaXN0ZXIgY2FsbGJhY2sgdG8gaGFuZGxlIGFsbCB1cGRhdGVzXG5BcHBEaXNwYXRjaGVyLnJlZ2lzdGVyKGZ1bmN0aW9uKGFjdGlvbikge1xuICBcbiAgc3dpdGNoKGFjdGlvbi5hY3Rpb25UeXBlKSB7XG4gICAgY2FzZSBKUFNDb25zdGFudHMuU1RFUF9HRVRfU1RBUlRFRDpcbiAgICAgIGdldFN0YXJ0ZWQoKTtcbiAgICAgIFNldHVwUHJvZ3Jlc3NTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNURVBfU0VMRUNUOlxuICAgICAgc2VsZWN0KGFjdGlvbi5zbHVnKTtcbiAgICAgIFNldHVwUHJvZ3Jlc3NTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNURVBfTkVYVDpcbiAgICAgIHNlbGVjdE5leHRQZW5kaW5nU3RlcCgpO1xuICAgICAgU2V0dXBQcm9ncmVzc1N0b3JlLmVtaXRDaGFuZ2UoKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBKUFNDb25zdGFudHMuU1RFUF9DT01QTEVURTpcbiAgICAgIGNvbXBsZXRlKGFjdGlvbi5zbHVnKTtcbiAgICAgIFNldHVwUHJvZ3Jlc3NTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNURVBfQ09NUExFVEVfQU5EX05FWFQ6XG4gICAgICBjb21wbGV0ZShhY3Rpb24uc2x1Zyk7XG4gICAgICBzZWxlY3ROZXh0UGVuZGluZ1N0ZXAoKTtcbiAgICAgIFNldHVwUHJvZ3Jlc3NTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlJFU0VUX0RBVEE6XG4gICAgICByZXNldCgpO1xuICAgICAgU2V0dXBQcm9ncmVzc1N0b3JlLmVtaXRDaGFuZ2UoKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBKUFNDb25zdGFudHMuU1RFUF9TS0lQOlxuICAgICAgc2tpcCgpO1xuICAgICAgU2V0dXBQcm9ncmVzc1N0b3JlLmVtaXRDaGFuZ2UoKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIC8vIG5vIG9wXG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNldHVwUHJvZ3Jlc3NTdG9yZTsiLCIvKlxuICogU3RvcmUgd2hpY2ggbWFuYWdlcyBhbmQgcGVyc2lzdHMgc2l0ZSBpbmZvcm1hdGlvblxuICovXG5cbnZhciBBcHBEaXNwYXRjaGVyID0gcmVxdWlyZSgnLi4vZGlzcGF0Y2hlci9hcHAtZGlzcGF0Y2hlcicpLFxuICBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXIsXG4gIEpQU0NvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9qZXRwYWNrLXN0YXJ0LWNvbnN0YW50cycpLFxuICBXUEFqYXggPSByZXF1aXJlKCcuLi91dGlscy93cC1hamF4Jyk7XG5cbnZhciBDSEFOR0VfRVZFTlQgPSAnY2hhbmdlJztcblxudmFyIGxheW91dCA9IEpQUy5zdGVwcy5sYXlvdXQuY3VycmVudDtcblxuZnVuY3Rpb24gc2V0VGl0bGUobmV3VGl0bGUpIHtcblx0SlBTLmJsb2dpbmZvLm5hbWUgPSBuZXdUaXRsZTtcbn1cblxuZnVuY3Rpb24gc2V0RGVzY3JpcHRpb24obmV3RGVzY3JpcHRpb24pIHtcbiAgSlBTLmJsb2dpbmZvLmRlc2NyaXB0aW9uID0gbmV3RGVzY3JpcHRpb247IFxufVxuXG5mdW5jdGlvbiBzZXRBY3RpdmVUaGVtZShhY3RpdmVUaGVtZUlkKSB7XG4gIEpQUy50aGVtZXMuZm9yRWFjaCggZnVuY3Rpb24oIHRoZW1lICkge1xuICAgIGlmICggdGhlbWUuaWQgPT0gYWN0aXZlVGhlbWVJZCApIHtcbiAgICAgIHRoZW1lLmFjdGl2ZSA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoZW1lLmFjdGl2ZSA9IGZhbHNlO1xuICAgIH1cbiAgfSApO1xufVxuXG5mdW5jdGlvbiBpbnN0YWxsZWRUaGVtZSh0aGVtZSkge1xuICBKUFMudGhlbWVzLnVuc2hpZnQodGhlbWUpO1xuICBKUFMudGhlbWVzID0gSlBTLnRoZW1lcy5zbGljZSgwLCAzKTtcbn1cblxuZnVuY3Rpb24gc2V0SmV0cGFja01vZHVsZUFjdGl2YXRlZChzbHVnKSB7XG4gIGlmICggXy5pbmRleE9mKCBKUFMuamV0cGFjay5hY3RpdmVfbW9kdWxlcywgc2x1ZyApID09PSAtMSApIHtcbiAgICBKUFMuamV0cGFjay5hY3RpdmVfbW9kdWxlcy5wdXNoKHNsdWcpOyAgXG4gIH1cbn1cblxuZnVuY3Rpb24gc2V0SmV0cGFja01vZHVsZURlY3RpdmF0ZWQoc2x1Zykge1xuICB2YXIgaW5kZXggPSBfLmluZGV4T2YoIEpQUy5qZXRwYWNrLmFjdGl2ZV9tb2R1bGVzLCBzbHVnICk7XG4gIGlmICggaW5kZXggPj0gMCkge1xuICAgIEpQUy5qZXRwYWNrLmFjdGl2ZV9tb2R1bGVzLnNwbGljZShpbmRleCwgMSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gc2V0SmV0cGFja0FkZGl0aW9uYWxNb2R1bGVzKG1vZHVsZXMpIHtcbiAgSlBTLmpldHBhY2suYWRkaXRpb25hbF9tb2R1bGVzID0gXy5maWx0ZXIobW9kdWxlcywgZnVuY3Rpb24obW9kdWxlKSB7XG4gICAgcmV0dXJuIF8uaW5kZXhPZihKUFMuamV0cGFjay5qdW1wc3RhcnRfbW9kdWxlcy5tYXAoZnVuY3Rpb24obW9kKXtyZXR1cm4gbW9kLnNsdWc7fSksIG1vZHVsZS5zbHVnKSA9PSAtMTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHNldExheW91dChsYXlvdXROYW1lKSB7XG4gIGxheW91dCA9IGxheW91dE5hbWU7IC8vIFhYWCBUT0RPOiBnZXQgdGhpcyB2YWx1ZSBkeW5hbWljYWxseSBmcm9tIHRoZSBzZXJ2ZXIhXG59XG5cbmZ1bmN0aW9uIHNldEpldHBhY2tDb25maWd1cmVkKCkge1xuICBKUFMuamV0cGFjay5jb25maWd1cmVkID0gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gc2V0SmV0cGFja0p1bXBzdGFydEFjdGl2YXRlZCgpIHtcbiAgSlBTLmpldHBhY2suanVtcHN0YXJ0X21vZHVsZXMuZm9yRWFjaCggZnVuY3Rpb24oIG1vZHVsZSApIHtcbiAgICBzZXRKZXRwYWNrTW9kdWxlQWN0aXZhdGVkKCBtb2R1bGUuc2x1ZyApO1xuICB9KTtcbn1cblxudmFyIFNpdGVTdG9yZSA9IF8uZXh0ZW5kKHt9LCBFdmVudEVtaXR0ZXIucHJvdG90eXBlLCB7XG5cbiAgZ2V0VGl0bGU6IGZ1bmN0aW9uKCkge1xuICBcdHJldHVybiBKUFMuYmxvZ2luZm8ubmFtZTtcbiAgfSxcblxuICBnZXREZXNjcmlwdGlvbjogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIEpQUy5ibG9naW5mby5kZXNjcmlwdGlvbjtcbiAgfSxcblxuICBnZXRUaGVtZXM6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBKUFMudGhlbWVzO1xuICB9LFxuXG4gIGdldEFjdGl2ZVRoZW1lSWQ6IGZ1bmN0aW9uKCkge1xuICAgIGZvcih2YXIgaT0wOyBpIDwgSlBTLnRoZW1lcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHRoZW1lID0gSlBTLnRoZW1lc1tpXTtcbiAgICAgIGlmICggdGhlbWUuYWN0aXZlICkge1xuICAgICAgICByZXR1cm4gdGhlbWUuaWQ7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9LFxuXG4gIGdldEpldHBhY2tDb25maWd1cmVkOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gSlBTLmpldHBhY2suY29uZmlndXJlZDtcbiAgfSxcblxuICBnZXRBY3RpdmVNb2R1bGVTbHVnczogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIEpQUy5qZXRwYWNrLmFjdGl2ZV9tb2R1bGVzO1xuICB9LFxuXG4gIGlzSmV0cGFja01vZHVsZUVuYWJsZWQ6IGZ1bmN0aW9uKHNsdWcpIHtcbiAgICByZXR1cm4gKCBfLmluZGV4T2YoIEpQUy5qZXRwYWNrLmFjdGl2ZV9tb2R1bGVzLCBzbHVnICkgPj0gMCApO1xuICB9LFxuXG4gIGdldEpldHBhY2tBZGRpdGlvbmFsTW9kdWxlczogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIEpQUy5qZXRwYWNrLmFkZGl0aW9uYWxfbW9kdWxlcztcbiAgfSxcblxuICBnZXRKdW1wc3RhcnRNb2R1bGVTbHVnczogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIEpQUy5qZXRwYWNrLmp1bXBzdGFydF9tb2R1bGVzLm1hcChmdW5jdGlvbihtb2R1bGUpIHsgcmV0dXJuIG1vZHVsZS5zbHVnOyB9KTtcbiAgfSxcblxuICBnZXRKdW1wc3RhcnRNb2R1bGVzOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gSlBTLmpldHBhY2suanVtcHN0YXJ0X21vZHVsZXM7XG4gIH0sXG5cbiAgZ2V0UG9wdWxhclRoZW1lczogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIFdQQWpheC5wb3N0KEpQUy5zaXRlX2FjdGlvbnMuZ2V0X3BvcHVsYXJfdGhlbWVzKTtcbiAgfSxcblxuICBnZXRKZXRwYWNrSnVtcHN0YXJ0RW5hYmxlZDogZnVuY3Rpb24oKSB7XG4gICAgZm9yKHZhciBpPTA7IGkgPCBKUFMuamV0cGFjay5qdW1wc3RhcnRfbW9kdWxlcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIG1vZHVsZSA9IEpQUy5qZXRwYWNrLmp1bXBzdGFydF9tb2R1bGVzW2ldO1xuICAgICAgaWYgKCAhIHRoaXMuaXNKZXRwYWNrTW9kdWxlRW5hYmxlZCggbW9kdWxlLnNsdWcgKSApIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSxcblxuICBnZXRMYXlvdXQ6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBsYXlvdXQ7XG4gIH0sXG5cbiAgZW1pdENoYW5nZTogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5lbWl0KENIQU5HRV9FVkVOVCk7XG4gIH0sXG5cbiAgYWRkQ2hhbmdlTGlzdGVuZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgdGhpcy5vbihDSEFOR0VfRVZFTlQsIGNhbGxiYWNrKTtcbiAgfSxcblxuICByZW1vdmVDaGFuZ2VMaXN0ZW5lcjogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICB0aGlzLnJlbW92ZUxpc3RlbmVyKENIQU5HRV9FVkVOVCwgY2FsbGJhY2spO1xuICB9XG59KTtcblxuLy8gUmVnaXN0ZXIgY2FsbGJhY2sgdG8gaGFuZGxlIGFsbCB1cGRhdGVzXG5BcHBEaXNwYXRjaGVyLnJlZ2lzdGVyKGZ1bmN0aW9uKGFjdGlvbikge1xuXG4gIHN3aXRjaChhY3Rpb24uYWN0aW9uVHlwZSkge1xuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNJVEVfU0VUX1RJVExFOlxuICAgICAgc2V0VGl0bGUoYWN0aW9uLnRpdGxlKTtcbiAgICAgIFNpdGVTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNJVEVfU0VUX0RFU0NSSVBUSU9OOlxuICAgICAgc2V0RGVzY3JpcHRpb24oYWN0aW9uLmRlc2NyaXB0aW9uKTtcbiAgICAgIFNpdGVTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNJVEVfU0VUX1RIRU1FOlxuICAgICAgc2V0QWN0aXZlVGhlbWUoYWN0aW9uLnRoZW1lSWQpO1xuICAgICAgU2l0ZVN0b3JlLmVtaXRDaGFuZ2UoKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBKUFNDb25zdGFudHMuU0lURV9JTlNUQUxMX1RIRU1FOlxuICAgICAgaW5zdGFsbGVkVGhlbWUoYWN0aW9uLnRoZW1lKTtcbiAgICAgIFNpdGVTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNJVEVfSkVUUEFDS19DT05GSUdVUkVEOlxuICAgICAgc2V0SmV0cGFja0NvbmZpZ3VyZWQoKTtcbiAgICAgIFNpdGVTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNJVEVfSkVUUEFDS19BRERfTU9EVUxFUzpcbiAgICAgIHNldEpldHBhY2tBZGRpdGlvbmFsTW9kdWxlcyhhY3Rpb24ubW9kdWxlcyk7XG4gICAgICBTaXRlU3RvcmUuZW1pdENoYW5nZSgpO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIEpQU0NvbnN0YW50cy5TSVRFX0pFVFBBQ0tfTU9EVUxFX0VOQUJMRUQ6XG4gICAgICBzZXRKZXRwYWNrTW9kdWxlQWN0aXZhdGVkKGFjdGlvbi5zbHVnKTtcbiAgICAgIFNpdGVTdG9yZS5lbWl0Q2hhbmdlKCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLlNJVEVfSkVUUEFDS19NT0RVTEVfRElTQUJMRUQ6XG4gICAgICBzZXRKZXRwYWNrTW9kdWxlRGVjdGl2YXRlZChhY3Rpb24uc2x1Zyk7XG4gICAgICBTaXRlU3RvcmUuZW1pdENoYW5nZSgpO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIEpQU0NvbnN0YW50cy5TSVRFX0pFVFBBQ0tfSlVNUFNUQVJUX0VOQUJMRUQ6IFxuICAgICAgc2V0SmV0cGFja0p1bXBzdGFydEFjdGl2YXRlZCgpO1xuICAgICAgU2l0ZVN0b3JlLmVtaXRDaGFuZ2UoKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSBKUFNDb25zdGFudHMuU0lURV9TRVRfTEFZT1VUOlxuICAgICAgc2V0TGF5b3V0KGFjdGlvbi5sYXlvdXQpO1xuICAgICAgU2l0ZVN0b3JlLmVtaXRDaGFuZ2UoKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIC8vIG5vIG9wXG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNpdGVTdG9yZTsiLCJ2YXIgQXBwRGlzcGF0Y2hlciA9IHJlcXVpcmUoJy4uL2Rpc3BhdGNoZXIvYXBwLWRpc3BhdGNoZXInKSxcblx0RXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyLFxuXHRKUFNDb25zdGFudHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvamV0cGFjay1zdGFydC1jb25zdGFudHMnKTtcblxudmFyIENIQU5HRV9FVkVOVCA9ICdjaGFuZ2UnO1xuXG52YXIgc3Bpbm5lckVuYWJsZWQgPSBmYWxzZSxcblx0c3Bpbm5lck1lc3NhZ2UgPSBudWxsO1xuXG5mdW5jdGlvbiBzaG93KG1lc3NhZ2UpIHtcblx0c3Bpbm5lckVuYWJsZWQgPSB0cnVlO1xuXHRzcGlubmVyTWVzc2FnZSA9IG1lc3NhZ2U7XG59XG5cbmZ1bmN0aW9uIGhpZGUoKSB7XG5cdHNwaW5uZXJFbmFibGVkID0gZmFsc2U7XG5cdHNwaW5uZXJNZXNzYWdlID0gbnVsbDtcbn1cblxudmFyIFNwaW5uZXJTdG9yZSA9IF8uZXh0ZW5kKHt9LCBFdmVudEVtaXR0ZXIucHJvdG90eXBlLCB7XG5cdHNob3dpbmc6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBzcGlubmVyRW5hYmxlZDtcblx0fSxcblxuXHRnZXRNZXNzYWdlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gc3Bpbm5lck1lc3NhZ2U7XG5cdH0sXG5cblx0YWRkQ2hhbmdlTGlzdGVuZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG5cdFx0dGhpcy5vbiggQ0hBTkdFX0VWRU5ULCBjYWxsYmFjayApO1xuXHR9LFxuXG5cdHJlbW92ZUNoYW5nZUxpc3RlbmVyOiBmdW5jdGlvbihjYWxsYmFjaykge1xuXHRcdHRoaXMucmVtb3ZlTGlzdGVuZXIoIENIQU5HRV9FVkVOVCwgY2FsbGJhY2sgKTtcblx0fSxcblxuXHRlbWl0Q2hhbmdlOiBmdW5jdGlvbigpIHtcblx0ICAgIHRoaXMuZW1pdCggQ0hBTkdFX0VWRU5UICk7XG5cdH0sXG59KTtcblxuQXBwRGlzcGF0Y2hlci5yZWdpc3RlcihmdW5jdGlvbihhY3Rpb24pIHtcblxuICBzd2l0Y2goYWN0aW9uLmFjdGlvblR5cGUpIHtcbiAgICBjYXNlIEpQU0NvbnN0YW50cy5TSE9XX1NQSU5ORVI6XG5cdFx0c2hvdyhhY3Rpb24ubWVzc2FnZSk7XG5cdFx0U3Bpbm5lclN0b3JlLmVtaXRDaGFuZ2UoKTtcblx0XHRicmVhaztcblxuICAgIGNhc2UgSlBTQ29uc3RhbnRzLkhJREVfU1BJTk5FUjpcbiAgICAgXHRoaWRlKCk7XG4gICAgIFx0U3Bpbm5lclN0b3JlLmVtaXRDaGFuZ2UoKTtcbiAgICAgXHRicmVhaztcblxuICAgIGRlZmF1bHQ6XG4gICAgICAvLyBubyBvcFxuICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBTcGlubmVyU3RvcmU7IiwiLypcbiAqIEEgc2ltcGxlIHdyYXBwZXIgZm9yIGNhbGxzIHRvIFdQJ3MgXCJhamF4dXJsXCIuXG4gKlxuICogVGhpcyBleGlzdHMgYmVjYXVzZSBXUCdzIHdwX3NlbmRfanNvbl9lcnJvciBkb2Vzbid0IGFjdHVhbGx5IHNlbmQgYW4gZXJyb3IgY29kZSwgYnV0IHJhdGhlclxuICogYSAyMDAgT0sgcmVzcG9uc2Ugd2l0aCBhIHN0cnVjdHVyZSBsaWtlIHRoaXM6XG4gKiB7c3VjY2VzczogZmFsc2UsIGRhdGE6IFwic29tZXRoaW5nIHdlbnQgd3JvbmdcIn1cbiAqXG4gKiBTbyB0aGlzIGNsYXNzIHNtb290aGVzIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gNTB4IGVycm9ycyBhbmQgV1AncyBlcnJvciBvYmplY3QuXG4gKlxuICogRm9yIGNvbnZlbmllbmNlLCB0aGlzIHJldHVybnMgYSBqUXVlcnkuRGVmZXJyZWQgb2JqZWN0IHdoaWNoIGNhbiBoYXZlIC5kb25lKCkgXG4gKiBhbmQgLmZhaWwoKSBtZXRob2RzIGNoYWluZWQgb250byBpdCwgc2ltaWxhciB0byBqUXVlcnkucG9zdCdzIFwic3VjY2Vzc1wiIGFuZCBcImZhaWxcIlxuICpcbiAqIEFsc28sIGl0IGFjY2VwdHMgYW4gXCJhY3Rpb25cIiBwYXJhbSBpbnN0ZWFkIG9mIGEgVVJMLCBzaW5jZSBhbGwgV1AgYWpheCByZXF1ZXN0c1xuICogYWN0dWFsbHkgZ28gdmlhIHRoZSBzYW1lIFVSTCB3aXRoIGRpZmZlcmVudCBwYXJhbWV0ZXJzLCBhbmQgaXQgaW52b2tlcyBjYWxsYmFja3Mgd2l0aFxuICoganVzdCB0aGUgXCJkYXRhXCIgcG9ydGlvbiBvZiBXUCdzIGFqYXggcGF5bG9hZCwgcmF0aGVyIHRoYW4gdGhlIHdob2xlIHN0cnVjdHVyZS5cbiAqIFxuICoqL1xuXG52YXIgRGF0YUFjdGlvbnMgPSByZXF1aXJlKCcuLi9hY3Rpb25zL2RhdGEtYWN0aW9ucycpO1xuXG52YXIgV1BBamF4ID0gKGZ1bmN0aW9uKCkge1xuXG5cdHJldHVybiB7XG5cdFx0cG9zdDogZnVuY3Rpb24oYWN0aW9uLCBwYXlsb2FkKSB7XG5cdFx0XHRwYXlsb2FkID0gdHlwZW9mIHBheWxvYWQgIT09ICd1bmRlZmluZWQnID8gcGF5bG9hZCA6IHt9O1xuXHRcdFx0dmFyIGRhdGEgPSBfLmV4dGVuZChwYXlsb2FkLCB7YWN0aW9uOiBhY3Rpb24sIG5vbmNlOiBKUFMubm9uY2V9KTtcblx0XHRcdFxuXHRcdFx0dmFyIGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCk7XG5cblx0XHRcdERhdGFBY3Rpb25zLnJlcXVlc3RTdGFydGVkKCk7XG5cblx0XHRcdGpRdWVyeS5wb3N0KCBhamF4dXJsLCBkYXRhIClcblx0XHRcdFx0LnN1Y2Nlc3MoIGZ1bmN0aW9uKCByZXNwb25zZSApIHtcblx0XHRcdFx0XHRpZiAoICEgcmVzcG9uc2Uuc3VjY2VzcyApIHtcblx0XHRcdFx0XHRcdGRlZmVycmVkLnJlamVjdChyZXNwb25zZS5kYXRhKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0ZGVmZXJyZWQucmVzb2x2ZShyZXNwb25zZS5kYXRhKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pXG5cdFx0XHRcdC5mYWlsKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRkZWZlcnJlZC5yZWplY3QoXCJTZXJ2ZXIgZXJyb3JcIik7XG5cdFx0XHRcdH0pXG5cdFx0XHRcdC5hbHdheXMoIGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHREYXRhQWN0aW9ucy5yZXF1ZXN0RmluaXNoZWQoKTtcblx0XHRcdFx0fSk7XHRcblxuXHRcdFx0cmV0dXJuIGRlZmVycmVkO1xuXHRcdH1cblx0fTtcblxufSkoKTtcblxubW9kdWxlLmV4cG9ydHMgPSBXUEFqYXg7IiwidmFyIFJlYWN0ID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3cuUmVhY3QgOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsLlJlYWN0IDogbnVsbCksXG4gICAgV2VsY29tZVdpZGdldCA9IHJlcXVpcmUoJy4vY29tcG9uZW50cy93ZWxjb21lLXdpZGdldCcpLFxuICAgIFBhdGhzID0gcmVxdWlyZSgnLi9jb25zdGFudHMvamV0cGFjay1zdGFydC1wYXRocycpLFxuICAgIFNldHVwUHJvZ3Jlc3NTdG9yZSA9IHJlcXVpcmUoJy4vc3RvcmVzL3NldHVwLXByb2dyZXNzLXN0b3JlJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gICAgalF1ZXJ5KGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XG5cbiAgICBcdFNldHVwUHJvZ3Jlc3NTdG9yZS5pbml0KFtcbiAgICBcdFx0Ly8gTk9URTogWW91IGNhbiBoYXZlIFwic3RhdGljOiB0cnVlXCIgdG8gaW5jbHVkZSB1bi1jbGlja2FibGUgXG4gICAgXHRcdC8vIHByZWZpbGxlZCBzdGVwcyB0aGF0IGFjdCBhcyB0aG91Z2ggdGhleSd2ZSBhbHJlYWR5IGJlZW4gY29tcGxldGVkXG5cdFx0XHQvLyB7XG5cdFx0XHQvLyBcdG5hbWU6IFwiU2lnbiB1cFwiLFxuXHRcdFx0Ly8gXHRjb21wbGV0ZWQ6IHRydWUsXG5cdFx0XHQvLyBcdHN0YXRpYzogdHJ1ZVxuXHRcdFx0Ly8gfSxcblx0XHRcdHtcblx0XHRcdFx0bmFtZTogJ1NpdGUgdGl0bGUnLFxuXHRcdFx0XHRzbHVnOiBQYXRocy5TSVRFX1RJVExFX1NURVBfU0xVRyxcblx0XHRcdFx0d2VsY29tZVZpZXc6IHJlcXVpcmUoJy4vY29tcG9uZW50cy9zaXRlLXRpdGxlLXN0ZXAnKVxuXHRcdFx0fSxcblx0XHRcdHtcblx0XHRcdFx0bmFtZTogJ1BpY2sgYSBsYXlvdXQnLFxuXHRcdFx0XHRzbHVnOiBQYXRocy5MQVlPVVRfU1RFUF9TTFVHLFxuXHRcdFx0XHR3ZWxjb21lVmlldzogcmVxdWlyZSgnLi9jb21wb25lbnRzL2xheW91dC1zdGVwJylcblx0XHRcdH0sXG5cdFx0XHR7IFxuXHRcdFx0XHRuYW1lOiBcIlBpY2sgYSBkZXNpZ25cIiwgXG5cdFx0XHRcdHNsdWc6IFBhdGhzLkRFU0lHTl9TVEVQX1NMVUcsXG5cdFx0XHRcdHdlbGNvbWVWaWV3OiByZXF1aXJlKCcuL2NvbXBvbmVudHMvZGVzaWduLXN0ZXAnKSwgXG5cdFx0XHR9LFxuXHRcdFx0e1xuXHRcdFx0XHRuYW1lOiAnRW5hYmxlIEpldHBhY2snLFxuXHRcdFx0XHRzbHVnOiBQYXRocy5KRVRQQUNLX01PRFVMRVNfU1RFUF9TTFVHLFxuXHRcdFx0XHR3ZWxjb21lVmlldzogcmVxdWlyZSgnLi9jb21wb25lbnRzL2pldHBhY2stanVtcHN0YXJ0LXN0ZXAnKSxcblx0XHRcdFx0bWVudVZpZXc6IHJlcXVpcmUoJy4vY29tcG9uZW50cy9qZXRwYWNrLWp1bXBzdGFydC1tZW51Jylcblx0XHRcdH0sXG5cdFx0XHR7IFxuXHRcdFx0XHRuYW1lOiBcIkFkdmFuY2VkIHNldHRpbmdzXCIsIFxuXHRcdFx0XHRzbHVnOiBQYXRocy5BRFZBTkNFRF9TVEVQX1NMVUcsXG5cdFx0XHRcdHdlbGNvbWVWaWV3OiByZXF1aXJlKCcuL2NvbXBvbmVudHMvYWR2YW5jZWQtc2V0dGluZ3Mtc3RlcCcpLFxuXHRcdFx0XHRpbmNsdWRlSW5Qcm9ncmVzczogZmFsc2Vcblx0XHRcdH1cblx0XHRdKTtcblxuICAgICAgICBSZWFjdC5yZW5kZXIoXG4gICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChXZWxjb21lV2lkZ2V0LCB7fSksIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqcHMtd2VsY29tZS1wYW5lbCcpXG4gICAgICAgICk7XG4gICAgfSk7XG59OyIsInZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93LlJlYWN0IDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbC5SZWFjdCA6IG51bGwpLFxuXHRzdHlsZXMgPSByZXF1aXJlKCcuLi9zdHlsZXMnKSxcblx0UmFkaXVtID0gcmVxdWlyZSgncmFkaXVtJyk7XG5cbnZhciBCdXR0b24gPSBSZWFjdC5jcmVhdGVDbGFzcyh7ZGlzcGxheU5hbWU6IFwiQnV0dG9uXCIsXG5cblx0cHJvcFR5cGVzOiB7XG5cdFx0c2l6ZTogUmVhY3QuUHJvcFR5cGVzLm9uZU9mKFsndGlueScsICdub3JtYWwnLCAnYmlnJ10pLFxuXHRcdGNvbG9yOiBSZWFjdC5Qcm9wVHlwZXMub25lT2YoWydncmF5JywgJ2JsdWUnLCAnZ3JlZW4nXSksXG5cdFx0dGhlbWU6IFJlYWN0LlByb3BUeXBlcy5vbmVPZihbJ3dwJywgJ2pldHBhY2snXSksXG5cdFx0aW5saW5lOiBSZWFjdC5Qcm9wVHlwZXMuYm9vbCxcblx0XHRvbkNsaWNrOiBSZWFjdC5Qcm9wVHlwZXMuZnVuYyxcblx0XHRocmVmOiBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nXG5cdH0sXG5cblx0Z2V0RGVmYXVsdFByb3BzOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4geyBzaXplOiAnbm9ybWFsJywgaW5saW5lOiB0cnVlLCBjb2xvcjogJ2dyYXknLCB0aGVtZTogJ3dwJyB9O1xuXHR9LFxuXG5cdGhhbmRsZUNhbGxiYWNrSHJlZjogZnVuY3Rpb24oZSkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHR3aW5kb3cubG9jYXRpb24gPSB0aGlzLnByb3BzLmhyZWY7XG5cdH0sXG5cblx0c3R5bGVzOiB7XG5cdFx0YmFzaWM6IHtcblx0XHRcdGJvcmRlclJhZGl1czogMyxcblx0XHRcdGJveFNoYWRvdzogJ2luc2V0IDAgMXB4IDAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpJyxcblx0XHRcdGJvcmRlcldpZHRoOiAxLFxuXHRcdFx0Ym9yZGVyU3R5bGU6ICdzb2xpZCcsXG5cdFx0XHRjdXJzb3I6ICdwb2ludGVyJyxcblx0XHRcdGRpc3BsYXk6ICdibG9jaycsXG5cdFx0XHRmb250U2l6ZTogMTQsXG5cdFx0XHRmb250V2VpZ2h0OiAnYm9sZCcsXG5cdFx0XHRwYWRkaW5nOiAnMTBweCAyMHB4Jyxcblx0XHRcdHRleHRBbGlnbjogJ2NlbnRlcicsXG5cdFx0XHR0ZXh0RGVjb3JhdGlvbjogJ25vbmUnLFxuXHRcdFx0Ly8gdGV4dFRyYW5zZm9ybTogJ3VwcGVyY2FzZScsXG5cdFx0XHRXZWJraXRGb250U21vb3RoaW5nOiAnYW50aWFsaWFzZWQnLFxuXHRcdFx0dHJhbnNpdGlvbjogJ2JhY2tncm91bmQgMC4ycydcblx0XHR9LFxuXG5cdFx0c2l6ZXM6IHtcblx0XHRcdHRpbnk6IHtcblx0XHRcdFx0Zm9udFNpemU6IDEwLFxuXHRcdFx0XHRwYWRkaW5nOiAnMnB4IDEwcHgnLFxuXHRcdFx0fSxcblx0XHRcdG5vcm1hbDoge1xuXHRcdFx0XHRmb250U2l6ZTogMTMsXG5cdFx0XHRcdHBhZGRpbmc6ICc1cHggMTBweCdcblx0XHRcdH0sXG5cdFx0XHRiaWc6IHtcblx0XHRcdFx0Zm9udFNpemU6IDE2LFxuXHRcdFx0XHRwYWRkaW5nOiAnMjBweCA0MHB4J1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRjb2xvcnM6IHtcblx0XHRcdGdyYXk6IHtcblx0XHRcdFx0YmFja2dyb3VuZDogJ2xpbmVhci1ncmFkaWVudCgjZmZmLCAjZjlmOWY5KScsXG5cdFx0XHRcdGJvcmRlckNvbG9yOiBzdHlsZXMuY29sb3JzLmxpZ2h0R3JheSxcblx0XHRcdFx0Y29sb3I6IHN0eWxlcy5jb2xvcnMuZGFya0dyYXksXG5cdFx0XHRcdCc6aG92ZXInOiB7XG5cdFx0XHRcdFx0Y29sb3I6IHN0eWxlcy5jb2xvcnMuZ3JheVxuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXHRcdFx0Ymx1ZToge1xuXHRcdFx0XHRiYWNrZ3JvdW5kOiBzdHlsZXMuY29sb3JzLmJsdWUsXG5cdFx0XHRcdGJvcmRlckNvbG9yOiAncmdiYSgwLDAsMCwwLjYpJyxcblx0XHRcdFx0Y29sb3I6ICd3aGl0ZScsXG5cdFx0XHRcdCc6aG92ZXInOiB7XG5cdFx0XHRcdFx0YmFja2dyb3VuZDogc3R5bGVzLmNvbG9ycy5saWdodGVyQmx1ZSxcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdGdyZWVuOiB7XG5cdFx0XHRcdGJhY2tncm91bmQ6IHN0eWxlcy5jb2xvcnMuZ3JlZW4sXG5cdFx0XHRcdGNvbG9yOiAnd2hpdGUnLFxuXHRcdFx0XHRib3JkZXJDb2xvcjogJ3JnYmEoMCwwLDAsMC42KScsXG5cdFx0XHRcdCc6aG92ZXInOiB7XG5cdFx0XHRcdFx0YmFja2dyb3VuZDogc3R5bGVzLmNvbG9ycy5saWdodGVyR3JlZW4sXG5cdFx0XHRcdH1cblxuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHR0aGVtZXM6IHtcblx0XHRcdHdwOiB7fSxcblx0XHRcdGpldHBhY2s6IHtcblx0XHRcdFx0cGFkZGluZzogJzE4cHggMjRweCAxNXB4Jyxcblx0XHRcdFx0Ly8gZm9udDogJzQwMCAyMHB4LzEgXCJPcGVuIFNhbnNcIiwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmJyxcblx0XHRcdFx0Ym9yZGVyUmFkaXVzOiA2LFxuXHRcdFx0XHRib3JkZXJTdHlsZTogJ25vbmUnLFxuXHRcdFx0XHRib3hTaGFkb3c6ICcwIDZweCAwICMzZTZjMjAsMCA2cHggM3B4IHJnYmEoMCwwLDAsMC40KSdcblx0XHRcdH1cblx0XHR9LFxuXHRcdFxuXHRcdGlubGluZToge1xuXHRcdFx0ZGlzcGxheTogJ2lubGluZS1ibG9jaydcblx0XHR9LFxuXG5cdFx0ZGlzYWJsZWQ6IHtcblx0XHRcdGJhY2tncm91bmQ6ICcjZjlmOWY5Jyxcblx0XHRcdGJvcmRlckNvbG9yOiBzdHlsZXMuY29sb3JzLmxpZ2h0R3JheSxcblx0XHRcdGNvbG9yOiBzdHlsZXMuY29sb3JzLmxpZ2h0R3JheSxcblx0XHRcdCc6aG92ZXInOiB7XG5cdFx0XHRcdGJhY2tncm91bmQ6ICcjZjlmOWY5Jyxcblx0XHRcdFx0Ym9yZGVyQ29sb3I6IHN0eWxlcy5jb2xvcnMubGlnaHRHcmF5LFxuXHRcdFx0XHRjb2xvcjogc3R5bGVzLmNvbG9ycy5saWdodEdyYXksXG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXG5cdHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cblx0XHR2YXIgJF9fMD0gICAgICAgICAgdGhpcy5wcm9wcyxzaXplPSRfXzAuc2l6ZSxjb2xvcj0kX18wLmNvbG9yLGlubGluZT0kX18wLmlubGluZSxvbkNsaWNrPSRfXzAub25DbGljayx0aGVtZT0kX18wLnRoZW1lLGhyZWY9JF9fMC5ocmVmLG90aGVyPShmdW5jdGlvbihzb3VyY2UsIGV4Y2x1c2lvbikge3ZhciByZXN0ID0ge307dmFyIGhhc093biA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7aWYgKHNvdXJjZSA9PSBudWxsKSB7dGhyb3cgbmV3IFR5cGVFcnJvcigpO31mb3IgKHZhciBrZXkgaW4gc291cmNlKSB7aWYgKGhhc093bi5jYWxsKHNvdXJjZSwga2V5KSAmJiAhaGFzT3duLmNhbGwoZXhjbHVzaW9uLCBrZXkpKSB7cmVzdFtrZXldID0gc291cmNlW2tleV07fX1yZXR1cm4gcmVzdDt9KSgkX18wLHtzaXplOjEsY29sb3I6MSxpbmxpbmU6MSxvbkNsaWNrOjEsdGhlbWU6MSxocmVmOjF9KTtcblxuXHRcdHZhciBjYWxsYmFjaztcblxuXHRcdHZhciBjb21iaW5lZFN0eWxlID0gW1xuXHRcdFx0dGhpcy5zdHlsZXMuYmFzaWMsIFxuXHRcdFx0dGhpcy5zdHlsZXMuc2l6ZXNbc2l6ZV0sXG5cdFx0XHR0aGlzLnN0eWxlcy5jb2xvcnNbY29sb3JdLFxuXHRcdFx0dGhpcy5zdHlsZXMudGhlbWVzW3RoZW1lXSxcblx0XHRcdHRoaXMucHJvcHMuZGlzYWJsZWQgJiYgdGhpcy5zdHlsZXMuZGlzYWJsZWQsXG5cdFx0XHRpbmxpbmUgJiYgdGhpcy5zdHlsZXMuaW5saW5lLFxuXHRcdFx0dGhpcy5wcm9wcy5zdHlsZVxuXHRcdF07XG5cblx0XHRpZiAoIGhyZWYgJiYgIW9uQ2xpY2spIHtcblx0XHRcdGNhbGxiYWNrID0gdGhpcy5oYW5kbGVDYWxsYmFja0hyZWY7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGNhbGxiYWNrID0gb25DbGljaztcblx0XHR9XG5cblx0XHRyZXR1cm4gKFxuXHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCBSZWFjdC5fX3NwcmVhZCh7fSwgIG90aGVyLCB7c3R5bGU6IGNvbWJpbmVkU3R5bGUsIG9uQ2xpY2s6IGNhbGxiYWNrLCBvbk1vdXNlT3ZlcjogdGhpcy5oYW5kbGVNb3VzZU92ZXIsIG9uTW91c2VPdXQ6IHRoaXMuaGFuZGxlTW91c2VPdXR9KSwgXG5cdFx0XHRcdHRoaXMucHJvcHMuY2hpbGRyZW5cblx0XHRcdClcblx0XHQpO1xuXHR9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBSYWRpdW0oQnV0dG9uKTsiLCJ2YXIgUmVhY3QgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdy5SZWFjdCA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwuUmVhY3QgOiBudWxsKSxcblx0UmFkaXVtID0gcmVxdWlyZSgncmFkaXVtJyk7XG5cbi8qKlxuICogU2hvdyBwcm9ncmVzcyB0aHJvdWdoIHRoZSBzdGVwc1xuICogTk9URTogcHJvZ3Jlc3NQZXJjZW50IE1VU1QgYmUgcm91bmRlZCB0byB0aGUgbmVhcmVzdCAxMCwgaS5lLiAxMCwgMjAsIDMwLCA0MC4uLjEwMFxuICogVGhpcyBpcyByZXF1aXJlZCBmb3IgdGhlIENTUyB0byB3b3JrICh3aWxsIGZpeCBsYXRlci4uLilcbiAqKi9cbnZhciBQcm9ncmVzc0JhciA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtkaXNwbGF5TmFtZTogXCJQcm9ncmVzc0JhclwiLFxuXG5cdHByb3BUeXBlczoge1xuXHRcdHN0eWxlOiBSZWFjdC5Qcm9wVHlwZXMub2JqZWN0LFxuXHRcdHByb2dyZXNzUGVyY2VudDogUmVhY3QuUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkXG5cdH0sXG5cblx0c3R5bGVzOiB7XG5cdFx0d3JhcHBlcjoge1xuXHRcdFx0Zm9udFdlaWdodDogNDAwLFxuXHRcdFx0Zm9udFNpemU6ICc4MCUnXG5cdFx0fSxcblx0XHRwcm9ncmVzczoge1xuXHRcdFx0YmFja2dyb3VuZDogJyM0YWI4NjYnLFxuXHRcdFx0d2lkdGg6ICcwJScsXG5cdFx0XHR0cmFuc2l0aW9uOiAnd2lkdGggMC41cycsXG5cdFx0XHRkaXNwbGF5OiAnYmxvY2snLFxuXHRcdFx0aGVpZ2h0OiAnMTAwJSdcblx0XHR9LFxuXHRcdGJhcjoge1xuXHRcdFx0ZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG5cdFx0XHR3aWR0aDogODAsXG5cdFx0XHRoZWlnaHQ6IDEyLFxuXHRcdFx0bWFyZ2luOiAnMCA4cHggLTJweCAwJyxcblx0XHRcdHBhZGRpbmc6IDIsXG5cdFx0XHRib3JkZXJSYWRpdXM6IDIsXG5cdFx0XHRiYWNrZ3JvdW5kOiAnI2Y1ZjVmNSdcblx0XHR9XG5cdH0sXG5cblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHQvLyB2YXIgY2xhc3NlcyA9ICdnZXR0aW5nLXN0YXJ0ZWRfX3Byb2dyZXNzIHByb2dyZXNzXycrdGhpcy5wcm9wcy5wcm9ncmVzc1BlcmNlbnQ7XG5cdFx0cmV0dXJuIChcblx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge3N0eWxlOiBbdGhpcy5zdHlsZXMud3JhcHBlciwgdGhpcy5wcm9wcy5zdHlsZV19LCBcblx0XHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7c3R5bGU6IHRoaXMuc3R5bGVzLmJhcn0sIFxuXHRcdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtzdHlsZTogW3RoaXMuc3R5bGVzLnByb2dyZXNzLCB7IHdpZHRoOiB0aGlzLnByb3BzLnByb2dyZXNzUGVyY2VudCsnJScgfV19KVxuXHRcdFx0XHQpLCBcblx0XHRcdFx0dGhpcy5wcm9wcy5wcm9ncmVzc1BlcmNlbnQsIFwiJSBjb21wbGV0ZVwiXG5cdFx0XHQpXG5cdFx0KTtcblx0fVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gUmFkaXVtKFByb2dyZXNzQmFyKTsiLCIvLyB0aGlzIGNvbXBvbmVudCBwcm92aWRlcyBzb21lIGJhc2ljIHJlc2V0cyBzbyB0aGF0IHRoZSByZXN0IG9mIHRoZSBzdHlsaW5nIHdvcmtzIGFzIGludGVuZGVkLlxuLy8gdGhpcyBwcmV2ZW50cyBub2lzeSBkdXBsaWNhdGlvbiBvZiByZXNldCBjb2RlIHRocm91Z2hvdXQgdGhlIGNvZGViYXNlLlxuXG4vLyB1c2FnZTpcbi8vIHVzZSB0aGlzIGFzIGEgd3JhcHBlciBmb3IgYSB0b3AtbGV2ZWwgY29tcG9uZW50IHRoYXQgdXNlcyBkb3BzLXJlYWN0LCBlLmcuXG4vL1xuLy8gcmVuZGVyOiBmdW5jdGlvbigpIHtcbi8vIFx0cmV0dXJuIChcbi8vICAgICAgIDxSZXNldD5cbi8vICAgICAgICAgLi4uIHRoZSByZXN0IG9mIG15IGNvZGUgZ29lcyBoZXJlIC4uLlxuLy8gICAgICAgPC9SZXNldD5cbi8vIFx0KVxuLy8gfVxuXG4vLyB0byBhZGQgYWRkaXRpb25hbCBDU1MsIHBhc3MgaXQgaW4gdXNpbmcgdGhlIFwiQ1NTXCIgcHJvcGVydHlcblxudmFyIFJlYWN0ID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3cuUmVhY3QgOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsLlJlYWN0IDogbnVsbCksXG5cdFJhZGl1bSA9IHJlcXVpcmUoJ3JhZGl1bScpLFxuXHRtID0gcmVxdWlyZSgnLi4vdXRpbHMvbScpO1xuXG52YXIgaWRDb3VudGVyID0gMDtcblxudmFyIFJlc2V0ID0gUmVhY3QuY3JlYXRlQ2xhc3Moe2Rpc3BsYXlOYW1lOiBcIlJlc2V0XCIsXG5cdHByb3BUeXBlczoge1xuXHRcdGNzczogUmVhY3QuUHJvcFR5cGVzLm9iamVjdFxuXHR9LFxuXG5cdHN0eWxlOiB7XG5cdFx0cmVzZXRzOiB7XG5cdFx0XHQnKic6IHtcblx0XHRcdFx0Ym94U2l6aW5nOiAnYm9yZGVyLWJveCdcblx0XHRcdH0sXG5cdFx0XHQnZGl2LCB1bCwgb2wsIGxpLCBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBmb3JtLCBmaWVsZHNldCwgbGVnZW5kLCBpbnB1dCwgYnV0dG9uLCB0ZXh0YXJlYSwgcCwgYmxvY2txdW90ZSwgdGgsIHRkJzogeyBcblx0XHRcdFx0bWFyZ2luOiAwLCBwYWRkaW5nOiAwIFxuXHRcdFx0fSxcblx0XHRcdGltZzoge1xuXHRcdFx0XHRib3JkZXI6ICdub25lJyxcblx0XHRcdFx0bWF4V2lkdGg6ICcxMDAlJ1xuXHRcdFx0fSxcblx0XHRcdGgxOiB7XG5cdFx0XHRcdGZvbnRTaXplOiAzNFxuXHRcdFx0fSxcblx0XHRcdGgyOiB7XG5cdFx0XHRcdGZvbnRTaXplOiAxNlxuXHRcdFx0fSxcblx0XHRcdGgzOiB7XG5cdFx0XHRcdGZvbnRTaXplOiAxOFxuXHRcdFx0fSxcblx0XHRcdHRkOiB7XG5cdFx0XHRcdHZlcnRpY2FsQWxpZ246ICd0b3AnXG5cdFx0XHR9LFxuXHRcdFx0YToge1xuXHRcdFx0XHR0ZXh0RGVjb3JhdGlvbjogJ25vbmUnXG5cdFx0XHR9LFxuXHRcdFx0J2E6aG92ZXInOiB7XG5cdFx0XHRcdHRleHREZWNvcmF0aW9uOiAndW5kZXJsaW5lJ1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gdGhlc2Ugc3VwcG9ydCBhbmltYXRpb25zXG5cdFx0XHQnLnNsaWRlRG93bi1lbnRlcic6IHtcblx0XHRcdFx0b3ZlcmZsb3dZOiAnaGlkZGVuJyxcblx0XHRcdFx0bWF4SGVpZ2h0OiAwLFxuXHRcdFx0XHR0cmFuc2l0aW9uOiAnYWxsIC41cyBlYXNlLW91dCdcblx0XHRcdH0sXG5cblx0XHRcdCcuc2xpZGVEb3duLWVudGVyLWFjdGl2ZSc6IHtcblx0XHRcdFx0b3ZlcmZsb3dZOiAnaGlkZGVuJyxcblx0XHRcdFx0bWF4SGVpZ2h0OiA0MDBcblx0XHRcdH0sXG5cblx0XHRcdCcuc2xpZGVEb3duLWxlYXZlJzoge1xuXHRcdFx0XHRvdmVyZmxvd1k6ICdoaWRkZW4nLFxuXHRcdFx0XHRtYXhIZWlnaHQ6IDQwMCxcblx0XHRcdFx0dHJhbnNpdGlvbjogJ2FsbCAuNXMgZWFzZS1vdXQnXG5cdFx0XHR9LFxuXG5cdFx0XHQnLnNsaWRlRG93bi1sZWF2ZS1hY3RpdmUnOiB7XG5cdFx0XHRcdG92ZXJmbG93WTogJ2hpZGRlbicsXG5cdFx0XHRcdG1heEhlaWdodDogMFxuXHRcdFx0fSxcblxuXHRcdFx0LyoqXG5cdFx0XHQgKiBTbGlkZSBhY3Jvc3MgcmlnaHQtdG8tbGVmdFxuXHRcdFx0ICovXG5cblx0XHRcdCcuc2xpZGVSVEwtZW50ZXInOiB7XG5cdFx0XHRcdHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuXHRcdFx0XHRsZWZ0OiAnMTAwJScsXG5cdFx0XHRcdHRyYW5zaXRpb246ICdhbGwgLjJzIGxpbmVhcidcblx0XHRcdH0sXG5cblx0XHRcdCcuc2xpZGVSVEwtZW50ZXItYWN0aXZlJzoge1xuXHRcdFx0XHRwb3NpdGlvbjogJ2Fic29sdXRlJyxcblx0XHRcdFx0bGVmdDogJzAlJ1xuXHRcdFx0fSxcblxuXHRcdFx0Jy5zbGlkZVJUTC1sZWF2ZSc6IHtcblx0XHRcdFx0cG9zaXRpb246ICdhYnNvbHV0ZScsXG5cdFx0XHRcdGxlZnQ6ICcwJScsXG5cdFx0XHRcdHRyYW5zaXRpb246ICdhbGwgLjJzIGxpbmVhcidcblx0XHRcdH0sXG5cblx0XHRcdCcuc2xpZGVSVEwtbGVhdmUtYWN0aXZlJzoge1xuXHRcdFx0XHRwb3NpdGlvbjogJ2Fic29sdXRlJyxcblx0XHRcdFx0bGVmdDogJy0xMDAlJ1xuXHRcdFx0fSxcblxuXHRcdFx0LyoqXG5cdFx0XHQgKiBTbGlkZSBhY3Jvc3MgbGVmdC10by1yaWdodFxuXHRcdFx0ICovXG5cblx0XHRcdCcuc2xpZGVMVFItZW50ZXInOiB7XG5cdFx0XHRcdHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuXHRcdFx0XHRsZWZ0OiAnLTEwMCUnLFxuXHRcdFx0XHR0cmFuc2l0aW9uOiAnYWxsIC4ycyBsaW5lYXInXG5cdFx0XHR9LFxuXG5cdFx0XHQnLnNsaWRlTFRSLWVudGVyLWFjdGl2ZSc6IHtcblx0XHRcdFx0cG9zaXRpb246ICdhYnNvbHV0ZScsXG5cdFx0XHRcdGxlZnQ6ICcwJSdcblx0XHRcdH0sXG5cblx0XHRcdCcuc2xpZGVMVFItbGVhdmUnOiB7XG5cdFx0XHRcdHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuXHRcdFx0XHRsZWZ0OiAnMCUnLFxuXHRcdFx0XHR0cmFuc2l0aW9uOiAnYWxsIC4ycyBsaW5lYXInXG5cdFx0XHR9LFxuXG5cdFx0XHQnLnNsaWRlTFRSLWxlYXZlLWFjdGl2ZSc6IHtcblx0XHRcdFx0cG9zaXRpb246ICdhYnNvbHV0ZScsXG5cdFx0XHRcdGxlZnQ6ICcxMDAlJ1xuXHRcdFx0fVxuXHRcdH1cblx0fSxcblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgJF9fMD0gIHRoaXMucHJvcHMscHJvcHM9KGZ1bmN0aW9uKHNvdXJjZSwgZXhjbHVzaW9uKSB7dmFyIHJlc3QgPSB7fTt2YXIgaGFzT3duID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtpZiAoc291cmNlID09IG51bGwpIHt0aHJvdyBuZXcgVHlwZUVycm9yKCk7fWZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtpZiAoaGFzT3duLmNhbGwoc291cmNlLCBrZXkpICYmICFoYXNPd24uY2FsbChleGNsdXNpb24sIGtleSkpIHtyZXN0W2tleV0gPSBzb3VyY2Vba2V5XTt9fXJldHVybiByZXN0O30pKCRfXzAse30pLFxuXHRcdFx0aWQgPSB0aGlzLl9nZW5lcmF0ZUlkKCk7XG5cblx0XHRyZXR1cm4gKFxuXHRcdFx0UmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBSZWFjdC5fX3NwcmVhZCh7aWQ6IGlkfSwgIHByb3BzKSwgXG5cdFx0XHRcdFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmFkaXVtLlN0eWxlLCB7c2NvcGVTZWxlY3RvcjogJyMnK2lkLCBydWxlczogbSh0aGlzLnN0eWxlLnJlc2V0cywgdGhpcy5wcm9wcy5jc3MpfSksIFxuXHRcdFx0XHR0aGlzLnByb3BzLmNoaWxkcmVuXG5cdFx0XHQpXG5cdFx0KTtcblx0fSxcblxuXHRfZ2VuZXJhdGVJZDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuICdkb3BzaWQnKyhpZENvdW50ZXIrKyk7XG5cdH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlc2V0OyIsInZhciBzdHlsZXMgPSB7XG5cdC8vbGF5b3V0XG5cdHJpZ2h0OiB7IGZsb2F0OiAncmlnaHQnIH0sXG5cdFxuXHRsZWZ0OiB7IGZsb2F0OiAnbGVmdCcgfSxcblx0XG5cdHRoaXJkOiB7IHdpZHRoOiAnMzMlJyB9LFxuXG5cdGZ1bGw6IHsgd2lkdGg6ICcxMDAlJyB9LFxuXG5cdGhhbGY6IHsgd2lkdGg6ICc0OCUnIH0sXG5cblx0aGlkZGVuOiB7IGRpc3BsYXk6ICdub25lJyB9LFxuXG5cdGNsZWFyOiB7XG5cdFx0Y2xlYXI6ICdib3RoJywgXG5cdFx0ZGlzcGxheTogJ2Jsb2NrJyBcblx0fSxcblxuXHQvL2FjY291bnQgc3RhdHVzIGluZGljYXRvclxuXHRhY2NvdW50U3RhdHVzOiB7XG5cdFx0dGV4dFRyYW5zZm9ybTogJ2NhcGl0YWxpemUnXG5cdH0sXG5cblx0YWNjb3VudFN0YXR1c05vdGljb246IHtcblx0XHRib3JkZXJSYWRpdXM6IFwiNTAlXCIsXG5cdFx0d2lkdGg6IDE2LFxuXHRcdGhlaWdodDogMTYsXG5cdFx0bWFyZ2luUmlnaHQ6IDEwLFxuXHRcdGNvbG9yOiAnI2ZmZicsXG5cdFx0YmFja2dyb3VuZDogJyM4MWJmMTYnXG5cdH0sXG5cblx0Ly9ib3ggd2lkZ2V0XG5cdGJveDoge1xuXHRcdGJvcmRlclJhZGl1czogMixcblx0XHRwYWRkaW5nOiAnNXB4IDEwcHgnLFxuXHRcdGJhY2tncm91bmQ6ICcjZjVmNWY1J1xuXHR9LFxuXG5cdC8vYmFzaWMgc3R5bGluZyAtIGZvbnRzIGFuZCBjb2xvcnNcblx0bGlnaHQ6IHsgY29sb3I6ICcjOTk5JyB9LFxuXHRjb2xvcnM6IHtcblx0XHRha2lzbWV0R3JlZW46ICcjNWU4ZTE0Jyxcblx0XHRibHVlOiAnIzAyOWRkNicsXG5cdFx0bGlnaHRlckJsdWU6ICcjMTNBRUU3Jyxcblx0XHRibGFjazogJyMzMzMnLFxuXHRcdGRhcmtHcmF5OiAnIzQ0NCcsXG5cdFx0Z3JheTogJyM3ODc4NzgnLFxuXHRcdGxpZ2h0R3JheTogJyNiYmInLFxuXHRcdHZlcnlMaWdodEdyYXk6ICcjZWVlJyxcblx0XHRvZmZXaGl0ZTogJyNmOWY5ZjknLFxuXHRcdGFjY291bnRBY3RpdmU6ICcjODFiZjE2Jyxcblx0XHRhY2NvdW50SW5hY3RpdmU6ICcjYmJiJyxcblx0XHRncmVlbjogJyM1MThkMmEnLFxuXHRcdGxpZ2h0ZXJHcmVlbjogJyM1Nzk3MmQnXG5cdH0sXG5cblx0Zm9udHM6IHtcblx0XHRzYW5zOiAnT3BlbiBTYW5zLCBcIk9wZW4gU2Fuc1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWYnLFxuXHRcdHNlcmlmOiAnTWVycml3ZWF0aGVyLCBHZW9yZ2lhLCBzZXJpZicsXG5cdFx0bW9ubzogJ1wiQ291cmllciBOZXdcIiwgQ291cmllciwgbW9ub3NwYWNlJ1xuXHR9LFxuXG5cdC8vZm9ybXNcblx0aW5wdXQ6IHtcblx0XHR3aWR0aDogXCIxMDAlXCIsXG5cdFx0Ym94U2hhZG93OiAnbm9uZScsXG5cdFx0YmFja2dyb3VuZDogJyNmZmYnLFxuXHRcdGJvcmRlcjogJzFweCBzb2xpZCAjZDVkNWQ1Jyxcblx0XHRmb250U2l6ZTogMTIsXG5cdFx0cGFkZGluZzogJzhweCAxMHB4J1xuXHR9LFxuXG5cdHNlbGVjdDoge1xuXHRcdGJvcmRlclJhZGl1czogMyxcblx0XHRiYWNrZ3JvdW5kQ29sb3I6ICcjZmZmJyxcblx0XHRmb250U2l6ZTogMTIsXG5cdFx0aGVpZ2h0OiAzNSxcblx0XHR3aWR0aDogJzEwMCUnLFxuXHRcdGJvcmRlcjogJzFweCBzb2xpZCAjZDVkNWQ1Jyxcblx0XHRwYWRkaW5nOiAnM3B4IDVweCcsXG5cdFx0bWluV2lkdGg6IDBcblx0fSxcblxuXHRjaGVja2JveDoge1xuXHRcdG1hcmdpblJpZ2h0OiAxMFxuXHR9LFxuXG5cdGVycm9yRmllbGQ6IHtcblx0XHRib3JkZXI6ICcxcHggc29saWQgI2RkM2QzNidcblx0fSxcblx0XG5cdGVycm9yTGFiZWw6IHtcblx0XHRib3JkZXI6ICcxcHggc29saWQgI2RkM2QzNicsXG5cdFx0Y29sb3I6ICcjYTAwJyxcblx0XHRkaXNwbGF5OiAnYmxvY2snLFxuXHRcdGZvbnRTaXplOiAxMixcblx0XHRtYXJnaW46ICc1cHggMCAwIDAnLFxuXHRcdHBhZGRpbmc6IDVcblx0fSxcblxuXHRcbn07XG5cbi8vIG9wdGlvbmFsIHRvcC1sZXZlbCBzdHlsZXMgZm9yIHBhc3NpbmcgaW50byB0aGUgXCJyZXNldFwiIG9iamVjdFxuc3R5bGVzLmNzcyA9IHtcblx0Jz4gKic6IHtcblx0XHRmb250OiAnMTRweC8xLjUgJyArIHN0eWxlcy5mb250cy5zYW5zLFxuXHRcdGNvbG9yOiBzdHlsZXMuY29sb3JzLmJsYWNrXG5cdH0sXG5cdCdoMSwgaDIsIGgzJzoge1xuXHRcdGZvbnRGYW1pbHk6IHN0eWxlcy5mb250cy5zZXJpZixcblx0XHRmb250V2VpZ2h0OiA1MDBcblx0fSxcblx0J2gyJzoge1xuXHRcdGNvbG9yOiBzdHlsZXMuY29sb3JzLmdyYXksXG5cdH0sXG5cdCdhJzoge1xuXHRcdGNvbG9yOiBzdHlsZXMuY29sb3JzLmJsdWVcblx0fVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZXM7IiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcblx0dmFyIHJlcyA9IHt9O1xuXHRmb3IgKCB2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyArK2kpIHtcblx0XHRpZiAoYXJndW1lbnRzW2ldKSB7XG5cdFx0XHRqUXVlcnkuZXh0ZW5kKHJlcywgYXJndW1lbnRzW2ldKTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIHJlcztcbn07IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgY3JlYXRlTWFya3VwRm9yU3R5bGVzID0gcmVxdWlyZSgnLi4vY3JlYXRlLW1hcmt1cC1mb3Itc3R5bGVzJyk7XG52YXIgUHJlZml4ZXIgPSByZXF1aXJlKCcuLi9wcmVmaXhlcicpO1xuXG52YXIgUmVhY3QgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdy5SZWFjdCA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwuUmVhY3QgOiBudWxsKTtcblxudmFyIGJ1aWxkQ3NzU3RyaW5nID0gZnVuY3Rpb24gYnVpbGRDc3NTdHJpbmcoc2VsZWN0b3IsIHJ1bGVzKSB7XG4gIGlmICghc2VsZWN0b3IgfHwgIXJ1bGVzKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHByZWZpeGVkUnVsZXMgPSBQcmVmaXhlci5nZXRQcmVmaXhlZFN0eWxlKHJ1bGVzLCAnY3NzJyk7XG4gIHZhciBzZXJpYWxpemVkUnVsZXMgPSBjcmVhdGVNYXJrdXBGb3JTdHlsZXMocHJlZml4ZWRSdWxlcyk7XG5cbiAgcmV0dXJuIHNlbGVjdG9yICsgJ3snICsgc2VyaWFsaXplZFJ1bGVzICsgJ30nO1xufTtcblxudmFyIFN0eWxlID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICBkaXNwbGF5TmFtZTogJ1N0eWxlJyxcblxuICBwcm9wVHlwZXM6IHtcbiAgICBydWxlczogUmVhY3QuUHJvcFR5cGVzLm9iamVjdCxcbiAgICBzY29wZVNlbGVjdG9yOiBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nXG4gIH0sXG5cbiAgZ2V0RGVmYXVsdFByb3BzOiBmdW5jdGlvbiBnZXREZWZhdWx0UHJvcHMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNjb3BlU2VsZWN0b3I6ICcnXG4gICAgfTtcbiAgfSxcblxuICBfYnVpbGRTdHlsZXM6IGZ1bmN0aW9uIF9idWlsZFN0eWxlcyhzdHlsZXMpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHN0eWxlcykucmVkdWNlKGZ1bmN0aW9uIChhY2N1bXVsYXRvciwgc2VsZWN0b3IpIHtcbiAgICAgIHZhciBydWxlcyA9IHN0eWxlc1tzZWxlY3Rvcl07XG5cbiAgICAgIGlmIChzZWxlY3RvciA9PT0gJ21lZGlhUXVlcmllcycpIHtcbiAgICAgICAgYWNjdW11bGF0b3IgKz0gX3RoaXMuX2J1aWxkTWVkaWFRdWVyeVN0cmluZyhydWxlcyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgY29tcGxldGVTZWxlY3RvciA9IChfdGhpcy5wcm9wcy5zY29wZVNlbGVjdG9yID8gX3RoaXMucHJvcHMuc2NvcGVTZWxlY3RvciArICcgJyA6ICcnKSArIHNlbGVjdG9yO1xuICAgICAgICBhY2N1bXVsYXRvciArPSBidWlsZENzc1N0cmluZyhjb21wbGV0ZVNlbGVjdG9yLCBydWxlcyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBhY2N1bXVsYXRvcjtcbiAgICB9LCAnJyk7XG4gIH0sXG5cbiAgX2J1aWxkTWVkaWFRdWVyeVN0cmluZzogZnVuY3Rpb24gX2J1aWxkTWVkaWFRdWVyeVN0cmluZyhtZWRpYVF1ZXJ5T2JqKSB7XG4gICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICB2YXIgY29udGV4dE1lZGlhUXVlcmllcyA9IHRoaXMuX2dldENvbnRleHRNZWRpYVF1ZXJpZXMoKTtcbiAgICB2YXIgbWVkaWFRdWVyeVN0cmluZyA9ICcnO1xuXG4gICAgT2JqZWN0LmtleXMobWVkaWFRdWVyeU9iaikuZm9yRWFjaChmdW5jdGlvbiAocXVlcnkpIHtcbiAgICAgIHZhciBjb21wbGV0ZVF1ZXJ5ID0gY29udGV4dE1lZGlhUXVlcmllc1txdWVyeV0gPyBjb250ZXh0TWVkaWFRdWVyaWVzW3F1ZXJ5XSA6IHF1ZXJ5O1xuICAgICAgbWVkaWFRdWVyeVN0cmluZyArPSAnQG1lZGlhICcgKyBjb21wbGV0ZVF1ZXJ5ICsgJ3snICsgX3RoaXMyLl9idWlsZFN0eWxlcyhtZWRpYVF1ZXJ5T2JqW3F1ZXJ5XSkgKyAnfSc7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gbWVkaWFRdWVyeVN0cmluZztcbiAgfSxcblxuICBfZ2V0Q29udGV4dE1lZGlhUXVlcmllczogZnVuY3Rpb24gX2dldENvbnRleHRNZWRpYVF1ZXJpZXMoKSB7XG4gICAgdmFyIGNvbnRleHRNZWRpYVF1ZXJpZXMgPSB7fTtcbiAgICBpZiAodGhpcy5jb250ZXh0ICYmIHRoaXMuY29udGV4dC5tZWRpYVF1ZXJpZXMpIHtcbiAgICAgIE9iamVjdC5rZXlzKHRoaXMuY29udGV4dC5tZWRpYVF1ZXJpZXMpLmZvckVhY2goKGZ1bmN0aW9uIChxdWVyeSkge1xuICAgICAgICBjb250ZXh0TWVkaWFRdWVyaWVzW3F1ZXJ5XSA9IHRoaXMuY29udGV4dC5tZWRpYVF1ZXJpZXNbcXVlcnldLm1lZGlhO1xuICAgICAgfSkuYmluZCh0aGlzKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNvbnRleHRNZWRpYVF1ZXJpZXM7XG4gIH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgaWYgKCF0aGlzLnByb3BzLnJ1bGVzKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICB2YXIgc3R5bGVzID0gdGhpcy5fYnVpbGRTdHlsZXModGhpcy5wcm9wcy5ydWxlcyk7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgnc3R5bGUnLCB7IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7IF9faHRtbDogc3R5bGVzIH0gfSk7XG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFN0eWxlOyIsIi8qIEBmbG93ICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIEV4ZWN1dGlvbkVudmlyb25tZW50ID0gcmVxdWlyZSgnZXhlbnYnKTtcblxudmFyIF9tYXRjaE1lZGlhRnVuY3Rpb24gPSBFeGVjdXRpb25FbnZpcm9ubWVudC5jYW5Vc2VET00gJiYgd2luZG93ICYmIHdpbmRvdy5tYXRjaE1lZGlhO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgY2FuTWF0Y2hNZWRpYTogZnVuY3Rpb24gY2FuTWF0Y2hNZWRpYSgpIHtcbiAgICByZXR1cm4gdHlwZW9mIF9tYXRjaE1lZGlhRnVuY3Rpb24gPT09ICdmdW5jdGlvbic7XG4gIH0sXG5cbiAgbWF0Y2hNZWRpYTogZnVuY3Rpb24gbWF0Y2hNZWRpYShxdWVyeSkge1xuICAgIHJldHVybiBfbWF0Y2hNZWRpYUZ1bmN0aW9uKHF1ZXJ5KTtcbiAgfSxcblxuICBzZXRNYXRjaE1lZGlhOiBmdW5jdGlvbiBzZXRNYXRjaE1lZGlhKG5leHRNYXRjaE1lZGlhRnVuY3Rpb24pIHtcbiAgICBfbWF0Y2hNZWRpYUZ1bmN0aW9uID0gbmV4dE1hdGNoTWVkaWFGdW5jdGlvbjtcbiAgfVxufTsiLCIvKiBAZmxvdyAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBjcmVhdGVNYXJrdXBGb3JTdHlsZXMgPSBmdW5jdGlvbiBjcmVhdGVNYXJrdXBGb3JTdHlsZXMoc3R5bGUsIHNwYWNlcykge1xuICBzcGFjZXMgPSBzcGFjZXMgfHwgJyc7XG4gIHJldHVybiBPYmplY3Qua2V5cyhzdHlsZSkubWFwKGZ1bmN0aW9uIChwcm9wZXJ0eSkge1xuICAgIHJldHVybiBzcGFjZXMgKyBwcm9wZXJ0eSArICc6ICcgKyBzdHlsZVtwcm9wZXJ0eV0gKyAnOyc7XG4gIH0pLmpvaW4oJ1xcbicpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVNYXJrdXBGb3JTdHlsZXM7IiwiLyogQGZsb3cgKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gKGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgndmFsdWUnIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KSgpO1xuXG52YXIgX2dldCA9IGZ1bmN0aW9uIGdldChfeCwgX3gyLCBfeDMpIHsgdmFyIF9hZ2FpbiA9IHRydWU7IF9mdW5jdGlvbjogd2hpbGUgKF9hZ2FpbikgeyB2YXIgb2JqZWN0ID0gX3gsIHByb3BlcnR5ID0gX3gyLCByZWNlaXZlciA9IF94MzsgZGVzYyA9IHBhcmVudCA9IGdldHRlciA9IHVuZGVmaW5lZDsgX2FnYWluID0gZmFsc2U7IHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHByb3BlcnR5KTsgaWYgKGRlc2MgPT09IHVuZGVmaW5lZCkgeyB2YXIgcGFyZW50ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iamVjdCk7IGlmIChwYXJlbnQgPT09IG51bGwpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSBlbHNlIHsgX3ggPSBwYXJlbnQ7IF94MiA9IHByb3BlcnR5OyBfeDMgPSByZWNlaXZlcjsgX2FnYWluID0gdHJ1ZTsgY29udGludWUgX2Z1bmN0aW9uOyB9IH0gZWxzZSBpZiAoJ3ZhbHVlJyBpbiBkZXNjKSB7IHJldHVybiBkZXNjLnZhbHVlOyB9IGVsc2UgeyB2YXIgZ2V0dGVyID0gZGVzYy5nZXQ7IGlmIChnZXR0ZXIgPT09IHVuZGVmaW5lZCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9IHJldHVybiBnZXR0ZXIuY2FsbChyZWNlaXZlcik7IH0gfSB9O1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoJ0Nhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbicpOyB9IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gJ2Z1bmN0aW9uJyAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoJ1N1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgJyArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgcmVzb2x2ZVN0eWxlcyA9IHJlcXVpcmUoJy4vcmVzb2x2ZS1zdHlsZXMuanMnKTtcblxudmFyIGVuaGFuY2VXaXRoUmFkaXVtID0gZnVuY3Rpb24gZW5oYW5jZVdpdGhSYWRpdW0oQ29tcG9zZWRDb21wb25lbnQpIHtcbiAgdmFyIGRpc3BsYXlOYW1lID0gQ29tcG9zZWRDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgQ29tcG9zZWRDb21wb25lbnQubmFtZSB8fCAnQ29tcG9uZW50JztcblxuICB2YXIgUmFkaXVtRW5oYW5jZXIgPSAoZnVuY3Rpb24gKF9Db21wb3NlZENvbXBvbmVudCkge1xuICAgIGZ1bmN0aW9uIFJhZGl1bUVuaGFuY2VyKCkge1xuICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJhZGl1bUVuaGFuY2VyKTtcblxuICAgICAgX2dldChPYmplY3QuZ2V0UHJvdG90eXBlT2YoUmFkaXVtRW5oYW5jZXIucHJvdG90eXBlKSwgJ2NvbnN0cnVjdG9yJywgdGhpcykuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblxuICAgICAgdGhpcy5zdGF0ZSA9IHRoaXMuc3RhdGUgfHwge307XG4gICAgICB0aGlzLnN0YXRlLl9yYWRpdW1TdHlsZVN0YXRlID0ge307XG4gICAgfVxuXG4gICAgX2luaGVyaXRzKFJhZGl1bUVuaGFuY2VyLCBfQ29tcG9zZWRDb21wb25lbnQpO1xuXG4gICAgX2NyZWF0ZUNsYXNzKFJhZGl1bUVuaGFuY2VyLCBbe1xuICAgICAga2V5OiAncmVuZGVyJyxcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICAgIHZhciByZW5kZXJlZEVsZW1lbnQgPSBfZ2V0KE9iamVjdC5nZXRQcm90b3R5cGVPZihSYWRpdW1FbmhhbmNlci5wcm90b3R5cGUpLCAncmVuZGVyJywgdGhpcykuY2FsbCh0aGlzKTtcbiAgICAgICAgcmV0dXJuIHJlc29sdmVTdHlsZXModGhpcywgcmVuZGVyZWRFbGVtZW50KTtcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBrZXk6ICdjb21wb25lbnRXaWxsVW5tb3VudCcsXG4gICAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICAgIGlmIChfZ2V0KE9iamVjdC5nZXRQcm90b3R5cGVPZihSYWRpdW1FbmhhbmNlci5wcm90b3R5cGUpLCAnY29tcG9uZW50V2lsbFVubW91bnQnLCB0aGlzKSkge1xuICAgICAgICAgIF9nZXQoT2JqZWN0LmdldFByb3RvdHlwZU9mKFJhZGl1bUVuaGFuY2VyLnByb3RvdHlwZSksICdjb21wb25lbnRXaWxsVW5tb3VudCcsIHRoaXMpLmNhbGwodGhpcyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5fcmFkaXVtTW91c2VVcExpc3RlbmVyKSB7XG4gICAgICAgICAgdGhpcy5fcmFkaXVtTW91c2VVcExpc3RlbmVyLnJlbW92ZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuX3JhZGl1bU1lZGlhUXVlcnlMaXN0ZW5lcnNCeVF1ZXJ5KSB7XG4gICAgICAgICAgT2JqZWN0LmtleXModGhpcy5fcmFkaXVtTWVkaWFRdWVyeUxpc3RlbmVyc0J5UXVlcnkpLmZvckVhY2goZnVuY3Rpb24gKHF1ZXJ5KSB7XG4gICAgICAgICAgICB0aGlzLl9yYWRpdW1NZWRpYVF1ZXJ5TGlzdGVuZXJzQnlRdWVyeVtxdWVyeV0ucmVtb3ZlKCk7XG4gICAgICAgICAgfSwgdGhpcyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gUmFkaXVtRW5oYW5jZXI7XG4gIH0pKENvbXBvc2VkQ29tcG9uZW50KTtcblxuICBSYWRpdW1FbmhhbmNlci5kaXNwbGF5TmFtZSA9ICdSYWRpdW0oJyArIGRpc3BsYXlOYW1lICsgJyknO1xuXG4gIHJldHVybiBSYWRpdW1FbmhhbmNlcjtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW5oYW5jZVdpdGhSYWRpdW07IiwiLyogQGZsb3cgKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgVkFMSURfS0VZUyA9IFsnOmFjdGl2ZScsICc6Zm9jdXMnLCAnOmhvdmVyJ107XG5cbnZhciBnZXRTdGF0ZSA9IGZ1bmN0aW9uIGdldFN0YXRlKHN0YXRlLCBlbGVtZW50S2V5LCB2YWx1ZSkge1xuICBlbGVtZW50S2V5ID0gZWxlbWVudEtleSB8fCAnbWFpbic7XG5cbiAgaWYgKFZBTElEX0tFWVMuaW5kZXhPZih2YWx1ZSkgPT09IC0xKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdSYWRpdW0uZ2V0U3RhdGUgaW52YWxpZCB2YWx1ZSBwYXJhbTogYCcgKyB2YWx1ZSArICdgJyk7XG4gIH1cblxuICByZXR1cm4gISEoc3RhdGUgJiYgc3RhdGUuX3JhZGl1bVN0eWxlU3RhdGUgJiYgc3RhdGUuX3JhZGl1bVN0eWxlU3RhdGVbZWxlbWVudEtleV0gJiYgc3RhdGUuX3JhZGl1bVN0eWxlU3RhdGVbZWxlbWVudEtleV1bdmFsdWVdKSB8fCBmYWxzZTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0U3RhdGU7IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgRW5oYW5jZXIgPSByZXF1aXJlKCcuL2VuaGFuY2VyJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKENvbXBvc2VkQ29tcG9uZW50KSB7XG4gIHJldHVybiBFbmhhbmNlcihDb21wb3NlZENvbXBvbmVudCk7XG59O1xubW9kdWxlLmV4cG9ydHMuU3R5bGUgPSByZXF1aXJlKCcuL2NvbXBvbmVudHMvc3R5bGUnKTtcbm1vZHVsZS5leHBvcnRzLmdldFN0YXRlID0gcmVxdWlyZSgnLi9nZXQtc3RhdGUnKTtcbm1vZHVsZS5leHBvcnRzLmtleWZyYW1lcyA9IHJlcXVpcmUoJy4va2V5ZnJhbWVzJyk7XG5tb2R1bGUuZXhwb3J0cy5Db25maWcgPSByZXF1aXJlKCcuL2NvbmZpZycpOyIsIi8qIEBmbG93ICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGNyZWF0ZU1hcmt1cEZvclN0eWxlcyA9IHJlcXVpcmUoJy4vY3JlYXRlLW1hcmt1cC1mb3Itc3R5bGVzJyk7XG52YXIgUHJlZml4ZXIgPSByZXF1aXJlKCcuL3ByZWZpeGVyJyk7XG5cbnZhciBFeGVjdXRpb25FbnZpcm9ubWVudCA9IHJlcXVpcmUoJ2V4ZW52Jyk7XG5cbnZhciBpc0FuaW1hdGlvblN1cHBvcnRlZCA9IEV4ZWN1dGlvbkVudmlyb25tZW50LmNhblVzZURPTSAmJiBQcmVmaXhlci5nZXRQcmVmaXhlZFByb3BlcnR5TmFtZSgnYW5pbWF0aW9uJykgIT09IGZhbHNlO1xuXG52YXIgYW5pbWF0aW9uSW5kZXggPSAxO1xudmFyIGFuaW1hdGlvblN0eWxlU2hlZXQgPSBudWxsO1xudmFyIGtleWZyYW1lc1ByZWZpeGVkID0gbnVsbDtcblxuaWYgKGlzQW5pbWF0aW9uU3VwcG9ydGVkKSB7XG4gIGFuaW1hdGlvblN0eWxlU2hlZXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKGFuaW1hdGlvblN0eWxlU2hlZXQpO1xuXG4gIC8vIFRlc3QgaWYgcHJlZml4IG5lZWRlZCBmb3Iga2V5ZnJhbWVzIChjb3BpZWQgZnJvbSBQcmVmaXhGcmVlKVxuICBrZXlmcmFtZXNQcmVmaXhlZCA9ICdrZXlmcmFtZXMnO1xuICBhbmltYXRpb25TdHlsZVNoZWV0LnRleHRDb250ZW50ID0gJ0BrZXlmcmFtZXMge30nO1xuICBpZiAoIWFuaW1hdGlvblN0eWxlU2hlZXQuc2hlZXQuY3NzUnVsZXMubGVuZ3RoKSB7XG4gICAga2V5ZnJhbWVzUHJlZml4ZWQgPSBQcmVmaXhlci5jc3NQcmVmaXggKyAna2V5ZnJhbWVzJztcbiAgfVxufVxuXG4vLyBTaW1wbGUgYW5pbWF0aW9uIGhlbHBlciB0aGF0IGluamVjdHMgQ1NTIGludG8gYSBzdHlsZSBvYmplY3QgY29udGFpbmluZyB0aGVcbi8vIGtleWZyYW1lcywgYW5kIHJldHVybnMgYSBzdHJpbmcgd2l0aCB0aGUgZ2VuZXJhdGVkIGFuaW1hdGlvbiBuYW1lLlxudmFyIGtleWZyYW1lcyA9IGZ1bmN0aW9uIGtleWZyYW1lcyhrZXlmcmFtZVJ1bGVzKSB7XG4gIHZhciBuYW1lID0gJ0FuaW1hdGlvbicgKyBhbmltYXRpb25JbmRleDtcbiAgYW5pbWF0aW9uSW5kZXggKz0gMTtcblxuICBpZiAoIWlzQW5pbWF0aW9uU3VwcG9ydGVkKSB7XG4gICAgcmV0dXJuIG5hbWU7XG4gIH1cblxuICB2YXIgcnVsZSA9ICdAJyArIGtleWZyYW1lc1ByZWZpeGVkICsgJyAnICsgbmFtZSArICcge1xcbicgKyBPYmplY3Qua2V5cyhrZXlmcmFtZVJ1bGVzKS5tYXAoZnVuY3Rpb24gKHBlcmNlbnRhZ2UpIHtcbiAgICB2YXIgcHJvcHMgPSBrZXlmcmFtZVJ1bGVzW3BlcmNlbnRhZ2VdO1xuICAgIHZhciBwcmVmaXhlZFByb3BzID0gUHJlZml4ZXIuZ2V0UHJlZml4ZWRTdHlsZShwcm9wcywgJ2NzcycpO1xuICAgIHZhciBzZXJpYWxpemVkUHJvcHMgPSBjcmVhdGVNYXJrdXBGb3JTdHlsZXMocHJlZml4ZWRQcm9wcywgJyAgJyk7XG4gICAgcmV0dXJuICcgICcgKyBwZXJjZW50YWdlICsgJyB7XFxuICAnICsgc2VyaWFsaXplZFByb3BzICsgJ1xcbiAgfSc7XG4gIH0pLmpvaW4oJ1xcbicpICsgJ1xcbn1cXG4nO1xuXG4gIC8vIGZvciBmbG93XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIGlmICghYW5pbWF0aW9uU3R5bGVTaGVldCkge1xuICAgIHRocm93IG5ldyBFcnJvcigna2V5ZnJhbWVzIG5vdCBpbml0aWFsaXplZCBwcm9wZXJseScpO1xuICB9XG5cbiAgYW5pbWF0aW9uU3R5bGVTaGVldC5zaGVldC5pbnNlcnRSdWxlKHJ1bGUsIGFuaW1hdGlvblN0eWxlU2hlZXQuc2hlZXQuY3NzUnVsZXMubGVuZ3RoKTtcbiAgcmV0dXJuIG5hbWU7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGtleWZyYW1lczsiLCIvKiBAZmxvdyAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBfY2FsbGJhY2tzID0gW107XG52YXIgX21vdXNlVXBMaXN0ZW5lcklzQWN0aXZlID0gZmFsc2U7XG5cbnZhciBfaGFuZGxlTW91c2VVcCA9IGZ1bmN0aW9uIF9oYW5kbGVNb3VzZVVwKGV2KSB7XG4gIF9jYWxsYmFja3MuZm9yRWFjaChmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjayhldik7XG4gIH0pO1xufTtcblxudmFyIHN1YnNjcmliZSA9IGZ1bmN0aW9uIHN1YnNjcmliZShjYWxsYmFjaykge1xuICBpZiAoX2NhbGxiYWNrcy5pbmRleE9mKGNhbGxiYWNrKSA9PT0gLTEpIHtcbiAgICBfY2FsbGJhY2tzLnB1c2goY2FsbGJhY2spO1xuICB9XG5cbiAgaWYgKCFfbW91c2VVcExpc3RlbmVySXNBY3RpdmUpIHtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIF9oYW5kbGVNb3VzZVVwKTtcbiAgICBfbW91c2VVcExpc3RlbmVySXNBY3RpdmUgPSB0cnVlO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHZhciBpbmRleCA9IF9jYWxsYmFja3MuaW5kZXhPZihjYWxsYmFjayk7XG4gICAgICBfY2FsbGJhY2tzLnNwbGljZShpbmRleCwgMSk7XG5cbiAgICAgIGlmIChfY2FsbGJhY2tzLmxlbmd0aCA9PT0gMCAmJiBfbW91c2VVcExpc3RlbmVySXNBY3RpdmUpIHtcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBfaGFuZGxlTW91c2VVcCk7XG4gICAgICAgIF9tb3VzZVVwTGlzdGVuZXJJc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBzdWJzY3JpYmU6IHN1YnNjcmliZVxufTsiLCIvKipcbiAqIEJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9qc3N0eWxlcy9jc3MtdmVuZG9yLCBidXQgd2l0aG91dCBoYXZpbmcgdG9cbiAqIGNvbnZlcnQgYmV0d2VlbiBkaWZmZXJlbnQgY2FzZXMgYWxsIHRoZSB0aW1lLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIEV4ZWN1dGlvbkVudmlyb25tZW50ID0gcmVxdWlyZSgnZXhlbnYnKTtcbnZhciBhcnJheUZpbmQgPSByZXF1aXJlKCdhcnJheS1maW5kJyk7XG5cbnZhciBpbmZvQnlDc3NQcmVmaXggPSB7XG4gICctbW96LSc6IHtcbiAgICBjc3NQcmVmaXg6ICctbW96LScsXG4gICAganNQcmVmaXg6ICdNb3onLFxuICAgIGFsdGVybmF0aXZlUHJvcGVydGllczoge1xuICAgICAgLy8gT0xEIC0gRmlyZWZveCAxOS1cbiAgICAgIGZsZXg6IFt7IGNzczogJy1tb3otYm94LWZsZXgnLCBqczogJ01vekJveEZsZXgnIH1dLFxuICAgICAgb3JkZXI6IFt7IGNzczogJy1tb3otYm94LW9yZGluYWwtZ3JvdXAnLCBqczogJ01vekJveE9yZGluYWxHcm91cCcgfV1cbiAgICB9LFxuICAgIGFsdGVybmF0aXZlVmFsdWVzOiB7XG4gICAgICBkaXNwbGF5OiB7XG4gICAgICAgIC8vIE9MRCAtIEZpcmVmb3ggMTktXG4gICAgICAgIGZsZXg6IFsnLW1vei1ib3gnXVxuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgJy1tcy0nOiB7XG4gICAgY3NzUHJlZml4OiAnLW1zLScsXG4gICAganNQcmVmaXg6ICdtcycsXG4gICAgYWx0ZXJuYXRpdmVWYWx1ZXM6IHtcbiAgICAgIGRpc3BsYXk6IHtcbiAgICAgICAgLy8gVFdFRU5FUiAtIElFIDEwXG4gICAgICAgIGZsZXg6IFsnLW1zLWZsZXhib3gnXSxcbiAgICAgICAgb3JkZXI6IFsnLW1zLWZsZXgtb3JkZXInXVxuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgJy1vLSc6IHtcbiAgICBjc3NQcmVmaXg6ICctby0nLFxuICAgIGpzUHJlZml4OiAnTydcbiAgfSxcbiAgJy13ZWJraXQtJzoge1xuICAgIGNzc1ByZWZpeDogJy13ZWJraXQtJyxcbiAgICBqc1ByZWZpeDogJ1dlYmtpdCcsXG4gICAgYWx0ZXJuYXRpdmVQcm9wZXJ0aWVzOiB7XG4gICAgICAvLyBPTEQgLSBpT1MgNi0sIFNhZmFyaSAzLjEtNlxuICAgICAgZmxleDogW3sgY3NzOiAnLXdlYmtpdC1ib3gtZmxleCcsIGpzOiAnV2Via2l0Qm94RmxleCcgfV0sXG4gICAgICBvcmRlcjogW3sgY3NzOiAnLXdlYmtpdC1ib3gtb3JkaW5hbC1ncm91cCcsIGpzOiAnV2Via2l0Qm94T3JkaW5hbEdyb3VwJyB9XVxuICAgIH0sXG4gICAgYWx0ZXJuYXRpdmVWYWx1ZXM6IHtcbiAgICAgIGRpc3BsYXk6IHtcbiAgICAgICAgZmxleDogWyctd2Via2l0LWJveCddIC8vIE9MRCAtIGlPUyA2LSwgU2FmYXJpIDMuMS02XG4gICAgICB9XG4gICAgfVxuICB9XG59O1xuXG4vKipcbiAqIENTUyBwcm9wZXJ0aWVzIHdoaWNoIGFjY2VwdCBudW1iZXJzIGJ1dCBhcmUgbm90IGluIHVuaXRzIG9mIFwicHhcIi5cbiAqIENvcGllZCBmcm9tIFJlYWN0IGNvcmUgSnVuZSAyMiwgMjAxNS5cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWFjdC9ibG9iL1xuICogYmE4MWI2MGFkOGU5M2I3NDdiZTQyYTAzYjc5NzA2NTkzMmM0OWM5Ni9cbiAqIHNyYy9yZW5kZXJlcnMvZG9tL3NoYXJlZC9DU1NQcm9wZXJ0eS5qc1xuICovXG52YXIgaXNVbml0bGVzc051bWJlciA9IHtcbiAgYm94RmxleDogdHJ1ZSxcbiAgYm94RmxleEdyb3VwOiB0cnVlLFxuICBjb2x1bW5Db3VudDogdHJ1ZSxcbiAgZmxleDogdHJ1ZSxcbiAgZmxleEdyb3c6IHRydWUsXG4gIGZsZXhQb3NpdGl2ZTogdHJ1ZSxcbiAgZmxleFNocmluazogdHJ1ZSxcbiAgZmxleE5lZ2F0aXZlOiB0cnVlLFxuICBmb250V2VpZ2h0OiB0cnVlLFxuICBsaW5lQ2xhbXA6IHRydWUsXG4gIGxpbmVIZWlnaHQ6IHRydWUsXG4gIG9wYWNpdHk6IHRydWUsXG4gIG9yZGVyOiB0cnVlLFxuICBvcnBoYW5zOiB0cnVlLFxuICB0YWJTaXplOiB0cnVlLFxuICB3aWRvd3M6IHRydWUsXG4gIHpJbmRleDogdHJ1ZSxcbiAgem9vbTogdHJ1ZSxcblxuICAvLyBTVkctcmVsYXRlZCBwcm9wZXJ0aWVzXG4gIGZpbGxPcGFjaXR5OiB0cnVlLFxuICBzdHJva2VEYXNob2Zmc2V0OiB0cnVlLFxuICBzdHJva2VPcGFjaXR5OiB0cnVlLFxuICBzdHJva2VXaWR0aDogdHJ1ZVxufTtcblxudmFyIGRvbVN0eWxlID0ge307XG52YXIgcHJlZml4ZWRQcm9wZXJ0eUNhY2hlID0ge307XG52YXIgcHJlZml4ZWRWYWx1ZUNhY2hlID0ge307XG52YXIgcHJlZml4SW5mbyA9IHtcbiAgY3NzUHJlZml4OiAnJyxcbiAganNQcmVmaXg6ICcnXG59O1xuXG5pZiAoRXhlY3V0aW9uRW52aXJvbm1lbnQuY2FuVXNlRE9NKSB7XG4gIGRvbVN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpLnN0eWxlO1xuXG4gIC8vIEJhc2VkIG9uIGh0dHA6Ly9kYXZpZHdhbHNoLm5hbWUvdmVuZG9yLXByZWZpeFxuICB2YXIgd2luZG93U3R5bGVzID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCAnJyk7XG4gIHZhciBwcmVmaXhNYXRjaCA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHdpbmRvd1N0eWxlcykuam9pbignJykubWF0Y2goLy0obW96fHdlYmtpdHxtc3xvKS0vKTtcbiAgdmFyIGNzc1ZlbmRvclByZWZpeCA9IHByZWZpeE1hdGNoICYmIHByZWZpeE1hdGNoWzBdO1xuXG4gIHByZWZpeEluZm8gPSBpbmZvQnlDc3NQcmVmaXhbY3NzVmVuZG9yUHJlZml4XSB8fCBwcmVmaXhJbmZvO1xufVxuXG52YXIgX2NhbWVsQ2FzZVJlZ2V4ID0gLyhbYS16XSk/KFtBLVpdKS9nO1xudmFyIF9jYW1lbENhc2VSZXBsYWNlciA9IGZ1bmN0aW9uIF9jYW1lbENhc2VSZXBsYWNlcihtYXRjaCwgcDEsIHAyKSB7XG4gIHJldHVybiBwMSArICctJyArIHAyLnRvTG93ZXJDYXNlKCk7XG59O1xudmFyIF9jYW1lbENhc2VUb0Rhc2hDYXNlID0gZnVuY3Rpb24gX2NhbWVsQ2FzZVRvRGFzaENhc2Uocykge1xuICByZXR1cm4gcy5yZXBsYWNlKF9jYW1lbENhc2VSZWdleCwgX2NhbWVsQ2FzZVJlcGxhY2VyKTtcbn07XG5cbnZhciBnZXRQcmVmaXhlZFByb3BlcnR5TmFtZSA9IGZ1bmN0aW9uIGdldFByZWZpeGVkUHJvcGVydHlOYW1lKHByb3BlcnR5KSB7XG4gIGlmIChwcmVmaXhlZFByb3BlcnR5Q2FjaGUuaGFzT3duUHJvcGVydHkocHJvcGVydHkpKSB7XG4gICAgcmV0dXJuIHByZWZpeGVkUHJvcGVydHlDYWNoZVtwcm9wZXJ0eV07XG4gIH1cblxuICB2YXIgdW5wcmVmaXhlZCA9IHtcbiAgICBjc3M6IF9jYW1lbENhc2VUb0Rhc2hDYXNlKHByb3BlcnR5KSxcbiAgICBqczogcHJvcGVydHksXG4gICAgaXNEZWZhdWx0Rm9yU2VydmVyOiB0cnVlXG4gIH07XG5cbiAgLy8gVHJ5IHRoZSBwcmVmaXhlZCB2ZXJzaW9uIGZpcnN0LiBDaHJvbWUgaW4gcGFydGljdWxhciBoYXMgdGhlIGBmaWx0ZXJgIGFuZFxuICAvLyBgd2Via2l0RmlsdGVyYCBwcm9wZXJ0aWVzIGF2YWlsYWxiZSBvbiB0aGUgc3R5bGUgb2JqZWN0LCBidXQgb25seSB0aGVcbiAgLy8gcHJlZml4ZWQgdmVyc2lvbiBhY3R1YWxseSB3b3Jrcy5cbiAgdmFyIHBvc3NpYmxlUHJvcGVydHlOYW1lcyA9IFtcbiAgLy8gUHJlZml4ZWRcbiAge1xuICAgIGNzczogcHJlZml4SW5mby5jc3NQcmVmaXggKyBfY2FtZWxDYXNlVG9EYXNoQ2FzZShwcm9wZXJ0eSksXG4gICAganM6IHByZWZpeEluZm8uanNQcmVmaXggKyBwcm9wZXJ0eVswXS50b1VwcGVyQ2FzZSgpICsgcHJvcGVydHkuc2xpY2UoMSlcbiAgfSwgdW5wcmVmaXhlZF07XG5cbiAgLy8gQWx0ZXJuYXRpdmUgcHJvcGVydHkgbmFtZXNcbiAgaWYgKHByZWZpeEluZm8uYWx0ZXJuYXRpdmVQcm9wZXJ0aWVzICYmIHByZWZpeEluZm8uYWx0ZXJuYXRpdmVQcm9wZXJ0aWVzW3Byb3BlcnR5XSkge1xuICAgIHBvc3NpYmxlUHJvcGVydHlOYW1lcyA9IHBvc3NpYmxlUHJvcGVydHlOYW1lcy5jb25jYXQocHJlZml4SW5mby5hbHRlcm5hdGl2ZVByb3BlcnRpZXNbcHJvcGVydHldKTtcbiAgfVxuXG4gIHZhciB3b3JraW5nUHJvcGVydHkgPSBhcnJheUZpbmQocG9zc2libGVQcm9wZXJ0eU5hbWVzLCBmdW5jdGlvbiAocG9zc2libGVQcm9wZXJ0eU5hbWUpIHtcbiAgICBpZiAocG9zc2libGVQcm9wZXJ0eU5hbWUuanMgaW4gZG9tU3R5bGUpIHtcbiAgICAgIHJldHVybiBwb3NzaWJsZVByb3BlcnR5TmFtZTtcbiAgICB9XG4gIH0pIHx8IGZhbHNlO1xuXG4gIHJldHVybiBwcmVmaXhlZFByb3BlcnR5Q2FjaGVbcHJvcGVydHldID0gd29ya2luZ1Byb3BlcnR5O1xufTtcblxuLy8gUmVhY3QgaXMgcGxhbm5pbmcgdG8gZGVwcmVjYXRlIGFkZGluZyBweCBhdXRvbWF0aWNhbGx5XG4vLyAoaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2lzc3Vlcy8xODczKSwgYW5kIGlmIHRoZXkgZG8sIHRoaXNcbi8vIHNob3VsZCBjaGFuZ2UgdG8gYSB3YXJuaW5nIG9yIGJlIHJlbW92ZWQgaW4gZmF2b3Igb2YgUmVhY3QncyB3YXJuaW5nLlxuLy8gU2FtZSBnb2VzIGZvciBiZWxvdy5cbnZhciBfYWRkUGl4ZWxTdWZmaXhUb1ZhbHVlSWZOZWVkZWQgPSBmdW5jdGlvbiBfYWRkUGl4ZWxTdWZmaXhUb1ZhbHVlSWZOZWVkZWQob3JpZ2luYWxQcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHZhbHVlICE9PSAwICYmICFpc05hTih2YWx1ZSkgJiYgIWlzVW5pdGxlc3NOdW1iZXJbb3JpZ2luYWxQcm9wZXJ0eV0pIHtcbiAgICByZXR1cm4gdmFsdWUgKyAncHgnO1xuICB9XG4gIHJldHVybiB2YWx1ZTtcbn07XG5cbnZhciBfZ2V0UHJlZml4ZWRWYWx1ZSA9IGZ1bmN0aW9uIF9nZXRQcmVmaXhlZFZhbHVlKHByb3BlcnR5LCB2YWx1ZSwgb3JpZ2luYWxQcm9wZXJ0eSkge1xuICBpZiAoIUFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgLy8gZG9uJ3QgdGVzdCBudW1iZXJzIChwdXJlIG9yIHN0cmluZ3kpLCBidXQgZG8gYWRkICdweCcgcHJlZml4IGlmIG5lZWRlZFxuICAgIGlmICghaXNOYU4odmFsdWUpKSB7XG4gICAgICByZXR1cm4gX2FkZFBpeGVsU3VmZml4VG9WYWx1ZUlmTmVlZGVkKG9yaWdpbmFsUHJvcGVydHksIHZhbHVlKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAnc3RyaW5nJykge1xuICAgICAgdmFsdWUgPSB2YWx1ZS50b1N0cmluZygpO1xuICAgIH1cblxuICAgIC8vIGRvbid0IHRlc3QgbnVtYmVycyB3aXRoIHVuaXRzIChlLmcuIDEwZW0pXG4gICAgaWYgKCFpc05hTihwYXJzZUludCh2YWx1ZSwgMTApKSkge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgfVxuXG4gIHZhciBjYWNoZUtleSA9IEFycmF5LmlzQXJyYXkodmFsdWUpID8gdmFsdWUuam9pbignIHx8ICcpIDogcHJvcGVydHkgKyB2YWx1ZTtcblxuICBpZiAocHJlZml4ZWRWYWx1ZUNhY2hlLmhhc093blByb3BlcnR5KGNhY2hlS2V5KSkge1xuICAgIHJldHVybiBwcmVmaXhlZFZhbHVlQ2FjaGVbY2FjaGVLZXldO1xuICB9XG5cbiAgdmFyIHBvc3NpYmxlVmFsdWVzO1xuICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAvLyBBZGQgcHggZm9yIHRoZSBzYW1lIHZhbHVlcyBSZWFjdCB3b3VsZCwgb3RoZXJ3aXNlIHRoZSB0ZXN0aW5nIGJlbG93IHdpbGxcbiAgICAvLyBmYWlsIGFuZCBpdCB3aWxsIHRyeSB0byBmYWxsYmFjay5cbiAgICBwb3NzaWJsZVZhbHVlcyA9IHZhbHVlLm1hcChmdW5jdGlvbiAodikge1xuICAgICAgcmV0dXJuIF9hZGRQaXhlbFN1ZmZpeFRvVmFsdWVJZk5lZWRlZChvcmlnaW5hbFByb3BlcnR5LCB2KTtcbiAgICB9KTtcblxuICAgIC8vIEFkZCBwcmVmaXhlZCB2ZXJzaW9uc1xuICAgIHBvc3NpYmxlVmFsdWVzID0gcG9zc2libGVWYWx1ZXMuY29uY2F0KHZhbHVlLmZpbHRlcihmdW5jdGlvbiAodikge1xuICAgICAgcmV0dXJuICFpc05hTih2KTtcbiAgICB9KSAvLyBEb24ndCBwcmVmaXggbnVtYmVyc1xuICAgIC5tYXAoZnVuY3Rpb24gKHYpIHtcbiAgICAgIHJldHVybiBwcmVmaXhJbmZvLmNzc1ByZWZpeCArIHY7XG4gICAgfSkpO1xuICB9IGVsc2Uge1xuICAgIHBvc3NpYmxlVmFsdWVzID0gW1xuICAgIC8vIFVucHJlZml4ZWRcbiAgICB2YWx1ZSxcbiAgICAvLyBQcmVmaXhlZFxuICAgIHByZWZpeEluZm8uY3NzUHJlZml4ICsgdmFsdWVdO1xuICB9XG5cbiAgLy8gQWx0ZXJuYXRpdmUgdmFsdWVzXG4gIGlmIChwcmVmaXhJbmZvLmFsdGVybmF0aXZlVmFsdWVzICYmIHByZWZpeEluZm8uYWx0ZXJuYXRpdmVWYWx1ZXNbb3JpZ2luYWxQcm9wZXJ0eV0gJiYgcHJlZml4SW5mby5hbHRlcm5hdGl2ZVZhbHVlc1tvcmlnaW5hbFByb3BlcnR5XVt2YWx1ZV0pIHtcbiAgICBwb3NzaWJsZVZhbHVlcyA9IHBvc3NpYmxlVmFsdWVzLmNvbmNhdChwcmVmaXhJbmZvLmFsdGVybmF0aXZlVmFsdWVzW29yaWdpbmFsUHJvcGVydHldW3ZhbHVlXSk7XG4gIH1cblxuICAvLyBUZXN0IHBvc3NpYmxlIHZhbHVlIGluIG9yZGVyXG4gIHZhciB3b3JraW5nVmFsdWUgPSBhcnJheUZpbmQocG9zc2libGVWYWx1ZXMsIGZ1bmN0aW9uIChwb3NzaWJsZVZhbHVlKSB7XG4gICAgZG9tU3R5bGVbcHJvcGVydHldID0gJyc7XG4gICAgZG9tU3R5bGVbcHJvcGVydHldID0gcG9zc2libGVWYWx1ZTtcblxuICAgIC8vIE5vdGUgdGhhdCB3ZSBqdXN0IG1ha2Ugc3VyZSBpdCBpcyBub3QgYW4gZW1wdHkgc3RyaW5nLiBCcm93c2VycyB3aWxsXG4gICAgLy8gc29tZXRpbWVzIHJld3JpdGUgdmFsdWVzLCBidXQgc3RpbGwgYWNjZXB0IHRoZW0uIFRoZXkgd2lsbCBzZXQgdGhlIHZhbHVlXG4gICAgLy8gdG8gYW4gZW1wdHkgc3RyaW5nIGlmIG5vdCBzdXBwb3J0ZWQuXG4gICAgLy8gRS5nLiBmb3IgYm9yZGVyLCBcInNvbGlkIDFweCBibGFja1wiIGJlY29tZXMgXCIxcHggc29saWQgYmxhY2tcIlxuICAgIC8vICAgICAgYnV0IFwiZm9vYmFyXCIgYmVjb21lcyBcIlwiLCBzaW5jZSBpdCBpcyBub3Qgc3VwcG9ydGVkLlxuICAgIHJldHVybiAhIWRvbVN0eWxlW3Byb3BlcnR5XTtcbiAgfSk7XG5cbiAgaWYgKHdvcmtpbmdWYWx1ZSkge1xuICAgIHByZWZpeGVkVmFsdWVDYWNoZVtjYWNoZUtleV0gPSB3b3JraW5nVmFsdWU7XG4gIH0gZWxzZSB7XG4gICAgLy8gVW5zdXBwb3J0ZWQsIGFzc3VtZSB1bnByZWZpeGVkIHdvcmtzLCBidXQgd2FyblxuICAgIHByZWZpeGVkVmFsdWVDYWNoZVtjYWNoZUtleV0gPSB2YWx1ZTtcblxuICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbiAgICBpZiAoY29uc29sZSAmJiBjb25zb2xlLndhcm4pIHtcbiAgICAgIGNvbnNvbGUud2FybignVW5zdXBwb3J0ZWQgQ1NTIHZhbHVlIFwiJyArIHZhbHVlICsgJ1wiIGZvciBwcm9wZXJ0eSBcIicgKyBwcm9wZXJ0eSArICdcIicpO1xuICAgIH1cbiAgICAvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbnNvbGUgKi9cbiAgfVxuXG4gIHJldHVybiBwcmVmaXhlZFZhbHVlQ2FjaGVbY2FjaGVLZXldO1xufTtcblxuLy8gUmV0dXJucyBhIG5ldyBzdHlsZSBvYmplY3Qgd2l0aCB2ZW5kb3IgcHJlZml4ZXMgYWRkZWQgdG8gcHJvcGVydHkgbmFtZXNcbi8vIGFuZCB2YWx1ZXMuXG52YXIgZ2V0UHJlZml4ZWRTdHlsZSA9IGZ1bmN0aW9uIGdldFByZWZpeGVkU3R5bGUoc3R5bGUsIG1vZGUgLyogJ2Nzcycgb3IgJ2pzJyAqLykge1xuICBtb2RlID0gbW9kZSB8fCAnanMnO1xuXG4gIGlmICghRXhlY3V0aW9uRW52aXJvbm1lbnQuY2FuVXNlRE9NKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHN0eWxlKS5yZWR1Y2UoZnVuY3Rpb24gKG5ld1N0eWxlLCBrZXkpIHtcbiAgICAgIHZhciB2YWx1ZSA9IHN0eWxlW2tleV07XG4gICAgICB2YXIgbmV3S2V5ID0gbW9kZSA9PT0gJ2NzcycgPyBfY2FtZWxDYXNlVG9EYXNoQ2FzZShrZXkpIDoga2V5O1xuICAgICAgdmFyIG5ld1ZhbHVlID0gQXJyYXkuaXNBcnJheSh2YWx1ZSkgPyB2YWx1ZVswXSA6IHZhbHVlO1xuICAgICAgbmV3U3R5bGVbbmV3S2V5XSA9IG5ld1ZhbHVlO1xuICAgICAgcmV0dXJuIG5ld1N0eWxlO1xuICAgIH0sIHt9KTtcbiAgfVxuXG4gIHZhciBwcmVmaXhlZFN0eWxlID0ge307XG4gIE9iamVjdC5rZXlzKHN0eWxlKS5mb3JFYWNoKGZ1bmN0aW9uIChwcm9wZXJ0eSkge1xuICAgIHZhciB2YWx1ZSA9IHN0eWxlW3Byb3BlcnR5XTtcblxuICAgIHZhciBuZXdQcm9wZXJ0eSA9IGdldFByZWZpeGVkUHJvcGVydHlOYW1lKHByb3BlcnR5KTtcbiAgICBpZiAobmV3UHJvcGVydHkgPT09IGZhbHNlKSB7XG4gICAgICAvLyBJZ25vcmUgdW5zdXBwb3J0ZWQgcHJvcGVydGllc1xuICAgICAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqL1xuICAgICAgaWYgKGNvbnNvbGUgJiYgY29uc29sZS53YXJuKSB7XG4gICAgICAgIGNvbnNvbGUud2FybignVW5zdXBwb3J0ZWQgQ1NTIHByb3BlcnR5IFwiJyArIHByb3BlcnR5ICsgJ1wiJyk7XG4gICAgICB9XG4gICAgICAvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbnNvbGUgKi9cbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgbmV3VmFsdWUgPSBfZ2V0UHJlZml4ZWRWYWx1ZShuZXdQcm9wZXJ0eS5qcywgdmFsdWUsIHByb3BlcnR5KTtcblxuICAgIHByZWZpeGVkU3R5bGVbbmV3UHJvcGVydHlbbW9kZV1dID0gbmV3VmFsdWU7XG4gIH0pO1xuICByZXR1cm4gcHJlZml4ZWRTdHlsZTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXRQcmVmaXhlZFByb3BlcnR5TmFtZTogZ2V0UHJlZml4ZWRQcm9wZXJ0eU5hbWUsXG4gIGdldFByZWZpeGVkU3R5bGU6IGdldFByZWZpeGVkU3R5bGUsXG4gIGNzc1ByZWZpeDogcHJlZml4SW5mby5jc3NQcmVmaXgsXG4gIGpzUHJlZml4OiBwcmVmaXhJbmZvLmpzUHJlZml4XG59OyIsIi8qIEBmbG93ICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIE1vdXNlVXBMaXN0ZW5lciA9IHJlcXVpcmUoJy4vbW91c2UtdXAtbGlzdGVuZXInKTtcbnZhciBnZXRTdGF0ZSA9IHJlcXVpcmUoJy4vZ2V0LXN0YXRlJyk7XG52YXIgUHJlZml4ZXIgPSByZXF1aXJlKCcuL3ByZWZpeGVyJyk7XG52YXIgQ29uZmlnID0gcmVxdWlyZSgnLi9jb25maWcnKTtcblxudmFyIEV4ZWN1dGlvbkVudmlyb25tZW50ID0gcmVxdWlyZSgnZXhlbnYnKTtcbnZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93LlJlYWN0IDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbC5SZWFjdCA6IG51bGwpO1xudmFyIG9iamVjdEFzc2lnbiA9IHJlcXVpcmUoJ29iamVjdC1hc3NpZ24nKTtcblxuLy8gYmFiZWwtZXNsaW50IDMuMS43IGZhaWxzIGhlcmUgZm9yIHNvbWUgcmVhc29uLCBlcnJvcjpcbi8vICAgMDowICBlcnJvciAgQ2Fubm90IGNhbGwgbWV0aG9kICdpc1NlcXVlbmNlRXhwcmVzc2lvbicgb2YgdW5kZWZpbmVkXG4vL1xuLy8gZGVjbGFyZSBjbGFzcyBSYWRpdW1Db21wb25lbnQgZXh0ZW5kcyBSZWFjdENvbXBvbmVudCB7XG4vLyAgIF9sYXN0TW91c2VEb3duOiBudW1iZXIsXG4vLyAgIF9yYWRpdW1NZWRpYVF1ZXJ5TGlzdGVuZXJzQnlRdWVyeTogT2JqZWN0PHN0cmluZywge3JlbW92ZTogKCkgPT4gdm9pZH0+LFxuLy8gICBfcmFkaXVtTW91c2VVcExpc3RlbmVyOiB7cmVtb3ZlOiAoKSA9PiB2b2lkfSxcbi8vIH1cblxudmFyIG1lZGlhUXVlcnlMaXN0QnlRdWVyeVN0cmluZyA9IHt9O1xuXG52YXIgX2lzU3BlY2lhbEtleSA9IGZ1bmN0aW9uIF9pc1NwZWNpYWxLZXkoa2V5KSB7XG4gIHJldHVybiBrZXlbMF0gPT09ICc6JyB8fCBrZXlbMF0gPT09ICdAJztcbn07XG5cbnZhciBfZ2V0U3R5bGVTdGF0ZSA9IGZ1bmN0aW9uIF9nZXRTdHlsZVN0YXRlKGNvbXBvbmVudCwga2V5LCB2YWx1ZSkge1xuICByZXR1cm4gZ2V0U3RhdGUoY29tcG9uZW50LnN0YXRlLCBrZXksIHZhbHVlKTtcbn07XG5cbnZhciBfc2V0U3R5bGVTdGF0ZSA9IGZ1bmN0aW9uIF9zZXRTdHlsZVN0YXRlKGNvbXBvbmVudCwga2V5LCBuZXdTdGF0ZSkge1xuICB2YXIgZXhpc3RpbmcgPSBjb21wb25lbnQuc3RhdGUgJiYgY29tcG9uZW50LnN0YXRlLl9yYWRpdW1TdHlsZVN0YXRlIHx8IHt9O1xuICB2YXIgc3RhdGUgPSB7IF9yYWRpdW1TdHlsZVN0YXRlOiBvYmplY3RBc3NpZ24oe30sIGV4aXN0aW5nKSB9O1xuICBzdGF0ZS5fcmFkaXVtU3R5bGVTdGF0ZVtrZXldID0gc3RhdGUuX3JhZGl1bVN0eWxlU3RhdGVba2V5XSB8fCB7fTtcbiAgb2JqZWN0QXNzaWduKHN0YXRlLl9yYWRpdW1TdHlsZVN0YXRlW2tleV0sIG5ld1N0YXRlKTtcbiAgY29tcG9uZW50LnNldFN0YXRlKHN0YXRlKTtcbn07XG5cbi8vIE1lcmdlIHN0eWxlIG9iamVjdHMuIFNwZWNpYWwgY2FzaW5nIGZvciBwcm9wcyBzdGFydGluZyB3aXRoICc7JzsgdGhlIHZhbHVlc1xuLy8gc2hvdWxkIGJlIG9iamVjdHMsIGFuZCBhcmUgbWVyZ2VkIHdpdGggb3RoZXJzIG9mIHRoZSBzYW1lIG5hbWUgKGluc3RlYWQgb2Zcbi8vIG92ZXJ3cml0aW5nKS5cbnZhciBfbWVyZ2VTdHlsZXMgPSBmdW5jdGlvbiBfbWVyZ2VTdHlsZXMoc3R5bGVzKSB7XG4gIHZhciByZXN1bHQgPSB7fTtcblxuICBzdHlsZXMuZm9yRWFjaChmdW5jdGlvbiAoc3R5bGUpIHtcbiAgICBpZiAoIXN0eWxlIHx8IHR5cGVvZiBzdHlsZSAhPT0gJ29iamVjdCcgfHwgQXJyYXkuaXNBcnJheShzdHlsZSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBPYmplY3Qua2V5cyhzdHlsZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICBpZiAoX2lzU3BlY2lhbEtleShrZXkpICYmIHJlc3VsdFtrZXldKSB7XG4gICAgICAgIHJlc3VsdFtrZXldID0gX21lcmdlU3R5bGVzKFtyZXN1bHRba2V5XSwgc3R5bGVba2V5XV0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzdWx0W2tleV0gPSBzdHlsZVtrZXldO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcblxuICByZXR1cm4gcmVzdWx0O1xufTtcblxudmFyIF9tb3VzZVVwID0gZnVuY3Rpb24gX21vdXNlVXAoY29tcG9uZW50KSB7XG4gIE9iamVjdC5rZXlzKGNvbXBvbmVudC5zdGF0ZS5fcmFkaXVtU3R5bGVTdGF0ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgaWYgKF9nZXRTdHlsZVN0YXRlKGNvbXBvbmVudCwga2V5LCAnOmFjdGl2ZScpKSB7XG4gICAgICBfc2V0U3R5bGVTdGF0ZShjb21wb25lbnQsIGtleSwgeyAnOmFjdGl2ZSc6IGZhbHNlIH0pO1xuICAgIH1cbiAgfSk7XG59O1xuXG52YXIgX29uTWVkaWFRdWVyeUNoYW5nZSA9IGZ1bmN0aW9uIF9vbk1lZGlhUXVlcnlDaGFuZ2UoY29tcG9uZW50LCBxdWVyeSwgbWVkaWFRdWVyeUxpc3QpIHtcbiAgdmFyIHN0YXRlID0ge307XG4gIHN0YXRlW3F1ZXJ5XSA9IG1lZGlhUXVlcnlMaXN0Lm1hdGNoZXM7XG4gIF9zZXRTdHlsZVN0YXRlKGNvbXBvbmVudCwgJ19hbGwnLCBzdGF0ZSk7XG59O1xuXG52YXIgX3Jlc29sdmVNZWRpYVF1ZXJ5U3R5bGVzID0gZnVuY3Rpb24gX3Jlc29sdmVNZWRpYVF1ZXJ5U3R5bGVzKGNvbXBvbmVudCwgc3R5bGUpIHtcbiAgaWYgKCFDb25maWcuY2FuTWF0Y2hNZWRpYSgpKSB7XG4gICAgcmV0dXJuIHN0eWxlO1xuICB9XG5cbiAgT2JqZWN0LmtleXMoc3R5bGUpLmZpbHRlcihmdW5jdGlvbiAobmFtZSkge1xuICAgIHJldHVybiBuYW1lWzBdID09PSAnQCc7XG4gIH0pLm1hcChmdW5jdGlvbiAocXVlcnkpIHtcbiAgICB2YXIgbWVkaWFRdWVyeVN0eWxlcyA9IHN0eWxlW3F1ZXJ5XTtcbiAgICBxdWVyeSA9IHF1ZXJ5LnJlcGxhY2UoJ0BtZWRpYSAnLCAnJyk7XG5cbiAgICAvLyBDcmVhdGUgYSBnbG9iYWwgTWVkaWFRdWVyeUxpc3QgaWYgb25lIGRvZXNuJ3QgYWxyZWFkeSBleGlzdFxuICAgIHZhciBtcWwgPSBtZWRpYVF1ZXJ5TGlzdEJ5UXVlcnlTdHJpbmdbcXVlcnldO1xuICAgIGlmICghbXFsKSB7XG4gICAgICBtZWRpYVF1ZXJ5TGlzdEJ5UXVlcnlTdHJpbmdbcXVlcnldID0gbXFsID0gQ29uZmlnLm1hdGNoTWVkaWEocXVlcnkpO1xuICAgIH1cblxuICAgIC8vIEtlZXAgdHJhY2sgb2Ygd2hpY2gga2V5cyBhbHJlYWR5IGhhdmUgbGlzdGVuZXJzXG4gICAgaWYgKCFjb21wb25lbnQuX3JhZGl1bU1lZGlhUXVlcnlMaXN0ZW5lcnNCeVF1ZXJ5KSB7XG4gICAgICBjb21wb25lbnQuX3JhZGl1bU1lZGlhUXVlcnlMaXN0ZW5lcnNCeVF1ZXJ5ID0ge307XG4gICAgfVxuXG4gICAgaWYgKCFjb21wb25lbnQuX3JhZGl1bU1lZGlhUXVlcnlMaXN0ZW5lcnNCeVF1ZXJ5W3F1ZXJ5XSkge1xuICAgICAgdmFyIGxpc3RlbmVyID0gX29uTWVkaWFRdWVyeUNoYW5nZS5iaW5kKG51bGwsIGNvbXBvbmVudCwgcXVlcnkpO1xuICAgICAgbXFsLmFkZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICAgIGNvbXBvbmVudC5fcmFkaXVtTWVkaWFRdWVyeUxpc3RlbmVyc0J5UXVlcnlbcXVlcnldID0ge1xuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgICAgICBtcWwucmVtb3ZlTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cblxuICAgIC8vIEFwcGx5IG1lZGlhIHF1ZXJ5IHN0YXRlc1xuICAgIGlmIChtcWwubWF0Y2hlcykge1xuICAgICAgc3R5bGUgPSBfbWVyZ2VTdHlsZXMoW3N0eWxlLCBtZWRpYVF1ZXJ5U3R5bGVzXSk7XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gc3R5bGU7XG59O1xuXG4vL1xuLy8gVGhlIG51Y2xldXMgb2YgUmFkaXVtLiByZXNvbHZlU3R5bGVzIGlzIGNhbGxlZCBvbiB0aGUgcmVuZGVyZWQgZWxlbWVudHNcbi8vIGJlZm9yZSB0aGV5IGFyZSByZXR1cm5lZCBpbiByZW5kZXIuIEl0IGl0ZXJhdGVzIG92ZXIgdGhlIGVsZW1lbnRzIGFuZFxuLy8gY2hpbGRyZW4sIHJld3JpdGluZyBwcm9wcyB0byBhZGQgZXZlbnQgaGFuZGxlcnMgcmVxdWlyZWQgdG8gY2FwdHVyZSB1c2VyXG4vLyBpbnRlcmFjdGlvbnMgKGUuZy4gbW91c2Ugb3ZlcikuIEl0IGFsc28gcmVwbGFjZXMgdGhlIHN0eWxlIHByb3AgYmVjYXVzZSBpdFxuLy8gYWRkcyBpbiB0aGUgdmFyaW91cyBpbnRlcmFjdGlvbiBzdHlsZXMgKGUuZy4gOmhvdmVyKS5cbi8vXG52YXIgcmVzb2x2ZVN0eWxlcyA9IGZ1bmN0aW9uIHJlc29sdmVTdHlsZXMoY29tcG9uZW50LCAvLyBSZWFjdENvbXBvbmVudCwgZmxvdytlc2xpbnQgY29tcGxhaW5pbmdcbnJlbmRlcmVkRWxlbWVudCwgLy8gUmVhY3RFbGVtZW50XG5leGlzdGluZ0tleU1hcCkge1xuICAvLyBSZWFjdEVsZW1lbnRcbiAgZXhpc3RpbmdLZXlNYXAgPSBleGlzdGluZ0tleU1hcCB8fCB7fTtcblxuICBpZiAoIXJlbmRlcmVkRWxlbWVudCkge1xuICAgIHJldHVybiByZW5kZXJlZEVsZW1lbnQ7XG4gIH1cblxuICAvLyBSZWN1cnNlIG92ZXIgY2hpbGRyZW4gZmlyc3QgaW4gY2FzZSB3ZSBiYWlsIGVhcmx5LiBOb3RlIHRoYXQgY2hpbGRyZW4gb25seVxuICAvLyBpbmNsdWRlIHRob3NlIHJlbmRlcmVkIGluIGB0aGlzYCBjb21wb25lbnQuIENoaWxkIG5vZGVzIGluIG90aGVyIGNvbXBvbmVudHNcbiAgLy8gd2lsbCBub3QgYmUgaGVyZSwgc28gZWFjaCBjb21wb25lbnQgbmVlZHMgdG8gdXNlIFJhZGl1bS5cbiAgdmFyIG5ld0NoaWxkcmVuID0gbnVsbDtcbiAgdmFyIG9sZENoaWxkcmVuID0gcmVuZGVyZWRFbGVtZW50LnByb3BzLmNoaWxkcmVuO1xuICBpZiAob2xkQ2hpbGRyZW4pIHtcbiAgICB2YXIgY2hpbGRyZW5UeXBlID0gdHlwZW9mIG9sZENoaWxkcmVuO1xuICAgIGlmIChjaGlsZHJlblR5cGUgPT09ICdzdHJpbmcnIHx8IGNoaWxkcmVuVHlwZSA9PT0gJ251bWJlcicpIHtcbiAgICAgIC8vIERvbid0IGRvIGFueXRoaW5nIHdpdGggYSBzaW5nbGUgcHJpbWl0aXZlIGNoaWxkXG4gICAgICBuZXdDaGlsZHJlbiA9IG9sZENoaWxkcmVuO1xuICAgIH0gZWxzZSBpZiAoUmVhY3QuQ2hpbGRyZW4uY291bnQob2xkQ2hpbGRyZW4pID09PSAxICYmIG9sZENoaWxkcmVuLnR5cGUpIHtcbiAgICAgIC8vIElmIGEgUmVhY3QgRWxlbWVudCBpcyBhbiBvbmx5IGNoaWxkLCBkb24ndCB3cmFwIGl0IGluIGFuIGFycmF5IGZvclxuICAgICAgLy8gUmVhY3QuQ2hpbGRyZW4ubWFwKCkgZm9yIFJlYWN0LkNoaWxkcmVuLm9ubHkoKSBjb21wYXRpYmlsaXR5LlxuICAgICAgdmFyIG9ubHlDaGlsZCA9IFJlYWN0LkNoaWxkcmVuLm9ubHkob2xkQ2hpbGRyZW4pO1xuICAgICAgbmV3Q2hpbGRyZW4gPSByZXNvbHZlU3R5bGVzKGNvbXBvbmVudCwgb25seUNoaWxkLCBleGlzdGluZ0tleU1hcCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG5ld0NoaWxkcmVuID0gUmVhY3QuQ2hpbGRyZW4ubWFwKG9sZENoaWxkcmVuLCBmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICAgICAgaWYgKFJlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkKSkge1xuICAgICAgICAgIHJldHVybiByZXNvbHZlU3R5bGVzKGNvbXBvbmVudCwgY2hpbGQsIGV4aXN0aW5nS2V5TWFwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBjaGlsZDtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIC8vIEJhaWwgZWFybHkgaWYgZWxlbWVudCBpcyBub3QgYSBzaW1wbGUgUmVhY3RET01FbGVtZW50LlxuICBpZiAoIVJlYWN0LmlzVmFsaWRFbGVtZW50KHJlbmRlcmVkRWxlbWVudCkgfHwgdHlwZW9mIHJlbmRlcmVkRWxlbWVudC50eXBlICE9PSAnc3RyaW5nJykge1xuICAgIGlmIChvbGRDaGlsZHJlbiA9PT0gbmV3Q2hpbGRyZW4pIHtcbiAgICAgIHJldHVybiByZW5kZXJlZEVsZW1lbnQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNsb25lRWxlbWVudChyZW5kZXJlZEVsZW1lbnQsIHJlbmRlcmVkRWxlbWVudC5wcm9wcywgbmV3Q2hpbGRyZW4pO1xuICB9XG5cbiAgdmFyIHByb3BzID0gcmVuZGVyZWRFbGVtZW50LnByb3BzO1xuICB2YXIgc3R5bGUgPSBwcm9wcy5zdHlsZTtcbiAgdmFyIG5ld1Byb3BzID0ge307XG5cbiAgLy8gQ29udmVuaWVudCBzeW50YXggZm9yIG11bHRpcGxlIHN0eWxlczogYHN0eWxlPXtbc3R5bGUxLCBzdHlsZTIsIGV0Y119YFxuICAvLyBJZ25vcmVzIG5vbi1vYmplY3RzLCBzbyB5b3UgY2FuIGRvIGB0aGlzLnN0YXRlLmlzQ29vbCAmJiBzdHlsZXMuY29vbGAuXG4gIGlmIChBcnJheS5pc0FycmF5KHN0eWxlKSkge1xuICAgIHN0eWxlID0gX21lcmdlU3R5bGVzKHN0eWxlKTtcbiAgfVxuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gV2FybiBpZiB5b3UgdXNlIGxvbmdoYW5kIGFuZCBzaG9ydGhhbmQgcHJvcGVydGllcyBpbiB0aGUgc2FtZSBzdHlsZVxuICAgIC8vIG9iamVjdC5cbiAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9DU1MvU2hvcnRoYW5kX3Byb3BlcnRpZXNcblxuICAgIHZhciBzaG9ydGhhbmRQcm9wcyA9IFsnYmFja2dyb3VuZCcsICdib3JkZXInLCAnYm9yZGVyQm90dG9tJywgJ2JvcmRlckNvbG9yJywgJ2JvcmRlckxlZnQnLCAnYm9yZGVyUmFkaXVzJywgJ2JvcmRlclJpZ2h0JywgJ2JvcmRlclN0eWxlJywgJ2JvcmRlclRvcCcsICdib3JkZXJXaWR0aCcsICdmb250JywgJ2xpc3RTdHlsZScsICdtYXJnaW4nLCAncGFkZGluZycsICd0cmFuc2Zvcm0nLCAndHJhbnNpdGlvbiddO1xuXG4gICAgdmFyIGNoZWNrUHJvcHMgPSBmdW5jdGlvbiBjaGVja1Byb3BzKHMpIHtcbiAgICAgIGlmICh0eXBlb2YgcyAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHMpO1xuICAgICAgc2hvcnRoYW5kUHJvcHMuZm9yRWFjaChmdW5jdGlvbiAoc2hvcnRoYW5kKSB7XG4gICAgICAgIGlmIChzW3Nob3J0aGFuZF0gJiYga2V5cy5zb21lKGZ1bmN0aW9uIChrKSB7XG4gICAgICAgICAgcmV0dXJuIGsgIT09IHNob3J0aGFuZCAmJiBrLmluZGV4T2Yoc2hvcnRoYW5kKSA9PT0gMDtcbiAgICAgICAgfSkpIHtcbiAgICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovXG4gICAgICAgICAgY29uc29sZS53YXJuKCdSYWRpdW06IHByb3BlcnR5IFwiJyArIHNob3J0aGFuZCArICdcIiBpbiBzdHlsZSBvYmplY3QnLCBzdHlsZSwgJzogZG8gbm90IG1peCBsb25naGFuZCBhbmQgJyArICdzaG9ydGhhbmQgcHJvcGVydGllcyBpbiB0aGUgc2FtZSBzdHlsZSBvYmplY3QuIFNlZSAnICsgJ2h0dHBzOi8vZ2l0aHViLmNvbS9Gb3JtaWRhYmxlTGFicy9yYWRpdW0vaXNzdWVzLzk1IGZvciBtb3JlICcgKyAnaW5mb3JtYXRpb24uJyk7XG4gICAgICAgICAgLyogZXNsaW50LWVuYWJsZSBuby1jb25zb2xlICovXG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBrZXlzLmZvckVhY2goZnVuY3Rpb24gKGspIHtcbiAgICAgICAgcmV0dXJuIGNoZWNrUHJvcHMoc1trXSk7XG4gICAgICB9KTtcbiAgICB9O1xuICAgIGNoZWNrUHJvcHMoc3R5bGUpO1xuICB9XG5cbiAgLy8gQmFpbCBlYXJseSBpZiBubyBpbnRlcmFjdGl2ZSBzdHlsZXMuXG4gIGlmICghc3R5bGUgfHwgIU9iamVjdC5rZXlzKHN0eWxlKS5zb21lKF9pc1NwZWNpYWxLZXkpKSB7XG4gICAgaWYgKHN0eWxlKSB7XG4gICAgICAvLyBTdGlsbCBwZXJmb3JtIHZlbmRvciBwcmVmaXhpbmcsIHRob3VnaC5cbiAgICAgIG5ld1Byb3BzLnN0eWxlID0gUHJlZml4ZXIuZ2V0UHJlZml4ZWRTdHlsZShzdHlsZSk7XG4gICAgICByZXR1cm4gUmVhY3QuY2xvbmVFbGVtZW50KHJlbmRlcmVkRWxlbWVudCwgbmV3UHJvcHMsIG5ld0NoaWxkcmVuKTtcbiAgICB9IGVsc2UgaWYgKG5ld0NoaWxkcmVuKSB7XG4gICAgICByZXR1cm4gUmVhY3QuY2xvbmVFbGVtZW50KHJlbmRlcmVkRWxlbWVudCwge30sIG5ld0NoaWxkcmVuKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVuZGVyZWRFbGVtZW50O1xuICB9XG5cbiAgLy8gV2UgbmVlZCBhIHVuaXF1ZSBrZXkgdG8gY29ycmVsYXRlIHN0YXRlIGNoYW5nZXMgZHVlIHRvIHVzZXIgaW50ZXJhY3Rpb25cbiAgLy8gd2l0aCB0aGUgcmVuZGVyZWQgZWxlbWVudCwgc28gd2Uga25vdyB0byBhcHBseSB0aGUgcHJvcGVyIGludGVyYWN0aXZlXG4gIC8vIHN0eWxlcy5cbiAgdmFyIG9yaWdpbmFsS2V5ID0gcmVuZGVyZWRFbGVtZW50LnJlZiB8fCByZW5kZXJlZEVsZW1lbnQua2V5O1xuICB2YXIga2V5ID0gb3JpZ2luYWxLZXkgfHwgJ21haW4nO1xuXG4gIGlmIChleGlzdGluZ0tleU1hcFtrZXldKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdSYWRpdW0gcmVxdWlyZXMgZWFjaCBlbGVtZW50IHdpdGggaW50ZXJhY3RpdmUgc3R5bGVzIHRvIGhhdmUgYSB1bmlxdWUgJyArICdrZXksIHNldCB1c2luZyBlaXRoZXIgdGhlIHJlZiBvciBrZXkgcHJvcC4gJyArIChvcmlnaW5hbEtleSA/ICdLZXkgXCInICsgb3JpZ2luYWxLZXkgKyAnXCIgaXMgYSBkdXBsaWNhdGUuJyA6ICdNdWx0aXBsZSBlbGVtZW50cyBoYXZlIG5vIGtleSBzcGVjaWZpZWQuJykpO1xuICB9XG5cbiAgZXhpc3RpbmdLZXlNYXBba2V5XSA9IHRydWU7XG5cbiAgLy8gTWVkaWEgcXVlcmllcyBjYW4gY29udGFpbiBwc2V1ZG8gc3R5bGVzLCBsaWtlIDpob3ZlclxuICBzdHlsZSA9IF9yZXNvbHZlTWVkaWFRdWVyeVN0eWxlcyhjb21wb25lbnQsIHN0eWxlKTtcblxuICB2YXIgbmV3U3R5bGUgPSB7fTtcbiAgT2JqZWN0LmtleXMoc3R5bGUpLmZvckVhY2goZnVuY3Rpb24gKHN0eWxlS2V5KSB7XG4gICAgaWYgKCFfaXNTcGVjaWFsS2V5KHN0eWxlS2V5KSkge1xuICAgICAgbmV3U3R5bGVbc3R5bGVLZXldID0gc3R5bGVbc3R5bGVLZXldO1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gT25seSBhZGQgaGFuZGxlcnMgaWYgbmVjZXNzYXJ5XG4gIGlmIChzdHlsZVsnOmhvdmVyJ10gfHwgc3R5bGVbJzphY3RpdmUnXSkge1xuICAgIC8vIEFsd2F5cyBjYWxsIHRoZSBleGlzdGluZyBoYW5kbGVyIGlmIG9uZSBpcyBhbHJlYWR5IGRlZmluZWQuXG4gICAgLy8gVGhpcyBjb2RlLCBhbmQgdGhlIHZlcnkgc2ltaWxhciBvbmVzIGJlbG93LCBjb3VsZCBiZSBhYnN0cmFjdGVkIGEgYml0XG4gICAgLy8gbW9yZSwgYnV0IGl0IGh1cnRzIHJlYWRhYmlsaXR5IElNTy5cbiAgICB2YXIgZXhpc3RpbmdPbk1vdXNlRW50ZXIgPSBwcm9wcy5vbk1vdXNlRW50ZXI7XG4gICAgbmV3UHJvcHMub25Nb3VzZUVudGVyID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgIGV4aXN0aW5nT25Nb3VzZUVudGVyICYmIGV4aXN0aW5nT25Nb3VzZUVudGVyKGUpO1xuICAgICAgX3NldFN0eWxlU3RhdGUoY29tcG9uZW50LCBrZXksIHsgJzpob3Zlcic6IHRydWUgfSk7XG4gICAgfTtcblxuICAgIHZhciBleGlzdGluZ09uTW91c2VMZWF2ZSA9IHByb3BzLm9uTW91c2VMZWF2ZTtcbiAgICBuZXdQcm9wcy5vbk1vdXNlTGVhdmUgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgZXhpc3RpbmdPbk1vdXNlTGVhdmUgJiYgZXhpc3RpbmdPbk1vdXNlTGVhdmUoZSk7XG4gICAgICBfc2V0U3R5bGVTdGF0ZShjb21wb25lbnQsIGtleSwgeyAnOmhvdmVyJzogZmFsc2UgfSk7XG4gICAgfTtcbiAgfVxuXG4gIGlmIChzdHlsZVsnOmFjdGl2ZSddKSB7XG4gICAgdmFyIGV4aXN0aW5nT25Nb3VzZURvd24gPSBwcm9wcy5vbk1vdXNlRG93bjtcbiAgICBuZXdQcm9wcy5vbk1vdXNlRG93biA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICBleGlzdGluZ09uTW91c2VEb3duICYmIGV4aXN0aW5nT25Nb3VzZURvd24oZSk7XG4gICAgICBjb21wb25lbnQuX2xhc3RNb3VzZURvd24gPSBEYXRlLm5vdygpO1xuICAgICAgX3NldFN0eWxlU3RhdGUoY29tcG9uZW50LCBrZXksIHsgJzphY3RpdmUnOiB0cnVlIH0pO1xuICAgIH07XG4gIH1cblxuICBpZiAoc3R5bGVbJzpmb2N1cyddKSB7XG4gICAgdmFyIGV4aXN0aW5nT25Gb2N1cyA9IHByb3BzLm9uRm9jdXM7XG4gICAgbmV3UHJvcHMub25Gb2N1cyA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICBleGlzdGluZ09uRm9jdXMgJiYgZXhpc3RpbmdPbkZvY3VzKGUpO1xuICAgICAgX3NldFN0eWxlU3RhdGUoY29tcG9uZW50LCBrZXksIHsgJzpmb2N1cyc6IHRydWUgfSk7XG4gICAgfTtcblxuICAgIHZhciBleGlzdGluZ09uQmx1ciA9IHByb3BzLm9uQmx1cjtcbiAgICBuZXdQcm9wcy5vbkJsdXIgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgZXhpc3RpbmdPbkJsdXIgJiYgZXhpc3RpbmdPbkJsdXIoZSk7XG4gICAgICBfc2V0U3R5bGVTdGF0ZShjb21wb25lbnQsIGtleSwgeyAnOmZvY3VzJzogZmFsc2UgfSk7XG4gICAgfTtcbiAgfVxuXG4gIC8vIE1lcmdlIHRoZSBzdHlsZXMgaW4gdGhlIG9yZGVyIHRoZXkgd2VyZSBkZWZpbmVkXG4gIHZhciBpbnRlcmFjdGlvblN0eWxlcyA9IE9iamVjdC5rZXlzKHN0eWxlKS5maWx0ZXIoZnVuY3Rpb24gKG5hbWUpIHtcbiAgICByZXR1cm4gbmFtZSA9PT0gJzphY3RpdmUnICYmIF9nZXRTdHlsZVN0YXRlKGNvbXBvbmVudCwga2V5LCAnOmFjdGl2ZScpIHx8IG5hbWUgPT09ICc6aG92ZXInICYmIF9nZXRTdHlsZVN0YXRlKGNvbXBvbmVudCwga2V5LCAnOmhvdmVyJykgfHwgbmFtZSA9PT0gJzpmb2N1cycgJiYgX2dldFN0eWxlU3RhdGUoY29tcG9uZW50LCBrZXksICc6Zm9jdXMnKTtcbiAgfSkubWFwKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgcmV0dXJuIHN0eWxlW25hbWVdO1xuICB9KTtcblxuICBpZiAoaW50ZXJhY3Rpb25TdHlsZXMubGVuZ3RoKSB7XG4gICAgbmV3U3R5bGUgPSBfbWVyZ2VTdHlsZXMoW25ld1N0eWxlXS5jb25jYXQoaW50ZXJhY3Rpb25TdHlsZXMpKTtcbiAgfVxuXG4gIGlmIChzdHlsZVsnOmFjdGl2ZSddICYmICFjb21wb25lbnQuX3JhZGl1bU1vdXNlVXBMaXN0ZW5lciAmJiBFeGVjdXRpb25FbnZpcm9ubWVudC5jYW5Vc2VFdmVudExpc3RlbmVycykge1xuICAgIGNvbXBvbmVudC5fcmFkaXVtTW91c2VVcExpc3RlbmVyID0gTW91c2VVcExpc3RlbmVyLnN1YnNjcmliZShfbW91c2VVcC5iaW5kKG51bGwsIGNvbXBvbmVudCkpO1xuICB9XG5cbiAgbmV3UHJvcHMuc3R5bGUgPSBQcmVmaXhlci5nZXRQcmVmaXhlZFN0eWxlKG5ld1N0eWxlKTtcblxuICByZXR1cm4gUmVhY3QuY2xvbmVFbGVtZW50KHJlbmRlcmVkRWxlbWVudCwgbmV3UHJvcHMsIG5ld0NoaWxkcmVuKTtcbn07XG5cbi8vIEV4cG9zaW5nIG1ldGhvZHMgZm9yIHRlc3RzIGlzIHVnbHksIGJ1dCB0aGUgYWx0ZXJuYXRpdmUsIHJlLXJlcXVpcmluZyB0aGVcbi8vIG1vZHVsZSBlYWNoIHRpbWUsIGlzIHRvbyBzbG93XG5yZXNvbHZlU3R5bGVzLl9fY2xlYXJTdGF0ZUZvclRlc3RzID0gZnVuY3Rpb24gKCkge1xuICBtZWRpYVF1ZXJ5TGlzdEJ5UXVlcnlTdHJpbmcgPSB7fTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gcmVzb2x2ZVN0eWxlczsiLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGZpbmQoYXJyYXksIHByZWRpY2F0ZSwgY29udGV4dCkge1xuICBpZiAodHlwZW9mIEFycmF5LnByb3RvdHlwZS5maW5kID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGFycmF5LmZpbmQocHJlZGljYXRlLCBjb250ZXh0KTtcbiAgfVxuXG4gIGNvbnRleHQgPSBjb250ZXh0IHx8IHRoaXM7XG4gIHZhciBsZW5ndGggPSBhcnJheS5sZW5ndGg7XG4gIHZhciBpO1xuXG4gIGlmICh0eXBlb2YgcHJlZGljYXRlICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihwcmVkaWNhdGUgKyAnIGlzIG5vdCBhIGZ1bmN0aW9uJyk7XG4gIH1cblxuICBmb3IgKGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICBpZiAocHJlZGljYXRlLmNhbGwoY29udGV4dCwgYXJyYXlbaV0sIGksIGFycmF5KSkge1xuICAgICAgcmV0dXJuIGFycmF5W2ldO1xuICAgIH1cbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZpbmQ7XG4iLCIvKiFcbiAgQ29weXJpZ2h0IChjKSAyMDE1IEplZCBXYXRzb24uXG4gIEJhc2VkIG9uIGNvZGUgdGhhdCBpcyBDb3B5cmlnaHQgMjAxMy0yMDE1LCBGYWNlYm9vaywgSW5jLlxuICBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKi9cblxuKGZ1bmN0aW9uICgpIHtcblx0J3VzZSBzdHJpY3QnO1xuXG5cdHZhciBjYW5Vc2VET00gPSAhIShcblx0XHR0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJlxuXHRcdHdpbmRvdy5kb2N1bWVudCAmJlxuXHRcdHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50XG5cdCk7XG5cblx0dmFyIEV4ZWN1dGlvbkVudmlyb25tZW50ID0ge1xuXG5cdFx0Y2FuVXNlRE9NOiBjYW5Vc2VET00sXG5cblx0XHRjYW5Vc2VXb3JrZXJzOiB0eXBlb2YgV29ya2VyICE9PSAndW5kZWZpbmVkJyxcblxuXHRcdGNhblVzZUV2ZW50TGlzdGVuZXJzOlxuXHRcdFx0Y2FuVXNlRE9NICYmICEhKHdpbmRvdy5hZGRFdmVudExpc3RlbmVyIHx8IHdpbmRvdy5hdHRhY2hFdmVudCksXG5cblx0XHRjYW5Vc2VWaWV3cG9ydDogY2FuVXNlRE9NICYmICEhd2luZG93LnNjcmVlblxuXG5cdH07XG5cblx0aWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGRlZmluZS5hbWQgPT09ICdvYmplY3QnICYmIGRlZmluZS5hbWQpIHtcblx0XHRkZWZpbmUoZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIEV4ZWN1dGlvbkVudmlyb25tZW50O1xuXHRcdH0pO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBFeGVjdXRpb25FbnZpcm9ubWVudDtcblx0fSBlbHNlIHtcblx0XHR3aW5kb3cuRXhlY3V0aW9uRW52aXJvbm1lbnQgPSBFeGVjdXRpb25FbnZpcm9ubWVudDtcblx0fVxuXG59KCkpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiBUb09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PSBudWxsKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gb3duRW51bWVyYWJsZUtleXMob2JqKSB7XG5cdHZhciBrZXlzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMob2JqKTtcblxuXHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdGtleXMgPSBrZXlzLmNvbmNhdChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iaikpO1xuXHR9XG5cblx0cmV0dXJuIGtleXMuZmlsdGVyKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRyZXR1cm4gcHJvcElzRW51bWVyYWJsZS5jYWxsKG9iaiwga2V5KTtcblx0fSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciBrZXlzO1xuXHR2YXIgdG8gPSBUb09iamVjdCh0YXJnZXQpO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IGFyZ3VtZW50c1tzXTtcblx0XHRrZXlzID0gb3duRW51bWVyYWJsZUtleXMoT2JqZWN0KGZyb20pKTtcblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dG9ba2V5c1tpXV0gPSBmcm9tW2tleXNbaV1dO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNC0yMDE1LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMuRGlzcGF0Y2hlciA9IHJlcXVpcmUoJy4vbGliL0Rpc3BhdGNoZXInKVxuIiwiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBEaXNwYXRjaGVyXG4gKiBAdHlwZWNoZWNrc1xuICovXG5cblwidXNlIHN0cmljdFwiO1xuXG52YXIgaW52YXJpYW50ID0gcmVxdWlyZSgnLi9pbnZhcmlhbnQnKTtcblxudmFyIF9sYXN0SUQgPSAxO1xudmFyIF9wcmVmaXggPSAnSURfJztcblxuLyoqXG4gKiBEaXNwYXRjaGVyIGlzIHVzZWQgdG8gYnJvYWRjYXN0IHBheWxvYWRzIHRvIHJlZ2lzdGVyZWQgY2FsbGJhY2tzLiBUaGlzIGlzXG4gKiBkaWZmZXJlbnQgZnJvbSBnZW5lcmljIHB1Yi1zdWIgc3lzdGVtcyBpbiB0d28gd2F5czpcbiAqXG4gKiAgIDEpIENhbGxiYWNrcyBhcmUgbm90IHN1YnNjcmliZWQgdG8gcGFydGljdWxhciBldmVudHMuIEV2ZXJ5IHBheWxvYWQgaXNcbiAqICAgICAgZGlzcGF0Y2hlZCB0byBldmVyeSByZWdpc3RlcmVkIGNhbGxiYWNrLlxuICogICAyKSBDYWxsYmFja3MgY2FuIGJlIGRlZmVycmVkIGluIHdob2xlIG9yIHBhcnQgdW50aWwgb3RoZXIgY2FsbGJhY2tzIGhhdmVcbiAqICAgICAgYmVlbiBleGVjdXRlZC5cbiAqXG4gKiBGb3IgZXhhbXBsZSwgY29uc2lkZXIgdGhpcyBoeXBvdGhldGljYWwgZmxpZ2h0IGRlc3RpbmF0aW9uIGZvcm0sIHdoaWNoXG4gKiBzZWxlY3RzIGEgZGVmYXVsdCBjaXR5IHdoZW4gYSBjb3VudHJ5IGlzIHNlbGVjdGVkOlxuICpcbiAqICAgdmFyIGZsaWdodERpc3BhdGNoZXIgPSBuZXcgRGlzcGF0Y2hlcigpO1xuICpcbiAqICAgLy8gS2VlcHMgdHJhY2sgb2Ygd2hpY2ggY291bnRyeSBpcyBzZWxlY3RlZFxuICogICB2YXIgQ291bnRyeVN0b3JlID0ge2NvdW50cnk6IG51bGx9O1xuICpcbiAqICAgLy8gS2VlcHMgdHJhY2sgb2Ygd2hpY2ggY2l0eSBpcyBzZWxlY3RlZFxuICogICB2YXIgQ2l0eVN0b3JlID0ge2NpdHk6IG51bGx9O1xuICpcbiAqICAgLy8gS2VlcHMgdHJhY2sgb2YgdGhlIGJhc2UgZmxpZ2h0IHByaWNlIG9mIHRoZSBzZWxlY3RlZCBjaXR5XG4gKiAgIHZhciBGbGlnaHRQcmljZVN0b3JlID0ge3ByaWNlOiBudWxsfVxuICpcbiAqIFdoZW4gYSB1c2VyIGNoYW5nZXMgdGhlIHNlbGVjdGVkIGNpdHksIHdlIGRpc3BhdGNoIHRoZSBwYXlsb2FkOlxuICpcbiAqICAgZmxpZ2h0RGlzcGF0Y2hlci5kaXNwYXRjaCh7XG4gKiAgICAgYWN0aW9uVHlwZTogJ2NpdHktdXBkYXRlJyxcbiAqICAgICBzZWxlY3RlZENpdHk6ICdwYXJpcydcbiAqICAgfSk7XG4gKlxuICogVGhpcyBwYXlsb2FkIGlzIGRpZ2VzdGVkIGJ5IGBDaXR5U3RvcmVgOlxuICpcbiAqICAgZmxpZ2h0RGlzcGF0Y2hlci5yZWdpc3RlcihmdW5jdGlvbihwYXlsb2FkKSB7XG4gKiAgICAgaWYgKHBheWxvYWQuYWN0aW9uVHlwZSA9PT0gJ2NpdHktdXBkYXRlJykge1xuICogICAgICAgQ2l0eVN0b3JlLmNpdHkgPSBwYXlsb2FkLnNlbGVjdGVkQ2l0eTtcbiAqICAgICB9XG4gKiAgIH0pO1xuICpcbiAqIFdoZW4gdGhlIHVzZXIgc2VsZWN0cyBhIGNvdW50cnksIHdlIGRpc3BhdGNoIHRoZSBwYXlsb2FkOlxuICpcbiAqICAgZmxpZ2h0RGlzcGF0Y2hlci5kaXNwYXRjaCh7XG4gKiAgICAgYWN0aW9uVHlwZTogJ2NvdW50cnktdXBkYXRlJyxcbiAqICAgICBzZWxlY3RlZENvdW50cnk6ICdhdXN0cmFsaWEnXG4gKiAgIH0pO1xuICpcbiAqIFRoaXMgcGF5bG9hZCBpcyBkaWdlc3RlZCBieSBib3RoIHN0b3JlczpcbiAqXG4gKiAgICBDb3VudHJ5U3RvcmUuZGlzcGF0Y2hUb2tlbiA9IGZsaWdodERpc3BhdGNoZXIucmVnaXN0ZXIoZnVuY3Rpb24ocGF5bG9hZCkge1xuICogICAgIGlmIChwYXlsb2FkLmFjdGlvblR5cGUgPT09ICdjb3VudHJ5LXVwZGF0ZScpIHtcbiAqICAgICAgIENvdW50cnlTdG9yZS5jb3VudHJ5ID0gcGF5bG9hZC5zZWxlY3RlZENvdW50cnk7XG4gKiAgICAgfVxuICogICB9KTtcbiAqXG4gKiBXaGVuIHRoZSBjYWxsYmFjayB0byB1cGRhdGUgYENvdW50cnlTdG9yZWAgaXMgcmVnaXN0ZXJlZCwgd2Ugc2F2ZSBhIHJlZmVyZW5jZVxuICogdG8gdGhlIHJldHVybmVkIHRva2VuLiBVc2luZyB0aGlzIHRva2VuIHdpdGggYHdhaXRGb3IoKWAsIHdlIGNhbiBndWFyYW50ZWVcbiAqIHRoYXQgYENvdW50cnlTdG9yZWAgaXMgdXBkYXRlZCBiZWZvcmUgdGhlIGNhbGxiYWNrIHRoYXQgdXBkYXRlcyBgQ2l0eVN0b3JlYFxuICogbmVlZHMgdG8gcXVlcnkgaXRzIGRhdGEuXG4gKlxuICogICBDaXR5U3RvcmUuZGlzcGF0Y2hUb2tlbiA9IGZsaWdodERpc3BhdGNoZXIucmVnaXN0ZXIoZnVuY3Rpb24ocGF5bG9hZCkge1xuICogICAgIGlmIChwYXlsb2FkLmFjdGlvblR5cGUgPT09ICdjb3VudHJ5LXVwZGF0ZScpIHtcbiAqICAgICAgIC8vIGBDb3VudHJ5U3RvcmUuY291bnRyeWAgbWF5IG5vdCBiZSB1cGRhdGVkLlxuICogICAgICAgZmxpZ2h0RGlzcGF0Y2hlci53YWl0Rm9yKFtDb3VudHJ5U3RvcmUuZGlzcGF0Y2hUb2tlbl0pO1xuICogICAgICAgLy8gYENvdW50cnlTdG9yZS5jb3VudHJ5YCBpcyBub3cgZ3VhcmFudGVlZCB0byBiZSB1cGRhdGVkLlxuICpcbiAqICAgICAgIC8vIFNlbGVjdCB0aGUgZGVmYXVsdCBjaXR5IGZvciB0aGUgbmV3IGNvdW50cnlcbiAqICAgICAgIENpdHlTdG9yZS5jaXR5ID0gZ2V0RGVmYXVsdENpdHlGb3JDb3VudHJ5KENvdW50cnlTdG9yZS5jb3VudHJ5KTtcbiAqICAgICB9XG4gKiAgIH0pO1xuICpcbiAqIFRoZSB1c2FnZSBvZiBgd2FpdEZvcigpYCBjYW4gYmUgY2hhaW5lZCwgZm9yIGV4YW1wbGU6XG4gKlxuICogICBGbGlnaHRQcmljZVN0b3JlLmRpc3BhdGNoVG9rZW4gPVxuICogICAgIGZsaWdodERpc3BhdGNoZXIucmVnaXN0ZXIoZnVuY3Rpb24ocGF5bG9hZCkge1xuICogICAgICAgc3dpdGNoIChwYXlsb2FkLmFjdGlvblR5cGUpIHtcbiAqICAgICAgICAgY2FzZSAnY291bnRyeS11cGRhdGUnOlxuICogICAgICAgICAgIGZsaWdodERpc3BhdGNoZXIud2FpdEZvcihbQ2l0eVN0b3JlLmRpc3BhdGNoVG9rZW5dKTtcbiAqICAgICAgICAgICBGbGlnaHRQcmljZVN0b3JlLnByaWNlID1cbiAqICAgICAgICAgICAgIGdldEZsaWdodFByaWNlU3RvcmUoQ291bnRyeVN0b3JlLmNvdW50cnksIENpdHlTdG9yZS5jaXR5KTtcbiAqICAgICAgICAgICBicmVhaztcbiAqXG4gKiAgICAgICAgIGNhc2UgJ2NpdHktdXBkYXRlJzpcbiAqICAgICAgICAgICBGbGlnaHRQcmljZVN0b3JlLnByaWNlID1cbiAqICAgICAgICAgICAgIEZsaWdodFByaWNlU3RvcmUoQ291bnRyeVN0b3JlLmNvdW50cnksIENpdHlTdG9yZS5jaXR5KTtcbiAqICAgICAgICAgICBicmVhaztcbiAqICAgICB9XG4gKiAgIH0pO1xuICpcbiAqIFRoZSBgY291bnRyeS11cGRhdGVgIHBheWxvYWQgd2lsbCBiZSBndWFyYW50ZWVkIHRvIGludm9rZSB0aGUgc3RvcmVzJ1xuICogcmVnaXN0ZXJlZCBjYWxsYmFja3MgaW4gb3JkZXI6IGBDb3VudHJ5U3RvcmVgLCBgQ2l0eVN0b3JlYCwgdGhlblxuICogYEZsaWdodFByaWNlU3RvcmVgLlxuICovXG5cbiAgZnVuY3Rpb24gRGlzcGF0Y2hlcigpIHtcbiAgICB0aGlzLiREaXNwYXRjaGVyX2NhbGxiYWNrcyA9IHt9O1xuICAgIHRoaXMuJERpc3BhdGNoZXJfaXNQZW5kaW5nID0ge307XG4gICAgdGhpcy4kRGlzcGF0Y2hlcl9pc0hhbmRsZWQgPSB7fTtcbiAgICB0aGlzLiREaXNwYXRjaGVyX2lzRGlzcGF0Y2hpbmcgPSBmYWxzZTtcbiAgICB0aGlzLiREaXNwYXRjaGVyX3BlbmRpbmdQYXlsb2FkID0gbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZWdpc3RlcnMgYSBjYWxsYmFjayB0byBiZSBpbnZva2VkIHdpdGggZXZlcnkgZGlzcGF0Y2hlZCBwYXlsb2FkLiBSZXR1cm5zXG4gICAqIGEgdG9rZW4gdGhhdCBjYW4gYmUgdXNlZCB3aXRoIGB3YWl0Rm9yKClgLlxuICAgKlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKiBAcmV0dXJuIHtzdHJpbmd9XG4gICAqL1xuICBEaXNwYXRjaGVyLnByb3RvdHlwZS5yZWdpc3Rlcj1mdW5jdGlvbihjYWxsYmFjaykge1xuICAgIHZhciBpZCA9IF9wcmVmaXggKyBfbGFzdElEKys7XG4gICAgdGhpcy4kRGlzcGF0Y2hlcl9jYWxsYmFja3NbaWRdID0gY2FsbGJhY2s7XG4gICAgcmV0dXJuIGlkO1xuICB9O1xuXG4gIC8qKlxuICAgKiBSZW1vdmVzIGEgY2FsbGJhY2sgYmFzZWQgb24gaXRzIHRva2VuLlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gaWRcbiAgICovXG4gIERpc3BhdGNoZXIucHJvdG90eXBlLnVucmVnaXN0ZXI9ZnVuY3Rpb24oaWQpIHtcbiAgICBpbnZhcmlhbnQoXG4gICAgICB0aGlzLiREaXNwYXRjaGVyX2NhbGxiYWNrc1tpZF0sXG4gICAgICAnRGlzcGF0Y2hlci51bnJlZ2lzdGVyKC4uLik6IGAlc2AgZG9lcyBub3QgbWFwIHRvIGEgcmVnaXN0ZXJlZCBjYWxsYmFjay4nLFxuICAgICAgaWRcbiAgICApO1xuICAgIGRlbGV0ZSB0aGlzLiREaXNwYXRjaGVyX2NhbGxiYWNrc1tpZF07XG4gIH07XG5cbiAgLyoqXG4gICAqIFdhaXRzIGZvciB0aGUgY2FsbGJhY2tzIHNwZWNpZmllZCB0byBiZSBpbnZva2VkIGJlZm9yZSBjb250aW51aW5nIGV4ZWN1dGlvblxuICAgKiBvZiB0aGUgY3VycmVudCBjYWxsYmFjay4gVGhpcyBtZXRob2Qgc2hvdWxkIG9ubHkgYmUgdXNlZCBieSBhIGNhbGxiYWNrIGluXG4gICAqIHJlc3BvbnNlIHRvIGEgZGlzcGF0Y2hlZCBwYXlsb2FkLlxuICAgKlxuICAgKiBAcGFyYW0ge2FycmF5PHN0cmluZz59IGlkc1xuICAgKi9cbiAgRGlzcGF0Y2hlci5wcm90b3R5cGUud2FpdEZvcj1mdW5jdGlvbihpZHMpIHtcbiAgICBpbnZhcmlhbnQoXG4gICAgICB0aGlzLiREaXNwYXRjaGVyX2lzRGlzcGF0Y2hpbmcsXG4gICAgICAnRGlzcGF0Y2hlci53YWl0Rm9yKC4uLik6IE11c3QgYmUgaW52b2tlZCB3aGlsZSBkaXNwYXRjaGluZy4nXG4gICAgKTtcbiAgICBmb3IgKHZhciBpaSA9IDA7IGlpIDwgaWRzLmxlbmd0aDsgaWkrKykge1xuICAgICAgdmFyIGlkID0gaWRzW2lpXTtcbiAgICAgIGlmICh0aGlzLiREaXNwYXRjaGVyX2lzUGVuZGluZ1tpZF0pIHtcbiAgICAgICAgaW52YXJpYW50KFxuICAgICAgICAgIHRoaXMuJERpc3BhdGNoZXJfaXNIYW5kbGVkW2lkXSxcbiAgICAgICAgICAnRGlzcGF0Y2hlci53YWl0Rm9yKC4uLik6IENpcmN1bGFyIGRlcGVuZGVuY3kgZGV0ZWN0ZWQgd2hpbGUgJyArXG4gICAgICAgICAgJ3dhaXRpbmcgZm9yIGAlc2AuJyxcbiAgICAgICAgICBpZFxuICAgICAgICApO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGludmFyaWFudChcbiAgICAgICAgdGhpcy4kRGlzcGF0Y2hlcl9jYWxsYmFja3NbaWRdLFxuICAgICAgICAnRGlzcGF0Y2hlci53YWl0Rm9yKC4uLik6IGAlc2AgZG9lcyBub3QgbWFwIHRvIGEgcmVnaXN0ZXJlZCBjYWxsYmFjay4nLFxuICAgICAgICBpZFxuICAgICAgKTtcbiAgICAgIHRoaXMuJERpc3BhdGNoZXJfaW52b2tlQ2FsbGJhY2soaWQpO1xuICAgIH1cbiAgfTtcblxuICAvKipcbiAgICogRGlzcGF0Y2hlcyBhIHBheWxvYWQgdG8gYWxsIHJlZ2lzdGVyZWQgY2FsbGJhY2tzLlxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gcGF5bG9hZFxuICAgKi9cbiAgRGlzcGF0Y2hlci5wcm90b3R5cGUuZGlzcGF0Y2g9ZnVuY3Rpb24ocGF5bG9hZCkge1xuICAgIGludmFyaWFudChcbiAgICAgICF0aGlzLiREaXNwYXRjaGVyX2lzRGlzcGF0Y2hpbmcsXG4gICAgICAnRGlzcGF0Y2guZGlzcGF0Y2goLi4uKTogQ2Fubm90IGRpc3BhdGNoIGluIHRoZSBtaWRkbGUgb2YgYSBkaXNwYXRjaC4nXG4gICAgKTtcbiAgICB0aGlzLiREaXNwYXRjaGVyX3N0YXJ0RGlzcGF0Y2hpbmcocGF5bG9hZCk7XG4gICAgdHJ5IHtcbiAgICAgIGZvciAodmFyIGlkIGluIHRoaXMuJERpc3BhdGNoZXJfY2FsbGJhY2tzKSB7XG4gICAgICAgIGlmICh0aGlzLiREaXNwYXRjaGVyX2lzUGVuZGluZ1tpZF0pIHtcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLiREaXNwYXRjaGVyX2ludm9rZUNhbGxiYWNrKGlkKTtcbiAgICAgIH1cbiAgICB9IGZpbmFsbHkge1xuICAgICAgdGhpcy4kRGlzcGF0Y2hlcl9zdG9wRGlzcGF0Y2hpbmcoKTtcbiAgICB9XG4gIH07XG5cbiAgLyoqXG4gICAqIElzIHRoaXMgRGlzcGF0Y2hlciBjdXJyZW50bHkgZGlzcGF0Y2hpbmcuXG4gICAqXG4gICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAqL1xuICBEaXNwYXRjaGVyLnByb3RvdHlwZS5pc0Rpc3BhdGNoaW5nPWZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLiREaXNwYXRjaGVyX2lzRGlzcGF0Y2hpbmc7XG4gIH07XG5cbiAgLyoqXG4gICAqIENhbGwgdGhlIGNhbGxiYWNrIHN0b3JlZCB3aXRoIHRoZSBnaXZlbiBpZC4gQWxzbyBkbyBzb21lIGludGVybmFsXG4gICAqIGJvb2trZWVwaW5nLlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gaWRcbiAgICogQGludGVybmFsXG4gICAqL1xuICBEaXNwYXRjaGVyLnByb3RvdHlwZS4kRGlzcGF0Y2hlcl9pbnZva2VDYWxsYmFjaz1mdW5jdGlvbihpZCkge1xuICAgIHRoaXMuJERpc3BhdGNoZXJfaXNQZW5kaW5nW2lkXSA9IHRydWU7XG4gICAgdGhpcy4kRGlzcGF0Y2hlcl9jYWxsYmFja3NbaWRdKHRoaXMuJERpc3BhdGNoZXJfcGVuZGluZ1BheWxvYWQpO1xuICAgIHRoaXMuJERpc3BhdGNoZXJfaXNIYW5kbGVkW2lkXSA9IHRydWU7XG4gIH07XG5cbiAgLyoqXG4gICAqIFNldCB1cCBib29ra2VlcGluZyBuZWVkZWQgd2hlbiBkaXNwYXRjaGluZy5cbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IHBheWxvYWRcbiAgICogQGludGVybmFsXG4gICAqL1xuICBEaXNwYXRjaGVyLnByb3RvdHlwZS4kRGlzcGF0Y2hlcl9zdGFydERpc3BhdGNoaW5nPWZ1bmN0aW9uKHBheWxvYWQpIHtcbiAgICBmb3IgKHZhciBpZCBpbiB0aGlzLiREaXNwYXRjaGVyX2NhbGxiYWNrcykge1xuICAgICAgdGhpcy4kRGlzcGF0Y2hlcl9pc1BlbmRpbmdbaWRdID0gZmFsc2U7XG4gICAgICB0aGlzLiREaXNwYXRjaGVyX2lzSGFuZGxlZFtpZF0gPSBmYWxzZTtcbiAgICB9XG4gICAgdGhpcy4kRGlzcGF0Y2hlcl9wZW5kaW5nUGF5bG9hZCA9IHBheWxvYWQ7XG4gICAgdGhpcy4kRGlzcGF0Y2hlcl9pc0Rpc3BhdGNoaW5nID0gdHJ1ZTtcbiAgfTtcblxuICAvKipcbiAgICogQ2xlYXIgYm9va2tlZXBpbmcgdXNlZCBmb3IgZGlzcGF0Y2hpbmcuXG4gICAqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgRGlzcGF0Y2hlci5wcm90b3R5cGUuJERpc3BhdGNoZXJfc3RvcERpc3BhdGNoaW5nPWZ1bmN0aW9uKCkge1xuICAgIHRoaXMuJERpc3BhdGNoZXJfcGVuZGluZ1BheWxvYWQgPSBudWxsO1xuICAgIHRoaXMuJERpc3BhdGNoZXJfaXNEaXNwYXRjaGluZyA9IGZhbHNlO1xuICB9O1xuXG5cbm1vZHVsZS5leHBvcnRzID0gRGlzcGF0Y2hlcjtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIGludmFyaWFudFxuICovXG5cblwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIFVzZSBpbnZhcmlhbnQoKSB0byBhc3NlcnQgc3RhdGUgd2hpY2ggeW91ciBwcm9ncmFtIGFzc3VtZXMgdG8gYmUgdHJ1ZS5cbiAqXG4gKiBQcm92aWRlIHNwcmludGYtc3R5bGUgZm9ybWF0IChvbmx5ICVzIGlzIHN1cHBvcnRlZCkgYW5kIGFyZ3VtZW50c1xuICogdG8gcHJvdmlkZSBpbmZvcm1hdGlvbiBhYm91dCB3aGF0IGJyb2tlIGFuZCB3aGF0IHlvdSB3ZXJlXG4gKiBleHBlY3RpbmcuXG4gKlxuICogVGhlIGludmFyaWFudCBtZXNzYWdlIHdpbGwgYmUgc3RyaXBwZWQgaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBpbnZhcmlhbnRcbiAqIHdpbGwgcmVtYWluIHRvIGVuc3VyZSBsb2dpYyBkb2VzIG5vdCBkaWZmZXIgaW4gcHJvZHVjdGlvbi5cbiAqL1xuXG52YXIgaW52YXJpYW50ID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGEsIGIsIGMsIGQsIGUsIGYpIHtcbiAgaWYgKGZhbHNlKSB7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFyaWFudCByZXF1aXJlcyBhbiBlcnJvciBtZXNzYWdlIGFyZ3VtZW50Jyk7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB2YXIgZXJyb3I7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgK1xuICAgICAgICAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYXJncyA9IFthLCBiLCBjLCBkLCBlLCBmXTtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgJ0ludmFyaWFudCBWaW9sYXRpb246ICcgK1xuICAgICAgICBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24oKSB7IHJldHVybiBhcmdzW2FyZ0luZGV4KytdOyB9KVxuICAgICAgKTtcbiAgICB9XG5cbiAgICBlcnJvci5mcmFtZXNUb1BvcCA9IDE7IC8vIHdlIGRvbid0IGNhcmUgYWJvdXQgaW52YXJpYW50J3Mgb3duIGZyYW1lXG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gaW52YXJpYW50O1xuIiwiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbmZ1bmN0aW9uIEV2ZW50RW1pdHRlcigpIHtcbiAgdGhpcy5fZXZlbnRzID0gdGhpcy5fZXZlbnRzIHx8IHt9O1xuICB0aGlzLl9tYXhMaXN0ZW5lcnMgPSB0aGlzLl9tYXhMaXN0ZW5lcnMgfHwgdW5kZWZpbmVkO1xufVxubW9kdWxlLmV4cG9ydHMgPSBFdmVudEVtaXR0ZXI7XG5cbi8vIEJhY2t3YXJkcy1jb21wYXQgd2l0aCBub2RlIDAuMTAueFxuRXZlbnRFbWl0dGVyLkV2ZW50RW1pdHRlciA9IEV2ZW50RW1pdHRlcjtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5fZXZlbnRzID0gdW5kZWZpbmVkO1xuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5fbWF4TGlzdGVuZXJzID0gdW5kZWZpbmVkO1xuXG4vLyBCeSBkZWZhdWx0IEV2ZW50RW1pdHRlcnMgd2lsbCBwcmludCBhIHdhcm5pbmcgaWYgbW9yZSB0aGFuIDEwIGxpc3RlbmVycyBhcmVcbi8vIGFkZGVkIHRvIGl0LiBUaGlzIGlzIGEgdXNlZnVsIGRlZmF1bHQgd2hpY2ggaGVscHMgZmluZGluZyBtZW1vcnkgbGVha3MuXG5FdmVudEVtaXR0ZXIuZGVmYXVsdE1heExpc3RlbmVycyA9IDEwO1xuXG4vLyBPYnZpb3VzbHkgbm90IGFsbCBFbWl0dGVycyBzaG91bGQgYmUgbGltaXRlZCB0byAxMC4gVGhpcyBmdW5jdGlvbiBhbGxvd3Ncbi8vIHRoYXQgdG8gYmUgaW5jcmVhc2VkLiBTZXQgdG8gemVybyBmb3IgdW5saW1pdGVkLlxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5zZXRNYXhMaXN0ZW5lcnMgPSBmdW5jdGlvbihuKSB7XG4gIGlmICghaXNOdW1iZXIobikgfHwgbiA8IDAgfHwgaXNOYU4obikpXG4gICAgdGhyb3cgVHlwZUVycm9yKCduIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXInKTtcbiAgdGhpcy5fbWF4TGlzdGVuZXJzID0gbjtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmVtaXQgPSBmdW5jdGlvbih0eXBlKSB7XG4gIHZhciBlciwgaGFuZGxlciwgbGVuLCBhcmdzLCBpLCBsaXN0ZW5lcnM7XG5cbiAgaWYgKCF0aGlzLl9ldmVudHMpXG4gICAgdGhpcy5fZXZlbnRzID0ge307XG5cbiAgLy8gSWYgdGhlcmUgaXMgbm8gJ2Vycm9yJyBldmVudCBsaXN0ZW5lciB0aGVuIHRocm93LlxuICBpZiAodHlwZSA9PT0gJ2Vycm9yJykge1xuICAgIGlmICghdGhpcy5fZXZlbnRzLmVycm9yIHx8XG4gICAgICAgIChpc09iamVjdCh0aGlzLl9ldmVudHMuZXJyb3IpICYmICF0aGlzLl9ldmVudHMuZXJyb3IubGVuZ3RoKSkge1xuICAgICAgZXIgPSBhcmd1bWVudHNbMV07XG4gICAgICBpZiAoZXIgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICB0aHJvdyBlcjsgLy8gVW5oYW5kbGVkICdlcnJvcicgZXZlbnRcbiAgICAgIH1cbiAgICAgIHRocm93IFR5cGVFcnJvcignVW5jYXVnaHQsIHVuc3BlY2lmaWVkIFwiZXJyb3JcIiBldmVudC4nKTtcbiAgICB9XG4gIH1cblxuICBoYW5kbGVyID0gdGhpcy5fZXZlbnRzW3R5cGVdO1xuXG4gIGlmIChpc1VuZGVmaW5lZChoYW5kbGVyKSlcbiAgICByZXR1cm4gZmFsc2U7XG5cbiAgaWYgKGlzRnVuY3Rpb24oaGFuZGxlcikpIHtcbiAgICBzd2l0Y2ggKGFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgIC8vIGZhc3QgY2FzZXNcbiAgICAgIGNhc2UgMTpcbiAgICAgICAgaGFuZGxlci5jYWxsKHRoaXMpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgMjpcbiAgICAgICAgaGFuZGxlci5jYWxsKHRoaXMsIGFyZ3VtZW50c1sxXSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAzOlxuICAgICAgICBoYW5kbGVyLmNhbGwodGhpcywgYXJndW1lbnRzWzFdLCBhcmd1bWVudHNbMl0pO1xuICAgICAgICBicmVhaztcbiAgICAgIC8vIHNsb3dlclxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgYXJncyA9IG5ldyBBcnJheShsZW4gLSAxKTtcbiAgICAgICAgZm9yIChpID0gMTsgaSA8IGxlbjsgaSsrKVxuICAgICAgICAgIGFyZ3NbaSAtIDFdID0gYXJndW1lbnRzW2ldO1xuICAgICAgICBoYW5kbGVyLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgIH1cbiAgfSBlbHNlIGlmIChpc09iamVjdChoYW5kbGVyKSkge1xuICAgIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gLSAxKTtcbiAgICBmb3IgKGkgPSAxOyBpIDwgbGVuOyBpKyspXG4gICAgICBhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTtcblxuICAgIGxpc3RlbmVycyA9IGhhbmRsZXIuc2xpY2UoKTtcbiAgICBsZW4gPSBsaXN0ZW5lcnMubGVuZ3RoO1xuICAgIGZvciAoaSA9IDA7IGkgPCBsZW47IGkrKylcbiAgICAgIGxpc3RlbmVyc1tpXS5hcHBseSh0aGlzLCBhcmdzKTtcbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufTtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5hZGRMaXN0ZW5lciA9IGZ1bmN0aW9uKHR5cGUsIGxpc3RlbmVyKSB7XG4gIHZhciBtO1xuXG4gIGlmICghaXNGdW5jdGlvbihsaXN0ZW5lcikpXG4gICAgdGhyb3cgVHlwZUVycm9yKCdsaXN0ZW5lciBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcblxuICBpZiAoIXRoaXMuX2V2ZW50cylcbiAgICB0aGlzLl9ldmVudHMgPSB7fTtcblxuICAvLyBUbyBhdm9pZCByZWN1cnNpb24gaW4gdGhlIGNhc2UgdGhhdCB0eXBlID09PSBcIm5ld0xpc3RlbmVyXCIhIEJlZm9yZVxuICAvLyBhZGRpbmcgaXQgdG8gdGhlIGxpc3RlbmVycywgZmlyc3QgZW1pdCBcIm5ld0xpc3RlbmVyXCIuXG4gIGlmICh0aGlzLl9ldmVudHMubmV3TGlzdGVuZXIpXG4gICAgdGhpcy5lbWl0KCduZXdMaXN0ZW5lcicsIHR5cGUsXG4gICAgICAgICAgICAgIGlzRnVuY3Rpb24obGlzdGVuZXIubGlzdGVuZXIpID9cbiAgICAgICAgICAgICAgbGlzdGVuZXIubGlzdGVuZXIgOiBsaXN0ZW5lcik7XG5cbiAgaWYgKCF0aGlzLl9ldmVudHNbdHlwZV0pXG4gICAgLy8gT3B0aW1pemUgdGhlIGNhc2Ugb2Ygb25lIGxpc3RlbmVyLiBEb24ndCBuZWVkIHRoZSBleHRyYSBhcnJheSBvYmplY3QuXG4gICAgdGhpcy5fZXZlbnRzW3R5cGVdID0gbGlzdGVuZXI7XG4gIGVsc2UgaWYgKGlzT2JqZWN0KHRoaXMuX2V2ZW50c1t0eXBlXSkpXG4gICAgLy8gSWYgd2UndmUgYWxyZWFkeSBnb3QgYW4gYXJyYXksIGp1c3QgYXBwZW5kLlxuICAgIHRoaXMuX2V2ZW50c1t0eXBlXS5wdXNoKGxpc3RlbmVyKTtcbiAgZWxzZVxuICAgIC8vIEFkZGluZyB0aGUgc2Vjb25kIGVsZW1lbnQsIG5lZWQgdG8gY2hhbmdlIHRvIGFycmF5LlxuICAgIHRoaXMuX2V2ZW50c1t0eXBlXSA9IFt0aGlzLl9ldmVudHNbdHlwZV0sIGxpc3RlbmVyXTtcblxuICAvLyBDaGVjayBmb3IgbGlzdGVuZXIgbGVha1xuICBpZiAoaXNPYmplY3QodGhpcy5fZXZlbnRzW3R5cGVdKSAmJiAhdGhpcy5fZXZlbnRzW3R5cGVdLndhcm5lZCkge1xuICAgIHZhciBtO1xuICAgIGlmICghaXNVbmRlZmluZWQodGhpcy5fbWF4TGlzdGVuZXJzKSkge1xuICAgICAgbSA9IHRoaXMuX21heExpc3RlbmVycztcbiAgICB9IGVsc2Uge1xuICAgICAgbSA9IEV2ZW50RW1pdHRlci5kZWZhdWx0TWF4TGlzdGVuZXJzO1xuICAgIH1cblxuICAgIGlmIChtICYmIG0gPiAwICYmIHRoaXMuX2V2ZW50c1t0eXBlXS5sZW5ndGggPiBtKSB7XG4gICAgICB0aGlzLl9ldmVudHNbdHlwZV0ud2FybmVkID0gdHJ1ZTtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJyhub2RlKSB3YXJuaW5nOiBwb3NzaWJsZSBFdmVudEVtaXR0ZXIgbWVtb3J5ICcgK1xuICAgICAgICAgICAgICAgICAgICAnbGVhayBkZXRlY3RlZC4gJWQgbGlzdGVuZXJzIGFkZGVkLiAnICtcbiAgICAgICAgICAgICAgICAgICAgJ1VzZSBlbWl0dGVyLnNldE1heExpc3RlbmVycygpIHRvIGluY3JlYXNlIGxpbWl0LicsXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2V2ZW50c1t0eXBlXS5sZW5ndGgpO1xuICAgICAgaWYgKHR5cGVvZiBjb25zb2xlLnRyYWNlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIC8vIG5vdCBzdXBwb3J0ZWQgaW4gSUUgMTBcbiAgICAgICAgY29uc29sZS50cmFjZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vbiA9IEV2ZW50RW1pdHRlci5wcm90b3R5cGUuYWRkTGlzdGVuZXI7XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUub25jZSA9IGZ1bmN0aW9uKHR5cGUsIGxpc3RlbmVyKSB7XG4gIGlmICghaXNGdW5jdGlvbihsaXN0ZW5lcikpXG4gICAgdGhyb3cgVHlwZUVycm9yKCdsaXN0ZW5lciBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcblxuICB2YXIgZmlyZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBnKCkge1xuICAgIHRoaXMucmVtb3ZlTGlzdGVuZXIodHlwZSwgZyk7XG5cbiAgICBpZiAoIWZpcmVkKSB7XG4gICAgICBmaXJlZCA9IHRydWU7XG4gICAgICBsaXN0ZW5lci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgfVxuXG4gIGcubGlzdGVuZXIgPSBsaXN0ZW5lcjtcbiAgdGhpcy5vbih0eXBlLCBnKTtcblxuICByZXR1cm4gdGhpcztcbn07XG5cbi8vIGVtaXRzIGEgJ3JlbW92ZUxpc3RlbmVyJyBldmVudCBpZmYgdGhlIGxpc3RlbmVyIHdhcyByZW1vdmVkXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUxpc3RlbmVyID0gZnVuY3Rpb24odHlwZSwgbGlzdGVuZXIpIHtcbiAgdmFyIGxpc3QsIHBvc2l0aW9uLCBsZW5ndGgsIGk7XG5cbiAgaWYgKCFpc0Z1bmN0aW9uKGxpc3RlbmVyKSlcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ2xpc3RlbmVyIG11c3QgYmUgYSBmdW5jdGlvbicpO1xuXG4gIGlmICghdGhpcy5fZXZlbnRzIHx8ICF0aGlzLl9ldmVudHNbdHlwZV0pXG4gICAgcmV0dXJuIHRoaXM7XG5cbiAgbGlzdCA9IHRoaXMuX2V2ZW50c1t0eXBlXTtcbiAgbGVuZ3RoID0gbGlzdC5sZW5ndGg7XG4gIHBvc2l0aW9uID0gLTE7XG5cbiAgaWYgKGxpc3QgPT09IGxpc3RlbmVyIHx8XG4gICAgICAoaXNGdW5jdGlvbihsaXN0Lmxpc3RlbmVyKSAmJiBsaXN0Lmxpc3RlbmVyID09PSBsaXN0ZW5lcikpIHtcbiAgICBkZWxldGUgdGhpcy5fZXZlbnRzW3R5cGVdO1xuICAgIGlmICh0aGlzLl9ldmVudHMucmVtb3ZlTGlzdGVuZXIpXG4gICAgICB0aGlzLmVtaXQoJ3JlbW92ZUxpc3RlbmVyJywgdHlwZSwgbGlzdGVuZXIpO1xuXG4gIH0gZWxzZSBpZiAoaXNPYmplY3QobGlzdCkpIHtcbiAgICBmb3IgKGkgPSBsZW5ndGg7IGktLSA+IDA7KSB7XG4gICAgICBpZiAobGlzdFtpXSA9PT0gbGlzdGVuZXIgfHxcbiAgICAgICAgICAobGlzdFtpXS5saXN0ZW5lciAmJiBsaXN0W2ldLmxpc3RlbmVyID09PSBsaXN0ZW5lcikpIHtcbiAgICAgICAgcG9zaXRpb24gPSBpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAocG9zaXRpb24gPCAwKVxuICAgICAgcmV0dXJuIHRoaXM7XG5cbiAgICBpZiAobGlzdC5sZW5ndGggPT09IDEpIHtcbiAgICAgIGxpc3QubGVuZ3RoID0gMDtcbiAgICAgIGRlbGV0ZSB0aGlzLl9ldmVudHNbdHlwZV07XG4gICAgfSBlbHNlIHtcbiAgICAgIGxpc3Quc3BsaWNlKHBvc2l0aW9uLCAxKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fZXZlbnRzLnJlbW92ZUxpc3RlbmVyKVxuICAgICAgdGhpcy5lbWl0KCdyZW1vdmVMaXN0ZW5lcicsIHR5cGUsIGxpc3RlbmVyKTtcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBmdW5jdGlvbih0eXBlKSB7XG4gIHZhciBrZXksIGxpc3RlbmVycztcblxuICBpZiAoIXRoaXMuX2V2ZW50cylcbiAgICByZXR1cm4gdGhpcztcblxuICAvLyBub3QgbGlzdGVuaW5nIGZvciByZW1vdmVMaXN0ZW5lciwgbm8gbmVlZCB0byBlbWl0XG4gIGlmICghdGhpcy5fZXZlbnRzLnJlbW92ZUxpc3RlbmVyKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApXG4gICAgICB0aGlzLl9ldmVudHMgPSB7fTtcbiAgICBlbHNlIGlmICh0aGlzLl9ldmVudHNbdHlwZV0pXG4gICAgICBkZWxldGUgdGhpcy5fZXZlbnRzW3R5cGVdO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLy8gZW1pdCByZW1vdmVMaXN0ZW5lciBmb3IgYWxsIGxpc3RlbmVycyBvbiBhbGwgZXZlbnRzXG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgZm9yIChrZXkgaW4gdGhpcy5fZXZlbnRzKSB7XG4gICAgICBpZiAoa2V5ID09PSAncmVtb3ZlTGlzdGVuZXInKSBjb250aW51ZTtcbiAgICAgIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKGtleSk7XG4gICAgfVxuICAgIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCdyZW1vdmVMaXN0ZW5lcicpO1xuICAgIHRoaXMuX2V2ZW50cyA9IHt9O1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgbGlzdGVuZXJzID0gdGhpcy5fZXZlbnRzW3R5cGVdO1xuXG4gIGlmIChpc0Z1bmN0aW9uKGxpc3RlbmVycykpIHtcbiAgICB0aGlzLnJlbW92ZUxpc3RlbmVyKHR5cGUsIGxpc3RlbmVycyk7XG4gIH0gZWxzZSB7XG4gICAgLy8gTElGTyBvcmRlclxuICAgIHdoaWxlIChsaXN0ZW5lcnMubGVuZ3RoKVxuICAgICAgdGhpcy5yZW1vdmVMaXN0ZW5lcih0eXBlLCBsaXN0ZW5lcnNbbGlzdGVuZXJzLmxlbmd0aCAtIDFdKTtcbiAgfVxuICBkZWxldGUgdGhpcy5fZXZlbnRzW3R5cGVdO1xuXG4gIHJldHVybiB0aGlzO1xufTtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5saXN0ZW5lcnMgPSBmdW5jdGlvbih0eXBlKSB7XG4gIHZhciByZXQ7XG4gIGlmICghdGhpcy5fZXZlbnRzIHx8ICF0aGlzLl9ldmVudHNbdHlwZV0pXG4gICAgcmV0ID0gW107XG4gIGVsc2UgaWYgKGlzRnVuY3Rpb24odGhpcy5fZXZlbnRzW3R5cGVdKSlcbiAgICByZXQgPSBbdGhpcy5fZXZlbnRzW3R5cGVdXTtcbiAgZWxzZVxuICAgIHJldCA9IHRoaXMuX2V2ZW50c1t0eXBlXS5zbGljZSgpO1xuICByZXR1cm4gcmV0O1xufTtcblxuRXZlbnRFbWl0dGVyLmxpc3RlbmVyQ291bnQgPSBmdW5jdGlvbihlbWl0dGVyLCB0eXBlKSB7XG4gIHZhciByZXQ7XG4gIGlmICghZW1pdHRlci5fZXZlbnRzIHx8ICFlbWl0dGVyLl9ldmVudHNbdHlwZV0pXG4gICAgcmV0ID0gMDtcbiAgZWxzZSBpZiAoaXNGdW5jdGlvbihlbWl0dGVyLl9ldmVudHNbdHlwZV0pKVxuICAgIHJldCA9IDE7XG4gIGVsc2VcbiAgICByZXQgPSBlbWl0dGVyLl9ldmVudHNbdHlwZV0ubGVuZ3RoO1xuICByZXR1cm4gcmV0O1xufTtcblxuZnVuY3Rpb24gaXNGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdmdW5jdGlvbic7XG59XG5cbmZ1bmN0aW9uIGlzTnVtYmVyKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ251bWJlcic7XG59XG5cbmZ1bmN0aW9uIGlzT2JqZWN0KGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ29iamVjdCcgJiYgYXJnICE9PSBudWxsO1xufVxuXG5mdW5jdGlvbiBpc1VuZGVmaW5lZChhcmcpIHtcbiAgcmV0dXJuIGFyZyA9PT0gdm9pZCAwO1xufVxuIiwiLy8gc2hpbSBmb3IgdXNpbmcgcHJvY2VzcyBpbiBicm93c2VyXG5cbnZhciBwcm9jZXNzID0gbW9kdWxlLmV4cG9ydHMgPSB7fTtcbnZhciBxdWV1ZSA9IFtdO1xudmFyIGRyYWluaW5nID0gZmFsc2U7XG52YXIgY3VycmVudFF1ZXVlO1xudmFyIHF1ZXVlSW5kZXggPSAtMTtcblxuZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCkge1xuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgaWYgKGN1cnJlbnRRdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgcXVldWUgPSBjdXJyZW50UXVldWUuY29uY2F0KHF1ZXVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgfVxuICAgIGlmIChxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgZHJhaW5RdWV1ZSgpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZHJhaW5RdWV1ZSgpIHtcbiAgICBpZiAoZHJhaW5pbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgdGltZW91dCA9IHNldFRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTtcbiAgICBkcmFpbmluZyA9IHRydWU7XG5cbiAgICB2YXIgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIHdoaWxlKGxlbikge1xuICAgICAgICBjdXJyZW50UXVldWUgPSBxdWV1ZTtcbiAgICAgICAgcXVldWUgPSBbXTtcbiAgICAgICAgd2hpbGUgKCsrcXVldWVJbmRleCA8IGxlbikge1xuICAgICAgICAgICAgY3VycmVudFF1ZXVlW3F1ZXVlSW5kZXhdLnJ1bigpO1xuICAgICAgICB9XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICAgICAgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIH1cbiAgICBjdXJyZW50UXVldWUgPSBudWxsO1xuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xufVxuXG5wcm9jZXNzLm5leHRUaWNrID0gZnVuY3Rpb24gKGZ1bikge1xuICAgIHZhciBhcmdzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGggLSAxKTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGFyZ3NbaSAtIDFdID0gYXJndW1lbnRzW2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIHF1ZXVlLnB1c2gobmV3IEl0ZW0oZnVuLCBhcmdzKSk7XG4gICAgaWYgKCFkcmFpbmluZykge1xuICAgICAgICBzZXRUaW1lb3V0KGRyYWluUXVldWUsIDApO1xuICAgIH1cbn07XG5cbi8vIHY4IGxpa2VzIHByZWRpY3RpYmxlIG9iamVjdHNcbmZ1bmN0aW9uIEl0ZW0oZnVuLCBhcnJheSkge1xuICAgIHRoaXMuZnVuID0gZnVuO1xuICAgIHRoaXMuYXJyYXkgPSBhcnJheTtcbn1cbkl0ZW0ucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmZ1bi5hcHBseShudWxsLCB0aGlzLmFycmF5KTtcbn07XG5wcm9jZXNzLnRpdGxlID0gJ2Jyb3dzZXInO1xucHJvY2Vzcy5icm93c2VyID0gdHJ1ZTtcbnByb2Nlc3MuZW52ID0ge307XG5wcm9jZXNzLmFyZ3YgPSBbXTtcbnByb2Nlc3MudmVyc2lvbiA9ICcnOyAvLyBlbXB0eSBzdHJpbmcgdG8gYXZvaWQgcmVnZXhwIGlzc3Vlc1xucHJvY2Vzcy52ZXJzaW9ucyA9IHt9O1xuXG5mdW5jdGlvbiBub29wKCkge31cblxucHJvY2Vzcy5vbiA9IG5vb3A7XG5wcm9jZXNzLmFkZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3Mub25jZSA9IG5vb3A7XG5wcm9jZXNzLm9mZiA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUxpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlQWxsTGlzdGVuZXJzID0gbm9vcDtcbnByb2Nlc3MuZW1pdCA9IG5vb3A7XG5cbnByb2Nlc3MuYmluZGluZyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcblxuLy8gVE9ETyhzaHR5bG1hbilcbnByb2Nlc3MuY3dkID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gJy8nIH07XG5wcm9jZXNzLmNoZGlyID0gZnVuY3Rpb24gKGRpcikge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xucHJvY2Vzcy51bWFzayA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gMDsgfTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTMtMjAxNCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICpcbiAqL1xuXG5cInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb25zdHJ1Y3RzIGFuIGVudW1lcmF0aW9uIHdpdGgga2V5cyBlcXVhbCB0byB0aGVpciB2YWx1ZS5cbiAqXG4gKiBGb3IgZXhhbXBsZTpcbiAqXG4gKiAgIHZhciBDT0xPUlMgPSBrZXlNaXJyb3Ioe2JsdWU6IG51bGwsIHJlZDogbnVsbH0pO1xuICogICB2YXIgbXlDb2xvciA9IENPTE9SUy5ibHVlO1xuICogICB2YXIgaXNDb2xvclZhbGlkID0gISFDT0xPUlNbbXlDb2xvcl07XG4gKlxuICogVGhlIGxhc3QgbGluZSBjb3VsZCBub3QgYmUgcGVyZm9ybWVkIGlmIHRoZSB2YWx1ZXMgb2YgdGhlIGdlbmVyYXRlZCBlbnVtIHdlcmVcbiAqIG5vdCBlcXVhbCB0byB0aGVpciBrZXlzLlxuICpcbiAqICAgSW5wdXQ6ICB7a2V5MTogdmFsMSwga2V5MjogdmFsMn1cbiAqICAgT3V0cHV0OiB7a2V5MToga2V5MSwga2V5Mjoga2V5Mn1cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gb2JqXG4gKiBAcmV0dXJuIHtvYmplY3R9XG4gKi9cbnZhciBrZXlNaXJyb3IgPSBmdW5jdGlvbihvYmopIHtcbiAgdmFyIHJldCA9IHt9O1xuICB2YXIga2V5O1xuICBpZiAoIShvYmogaW5zdGFuY2VvZiBPYmplY3QgJiYgIUFycmF5LmlzQXJyYXkob2JqKSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2tleU1pcnJvciguLi4pOiBBcmd1bWVudCBtdXN0IGJlIGFuIG9iamVjdC4nKTtcbiAgfVxuICBmb3IgKGtleSBpbiBvYmopIHtcbiAgICBpZiAoIW9iai5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgcmV0W2tleV0gPSBrZXk7XG4gIH1cbiAgcmV0dXJuIHJldDtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ga2V5TWlycm9yO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgY3JlYXRlTWFya3VwRm9yU3R5bGVzID0gcmVxdWlyZSgnLi4vY3JlYXRlLW1hcmt1cC1mb3Itc3R5bGVzJyk7XG52YXIgUHJlZml4ZXIgPSByZXF1aXJlKCcuLi9wcmVmaXhlcicpO1xuXG52YXIgUmVhY3QgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdy5SZWFjdCA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwuUmVhY3QgOiBudWxsKTtcblxudmFyIGJ1aWxkQ3NzU3RyaW5nID0gZnVuY3Rpb24gYnVpbGRDc3NTdHJpbmcoc2VsZWN0b3IsIHJ1bGVzKSB7XG4gIGlmICghc2VsZWN0b3IgfHwgIXJ1bGVzKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHByZWZpeGVkUnVsZXMgPSBQcmVmaXhlci5nZXRQcmVmaXhlZFN0eWxlKHJ1bGVzLCAnY3NzJyk7XG4gIHZhciBzZXJpYWxpemVkUnVsZXMgPSBjcmVhdGVNYXJrdXBGb3JTdHlsZXMocHJlZml4ZWRSdWxlcyk7XG5cbiAgcmV0dXJuIHNlbGVjdG9yICsgJ3snICsgc2VyaWFsaXplZFJ1bGVzICsgJ30nO1xufTtcblxudmFyIFN0eWxlID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICBkaXNwbGF5TmFtZTogJ1N0eWxlJyxcblxuICBwcm9wVHlwZXM6IHtcbiAgICBydWxlczogUmVhY3QuUHJvcFR5cGVzLm9iamVjdCxcbiAgICBzY29wZVNlbGVjdG9yOiBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nXG4gIH0sXG5cbiAgZ2V0RGVmYXVsdFByb3BzOiBmdW5jdGlvbiBnZXREZWZhdWx0UHJvcHMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNjb3BlU2VsZWN0b3I6ICcnXG4gICAgfTtcbiAgfSxcblxuICBfYnVpbGRTdHlsZXM6IGZ1bmN0aW9uIF9idWlsZFN0eWxlcyhzdHlsZXMpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHN0eWxlcykucmVkdWNlKGZ1bmN0aW9uIChhY2N1bXVsYXRvciwgc2VsZWN0b3IpIHtcbiAgICAgIHZhciBydWxlcyA9IHN0eWxlc1tzZWxlY3Rvcl07XG5cbiAgICAgIGlmIChzZWxlY3RvciA9PT0gJ21lZGlhUXVlcmllcycpIHtcbiAgICAgICAgYWNjdW11bGF0b3IgKz0gX3RoaXMuX2J1aWxkTWVkaWFRdWVyeVN0cmluZyhydWxlcyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgY29tcGxldGVTZWxlY3RvciA9IChfdGhpcy5wcm9wcy5zY29wZVNlbGVjdG9yID8gX3RoaXMucHJvcHMuc2NvcGVTZWxlY3RvciArICcgJyA6ICcnKSArIHNlbGVjdG9yO1xuICAgICAgICBhY2N1bXVsYXRvciArPSBidWlsZENzc1N0cmluZyhjb21wbGV0ZVNlbGVjdG9yLCBydWxlcyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBhY2N1bXVsYXRvcjtcbiAgICB9LCAnJyk7XG4gIH0sXG5cbiAgX2J1aWxkTWVkaWFRdWVyeVN0cmluZzogZnVuY3Rpb24gX2J1aWxkTWVkaWFRdWVyeVN0cmluZyhtZWRpYVF1ZXJ5T2JqKSB7XG4gICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICB2YXIgY29udGV4dE1lZGlhUXVlcmllcyA9IHRoaXMuX2dldENvbnRleHRNZWRpYVF1ZXJpZXMoKTtcbiAgICB2YXIgbWVkaWFRdWVyeVN0cmluZyA9ICcnO1xuXG4gICAgT2JqZWN0LmtleXMobWVkaWFRdWVyeU9iaikuZm9yRWFjaChmdW5jdGlvbiAocXVlcnkpIHtcbiAgICAgIHZhciBjb21wbGV0ZVF1ZXJ5ID0gY29udGV4dE1lZGlhUXVlcmllc1txdWVyeV0gPyBjb250ZXh0TWVkaWFRdWVyaWVzW3F1ZXJ5XSA6IHF1ZXJ5O1xuICAgICAgbWVkaWFRdWVyeVN0cmluZyArPSAnQG1lZGlhICcgKyBjb21wbGV0ZVF1ZXJ5ICsgJ3snICsgX3RoaXMyLl9idWlsZFN0eWxlcyhtZWRpYVF1ZXJ5T2JqW3F1ZXJ5XSkgKyAnfSc7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gbWVkaWFRdWVyeVN0cmluZztcbiAgfSxcblxuICBfZ2V0Q29udGV4dE1lZGlhUXVlcmllczogZnVuY3Rpb24gX2dldENvbnRleHRNZWRpYVF1ZXJpZXMoKSB7XG4gICAgdmFyIGNvbnRleHRNZWRpYVF1ZXJpZXMgPSB7fTtcbiAgICBpZiAodGhpcy5jb250ZXh0ICYmIHRoaXMuY29udGV4dC5tZWRpYVF1ZXJpZXMpIHtcbiAgICAgIE9iamVjdC5rZXlzKHRoaXMuY29udGV4dC5tZWRpYVF1ZXJpZXMpLmZvckVhY2goKGZ1bmN0aW9uIChxdWVyeSkge1xuICAgICAgICBjb250ZXh0TWVkaWFRdWVyaWVzW3F1ZXJ5XSA9IHRoaXMuY29udGV4dC5tZWRpYVF1ZXJpZXNbcXVlcnldLm1lZGlhO1xuICAgICAgfSkuYmluZCh0aGlzKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNvbnRleHRNZWRpYVF1ZXJpZXM7XG4gIH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgaWYgKCF0aGlzLnByb3BzLnJ1bGVzKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICB2YXIgc3R5bGVzID0gdGhpcy5fYnVpbGRTdHlsZXModGhpcy5wcm9wcy5ydWxlcyk7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgnc3R5bGUnLCB7IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7IF9faHRtbDogc3R5bGVzIH0gfSk7XG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFN0eWxlOyIsIi8qIEBmbG93ICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIEV4ZWN1dGlvbkVudmlyb25tZW50ID0gcmVxdWlyZSgnZXhlbnYnKTtcblxudmFyIF9tYXRjaE1lZGlhRnVuY3Rpb24gPSBFeGVjdXRpb25FbnZpcm9ubWVudC5jYW5Vc2VET00gJiYgd2luZG93ICYmIHdpbmRvdy5tYXRjaE1lZGlhICYmIGZ1bmN0aW9uIChtZWRpYVF1ZXJ5U3RyaW5nKSB7XG4gIHJldHVybiB3aW5kb3cubWF0Y2hNZWRpYShtZWRpYVF1ZXJ5U3RyaW5nKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBjYW5NYXRjaE1lZGlhOiBmdW5jdGlvbiBjYW5NYXRjaE1lZGlhKCkge1xuICAgIHJldHVybiB0eXBlb2YgX21hdGNoTWVkaWFGdW5jdGlvbiA9PT0gJ2Z1bmN0aW9uJztcbiAgfSxcblxuICBtYXRjaE1lZGlhOiBmdW5jdGlvbiBtYXRjaE1lZGlhKHF1ZXJ5KSB7XG4gICAgcmV0dXJuIF9tYXRjaE1lZGlhRnVuY3Rpb24ocXVlcnkpO1xuICB9LFxuXG4gIHNldE1hdGNoTWVkaWE6IGZ1bmN0aW9uIHNldE1hdGNoTWVkaWEobmV4dE1hdGNoTWVkaWFGdW5jdGlvbikge1xuICAgIF9tYXRjaE1lZGlhRnVuY3Rpb24gPSBuZXh0TWF0Y2hNZWRpYUZ1bmN0aW9uO1xuICB9XG59OyIsIi8qIEBmbG93ICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGNyZWF0ZU1hcmt1cEZvclN0eWxlcyA9IGZ1bmN0aW9uIGNyZWF0ZU1hcmt1cEZvclN0eWxlcyhzdHlsZSwgc3BhY2VzKSB7XG4gIHNwYWNlcyA9IHNwYWNlcyB8fCAnJztcbiAgcmV0dXJuIE9iamVjdC5rZXlzKHN0eWxlKS5tYXAoZnVuY3Rpb24gKHByb3BlcnR5KSB7XG4gICAgcmV0dXJuIHNwYWNlcyArIHByb3BlcnR5ICsgJzogJyArIHN0eWxlW3Byb3BlcnR5XSArICc7JztcbiAgfSkuam9pbignXFxuJyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZU1hcmt1cEZvclN0eWxlczsiLCIvKiBAZmxvdyAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSAoZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCd2YWx1ZScgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0pKCk7XG5cbnZhciBfZ2V0ID0gZnVuY3Rpb24gZ2V0KF94LCBfeDIsIF94MykgeyB2YXIgX2FnYWluID0gdHJ1ZTsgX2Z1bmN0aW9uOiB3aGlsZSAoX2FnYWluKSB7IHZhciBvYmplY3QgPSBfeCwgcHJvcGVydHkgPSBfeDIsIHJlY2VpdmVyID0gX3gzOyBkZXNjID0gcGFyZW50ID0gZ2V0dGVyID0gdW5kZWZpbmVkOyBfYWdhaW4gPSBmYWxzZTsgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgcHJvcGVydHkpOyBpZiAoZGVzYyA9PT0gdW5kZWZpbmVkKSB7IHZhciBwYXJlbnQgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Yob2JqZWN0KTsgaWYgKHBhcmVudCA9PT0gbnVsbCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9IGVsc2UgeyBfeCA9IHBhcmVudDsgX3gyID0gcHJvcGVydHk7IF94MyA9IHJlY2VpdmVyOyBfYWdhaW4gPSB0cnVlOyBjb250aW51ZSBfZnVuY3Rpb247IH0gfSBlbHNlIGlmICgndmFsdWUnIGluIGRlc2MpIHsgcmV0dXJuIGRlc2MudmFsdWU7IH0gZWxzZSB7IHZhciBnZXR0ZXIgPSBkZXNjLmdldDsgaWYgKGdldHRlciA9PT0gdW5kZWZpbmVkKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gcmV0dXJuIGdldHRlci5jYWxsKHJlY2VpdmVyKTsgfSB9IH07XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcignQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uJyk7IH0gfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSAnZnVuY3Rpb24nICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcignU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCAnICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciByZXNvbHZlU3R5bGVzID0gcmVxdWlyZSgnLi9yZXNvbHZlLXN0eWxlcy5qcycpO1xuXG52YXIgZW5oYW5jZVdpdGhSYWRpdW0gPSBmdW5jdGlvbiBlbmhhbmNlV2l0aFJhZGl1bShDb21wb3NlZENvbXBvbmVudCkge1xuICB2YXIgZGlzcGxheU5hbWUgPSBDb21wb3NlZENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb3NlZENvbXBvbmVudC5uYW1lIHx8ICdDb21wb25lbnQnO1xuXG4gIHZhciBSYWRpdW1FbmhhbmNlciA9IChmdW5jdGlvbiAoX0NvbXBvc2VkQ29tcG9uZW50KSB7XG4gICAgZnVuY3Rpb24gUmFkaXVtRW5oYW5jZXIoKSB7XG4gICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmFkaXVtRW5oYW5jZXIpO1xuXG4gICAgICBfZ2V0KE9iamVjdC5nZXRQcm90b3R5cGVPZihSYWRpdW1FbmhhbmNlci5wcm90b3R5cGUpLCAnY29uc3RydWN0b3InLCB0aGlzKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXG4gICAgICB0aGlzLnN0YXRlID0gdGhpcy5zdGF0ZSB8fCB7fTtcbiAgICAgIHRoaXMuc3RhdGUuX3JhZGl1bVN0eWxlU3RhdGUgPSB7fTtcbiAgICB9XG5cbiAgICBfaW5oZXJpdHMoUmFkaXVtRW5oYW5jZXIsIF9Db21wb3NlZENvbXBvbmVudCk7XG5cbiAgICBfY3JlYXRlQ2xhc3MoUmFkaXVtRW5oYW5jZXIsIFt7XG4gICAgICBrZXk6ICdyZW5kZXInLFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgdmFyIHJlbmRlcmVkRWxlbWVudCA9IF9nZXQoT2JqZWN0LmdldFByb3RvdHlwZU9mKFJhZGl1bUVuaGFuY2VyLnByb3RvdHlwZSksICdyZW5kZXInLCB0aGlzKS5jYWxsKHRoaXMpO1xuICAgICAgICByZXR1cm4gcmVzb2x2ZVN0eWxlcyh0aGlzLCByZW5kZXJlZEVsZW1lbnQpO1xuICAgICAgfVxuICAgIH0sIHtcbiAgICAgIGtleTogJ2NvbXBvbmVudFdpbGxVbm1vdW50JyxcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgICAgaWYgKF9nZXQoT2JqZWN0LmdldFByb3RvdHlwZU9mKFJhZGl1bUVuaGFuY2VyLnByb3RvdHlwZSksICdjb21wb25lbnRXaWxsVW5tb3VudCcsIHRoaXMpKSB7XG4gICAgICAgICAgX2dldChPYmplY3QuZ2V0UHJvdG90eXBlT2YoUmFkaXVtRW5oYW5jZXIucHJvdG90eXBlKSwgJ2NvbXBvbmVudFdpbGxVbm1vdW50JywgdGhpcykuY2FsbCh0aGlzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLl9yYWRpdW1Nb3VzZVVwTGlzdGVuZXIpIHtcbiAgICAgICAgICB0aGlzLl9yYWRpdW1Nb3VzZVVwTGlzdGVuZXIucmVtb3ZlKCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5fcmFkaXVtTWVkaWFRdWVyeUxpc3RlbmVyc0J5UXVlcnkpIHtcbiAgICAgICAgICBPYmplY3Qua2V5cyh0aGlzLl9yYWRpdW1NZWRpYVF1ZXJ5TGlzdGVuZXJzQnlRdWVyeSkuZm9yRWFjaChmdW5jdGlvbiAocXVlcnkpIHtcbiAgICAgICAgICAgIHRoaXMuX3JhZGl1bU1lZGlhUXVlcnlMaXN0ZW5lcnNCeVF1ZXJ5W3F1ZXJ5XS5yZW1vdmUoKTtcbiAgICAgICAgICB9LCB0aGlzKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBSYWRpdW1FbmhhbmNlcjtcbiAgfSkoQ29tcG9zZWRDb21wb25lbnQpO1xuXG4gIC8vIENsYXNzIGluaGVyaXRhbmNlIHVzZXMgT2JqZWN0LmNyZWF0ZSBhbmQgYmVjYXVzZSBvZiBfX3Byb3RvX18gaXNzdWVzXG4gIC8vIHdpdGggSUUgPDEwIGFueSBzdGF0aWMgcHJvcGVydGllcyBvZiB0aGUgc3VwZXJjbGFzcyBhcmVuJ3QgaW5oZXJpdGVkIGFuZFxuICAvLyBzbyBuZWVkIHRvIGJlIG1hbnVhbGx5IHBvcHVsYXRlZFxuICAvLyBTZWUgaHR0cDovL2JhYmVsanMuaW8vZG9jcy9hZHZhbmNlZC9jYXZlYXRzLyNjbGFzc2VzLTEwLWFuZC1iZWxvdy1cbiAgdmFyIHN0YXRpY0tleXMgPSBbJ2RlZmF1bHRQcm9wcycsICdwcm9wVHlwZXMnLCAnY29udGV4dFR5cGVzJywgJ2NoaWxkQ29udGV4dFR5cGVzJ107XG5cbiAgc3RhdGljS2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICBpZiAoQ29tcG9zZWRDb21wb25lbnQuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgUmFkaXVtRW5oYW5jZXJba2V5XSA9IENvbXBvc2VkQ29tcG9uZW50W2tleV07XG4gICAgfVxuICB9KTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgZml4ZXMgUmVhY3QgSG90IExvYWRlciBieSBleHBvc2luZyB0aGUgb3JpZ2luYWwgY29tcG9uZW50cyB0b3AgbGV2ZWxcbiAgICAvLyBwcm90b3R5cGUgbWV0aG9kcyBvbiB0aGUgUmFkaXVtIGVuaGFuY2VkIHByb3RvdHlwZSBhcyBkaXNjdXNzZWQgaW4gIzIxOS5cbiAgICBPYmplY3Qua2V5cyhDb21wb3NlZENvbXBvbmVudC5wcm90b3R5cGUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgaWYgKCFSYWRpdW1FbmhhbmNlci5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICBSYWRpdW1FbmhhbmNlci5wcm90b3R5cGVba2V5XSA9IENvbXBvc2VkQ29tcG9uZW50LnByb3RvdHlwZVtrZXldO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgUmFkaXVtRW5oYW5jZXIuZGlzcGxheU5hbWUgPSAnUmFkaXVtKCcgKyBkaXNwbGF5TmFtZSArICcpJztcblxuICByZXR1cm4gUmFkaXVtRW5oYW5jZXI7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVuaGFuY2VXaXRoUmFkaXVtOyIsIi8qIEBmbG93ICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFZBTElEX0tFWVMgPSBbJzphY3RpdmUnLCAnOmZvY3VzJywgJzpob3ZlciddO1xuXG52YXIgZ2V0U3RhdGUgPSBmdW5jdGlvbiBnZXRTdGF0ZShzdGF0ZSwgZWxlbWVudEtleSwgdmFsdWUpIHtcbiAgZWxlbWVudEtleSA9IGVsZW1lbnRLZXkgfHwgJ21haW4nO1xuXG4gIGlmIChWQUxJRF9LRVlTLmluZGV4T2YodmFsdWUpID09PSAtMSkge1xuICAgIHRocm93IG5ldyBFcnJvcignUmFkaXVtLmdldFN0YXRlIGludmFsaWQgdmFsdWUgcGFyYW06IGAnICsgdmFsdWUgKyAnYCcpO1xuICB9XG5cbiAgcmV0dXJuICEhKHN0YXRlICYmIHN0YXRlLl9yYWRpdW1TdHlsZVN0YXRlICYmIHN0YXRlLl9yYWRpdW1TdHlsZVN0YXRlW2VsZW1lbnRLZXldICYmIHN0YXRlLl9yYWRpdW1TdHlsZVN0YXRlW2VsZW1lbnRLZXldW3ZhbHVlXSkgfHwgZmFsc2U7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFN0YXRlOyIsIid1c2Ugc3RyaWN0JztcblxudmFyIEVuaGFuY2VyID0gcmVxdWlyZSgnLi9lbmhhbmNlcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChDb21wb3NlZENvbXBvbmVudCkge1xuICByZXR1cm4gRW5oYW5jZXIoQ29tcG9zZWRDb21wb25lbnQpO1xufTtcbm1vZHVsZS5leHBvcnRzLlN0eWxlID0gcmVxdWlyZSgnLi9jb21wb25lbnRzL3N0eWxlJyk7XG5tb2R1bGUuZXhwb3J0cy5nZXRTdGF0ZSA9IHJlcXVpcmUoJy4vZ2V0LXN0YXRlJyk7XG5tb2R1bGUuZXhwb3J0cy5rZXlmcmFtZXMgPSByZXF1aXJlKCcuL2tleWZyYW1lcycpO1xubW9kdWxlLmV4cG9ydHMuQ29uZmlnID0gcmVxdWlyZSgnLi9jb25maWcnKTsiLCIvKiBAZmxvdyAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBjcmVhdGVNYXJrdXBGb3JTdHlsZXMgPSByZXF1aXJlKCcuL2NyZWF0ZS1tYXJrdXAtZm9yLXN0eWxlcycpO1xudmFyIFByZWZpeGVyID0gcmVxdWlyZSgnLi9wcmVmaXhlcicpO1xuXG52YXIgRXhlY3V0aW9uRW52aXJvbm1lbnQgPSByZXF1aXJlKCdleGVudicpO1xuXG52YXIgaXNBbmltYXRpb25TdXBwb3J0ZWQgPSBFeGVjdXRpb25FbnZpcm9ubWVudC5jYW5Vc2VET00gJiYgUHJlZml4ZXIuZ2V0UHJlZml4ZWRQcm9wZXJ0eU5hbWUoJ2FuaW1hdGlvbicpICE9PSBmYWxzZTtcblxudmFyIGFuaW1hdGlvbkluZGV4ID0gMTtcbnZhciBhbmltYXRpb25TdHlsZVNoZWV0ID0gbnVsbDtcbnZhciBrZXlmcmFtZXNQcmVmaXhlZCA9IG51bGw7XG5cbmlmIChpc0FuaW1hdGlvblN1cHBvcnRlZCkge1xuICBhbmltYXRpb25TdHlsZVNoZWV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChhbmltYXRpb25TdHlsZVNoZWV0KTtcblxuICAvLyBUZXN0IGlmIHByZWZpeCBuZWVkZWQgZm9yIGtleWZyYW1lcyAoY29waWVkIGZyb20gUHJlZml4RnJlZSlcbiAga2V5ZnJhbWVzUHJlZml4ZWQgPSAna2V5ZnJhbWVzJztcbiAgYW5pbWF0aW9uU3R5bGVTaGVldC50ZXh0Q29udGVudCA9ICdAa2V5ZnJhbWVzIHt9JztcbiAgaWYgKCFhbmltYXRpb25TdHlsZVNoZWV0LnNoZWV0LmNzc1J1bGVzLmxlbmd0aCkge1xuICAgIGtleWZyYW1lc1ByZWZpeGVkID0gUHJlZml4ZXIuY3NzUHJlZml4ICsgJ2tleWZyYW1lcyc7XG4gIH1cbn1cblxuLy8gU2ltcGxlIGFuaW1hdGlvbiBoZWxwZXIgdGhhdCBpbmplY3RzIENTUyBpbnRvIGEgc3R5bGUgb2JqZWN0IGNvbnRhaW5pbmcgdGhlXG4vLyBrZXlmcmFtZXMsIGFuZCByZXR1cm5zIGEgc3RyaW5nIHdpdGggdGhlIGdlbmVyYXRlZCBhbmltYXRpb24gbmFtZS5cbnZhciBrZXlmcmFtZXMgPSBmdW5jdGlvbiBrZXlmcmFtZXMoa2V5ZnJhbWVSdWxlcykge1xuICB2YXIgbmFtZSA9ICdBbmltYXRpb24nICsgYW5pbWF0aW9uSW5kZXg7XG4gIGFuaW1hdGlvbkluZGV4ICs9IDE7XG5cbiAgaWYgKCFpc0FuaW1hdGlvblN1cHBvcnRlZCkge1xuICAgIHJldHVybiBuYW1lO1xuICB9XG5cbiAgdmFyIHJ1bGUgPSAnQCcgKyBrZXlmcmFtZXNQcmVmaXhlZCArICcgJyArIG5hbWUgKyAnIHtcXG4nICsgT2JqZWN0LmtleXMoa2V5ZnJhbWVSdWxlcykubWFwKGZ1bmN0aW9uIChwZXJjZW50YWdlKSB7XG4gICAgdmFyIHByb3BzID0ga2V5ZnJhbWVSdWxlc1twZXJjZW50YWdlXTtcbiAgICB2YXIgcHJlZml4ZWRQcm9wcyA9IFByZWZpeGVyLmdldFByZWZpeGVkU3R5bGUocHJvcHMsICdjc3MnKTtcbiAgICB2YXIgc2VyaWFsaXplZFByb3BzID0gY3JlYXRlTWFya3VwRm9yU3R5bGVzKHByZWZpeGVkUHJvcHMsICcgICcpO1xuICAgIHJldHVybiAnICAnICsgcGVyY2VudGFnZSArICcge1xcbiAgJyArIHNlcmlhbGl6ZWRQcm9wcyArICdcXG4gIH0nO1xuICB9KS5qb2luKCdcXG4nKSArICdcXG59XFxuJztcblxuICAvLyBmb3IgZmxvd1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICBpZiAoIWFuaW1hdGlvblN0eWxlU2hlZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2tleWZyYW1lcyBub3QgaW5pdGlhbGl6ZWQgcHJvcGVybHknKTtcbiAgfVxuXG4gIGFuaW1hdGlvblN0eWxlU2hlZXQuc2hlZXQuaW5zZXJ0UnVsZShydWxlLCBhbmltYXRpb25TdHlsZVNoZWV0LnNoZWV0LmNzc1J1bGVzLmxlbmd0aCk7XG4gIHJldHVybiBuYW1lO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBrZXlmcmFtZXM7IiwiLyogQGZsb3cgKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NhbGxiYWNrcyA9IFtdO1xudmFyIF9tb3VzZVVwTGlzdGVuZXJJc0FjdGl2ZSA9IGZhbHNlO1xuXG52YXIgX2hhbmRsZU1vdXNlVXAgPSBmdW5jdGlvbiBfaGFuZGxlTW91c2VVcChldikge1xuICBfY2FsbGJhY2tzLmZvckVhY2goZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgY2FsbGJhY2soZXYpO1xuICB9KTtcbn07XG5cbnZhciBzdWJzY3JpYmUgPSBmdW5jdGlvbiBzdWJzY3JpYmUoY2FsbGJhY2spIHtcbiAgaWYgKF9jYWxsYmFja3MuaW5kZXhPZihjYWxsYmFjaykgPT09IC0xKSB7XG4gICAgX2NhbGxiYWNrcy5wdXNoKGNhbGxiYWNrKTtcbiAgfVxuXG4gIGlmICghX21vdXNlVXBMaXN0ZW5lcklzQWN0aXZlKSB7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBfaGFuZGxlTW91c2VVcCk7XG4gICAgX21vdXNlVXBMaXN0ZW5lcklzQWN0aXZlID0gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICB2YXIgaW5kZXggPSBfY2FsbGJhY2tzLmluZGV4T2YoY2FsbGJhY2spO1xuICAgICAgX2NhbGxiYWNrcy5zcGxpY2UoaW5kZXgsIDEpO1xuXG4gICAgICBpZiAoX2NhbGxiYWNrcy5sZW5ndGggPT09IDAgJiYgX21vdXNlVXBMaXN0ZW5lcklzQWN0aXZlKSB7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgX2hhbmRsZU1vdXNlVXApO1xuICAgICAgICBfbW91c2VVcExpc3RlbmVySXNBY3RpdmUgPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc3Vic2NyaWJlOiBzdWJzY3JpYmVcbn07IiwiLyoqXG4gKiBCYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20vanNzdHlsZXMvY3NzLXZlbmRvciwgYnV0IHdpdGhvdXQgaGF2aW5nIHRvXG4gKiBjb252ZXJ0IGJldHdlZW4gZGlmZmVyZW50IGNhc2VzIGFsbCB0aGUgdGltZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBFeGVjdXRpb25FbnZpcm9ubWVudCA9IHJlcXVpcmUoJ2V4ZW52Jyk7XG52YXIgYXJyYXlGaW5kID0gcmVxdWlyZSgnYXJyYXktZmluZCcpO1xuXG52YXIgaW5mb0J5Q3NzUHJlZml4ID0ge1xuICAnLW1vei0nOiB7XG4gICAgY3NzUHJlZml4OiAnLW1vei0nLFxuICAgIGpzUHJlZml4OiAnTW96JyxcbiAgICBhbHRlcm5hdGl2ZVByb3BlcnRpZXM6IHtcbiAgICAgIC8vIE9MRCAtIEZpcmVmb3ggMTktXG4gICAgICBmbGV4OiBbeyBjc3M6ICctbW96LWJveC1mbGV4JywganM6ICdNb3pCb3hGbGV4JyB9XSxcbiAgICAgIG9yZGVyOiBbeyBjc3M6ICctbW96LWJveC1vcmRpbmFsLWdyb3VwJywganM6ICdNb3pCb3hPcmRpbmFsR3JvdXAnIH1dXG4gICAgfSxcbiAgICBhbHRlcm5hdGl2ZVZhbHVlczoge1xuICAgICAgZGlzcGxheToge1xuICAgICAgICAvLyBPTEQgLSBGaXJlZm94IDE5LVxuICAgICAgICBmbGV4OiBbJy1tb3otYm94J11cbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gICctbXMtJzoge1xuICAgIGNzc1ByZWZpeDogJy1tcy0nLFxuICAgIGpzUHJlZml4OiAnbXMnLFxuICAgIGFsdGVybmF0aXZlVmFsdWVzOiB7XG4gICAgICBkaXNwbGF5OiB7XG4gICAgICAgIC8vIFRXRUVORVIgLSBJRSAxMFxuICAgICAgICBmbGV4OiBbJy1tcy1mbGV4Ym94J10sXG4gICAgICAgIG9yZGVyOiBbJy1tcy1mbGV4LW9yZGVyJ11cbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gICctby0nOiB7XG4gICAgY3NzUHJlZml4OiAnLW8tJyxcbiAgICBqc1ByZWZpeDogJ08nXG4gIH0sXG4gICctd2Via2l0LSc6IHtcbiAgICBjc3NQcmVmaXg6ICctd2Via2l0LScsXG4gICAganNQcmVmaXg6ICdXZWJraXQnLFxuICAgIGFsdGVybmF0aXZlUHJvcGVydGllczoge1xuICAgICAgLy8gT0xEIC0gaU9TIDYtLCBTYWZhcmkgMy4xLTZcbiAgICAgIGZsZXg6IFt7IGNzczogJy13ZWJraXQtYm94LWZsZXgnLCBqczogJ1dlYmtpdEJveEZsZXgnIH1dLFxuICAgICAgb3JkZXI6IFt7IGNzczogJy13ZWJraXQtYm94LW9yZGluYWwtZ3JvdXAnLCBqczogJ1dlYmtpdEJveE9yZGluYWxHcm91cCcgfV1cbiAgICB9LFxuICAgIGFsdGVybmF0aXZlVmFsdWVzOiB7XG4gICAgICBkaXNwbGF5OiB7XG4gICAgICAgIGZsZXg6IFsnLXdlYmtpdC1ib3gnXSAvLyBPTEQgLSBpT1MgNi0sIFNhZmFyaSAzLjEtNlxuICAgICAgfVxuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBDU1MgcHJvcGVydGllcyB3aGljaCBhY2NlcHQgbnVtYmVycyBidXQgYXJlIG5vdCBpbiB1bml0cyBvZiBcInB4XCIuXG4gKiBDb3BpZWQgZnJvbSBSZWFjdCBjb3JlIEp1bmUgMjIsIDIwMTUuXG4gKiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvYmxvYi9cbiAqIGJhODFiNjBhZDhlOTNiNzQ3YmU0MmEwM2I3OTcwNjU5MzJjNDljOTYvXG4gKiBzcmMvcmVuZGVyZXJzL2RvbS9zaGFyZWQvQ1NTUHJvcGVydHkuanNcbiAqL1xudmFyIGlzVW5pdGxlc3NOdW1iZXIgPSB7XG4gIGJveEZsZXg6IHRydWUsXG4gIGJveEZsZXhHcm91cDogdHJ1ZSxcbiAgY29sdW1uQ291bnQ6IHRydWUsXG4gIGZsZXg6IHRydWUsXG4gIGZsZXhHcm93OiB0cnVlLFxuICBmbGV4UG9zaXRpdmU6IHRydWUsXG4gIGZsZXhTaHJpbms6IHRydWUsXG4gIGZsZXhOZWdhdGl2ZTogdHJ1ZSxcbiAgZm9udFdlaWdodDogdHJ1ZSxcbiAgbGluZUNsYW1wOiB0cnVlLFxuICBsaW5lSGVpZ2h0OiB0cnVlLFxuICBvcGFjaXR5OiB0cnVlLFxuICBvcmRlcjogdHJ1ZSxcbiAgb3JwaGFuczogdHJ1ZSxcbiAgdGFiU2l6ZTogdHJ1ZSxcbiAgd2lkb3dzOiB0cnVlLFxuICB6SW5kZXg6IHRydWUsXG4gIHpvb206IHRydWUsXG5cbiAgLy8gU1ZHLXJlbGF0ZWQgcHJvcGVydGllc1xuICBmaWxsT3BhY2l0eTogdHJ1ZSxcbiAgc3Ryb2tlRGFzaG9mZnNldDogdHJ1ZSxcbiAgc3Ryb2tlT3BhY2l0eTogdHJ1ZSxcbiAgc3Ryb2tlV2lkdGg6IHRydWVcbn07XG5cbnZhciBkb21TdHlsZSA9IHt9O1xudmFyIHByZWZpeGVkUHJvcGVydHlDYWNoZSA9IHt9O1xudmFyIHByZWZpeGVkVmFsdWVDYWNoZSA9IHt9O1xudmFyIHByZWZpeEluZm8gPSB7XG4gIGNzc1ByZWZpeDogJycsXG4gIGpzUHJlZml4OiAnJ1xufTtcblxuaWYgKEV4ZWN1dGlvbkVudmlyb25tZW50LmNhblVzZURPTSkge1xuICBkb21TdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKS5zdHlsZTtcblxuICAvLyBCYXNlZCBvbiBodHRwOi8vZGF2aWR3YWxzaC5uYW1lL3ZlbmRvci1wcmVmaXhcbiAgdmFyIHdpbmRvd1N0eWxlcyA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwgJycpO1xuICB2YXIgcHJlZml4TWF0Y2ggPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh3aW5kb3dTdHlsZXMpLmpvaW4oJycpLm1hdGNoKC8tKG1venx3ZWJraXR8bXN8byktLyk7XG4gIHZhciBjc3NWZW5kb3JQcmVmaXggPSBwcmVmaXhNYXRjaCAmJiBwcmVmaXhNYXRjaFswXTtcblxuICBwcmVmaXhJbmZvID0gaW5mb0J5Q3NzUHJlZml4W2Nzc1ZlbmRvclByZWZpeF0gfHwgcHJlZml4SW5mbztcbn1cblxudmFyIF9jYW1lbENhc2VSZWdleCA9IC8oW2Etel0pPyhbQS1aXSkvZztcbnZhciBfY2FtZWxDYXNlUmVwbGFjZXIgPSBmdW5jdGlvbiBfY2FtZWxDYXNlUmVwbGFjZXIobWF0Y2gsIHAxLCBwMikge1xuICByZXR1cm4gcDEgKyAnLScgKyBwMi50b0xvd2VyQ2FzZSgpO1xufTtcbnZhciBfY2FtZWxDYXNlVG9EYXNoQ2FzZSA9IGZ1bmN0aW9uIF9jYW1lbENhc2VUb0Rhc2hDYXNlKHMpIHtcbiAgcmV0dXJuIHMucmVwbGFjZShfY2FtZWxDYXNlUmVnZXgsIF9jYW1lbENhc2VSZXBsYWNlcik7XG59O1xuXG52YXIgZ2V0UHJlZml4ZWRQcm9wZXJ0eU5hbWUgPSBmdW5jdGlvbiBnZXRQcmVmaXhlZFByb3BlcnR5TmFtZShwcm9wZXJ0eSkge1xuICBpZiAocHJlZml4ZWRQcm9wZXJ0eUNhY2hlLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgIHJldHVybiBwcmVmaXhlZFByb3BlcnR5Q2FjaGVbcHJvcGVydHldO1xuICB9XG5cbiAgdmFyIHVucHJlZml4ZWQgPSB7XG4gICAgY3NzOiBfY2FtZWxDYXNlVG9EYXNoQ2FzZShwcm9wZXJ0eSksXG4gICAganM6IHByb3BlcnR5LFxuICAgIGlzRGVmYXVsdEZvclNlcnZlcjogdHJ1ZVxuICB9O1xuXG4gIC8vIFRyeSB0aGUgcHJlZml4ZWQgdmVyc2lvbiBmaXJzdC4gQ2hyb21lIGluIHBhcnRpY3VsYXIgaGFzIHRoZSBgZmlsdGVyYCBhbmRcbiAgLy8gYHdlYmtpdEZpbHRlcmAgcHJvcGVydGllcyBhdmFpbGFsYmUgb24gdGhlIHN0eWxlIG9iamVjdCwgYnV0IG9ubHkgdGhlXG4gIC8vIHByZWZpeGVkIHZlcnNpb24gYWN0dWFsbHkgd29ya3MuXG4gIHZhciBwb3NzaWJsZVByb3BlcnR5TmFtZXMgPSBbXG4gIC8vIFByZWZpeGVkXG4gIHtcbiAgICBjc3M6IHByZWZpeEluZm8uY3NzUHJlZml4ICsgX2NhbWVsQ2FzZVRvRGFzaENhc2UocHJvcGVydHkpLFxuICAgIGpzOiBwcmVmaXhJbmZvLmpzUHJlZml4ICsgcHJvcGVydHlbMF0udG9VcHBlckNhc2UoKSArIHByb3BlcnR5LnNsaWNlKDEpXG4gIH0sIHVucHJlZml4ZWRdO1xuXG4gIC8vIEFsdGVybmF0aXZlIHByb3BlcnR5IG5hbWVzXG4gIGlmIChwcmVmaXhJbmZvLmFsdGVybmF0aXZlUHJvcGVydGllcyAmJiBwcmVmaXhJbmZvLmFsdGVybmF0aXZlUHJvcGVydGllc1twcm9wZXJ0eV0pIHtcbiAgICBwb3NzaWJsZVByb3BlcnR5TmFtZXMgPSBwb3NzaWJsZVByb3BlcnR5TmFtZXMuY29uY2F0KHByZWZpeEluZm8uYWx0ZXJuYXRpdmVQcm9wZXJ0aWVzW3Byb3BlcnR5XSk7XG4gIH1cblxuICB2YXIgd29ya2luZ1Byb3BlcnR5ID0gYXJyYXlGaW5kKHBvc3NpYmxlUHJvcGVydHlOYW1lcywgZnVuY3Rpb24gKHBvc3NpYmxlUHJvcGVydHlOYW1lKSB7XG4gICAgaWYgKHBvc3NpYmxlUHJvcGVydHlOYW1lLmpzIGluIGRvbVN0eWxlKSB7XG4gICAgICByZXR1cm4gcG9zc2libGVQcm9wZXJ0eU5hbWU7XG4gICAgfVxuICB9KSB8fCBmYWxzZTtcblxuICByZXR1cm4gcHJlZml4ZWRQcm9wZXJ0eUNhY2hlW3Byb3BlcnR5XSA9IHdvcmtpbmdQcm9wZXJ0eTtcbn07XG5cbi8vIFJlYWN0IGlzIHBsYW5uaW5nIHRvIGRlcHJlY2F0ZSBhZGRpbmcgcHggYXV0b21hdGljYWxseVxuLy8gKGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWFjdC9pc3N1ZXMvMTg3MyksIGFuZCBpZiB0aGV5IGRvLCB0aGlzXG4vLyBzaG91bGQgY2hhbmdlIHRvIGEgd2FybmluZyBvciBiZSByZW1vdmVkIGluIGZhdm9yIG9mIFJlYWN0J3Mgd2FybmluZy5cbi8vIFNhbWUgZ29lcyBmb3IgYmVsb3cuXG52YXIgX2FkZFBpeGVsU3VmZml4VG9WYWx1ZUlmTmVlZGVkID0gZnVuY3Rpb24gX2FkZFBpeGVsU3VmZml4VG9WYWx1ZUlmTmVlZGVkKG9yaWdpbmFsUHJvcGVydHksIHZhbHVlKSB7XG4gIGlmICh2YWx1ZSAhPT0gMCAmJiAhaXNOYU4odmFsdWUpICYmICFpc1VuaXRsZXNzTnVtYmVyW29yaWdpbmFsUHJvcGVydHldKSB7XG4gICAgcmV0dXJuIHZhbHVlICsgJ3B4JztcbiAgfVxuICByZXR1cm4gdmFsdWU7XG59O1xuXG52YXIgX2dldFByZWZpeGVkVmFsdWUgPSBmdW5jdGlvbiBfZ2V0UHJlZml4ZWRWYWx1ZShwcm9wZXJ0eSwgdmFsdWUsIG9yaWdpbmFsUHJvcGVydHkpIHtcbiAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgIC8vIGRvbid0IHRlc3QgbnVtYmVycyAocHVyZSBvciBzdHJpbmd5KSwgYnV0IGRvIGFkZCAncHgnIHByZWZpeCBpZiBuZWVkZWRcbiAgICBpZiAoIWlzTmFOKHZhbHVlKSkge1xuICAgICAgcmV0dXJuIF9hZGRQaXhlbFN1ZmZpeFRvVmFsdWVJZk5lZWRlZChvcmlnaW5hbFByb3BlcnR5LCB2YWx1ZSk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgIGlmICh2YWx1ZSAhPT0gbnVsbCAmJiB2YWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHZhbHVlID0gdmFsdWUudG9TdHJpbmcoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbiAgICAgICAgaWYgKGNvbnNvbGUgJiYgY29uc29sZS53YXJuKSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKCdDU1MgdmFsdWUgaXMgXCInICsgdmFsdWUgKyAnXCIgZm9yIHByb3BlcnR5IFwiJyArIHByb3BlcnR5ICsgJ1wiJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIGRvbid0IHRlc3QgbnVtYmVycyB3aXRoIHVuaXRzIChlLmcuIDEwZW0pXG4gICAgaWYgKCFpc05hTihwYXJzZUludCh2YWx1ZSwgMTApKSkge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgfVxuXG4gIHZhciBjYWNoZUtleSA9IEFycmF5LmlzQXJyYXkodmFsdWUpID8gdmFsdWUuam9pbignIHx8ICcpIDogcHJvcGVydHkgKyB2YWx1ZTtcblxuICBpZiAocHJlZml4ZWRWYWx1ZUNhY2hlLmhhc093blByb3BlcnR5KGNhY2hlS2V5KSkge1xuICAgIHJldHVybiBwcmVmaXhlZFZhbHVlQ2FjaGVbY2FjaGVLZXldO1xuICB9XG5cbiAgdmFyIHBvc3NpYmxlVmFsdWVzO1xuICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAvLyBBZGQgcHggZm9yIHRoZSBzYW1lIHZhbHVlcyBSZWFjdCB3b3VsZCwgb3RoZXJ3aXNlIHRoZSB0ZXN0aW5nIGJlbG93IHdpbGxcbiAgICAvLyBmYWlsIGFuZCBpdCB3aWxsIHRyeSB0byBmYWxsYmFjay5cbiAgICBwb3NzaWJsZVZhbHVlcyA9IHZhbHVlLm1hcChmdW5jdGlvbiAodikge1xuICAgICAgcmV0dXJuIF9hZGRQaXhlbFN1ZmZpeFRvVmFsdWVJZk5lZWRlZChvcmlnaW5hbFByb3BlcnR5LCB2KTtcbiAgICB9KTtcblxuICAgIC8vIEFkZCBwcmVmaXhlZCB2ZXJzaW9uc1xuICAgIHBvc3NpYmxlVmFsdWVzID0gcG9zc2libGVWYWx1ZXMuY29uY2F0KHZhbHVlLmZpbHRlcihmdW5jdGlvbiAodikge1xuICAgICAgcmV0dXJuICFpc05hTih2KTtcbiAgICB9KSAvLyBEb24ndCBwcmVmaXggbnVtYmVyc1xuICAgIC5tYXAoZnVuY3Rpb24gKHYpIHtcbiAgICAgIHJldHVybiBwcmVmaXhJbmZvLmNzc1ByZWZpeCArIHY7XG4gICAgfSkpO1xuICB9IGVsc2Uge1xuICAgIHBvc3NpYmxlVmFsdWVzID0gW1xuICAgIC8vIFVucHJlZml4ZWRcbiAgICB2YWx1ZSxcbiAgICAvLyBQcmVmaXhlZFxuICAgIHByZWZpeEluZm8uY3NzUHJlZml4ICsgdmFsdWVdO1xuICB9XG5cbiAgLy8gQWx0ZXJuYXRpdmUgdmFsdWVzXG4gIGlmIChwcmVmaXhJbmZvLmFsdGVybmF0aXZlVmFsdWVzICYmIHByZWZpeEluZm8uYWx0ZXJuYXRpdmVWYWx1ZXNbb3JpZ2luYWxQcm9wZXJ0eV0gJiYgcHJlZml4SW5mby5hbHRlcm5hdGl2ZVZhbHVlc1tvcmlnaW5hbFByb3BlcnR5XVt2YWx1ZV0pIHtcbiAgICBwb3NzaWJsZVZhbHVlcyA9IHBvc3NpYmxlVmFsdWVzLmNvbmNhdChwcmVmaXhJbmZvLmFsdGVybmF0aXZlVmFsdWVzW29yaWdpbmFsUHJvcGVydHldW3ZhbHVlXSk7XG4gIH1cblxuICAvLyBUZXN0IHBvc3NpYmxlIHZhbHVlIGluIG9yZGVyXG4gIHZhciB3b3JraW5nVmFsdWUgPSBhcnJheUZpbmQocG9zc2libGVWYWx1ZXMsIGZ1bmN0aW9uIChwb3NzaWJsZVZhbHVlKSB7XG4gICAgZG9tU3R5bGVbcHJvcGVydHldID0gJyc7XG4gICAgZG9tU3R5bGVbcHJvcGVydHldID0gcG9zc2libGVWYWx1ZTtcblxuICAgIC8vIE5vdGUgdGhhdCB3ZSBqdXN0IG1ha2Ugc3VyZSBpdCBpcyBub3QgYW4gZW1wdHkgc3RyaW5nLiBCcm93c2VycyB3aWxsXG4gICAgLy8gc29tZXRpbWVzIHJld3JpdGUgdmFsdWVzLCBidXQgc3RpbGwgYWNjZXB0IHRoZW0uIFRoZXkgd2lsbCBzZXQgdGhlIHZhbHVlXG4gICAgLy8gdG8gYW4gZW1wdHkgc3RyaW5nIGlmIG5vdCBzdXBwb3J0ZWQuXG4gICAgLy8gRS5nLiBmb3IgYm9yZGVyLCBcInNvbGlkIDFweCBibGFja1wiIGJlY29tZXMgXCIxcHggc29saWQgYmxhY2tcIlxuICAgIC8vICAgICAgYnV0IFwiZm9vYmFyXCIgYmVjb21lcyBcIlwiLCBzaW5jZSBpdCBpcyBub3Qgc3VwcG9ydGVkLlxuICAgIHJldHVybiAhIWRvbVN0eWxlW3Byb3BlcnR5XTtcbiAgfSk7XG5cbiAgaWYgKHdvcmtpbmdWYWx1ZSkge1xuICAgIHByZWZpeGVkVmFsdWVDYWNoZVtjYWNoZUtleV0gPSB3b3JraW5nVmFsdWU7XG4gIH0gZWxzZSB7XG4gICAgLy8gVW5zdXBwb3J0ZWQsIGFzc3VtZSB1bnByZWZpeGVkIHdvcmtzLCBidXQgd2FyblxuICAgIHByZWZpeGVkVmFsdWVDYWNoZVtjYWNoZUtleV0gPSB2YWx1ZTtcblxuICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbiAgICBpZiAoY29uc29sZSAmJiBjb25zb2xlLndhcm4pIHtcbiAgICAgIGNvbnNvbGUud2FybignVW5zdXBwb3J0ZWQgQ1NTIHZhbHVlIFwiJyArIHZhbHVlICsgJ1wiIGZvciBwcm9wZXJ0eSBcIicgKyBwcm9wZXJ0eSArICdcIicpO1xuICAgIH1cbiAgICAvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbnNvbGUgKi9cbiAgfVxuXG4gIHJldHVybiBwcmVmaXhlZFZhbHVlQ2FjaGVbY2FjaGVLZXldO1xufTtcblxuLy8gUmV0dXJucyBhIG5ldyBzdHlsZSBvYmplY3Qgd2l0aCB2ZW5kb3IgcHJlZml4ZXMgYWRkZWQgdG8gcHJvcGVydHkgbmFtZXNcbi8vIGFuZCB2YWx1ZXMuXG52YXIgZ2V0UHJlZml4ZWRTdHlsZSA9IGZ1bmN0aW9uIGdldFByZWZpeGVkU3R5bGUoc3R5bGUsIG1vZGUgLyogJ2Nzcycgb3IgJ2pzJyAqLykge1xuICBtb2RlID0gbW9kZSB8fCAnanMnO1xuXG4gIGlmICghRXhlY3V0aW9uRW52aXJvbm1lbnQuY2FuVXNlRE9NKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHN0eWxlKS5yZWR1Y2UoZnVuY3Rpb24gKG5ld1N0eWxlLCBrZXkpIHtcbiAgICAgIHZhciB2YWx1ZSA9IHN0eWxlW2tleV07XG4gICAgICB2YXIgbmV3S2V5ID0gbW9kZSA9PT0gJ2NzcycgPyBfY2FtZWxDYXNlVG9EYXNoQ2FzZShrZXkpIDoga2V5O1xuICAgICAgdmFyIG5ld1ZhbHVlID0gQXJyYXkuaXNBcnJheSh2YWx1ZSkgPyB2YWx1ZVswXSA6IHZhbHVlO1xuICAgICAgbmV3U3R5bGVbbmV3S2V5XSA9IG5ld1ZhbHVlO1xuICAgICAgcmV0dXJuIG5ld1N0eWxlO1xuICAgIH0sIHt9KTtcbiAgfVxuXG4gIHZhciBwcmVmaXhlZFN0eWxlID0ge307XG4gIE9iamVjdC5rZXlzKHN0eWxlKS5mb3JFYWNoKGZ1bmN0aW9uIChwcm9wZXJ0eSkge1xuICAgIHZhciB2YWx1ZSA9IHN0eWxlW3Byb3BlcnR5XTtcblxuICAgIHZhciBuZXdQcm9wZXJ0eSA9IGdldFByZWZpeGVkUHJvcGVydHlOYW1lKHByb3BlcnR5KTtcbiAgICBpZiAobmV3UHJvcGVydHkgPT09IGZhbHNlKSB7XG4gICAgICAvLyBJZ25vcmUgdW5zdXBwb3J0ZWQgcHJvcGVydGllc1xuICAgICAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqL1xuICAgICAgaWYgKGNvbnNvbGUgJiYgY29uc29sZS53YXJuKSB7XG4gICAgICAgIGNvbnNvbGUud2FybignVW5zdXBwb3J0ZWQgQ1NTIHByb3BlcnR5IFwiJyArIHByb3BlcnR5ICsgJ1wiJyk7XG4gICAgICB9XG4gICAgICAvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbnNvbGUgKi9cbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgbmV3VmFsdWUgPSBfZ2V0UHJlZml4ZWRWYWx1ZShuZXdQcm9wZXJ0eS5qcywgdmFsdWUsIHByb3BlcnR5KTtcblxuICAgIHByZWZpeGVkU3R5bGVbbmV3UHJvcGVydHlbbW9kZV1dID0gbmV3VmFsdWU7XG4gIH0pO1xuICByZXR1cm4gcHJlZml4ZWRTdHlsZTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXRQcmVmaXhlZFByb3BlcnR5TmFtZTogZ2V0UHJlZml4ZWRQcm9wZXJ0eU5hbWUsXG4gIGdldFByZWZpeGVkU3R5bGU6IGdldFByZWZpeGVkU3R5bGUsXG4gIGNzc1ByZWZpeDogcHJlZml4SW5mby5jc3NQcmVmaXgsXG4gIGpzUHJlZml4OiBwcmVmaXhJbmZvLmpzUHJlZml4XG59OyIsIi8qIEBmbG93ICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxudmFyIE1vdXNlVXBMaXN0ZW5lciA9IHJlcXVpcmUoJy4vbW91c2UtdXAtbGlzdGVuZXInKTtcbnZhciBnZXRTdGF0ZSA9IHJlcXVpcmUoJy4vZ2V0LXN0YXRlJyk7XG52YXIgUHJlZml4ZXIgPSByZXF1aXJlKCcuL3ByZWZpeGVyJyk7XG52YXIgQ29uZmlnID0gcmVxdWlyZSgnLi9jb25maWcnKTtcblxudmFyIEV4ZWN1dGlvbkVudmlyb25tZW50ID0gcmVxdWlyZSgnZXhlbnYnKTtcbnZhciBSZWFjdCA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93LlJlYWN0IDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbC5SZWFjdCA6IG51bGwpO1xuXG4vLyBiYWJlbC1lc2xpbnQgMy4xLjcgZmFpbHMgaGVyZSBmb3Igc29tZSByZWFzb24sIGVycm9yOlxuLy8gICAwOjAgIGVycm9yICBDYW5ub3QgY2FsbCBtZXRob2QgJ2lzU2VxdWVuY2VFeHByZXNzaW9uJyBvZiB1bmRlZmluZWRcbi8vXG4vLyBkZWNsYXJlIGNsYXNzIFJhZGl1bUNvbXBvbmVudCBleHRlbmRzIFJlYWN0Q29tcG9uZW50IHtcbi8vICAgX2xhc3RNb3VzZURvd246IG51bWJlcixcbi8vICAgX3JhZGl1bU1lZGlhUXVlcnlMaXN0ZW5lcnNCeVF1ZXJ5OiBPYmplY3Q8c3RyaW5nLCB7cmVtb3ZlOiAoKSA9PiB2b2lkfT4sXG4vLyAgIF9yYWRpdW1Nb3VzZVVwTGlzdGVuZXI6IHtyZW1vdmU6ICgpID0+IHZvaWR9LFxuLy8gfVxuXG52YXIgbWVkaWFRdWVyeUxpc3RCeVF1ZXJ5U3RyaW5nID0ge307XG5cbnZhciBfaXNTcGVjaWFsS2V5ID0gZnVuY3Rpb24gX2lzU3BlY2lhbEtleShrZXkpIHtcbiAgcmV0dXJuIGtleVswXSA9PT0gJzonIHx8IGtleVswXSA9PT0gJ0AnO1xufTtcblxudmFyIF9nZXRTdHlsZVN0YXRlID0gZnVuY3Rpb24gX2dldFN0eWxlU3RhdGUoY29tcG9uZW50LCBrZXksIHZhbHVlKSB7XG4gIHJldHVybiBnZXRTdGF0ZShjb21wb25lbnQuc3RhdGUsIGtleSwgdmFsdWUpO1xufTtcblxudmFyIF9zZXRTdHlsZVN0YXRlID0gZnVuY3Rpb24gX3NldFN0eWxlU3RhdGUoY29tcG9uZW50LCBrZXksIG5ld1N0YXRlKSB7XG4gIHZhciBleGlzdGluZyA9IGNvbXBvbmVudC5fbGFzdFJhZGl1bVN0YXRlIHx8IGNvbXBvbmVudC5zdGF0ZSAmJiBjb21wb25lbnQuc3RhdGUuX3JhZGl1bVN0eWxlU3RhdGUgfHwge307XG5cbiAgdmFyIHN0YXRlID0geyBfcmFkaXVtU3R5bGVTdGF0ZTogX2V4dGVuZHMoe30sIGV4aXN0aW5nKSB9O1xuICBzdGF0ZS5fcmFkaXVtU3R5bGVTdGF0ZVtrZXldID0gX2V4dGVuZHMoe30sIHN0YXRlLl9yYWRpdW1TdHlsZVN0YXRlW2tleV0sIG5ld1N0YXRlKTtcblxuICBjb21wb25lbnQuX2xhc3RSYWRpdW1TdGF0ZSA9IHN0YXRlLl9yYWRpdW1TdHlsZVN0YXRlO1xuICBjb21wb25lbnQuc2V0U3RhdGUoc3RhdGUpO1xufTtcblxuLy8gTWVyZ2Ugc3R5bGUgb2JqZWN0cy4gU3BlY2lhbCBjYXNpbmcgZm9yIHByb3BzIHN0YXJ0aW5nIHdpdGggJzsnOyB0aGUgdmFsdWVzXG4vLyBzaG91bGQgYmUgb2JqZWN0cywgYW5kIGFyZSBtZXJnZWQgd2l0aCBvdGhlcnMgb2YgdGhlIHNhbWUgbmFtZSAoaW5zdGVhZCBvZlxuLy8gb3ZlcndyaXRpbmcpLlxudmFyIF9tZXJnZVN0eWxlcyA9IGZ1bmN0aW9uIF9tZXJnZVN0eWxlcyhzdHlsZXMpIHtcbiAgdmFyIHJlc3VsdCA9IHt9O1xuXG4gIHN0eWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChzdHlsZSkge1xuICAgIGlmICghc3R5bGUgfHwgdHlwZW9mIHN0eWxlICE9PSAnb2JqZWN0JyB8fCBBcnJheS5pc0FycmF5KHN0eWxlKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIE9iamVjdC5rZXlzKHN0eWxlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIGlmIChfaXNTcGVjaWFsS2V5KGtleSkgJiYgcmVzdWx0W2tleV0pIHtcbiAgICAgICAgcmVzdWx0W2tleV0gPSBfbWVyZ2VTdHlsZXMoW3Jlc3VsdFtrZXldLCBzdHlsZVtrZXldXSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHRba2V5XSA9IHN0eWxlW2tleV07XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xuXG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG52YXIgX21vdXNlVXAgPSBmdW5jdGlvbiBfbW91c2VVcChjb21wb25lbnQpIHtcbiAgT2JqZWN0LmtleXMoY29tcG9uZW50LnN0YXRlLl9yYWRpdW1TdHlsZVN0YXRlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICBpZiAoX2dldFN0eWxlU3RhdGUoY29tcG9uZW50LCBrZXksICc6YWN0aXZlJykpIHtcbiAgICAgIF9zZXRTdHlsZVN0YXRlKGNvbXBvbmVudCwga2V5LCB7ICc6YWN0aXZlJzogZmFsc2UgfSk7XG4gICAgfVxuICB9KTtcbn07XG5cbnZhciBfb25NZWRpYVF1ZXJ5Q2hhbmdlID0gZnVuY3Rpb24gX29uTWVkaWFRdWVyeUNoYW5nZShjb21wb25lbnQsIHF1ZXJ5LCBtZWRpYVF1ZXJ5TGlzdCkge1xuICB2YXIgc3RhdGUgPSB7fTtcbiAgc3RhdGVbcXVlcnldID0gbWVkaWFRdWVyeUxpc3QubWF0Y2hlcztcbiAgX3NldFN0eWxlU3RhdGUoY29tcG9uZW50LCAnX2FsbCcsIHN0YXRlKTtcbn07XG5cbnZhciBfcmVzb2x2ZU1lZGlhUXVlcnlTdHlsZXMgPSBmdW5jdGlvbiBfcmVzb2x2ZU1lZGlhUXVlcnlTdHlsZXMoY29tcG9uZW50LCBzdHlsZSkge1xuICBpZiAoIUNvbmZpZy5jYW5NYXRjaE1lZGlhKCkpIHtcbiAgICByZXR1cm4gc3R5bGU7XG4gIH1cblxuICBPYmplY3Qua2V5cyhzdHlsZSkuZmlsdGVyKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgcmV0dXJuIG5hbWVbMF0gPT09ICdAJztcbiAgfSkubWFwKGZ1bmN0aW9uIChxdWVyeSkge1xuICAgIHZhciBtZWRpYVF1ZXJ5U3R5bGVzID0gc3R5bGVbcXVlcnldO1xuICAgIHF1ZXJ5ID0gcXVlcnkucmVwbGFjZSgnQG1lZGlhICcsICcnKTtcblxuICAgIC8vIENyZWF0ZSBhIGdsb2JhbCBNZWRpYVF1ZXJ5TGlzdCBpZiBvbmUgZG9lc24ndCBhbHJlYWR5IGV4aXN0XG4gICAgdmFyIG1xbCA9IG1lZGlhUXVlcnlMaXN0QnlRdWVyeVN0cmluZ1txdWVyeV07XG4gICAgaWYgKCFtcWwpIHtcbiAgICAgIG1lZGlhUXVlcnlMaXN0QnlRdWVyeVN0cmluZ1txdWVyeV0gPSBtcWwgPSBDb25maWcubWF0Y2hNZWRpYShxdWVyeSk7XG4gICAgfVxuXG4gICAgLy8gS2VlcCB0cmFjayBvZiB3aGljaCBrZXlzIGFscmVhZHkgaGF2ZSBsaXN0ZW5lcnNcbiAgICBpZiAoIWNvbXBvbmVudC5fcmFkaXVtTWVkaWFRdWVyeUxpc3RlbmVyc0J5UXVlcnkpIHtcbiAgICAgIGNvbXBvbmVudC5fcmFkaXVtTWVkaWFRdWVyeUxpc3RlbmVyc0J5UXVlcnkgPSB7fTtcbiAgICB9XG5cbiAgICBpZiAoIWNvbXBvbmVudC5fcmFkaXVtTWVkaWFRdWVyeUxpc3RlbmVyc0J5UXVlcnlbcXVlcnldKSB7XG4gICAgICB2YXIgbGlzdGVuZXIgPSBfb25NZWRpYVF1ZXJ5Q2hhbmdlLmJpbmQobnVsbCwgY29tcG9uZW50LCBxdWVyeSk7XG4gICAgICBtcWwuYWRkTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgICAgY29tcG9uZW50Ll9yYWRpdW1NZWRpYVF1ZXJ5TGlzdGVuZXJzQnlRdWVyeVtxdWVyeV0gPSB7XG4gICAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgICAgIG1xbC5yZW1vdmVMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gQXBwbHkgbWVkaWEgcXVlcnkgc3RhdGVzXG4gICAgaWYgKG1xbC5tYXRjaGVzKSB7XG4gICAgICBzdHlsZSA9IF9tZXJnZVN0eWxlcyhbc3R5bGUsIG1lZGlhUXVlcnlTdHlsZXNdKTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBzdHlsZTtcbn07XG5cbi8vXG4vLyBUaGUgbnVjbGV1cyBvZiBSYWRpdW0uIHJlc29sdmVTdHlsZXMgaXMgY2FsbGVkIG9uIHRoZSByZW5kZXJlZCBlbGVtZW50c1xuLy8gYmVmb3JlIHRoZXkgYXJlIHJldHVybmVkIGluIHJlbmRlci4gSXQgaXRlcmF0ZXMgb3ZlciB0aGUgZWxlbWVudHMgYW5kXG4vLyBjaGlsZHJlbiwgcmV3cml0aW5nIHByb3BzIHRvIGFkZCBldmVudCBoYW5kbGVycyByZXF1aXJlZCB0byBjYXB0dXJlIHVzZXJcbi8vIGludGVyYWN0aW9ucyAoZS5nLiBtb3VzZSBvdmVyKS4gSXQgYWxzbyByZXBsYWNlcyB0aGUgc3R5bGUgcHJvcCBiZWNhdXNlIGl0XG4vLyBhZGRzIGluIHRoZSB2YXJpb3VzIGludGVyYWN0aW9uIHN0eWxlcyAoZS5nLiA6aG92ZXIpLlxuLy9cbnZhciByZXNvbHZlU3R5bGVzID0gZnVuY3Rpb24gcmVzb2x2ZVN0eWxlcyhjb21wb25lbnQsIC8vIFJlYWN0Q29tcG9uZW50LCBmbG93K2VzbGludCBjb21wbGFpbmluZ1xucmVuZGVyZWRFbGVtZW50LCAvLyBSZWFjdEVsZW1lbnRcbmV4aXN0aW5nS2V5TWFwKSB7XG4gIC8vIFJlYWN0RWxlbWVudFxuICBleGlzdGluZ0tleU1hcCA9IGV4aXN0aW5nS2V5TWFwIHx8IHt9O1xuXG4gIGlmICghcmVuZGVyZWRFbGVtZW50KSB7XG4gICAgcmV0dXJuIHJlbmRlcmVkRWxlbWVudDtcbiAgfVxuXG4gIC8vIFJlY3Vyc2Ugb3ZlciBjaGlsZHJlbiBmaXJzdCBpbiBjYXNlIHdlIGJhaWwgZWFybHkuIE5vdGUgdGhhdCBjaGlsZHJlbiBvbmx5XG4gIC8vIGluY2x1ZGUgdGhvc2UgcmVuZGVyZWQgaW4gYHRoaXNgIGNvbXBvbmVudC4gQ2hpbGQgbm9kZXMgaW4gb3RoZXIgY29tcG9uZW50c1xuICAvLyB3aWxsIG5vdCBiZSBoZXJlLCBzbyBlYWNoIGNvbXBvbmVudCBuZWVkcyB0byB1c2UgUmFkaXVtLlxuICB2YXIgbmV3Q2hpbGRyZW4gPSBudWxsO1xuICB2YXIgb2xkQ2hpbGRyZW4gPSByZW5kZXJlZEVsZW1lbnQucHJvcHMuY2hpbGRyZW47XG4gIGlmIChvbGRDaGlsZHJlbikge1xuICAgIHZhciBjaGlsZHJlblR5cGUgPSB0eXBlb2Ygb2xkQ2hpbGRyZW47XG4gICAgaWYgKGNoaWxkcmVuVHlwZSA9PT0gJ3N0cmluZycgfHwgY2hpbGRyZW5UeXBlID09PSAnbnVtYmVyJykge1xuICAgICAgLy8gRG9uJ3QgZG8gYW55dGhpbmcgd2l0aCBhIHNpbmdsZSBwcmltaXRpdmUgY2hpbGRcbiAgICAgIG5ld0NoaWxkcmVuID0gb2xkQ2hpbGRyZW47XG4gICAgfSBlbHNlIGlmIChSZWFjdC5DaGlsZHJlbi5jb3VudChvbGRDaGlsZHJlbikgPT09IDEgJiYgb2xkQ2hpbGRyZW4udHlwZSkge1xuICAgICAgLy8gSWYgYSBSZWFjdCBFbGVtZW50IGlzIGFuIG9ubHkgY2hpbGQsIGRvbid0IHdyYXAgaXQgaW4gYW4gYXJyYXkgZm9yXG4gICAgICAvLyBSZWFjdC5DaGlsZHJlbi5tYXAoKSBmb3IgUmVhY3QuQ2hpbGRyZW4ub25seSgpIGNvbXBhdGliaWxpdHkuXG4gICAgICB2YXIgb25seUNoaWxkID0gUmVhY3QuQ2hpbGRyZW4ub25seShvbGRDaGlsZHJlbik7XG4gICAgICBuZXdDaGlsZHJlbiA9IHJlc29sdmVTdHlsZXMoY29tcG9uZW50LCBvbmx5Q2hpbGQsIGV4aXN0aW5nS2V5TWFwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbmV3Q2hpbGRyZW4gPSBSZWFjdC5DaGlsZHJlbi5tYXAob2xkQ2hpbGRyZW4sIGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgICBpZiAoUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpKSB7XG4gICAgICAgICAgcmV0dXJuIHJlc29sdmVTdHlsZXMoY29tcG9uZW50LCBjaGlsZCwgZXhpc3RpbmdLZXlNYXApO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGNoaWxkO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgLy8gQmFpbCBlYXJseSBpZiBlbGVtZW50IGlzIG5vdCBhIHNpbXBsZSBSZWFjdERPTUVsZW1lbnQuXG4gIGlmICghUmVhY3QuaXNWYWxpZEVsZW1lbnQocmVuZGVyZWRFbGVtZW50KSB8fCB0eXBlb2YgcmVuZGVyZWRFbGVtZW50LnR5cGUgIT09ICdzdHJpbmcnKSB7XG4gICAgaWYgKG9sZENoaWxkcmVuID09PSBuZXdDaGlsZHJlbikge1xuICAgICAgcmV0dXJuIHJlbmRlcmVkRWxlbWVudDtcbiAgICB9XG5cbiAgICByZXR1cm4gUmVhY3QuY2xvbmVFbGVtZW50KHJlbmRlcmVkRWxlbWVudCwgcmVuZGVyZWRFbGVtZW50LnByb3BzLCBuZXdDaGlsZHJlbik7XG4gIH1cblxuICB2YXIgcHJvcHMgPSByZW5kZXJlZEVsZW1lbnQucHJvcHM7XG4gIHZhciBzdHlsZSA9IHByb3BzLnN0eWxlO1xuICB2YXIgbmV3UHJvcHMgPSB7fTtcblxuICAvLyBDb252ZW5pZW50IHN5bnRheCBmb3IgbXVsdGlwbGUgc3R5bGVzOiBgc3R5bGU9e1tzdHlsZTEsIHN0eWxlMiwgZXRjXX1gXG4gIC8vIElnbm9yZXMgbm9uLW9iamVjdHMsIHNvIHlvdSBjYW4gZG8gYHRoaXMuc3RhdGUuaXNDb29sICYmIHN0eWxlcy5jb29sYC5cbiAgaWYgKEFycmF5LmlzQXJyYXkoc3R5bGUpKSB7XG4gICAgc3R5bGUgPSBfbWVyZ2VTdHlsZXMoc3R5bGUpO1xuICB9XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBXYXJuIGlmIHlvdSB1c2UgbG9uZ2hhbmQgYW5kIHNob3J0aGFuZCBwcm9wZXJ0aWVzIGluIHRoZSBzYW1lIHN0eWxlXG4gICAgLy8gb2JqZWN0LlxuICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0NTUy9TaG9ydGhhbmRfcHJvcGVydGllc1xuXG4gICAgdmFyIHNob3J0aGFuZFByb3BlcnR5RXhwYW5zaW9ucyA9IHtcbiAgICAgICdiYWNrZ3JvdW5kJzogWydiYWNrZ3JvdW5kQXR0YWNobWVudCcsICdiYWNrZ3JvdW5kQmxlbmRNb2RlJywgJ2JhY2tncm91bmRDbGlwJywgJ2JhY2tncm91bmRDb2xvcicsICdiYWNrZ3JvdW5kSW1hZ2UnLCAnYmFja2dyb3VuZE9yaWdpbicsICdiYWNrZ3JvdW5kUG9zaXRpb24nLCAnYmFja2dyb3VuZFBvc2l0aW9uWCcsICdiYWNrZ3JvdW5kUG9zaXRpb25ZJywgJ2JhY2tncm91bmRSZXBlYXQnLCAnYmFja2dyb3VuZFJlcGVhdFgnLCAnYmFja2dyb3VuZFJlcGVhdFknLCAnYmFja2dyb3VuZFNpemUnXSxcbiAgICAgICdib3JkZXInOiBbJ2JvcmRlckJvdHRvbScsICdib3JkZXJCb3R0b21Db2xvcicsICdib3JkZXJCb3R0b21TdHlsZScsICdib3JkZXJCb3R0b21XaWR0aCcsICdib3JkZXJDb2xvcicsICdib3JkZXJMZWZ0JywgJ2JvcmRlckxlZnRDb2xvcicsICdib3JkZXJMZWZ0U3R5bGUnLCAnYm9yZGVyTGVmdFdpZHRoJywgJ2JvcmRlclJpZ2h0JywgJ2JvcmRlclJpZ2h0Q29sb3InLCAnYm9yZGVyUmlnaHRTdHlsZScsICdib3JkZXJSaWdodFdpZHRoJywgJ2JvcmRlclN0eWxlJywgJ2JvcmRlclRvcCcsICdib3JkZXJUb3BDb2xvcicsICdib3JkZXJUb3BTdHlsZScsICdib3JkZXJUb3BXaWR0aCcsICdib3JkZXJXaWR0aCddLFxuICAgICAgJ2JvcmRlckltYWdlJzogWydib3JkZXJJbWFnZU91dHNldCcsICdib3JkZXJJbWFnZVJlcGVhdCcsICdib3JkZXJJbWFnZVNsaWNlJywgJ2JvcmRlckltYWdlU291cmNlJywgJ2JvcmRlckltYWdlV2lkdGgnXSxcbiAgICAgICdib3JkZXJSYWRpdXMnOiBbJ2JvcmRlckJvdHRvbUxlZnRSYWRpdXMnLCAnYm9yZGVyQm90dG9tUmlnaHRSYWRpdXMnLCAnYm9yZGVyVG9wTGVmdFJhZGl1cycsICdib3JkZXJUb3BSaWdodFJhZGl1cyddLFxuICAgICAgJ2ZvbnQnOiBbJ2ZvbnRGYW1pbHknLCAnZm9udEtlcm5pbmcnLCAnZm9udFNpemUnLCAnZm9udFN0cmV0Y2gnLCAnZm9udFN0eWxlJywgJ2ZvbnRWYXJpYW50JywgJ2ZvbnRWYXJpYW50TGlnYXR1cmVzJywgJ2ZvbnRXZWlnaHQnLCAnbGluZUhlaWdodCddLFxuICAgICAgJ2xpc3RTdHlsZSc6IFsnbGlzdFN0eWxlSW1hZ2UnLCAnbGlzdFN0eWxlUG9zaXRpb24nLCAnbGlzdFN0eWxlVHlwZSddLFxuICAgICAgJ21hcmdpbic6IFsnbWFyZ2luQm90dG9tJywgJ21hcmdpbkxlZnQnLCAnbWFyZ2luUmlnaHQnLCAnbWFyZ2luVG9wJ10sXG4gICAgICAncGFkZGluZyc6IFsncGFkZGluZ0JvdHRvbScsICdwYWRkaW5nTGVmdCcsICdwYWRkaW5nUmlnaHQnLCAncGFkZGluZ1RvcCddLFxuICAgICAgJ3RyYW5zZm9ybSc6IFsndHJhbnNmb3JtT3JpZ2luJywgJ3RyYW5zZm9ybVN0eWxlJ10sXG4gICAgICAndHJhbnNpdGlvbic6IFsndHJhbnNpdGlvbkRlbGF5JywgJ3RyYW5zaXRpb25EdXJhdGlvbicsICd0cmFuc2l0aW9uUHJvcGVydHknLCAndHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uJ11cbiAgICB9O1xuXG4gICAgdmFyIGNoZWNrUHJvcHMgPSBmdW5jdGlvbiBjaGVja1Byb3BzKHMpIHtcbiAgICAgIGlmICh0eXBlb2YgcyAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgc3R5bGVLZXlzID0gT2JqZWN0LmtleXMocyk7XG4gICAgICBzdHlsZUtleXMuZm9yRWFjaChmdW5jdGlvbiAoc3R5bGVLZXkpIHtcbiAgICAgICAgaWYgKHNob3J0aGFuZFByb3BlcnR5RXhwYW5zaW9uc1tzdHlsZUtleV0gJiYgc2hvcnRoYW5kUHJvcGVydHlFeHBhbnNpb25zW3N0eWxlS2V5XS5zb21lKGZ1bmN0aW9uIChzcCkge1xuICAgICAgICAgIHJldHVybiBzdHlsZUtleXMuaW5kZXhPZihzcCkgIT09IC0xO1xuICAgICAgICB9KSkge1xuICAgICAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbiAgICAgICAgICBjb25zb2xlLndhcm4oJ1JhZGl1bTogcHJvcGVydHkgXCInICsgc3R5bGVLZXkgKyAnXCIgaW4gc3R5bGUgb2JqZWN0Jywgc3R5bGUsICc6IGRvIG5vdCBtaXggbG9uZ2hhbmQgYW5kICcgKyAnc2hvcnRoYW5kIHByb3BlcnRpZXMgaW4gdGhlIHNhbWUgc3R5bGUgb2JqZWN0LiBDaGVjayB0aGUgcmVuZGVyICcgKyAnbWV0aG9kIG9mICcgKyBjb21wb25lbnQuY29uc3RydWN0b3IuZGlzcGxheU5hbWUgKyAnLicsICdTZWUgaHR0cHM6Ly9naXRodWIuY29tL0Zvcm1pZGFibGVMYWJzL3JhZGl1bS9pc3N1ZXMvOTUgZm9yIG1vcmUgJyArICdpbmZvcm1hdGlvbi4nKTtcbiAgICAgICAgICAvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbnNvbGUgKi9cbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIHN0eWxlS2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrKSB7XG4gICAgICAgIHJldHVybiBjaGVja1Byb3BzKHNba10pO1xuICAgICAgfSk7XG4gICAgfTtcbiAgICBjaGVja1Byb3BzKHN0eWxlKTtcbiAgfVxuXG4gIC8vIEJhaWwgZWFybHkgaWYgbm8gaW50ZXJhY3RpdmUgc3R5bGVzLlxuICBpZiAoIXN0eWxlIHx8ICFPYmplY3Qua2V5cyhzdHlsZSkuc29tZShfaXNTcGVjaWFsS2V5KSkge1xuICAgIGlmIChzdHlsZSkge1xuICAgICAgLy8gU3RpbGwgcGVyZm9ybSB2ZW5kb3IgcHJlZml4aW5nLCB0aG91Z2guXG4gICAgICBuZXdQcm9wcy5zdHlsZSA9IFByZWZpeGVyLmdldFByZWZpeGVkU3R5bGUoc3R5bGUpO1xuICAgICAgcmV0dXJuIFJlYWN0LmNsb25lRWxlbWVudChyZW5kZXJlZEVsZW1lbnQsIG5ld1Byb3BzLCBuZXdDaGlsZHJlbik7XG4gICAgfSBlbHNlIGlmIChuZXdDaGlsZHJlbikge1xuICAgICAgcmV0dXJuIFJlYWN0LmNsb25lRWxlbWVudChyZW5kZXJlZEVsZW1lbnQsIHt9LCBuZXdDaGlsZHJlbik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlbmRlcmVkRWxlbWVudDtcbiAgfVxuXG4gIC8vIFdlIG5lZWQgYSB1bmlxdWUga2V5IHRvIGNvcnJlbGF0ZSBzdGF0ZSBjaGFuZ2VzIGR1ZSB0byB1c2VyIGludGVyYWN0aW9uXG4gIC8vIHdpdGggdGhlIHJlbmRlcmVkIGVsZW1lbnQsIHNvIHdlIGtub3cgdG8gYXBwbHkgdGhlIHByb3BlciBpbnRlcmFjdGl2ZVxuICAvLyBzdHlsZXMuXG4gIHZhciBvcmlnaW5hbEtleSA9IHJlbmRlcmVkRWxlbWVudC5yZWYgfHwgcmVuZGVyZWRFbGVtZW50LmtleTtcbiAgdmFyIGtleSA9IG9yaWdpbmFsS2V5IHx8ICdtYWluJztcblxuICBpZiAoZXhpc3RpbmdLZXlNYXBba2V5XSkge1xuICAgIHRocm93IG5ldyBFcnJvcignUmFkaXVtIHJlcXVpcmVzIGVhY2ggZWxlbWVudCB3aXRoIGludGVyYWN0aXZlIHN0eWxlcyB0byBoYXZlIGEgdW5pcXVlICcgKyAna2V5LCBzZXQgdXNpbmcgZWl0aGVyIHRoZSByZWYgb3Iga2V5IHByb3AuICcgKyAob3JpZ2luYWxLZXkgPyAnS2V5IFwiJyArIG9yaWdpbmFsS2V5ICsgJ1wiIGlzIGEgZHVwbGljYXRlLicgOiAnTXVsdGlwbGUgZWxlbWVudHMgaGF2ZSBubyBrZXkgc3BlY2lmaWVkLicpKTtcbiAgfVxuXG4gIGV4aXN0aW5nS2V5TWFwW2tleV0gPSB0cnVlO1xuXG4gIC8vIE1lZGlhIHF1ZXJpZXMgY2FuIGNvbnRhaW4gcHNldWRvIHN0eWxlcywgbGlrZSA6aG92ZXJcbiAgc3R5bGUgPSBfcmVzb2x2ZU1lZGlhUXVlcnlTdHlsZXMoY29tcG9uZW50LCBzdHlsZSk7XG5cbiAgdmFyIG5ld1N0eWxlID0ge307XG4gIE9iamVjdC5rZXlzKHN0eWxlKS5mb3JFYWNoKGZ1bmN0aW9uIChzdHlsZUtleSkge1xuICAgIGlmICghX2lzU3BlY2lhbEtleShzdHlsZUtleSkpIHtcbiAgICAgIG5ld1N0eWxlW3N0eWxlS2V5XSA9IHN0eWxlW3N0eWxlS2V5XTtcbiAgICB9XG4gIH0pO1xuXG4gIC8vIE9ubHkgYWRkIGhhbmRsZXJzIGlmIG5lY2Vzc2FyeVxuICBpZiAoc3R5bGVbJzpob3ZlciddIHx8IHN0eWxlWyc6YWN0aXZlJ10pIHtcbiAgICAvLyBBbHdheXMgY2FsbCB0aGUgZXhpc3RpbmcgaGFuZGxlciBpZiBvbmUgaXMgYWxyZWFkeSBkZWZpbmVkLlxuICAgIC8vIFRoaXMgY29kZSwgYW5kIHRoZSB2ZXJ5IHNpbWlsYXIgb25lcyBiZWxvdywgY291bGQgYmUgYWJzdHJhY3RlZCBhIGJpdFxuICAgIC8vIG1vcmUsIGJ1dCBpdCBodXJ0cyByZWFkYWJpbGl0eSBJTU8uXG4gICAgdmFyIGV4aXN0aW5nT25Nb3VzZUVudGVyID0gcHJvcHMub25Nb3VzZUVudGVyO1xuICAgIG5ld1Byb3BzLm9uTW91c2VFbnRlciA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICBleGlzdGluZ09uTW91c2VFbnRlciAmJiBleGlzdGluZ09uTW91c2VFbnRlcihlKTtcbiAgICAgIF9zZXRTdHlsZVN0YXRlKGNvbXBvbmVudCwga2V5LCB7ICc6aG92ZXInOiB0cnVlIH0pO1xuICAgIH07XG5cbiAgICB2YXIgZXhpc3RpbmdPbk1vdXNlTGVhdmUgPSBwcm9wcy5vbk1vdXNlTGVhdmU7XG4gICAgbmV3UHJvcHMub25Nb3VzZUxlYXZlID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgIGV4aXN0aW5nT25Nb3VzZUxlYXZlICYmIGV4aXN0aW5nT25Nb3VzZUxlYXZlKGUpO1xuICAgICAgX3NldFN0eWxlU3RhdGUoY29tcG9uZW50LCBrZXksIHsgJzpob3Zlcic6IGZhbHNlIH0pO1xuICAgIH07XG4gIH1cblxuICBpZiAoc3R5bGVbJzphY3RpdmUnXSkge1xuICAgIHZhciBleGlzdGluZ09uTW91c2VEb3duID0gcHJvcHMub25Nb3VzZURvd247XG4gICAgbmV3UHJvcHMub25Nb3VzZURvd24gPSBmdW5jdGlvbiAoZSkge1xuICAgICAgZXhpc3RpbmdPbk1vdXNlRG93biAmJiBleGlzdGluZ09uTW91c2VEb3duKGUpO1xuICAgICAgY29tcG9uZW50Ll9sYXN0TW91c2VEb3duID0gRGF0ZS5ub3coKTtcbiAgICAgIF9zZXRTdHlsZVN0YXRlKGNvbXBvbmVudCwga2V5LCB7ICc6YWN0aXZlJzogdHJ1ZSB9KTtcbiAgICB9O1xuICB9XG5cbiAgaWYgKHN0eWxlWyc6Zm9jdXMnXSkge1xuICAgIHZhciBleGlzdGluZ09uRm9jdXMgPSBwcm9wcy5vbkZvY3VzO1xuICAgIG5ld1Byb3BzLm9uRm9jdXMgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgZXhpc3RpbmdPbkZvY3VzICYmIGV4aXN0aW5nT25Gb2N1cyhlKTtcbiAgICAgIF9zZXRTdHlsZVN0YXRlKGNvbXBvbmVudCwga2V5LCB7ICc6Zm9jdXMnOiB0cnVlIH0pO1xuICAgIH07XG5cbiAgICB2YXIgZXhpc3RpbmdPbkJsdXIgPSBwcm9wcy5vbkJsdXI7XG4gICAgbmV3UHJvcHMub25CbHVyID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgIGV4aXN0aW5nT25CbHVyICYmIGV4aXN0aW5nT25CbHVyKGUpO1xuICAgICAgX3NldFN0eWxlU3RhdGUoY29tcG9uZW50LCBrZXksIHsgJzpmb2N1cyc6IGZhbHNlIH0pO1xuICAgIH07XG4gIH1cblxuICAvLyBNZXJnZSB0aGUgc3R5bGVzIGluIHRoZSBvcmRlciB0aGV5IHdlcmUgZGVmaW5lZFxuICB2YXIgaW50ZXJhY3Rpb25TdHlsZXMgPSBPYmplY3Qua2V5cyhzdHlsZSkuZmlsdGVyKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgcmV0dXJuIG5hbWUgPT09ICc6YWN0aXZlJyAmJiBfZ2V0U3R5bGVTdGF0ZShjb21wb25lbnQsIGtleSwgJzphY3RpdmUnKSB8fCBuYW1lID09PSAnOmhvdmVyJyAmJiBfZ2V0U3R5bGVTdGF0ZShjb21wb25lbnQsIGtleSwgJzpob3ZlcicpIHx8IG5hbWUgPT09ICc6Zm9jdXMnICYmIF9nZXRTdHlsZVN0YXRlKGNvbXBvbmVudCwga2V5LCAnOmZvY3VzJyk7XG4gIH0pLm1hcChmdW5jdGlvbiAobmFtZSkge1xuICAgIHJldHVybiBzdHlsZVtuYW1lXTtcbiAgfSk7XG5cbiAgaWYgKGludGVyYWN0aW9uU3R5bGVzLmxlbmd0aCkge1xuICAgIG5ld1N0eWxlID0gX21lcmdlU3R5bGVzKFtuZXdTdHlsZV0uY29uY2F0KGludGVyYWN0aW9uU3R5bGVzKSk7XG4gIH1cblxuICBpZiAoc3R5bGVbJzphY3RpdmUnXSAmJiAhY29tcG9uZW50Ll9yYWRpdW1Nb3VzZVVwTGlzdGVuZXIgJiYgRXhlY3V0aW9uRW52aXJvbm1lbnQuY2FuVXNlRXZlbnRMaXN0ZW5lcnMpIHtcbiAgICBjb21wb25lbnQuX3JhZGl1bU1vdXNlVXBMaXN0ZW5lciA9IE1vdXNlVXBMaXN0ZW5lci5zdWJzY3JpYmUoX21vdXNlVXAuYmluZChudWxsLCBjb21wb25lbnQpKTtcbiAgfVxuXG4gIG5ld1Byb3BzLnN0eWxlID0gUHJlZml4ZXIuZ2V0UHJlZml4ZWRTdHlsZShuZXdTdHlsZSk7XG5cbiAgcmV0dXJuIFJlYWN0LmNsb25lRWxlbWVudChyZW5kZXJlZEVsZW1lbnQsIG5ld1Byb3BzLCBuZXdDaGlsZHJlbik7XG59O1xuXG4vLyBFeHBvc2luZyBtZXRob2RzIGZvciB0ZXN0cyBpcyB1Z2x5LCBidXQgdGhlIGFsdGVybmF0aXZlLCByZS1yZXF1aXJpbmcgdGhlXG4vLyBtb2R1bGUgZWFjaCB0aW1lLCBpcyB0b28gc2xvd1xucmVzb2x2ZVN0eWxlcy5fX2NsZWFyU3RhdGVGb3JUZXN0cyA9IGZ1bmN0aW9uICgpIHtcbiAgbWVkaWFRdWVyeUxpc3RCeVF1ZXJ5U3RyaW5nID0ge307XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlc29sdmVTdHlsZXM7IiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBmaW5kKGFycmF5LCBwcmVkaWNhdGUsIGNvbnRleHQpIHtcbiAgaWYgKHR5cGVvZiBBcnJheS5wcm90b3R5cGUuZmluZCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBhcnJheS5maW5kKHByZWRpY2F0ZSwgY29udGV4dCk7XG4gIH1cblxuICBjb250ZXh0ID0gY29udGV4dCB8fCB0aGlzO1xuICB2YXIgbGVuZ3RoID0gYXJyYXkubGVuZ3RoO1xuICB2YXIgaTtcblxuICBpZiAodHlwZW9mIHByZWRpY2F0ZSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IocHJlZGljYXRlICsgJyBpcyBub3QgYSBmdW5jdGlvbicpO1xuICB9XG5cbiAgZm9yIChpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHByZWRpY2F0ZS5jYWxsKGNvbnRleHQsIGFycmF5W2ldLCBpLCBhcnJheSkpIHtcbiAgICAgIHJldHVybiBhcnJheVtpXTtcbiAgICB9XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmaW5kO1xuIiwiLyohXG4gIENvcHlyaWdodCAoYykgMjAxNSBKZWQgV2F0c29uLlxuICBCYXNlZCBvbiBjb2RlIHRoYXQgaXMgQ29weXJpZ2h0IDIwMTMtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAgQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiovXG5cbihmdW5jdGlvbiAoKSB7XG5cdCd1c2Ugc3RyaWN0JztcblxuXHR2YXIgY2FuVXNlRE9NID0gISEoXG5cdFx0dHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiZcblx0XHR3aW5kb3cuZG9jdW1lbnQgJiZcblx0XHR3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudFxuXHQpO1xuXG5cdHZhciBFeGVjdXRpb25FbnZpcm9ubWVudCA9IHtcblxuXHRcdGNhblVzZURPTTogY2FuVXNlRE9NLFxuXG5cdFx0Y2FuVXNlV29ya2VyczogdHlwZW9mIFdvcmtlciAhPT0gJ3VuZGVmaW5lZCcsXG5cblx0XHRjYW5Vc2VFdmVudExpc3RlbmVyczpcblx0XHRcdGNhblVzZURPTSAmJiAhISh3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciB8fCB3aW5kb3cuYXR0YWNoRXZlbnQpLFxuXG5cdFx0Y2FuVXNlVmlld3BvcnQ6IGNhblVzZURPTSAmJiAhIXdpbmRvdy5zY3JlZW5cblxuXHR9O1xuXG5cdGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBkZWZpbmUuYW1kID09PSAnb2JqZWN0JyAmJiBkZWZpbmUuYW1kKSB7XG5cdFx0ZGVmaW5lKGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiBFeGVjdXRpb25FbnZpcm9ubWVudDtcblx0XHR9KTtcblx0fSBlbHNlIGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykge1xuXHRcdG1vZHVsZS5leHBvcnRzID0gRXhlY3V0aW9uRW52aXJvbm1lbnQ7XG5cdH0gZWxzZSB7XG5cdFx0d2luZG93LkV4ZWN1dGlvbkVudmlyb25tZW50ID0gRXhlY3V0aW9uRW52aXJvbm1lbnQ7XG5cdH1cblxufSgpKTtcbiJdfQ==
