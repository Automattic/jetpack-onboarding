(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var AppDispatcher=require("../dispatcher/app-dispatcher"),JPSConstants=require("../constants/jetpack-start-constants"),DataActions={requestStarted:function(){AppDispatcher.dispatch({actionType:JPSConstants.SAVE_STARTED})},requestFinished:function(){AppDispatcher.dispatch({actionType:JPSConstants.SAVE_FINISHED})}};module.exports=DataActions;


},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23}],2:[function(require,module,exports){
var AppDispatcher=require("../dispatcher/app-dispatcher"),JPSConstants=require("../constants/jetpack-start-constants"),FlashActions={notice:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SET_FLASH,message:t,severity:JPSConstants.FLASH_SEVERITY_NOTICE})},error:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SET_FLASH,message:t,severity:JPSConstants.FLASH_SEVERITY_ERROR})},unset:function(){AppDispatcher.dispatch({actionType:JPSConstants.UNSET_FLASH})}};module.exports=FlashActions;


},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23}],3:[function(require,module,exports){
var AppDispatcher=require("../dispatcher/app-dispatcher"),JPSConstants=require("../constants/jetpack-start-constants"),Paths=require("../constants/jetpack-start-paths"),FlashActions=require("./flash-actions"),SiteActions=require("./site-actions"),WPAjax=require("../utils/wp-ajax"),SetupProgressStore=require("../stores/setup-progress-store"),SiteStore=require("../stores/site-store"),SetupProgressActions={resetData:function(){WPAjax.post(JPS.site_actions.reset_data).fail(function(t){FlashActions.error("Failed to save data: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.RESET_DATA})},completeStep:function(t,e){var s=SetupProgressStore.getStepFromSlug(t);AppDispatcher.dispatch({actionType:JPSConstants.STEP_COMPLETE,slug:t}),this._recordComplete(s,e)},completeAndNextStep:function(t,e){this.completeStep(t,e),AppDispatcher.dispatch({actionType:JPSConstants.STEP_NEXT,slug:t})},_recordComplete:function(t,e){"undefined"==typeof e&&(e={}),e.completion=SetupProgressStore.getProgressPercent(),WPAjax.post(JPS.step_actions.complete,{step:t.slug,data:e}).fail(function(t){FlashActions.error(t)})},skipStep:function(){FlashActions.unset();var t=SetupProgressStore.getCurrentStep();t.skipped||WPAjax.post(JPS.step_actions.skip,{step:t.slug}).fail(function(t){FlashActions.error(t)}),AppDispatcher.dispatch({actionType:JPSConstants.STEP_SKIP})},getStarted:function(){WPAjax.post(JPS.step_actions.start).fail(function(t){FlashActions.error(t)}),AppDispatcher.dispatch({actionType:JPSConstants.STEP_GET_STARTED})},setCurrentStep:function(t){FlashActions.unset(),AppDispatcher.dispatch({actionType:JPSConstants.STEP_SELECT,slug:t})},selectNextStep:function(){FlashActions.unset(),AppDispatcher.dispatch({actionType:JPSConstants.STEP_NEXT})},submitTitleStep:function(){SiteActions.saveTitleAndDescription().done(function(){this.completeAndNextStep(Paths.SITE_TITLE_STEP_SLUG)}.bind(this))},submitLayoutStep:function(t){SiteActions.setLayout(t).done(function(){this.completeAndNextStep(Paths.LAYOUT_STEP_SLUG)}.bind(this))},submitJetpackJumpstart:function(){SiteActions.enableJumpstart().done(function(){this.completeStep(Paths.JETPACK_MODULES_STEP_SLUG)}.bind(this))},setActiveTheme:function(t){SiteActions.setActiveTheme(t).done(function(){this.completeStep(Paths.DESIGN_STEP_SLUG,{themeId:t.id})}.bind(this))},saveDesignStep:function(){this.completeAndNextStep(Paths.DESIGN_STEP_SLUG,{themeId:SiteStore.getActiveThemeId()})}};module.exports=SetupProgressActions;


},{"../constants/jetpack-start-constants":21,"../constants/jetpack-start-paths":22,"../dispatcher/app-dispatcher":23,"../stores/setup-progress-store":27,"../stores/site-store":28,"../utils/wp-ajax":31,"./flash-actions":2,"./site-actions":4}],4:[function(require,module,exports){
var AppDispatcher=require("../dispatcher/app-dispatcher"),JPSConstants=require("../constants/jetpack-start-constants"),SiteStore=require("../stores/site-store"),FlashActions=require("./flash-actions.js"),SpinnerActions=require("./spinner-actions.js"),WPAjax=require("../utils/wp-ajax"),SiteActions={setTitle:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SITE_SET_TITLE,title:t})},setDescription:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SITE_SET_DESCRIPTION,description:t})},saveTitleAndDescription:function(){var t=SiteStore.getTitle(),e=SiteStore.getDescription();return WPAjax.post(JPS.site_actions.set_title,{title:t,description:e}).fail(function(t){FlashActions.error("Error setting title: "+t)}),jQuery("#wp-admin-bar-site-name .ab-item").html(t),AppDispatcher.dispatch({actionType:JPSConstants.SITE_SAVE_TITLE_AND_DESCRIPTION,title:t}),jQuery.Deferred().resolve()},_installTheme:function(t){return t.installed?jQuery.Deferred().resolve():(SpinnerActions.show("Installing '"+t.name+"'"),WPAjax.post(JPS.site_actions.install_theme,{themeId:t.id}).done(function(){t.installed=!0,AppDispatcher.dispatch({actionType:JPSConstants.SITE_INSTALL_THEME,theme:t})}).fail(function(t){FlashActions.error("Server error installing theme: "+t)}).always(function(){SpinnerActions.hide()}))},_activateTheme:function(t){WPAjax.post(JPS.site_actions.set_theme,{themeId:t.id}).fail(function(t){FlashActions.error("Server error setting theme: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.SITE_SET_THEME,themeId:t.id})},setActiveTheme:function(t){return this._installTheme(t).done(function(){this._activateTheme(t)}.bind(this)),jQuery.Deferred().resolve()},setLayout:function(t){return WPAjax.post(JPS.site_actions.set_layout,{layout:t}).fail(function(t){FlashActions.error("Error setting layout: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.SITE_SET_LAYOUT,layout:t}),jQuery.Deferred().resolve()},configureJetpack:function(t){return SpinnerActions.show("Connecting to WordPress.com"),WPAjax.post(JPS.site_actions.configure_jetpack,{return_to_step:t}).done(function(t){AppDispatcher.dispatch({actionType:JPSConstants.SITE_JETPACK_CONFIGURED}),t.next?window.location.replace(t.next):SpinnerActions.hide()}).fail(function(t){FlashActions.error("Error enabling Jetpack: "+t),SpinnerActions.hide()})},activateJetpackModule:function(t){return WPAjax.post(JPS.site_actions.activate_jetpack_modules,{modules:[t]}).fail(function(t){FlashActions.error("Error activating Jetpack module: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.SITE_JETPACK_MODULE_ENABLED,slug:t}),jQuery.Deferred().resolve()},deactivateJetpackModule:function(t){return WPAjax.post(JPS.site_actions.deactivate_jetpack_modules,{modules:[t]}).fail(function(t){FlashActions.error("Error deactivating Jetpack module: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.SITE_JETPACK_MODULE_DISABLED,slug:t}),jQuery.Deferred().resolve()},loadAllJetpackModules:function(){return 0===SiteStore.getJetpackAdditionalModules().length?WPAjax.post(JPS.site_actions.list_jetpack_modules).done(function(t){AppDispatcher.dispatch({actionType:JPSConstants.SITE_JETPACK_ADD_MODULES,modules:t})}).fail(function(t){FlashActions.error("Error fetching all Jetpack modules: "+t)}):jQuery.Deferred().resolve()},enableJumpstart:function(){return WPAjax.post(JPS.site_actions.activate_jetpack_modules,{modules:SiteStore.getJumpstartModuleSlugs()}).fail(function(t){FlashActions.error("Error activating Jetpack modules: "+t)}),AppDispatcher.dispatch({actionType:JPSConstants.SITE_JETPACK_JUMPSTART_ENABLED}),jQuery.Deferred().resolve()}};module.exports=SiteActions;


},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23,"../stores/site-store":28,"../utils/wp-ajax":31,"./flash-actions.js":2,"./spinner-actions.js":5}],5:[function(require,module,exports){
var AppDispatcher=require("../dispatcher/app-dispatcher"),JPSConstants=require("../constants/jetpack-start-constants"),SpinnerActions={show:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SHOW_SPINNER,message:t})},hide:function(){AppDispatcher.dispatch({actionType:JPSConstants.HIDE_SPINNER})},showAsync:function(t){AppDispatcher.dispatch({actionType:JPSConstants.SHOW_ASYNC_SPINNER,message:t})},hideAsync:function(){AppDispatcher.dispatch({actionType:JPSConstants.HIDE_ASYNC_SPINNER})}};module.exports=SpinnerActions;


},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23}],6:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Button=require("@automattic/dops-react/js/components/button"),SiteStore=require("../stores/site-store"),WelcomeSection=require("./welcome-section"),SettingsItem=React.createClass({displayName:"SettingsItem",styles:{item:{padding:"1em",marginBottom:"1em",listStyle:"none",background:"#f5f5f5",border:"1px solid #ddd"},heading:{margin:0,fontSize:"1.2em",fontWeight:800}},render:function(){return React.createElement("li",{style:this.styles.item},React.createElement("h5",{style:this.styles.heading},this.props.title),this.props.children)}}),AdvancedSettingsStep=React.createClass({displayName:"AdvancedSettingsStep",styles:{wrapper:{marginLeft:0}},render:function(){return React.createElement(WelcomeSection,null,React.createElement("h4",null,"Advanced settings"),React.createElement("ul",{style:this.styles.wrapper},React.createElement(SettingsItem,{title:"Fine-tune your site's layout and appearance"},"Customize your siteâ€™s colors, fonts, sidebars and other settings.",React.createElement("br",null),React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.customize_url},"Customize my site"),"Â Â ",React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.themes_url},"Browse and add themes")),("blog"==SiteStore.getLayout()||"site-blog"==SiteStore.getLayout())&&React.createElement(SettingsItem,{title:"Create your first blog post"},'An epic essay or just "Hello World!"',React.createElement("br",null),React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.new_blog_post_url},"Write a new blog post"),"Â Â ",React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.manage_posts_url},"Manage posts")),React.createElement(SettingsItem,{title:"Create a static page"},'"About me", "Our Services" or anything else you can imagine.',React.createElement("br",null),React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.new_page_url},"Create a new page"),"Â Â ",React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.manage_pages_url},"Manage pages")),React.createElement(SettingsItem,{title:"Extend your site's functionality"},"WordPress offers thousands of plugins from Jetpack and the WordPress community.",React.createElement("br",null),React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.plugins_url},"Manage plugins"),"Â Â ",SiteStore.getJetpackConfigured()&&React.createElement(Button,{color:"blue",href:JPS.steps.advanced_settings.jetpack_modules_url},"Manage Jetpack modules")),React.createElement(SettingsItem,{title:"Learn more"},React.createElement("a",{href:"https://codex.wordpress.org/First_Steps_With_WordPress"},"First Steps with WordPress")," - an online guide from the creators of WordPress")))}});module.exports=AdvancedSettingsStep;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../stores/site-store":28,"./welcome-section":19,"@automattic/dops-react/js/components/button":33}],7:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,ContentBox=React.createClass({displayName:"ContentBox",render:function(){return React.createElement("div",{className:"welcome__content_box"},this.props.children,React.createElement("div",{className:"clear"}))}});module.exports=ContentBox;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],8:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Dashicon=React.createClass({displayName:"Dashicon",propTypes:{name:React.PropTypes.string.isRequired,style:React.PropTypes.object,onMouseOver:React.PropTypes.func,onMouseOut:React.PropTypes.func},render:function(){return React.createElement("span",{style:this.props.style,onMouseOver:this.props.onMouseOver,onMouseOut:this.props.onMouseOut,className:"dashicons dashicons-"+this.props.name},this.props.children)}});module.exports=Dashicon;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],9:[function(require,module,exports){
(function (global){
function getThemeState(){return{themes:SiteStore.getThemes(),site_title:SiteStore.getTitle()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SiteStore=require("../stores/site-store"),SetupProgressActions=require("../actions/setup-progress-actions"),Tooltip=require("./tooltip"),WelcomeSection=require("./welcome-section"),ContentBox=require("./content-box"),styles=require("../styles"),Button=require("@automattic/dops-react/js/components/button"),DesignStep=React.createClass({displayName:"DesignStep",componentDidMount:function(){SiteStore.addChangeListener(this._onChange),this._loadPopularThemes()},componentWillUnmount:function(){SiteStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getThemeState())},getInitialState:function(){var e=getThemeState();return e.popularThemes=[],e},handleActivateTheme:function(e){e.preventDefault(),this.setState({tooltipTheme:null,tooltipPosition:null});var t=jQuery(e.currentTarget),n=t.data("theme-id"),o=this.findTheme(n),a=!o.installed,i=SetupProgressActions.setActiveTheme(o);a&&i.done(function(){this._loadPopularThemes()}.bind(this))},findTheme:function(e){return _.findWhere(this.state.themes,{id:e})||_.findWhere(this.state.popularThemes,{id:e})},handleContinue:function(e){e.preventDefault(),SetupProgressActions.saveDesignStep()},handleShowTooltip:function(e){e.preventDefault();var t=jQuery(e.currentTarget),n=this.findTheme(t.data("theme-id")),o=t.position(),a=t.outerWidth(),i=t.outerHeight(),l={top:o.top+i/2,left:o.left+a};this.setState({tooltipTheme:n,tooltipPosition:l})},handleHideTooltip:function(e){e.preventDefault(),this.setState({tooltipTheme:null,tooltipPosition:null})},handleGetPopularThemes:function(e){e.preventDefault(),this._loadPopularThemes()},_loadPopularThemes:function(){SiteStore.getPopularThemes().done(function(e){this.setState({popularThemes:e})}.bind(this))},render:function(){return React.createElement(WelcomeSection,{id:"welcome__design"},React.createElement("h3",null,"Let's launch ",React.createElement("em",null,this.state.site_title)),React.createElement("h4",null,"Pick a design"),React.createElement("p",{style:styles.content},'A "theme" controls the design of your site - colours, fonts and layout.'),React.createElement("p",{style:styles.content},"Click any theme below to choose it for your site. And don't worry - you can easily change this later."),React.createElement("p",{className:"submit"},React.createElement(Button,{color:"blue",onClick:this.handleContinue},"Next Step â†’")),React.createElement(ContentBox,null,React.createElement("h3",null,"Installed themes"),React.createElement("div",{className:"theme-browser rendered"},this._renderThemeList())),React.createElement(ContentBox,null,React.createElement("h3",null,"Popular themes from WordPress.org",React.createElement(Button,{color:"blue",style:{"float":"right"},onClick:this.handleGetPopularThemes},"Load more themes")),React.createElement("div",{className:"theme-browser rendered"},this._renderPopularThemeList())),React.createElement("div",{style:{clear:"both"}}),this.state.tooltipTheme&&this._renderTooltip())},_renderTooltip:function(){var e=this.state.tooltipTheme,t=this.state.tooltipPosition;return React.createElement(Tooltip,{left:t.left,top:t.top,width:320,title:e.name},React.createElement("p",null,"By ",e.author),React.createElement("p",{dangerouslySetInnerHTML:{__html:_.unescape(e.description)}}))},_renderTheme:function(e){return React.createElement("div",{key:e.id,className:"theme"+(e.active?" active":""),"data-theme-id":e.id,onClick:this.handleActivateTheme,onMouseEnter:this.handleShowTooltip,onMouseLeave:this.handleHideTooltip,"aria-describedby":e.id+"-action "+e.id+"-name"},e.screenshot?React.createElement("div",{className:"theme-screenshot"},React.createElement("img",{src:e.screenshot,alt:""})):React.createElement("div",{className:"theme-screenshot blank"}),!e.active&&React.createElement("span",{className:"more-details"},e.installed?"Click to select":"Click to install"),React.createElement("h3",{className:"theme-name",id:e.id+"-name"},React.createElement("span",null,e.active?"Selected:":"")," ",e.name))},_renderPopularThemeList:function(){return this.state.popularThemes.map(this._renderTheme)},_renderThemeList:function(){return this.state.themes.map(this._renderTheme)}});module.exports=DesignStep;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../stores/site-store":28,"../styles":30,"./content-box":7,"./tooltip":17,"./welcome-section":19,"@automattic/dops-react/js/components/button":33}],10:[function(require,module,exports){
(function (global){
function getFlashState(){return FlashStore.getFlash()}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,FlashStore=require("../stores/flash-store"),Flash=React.createClass({displayName:"Flash",componentDidMount:function(){FlashStore.addChangeListener(this._onChange)},componentWillUnmount:function(){FlashStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getFlashState())},getInitialState:function(){return getFlashState()},render:function(){return this.state.message?React.createElement("div",{className:this.state.severity+" updated"},this.state.message):null}});module.exports=Flash;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../stores/flash-store":26}],11:[function(require,module,exports){
(function (global){
function getSetupState(){return{}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SetupProgressStore=require("../stores/setup-progress-store"),SetupProgressActions=require("../actions/setup-progress-actions"),Button=require("@automattic/dops-react/js/components/button"),Radium=require("radium"),GetStarted=React.createClass({displayName:"GetStarted",componentDidMount:function(){SetupProgressStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SetupProgressStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getSetupState())},getInitialState:function(){return getSetupState()},handleGetStarted:function(e){e.preventDefault(),SetupProgressActions.getStarted()},_isIE8:function(){jQuery("html").is(".ie8")},styles:{wrapper:{textAlign:"center",backgroundImage:"url("+JPS.base_url+"/img/jps-welcome.png)",backgroundRepeat:"no-repeat",backgroundPosition:"center bottom",backgroundSize:"520px auto",paddingBottom:200,"@media (max-width: 782px)":{backgroundImage:"none",paddingBottom:30}},wrapperIE8:{backgroundImage:"none"},subhead:{margin:"0 0 30px",color:"#666",fontSize:18,lineHeight:1.6,textAlign:"center","@media (max-width: 600px)":{marginBottom:15,fontSize:15},"@media (max-width: 320px)":{fontSize:13}}},render:function(){return React.createElement("div",{key:"welcome-intro",style:[this.styles.wrapper,this._isIE8()&&this.styles.wrapperIE8]},React.createElement("h3",null,"You're almost done!"),React.createElement("p",{style:this.styles.subhead},"Take these steps to supercharge your WordPress site."),React.createElement("p",null,React.createElement(Button,{color:"green",size:"big",theme:"jetpack",onClick:this.handleGetStarted},"Get Started â†’")))}});module.exports=Radium(GetStarted);


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../stores/setup-progress-store":27,"@automattic/dops-react/js/components/button":33,"radium":62}],12:[function(require,module,exports){
(function (global){
function getJetpackProgress(){return{jetpackConfigured:SiteStore.getJetpackConfigured()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SiteStore=require("../stores/site-store"),SiteActions=require("../actions/site-actions"),Paths=require("../constants/jetpack-start-paths"),JetpackJumpstartMenu=React.createClass({displayName:"JetpackJumpstartMenu",componentDidMount:function(){SiteStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SiteStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getJetpackProgress())},getInitialState:function(){return getJetpackProgress()},handleClickConnect:function(e){e.preventDefault(),console.log("clicked"),SiteActions.configureJetpack(Paths.JETPACK_MODULES_STEP_SLUG)},style:{color:"black",fontSize:12,marginLeft:20},render:function(){return React.createElement("div",{style:this.style},this.state.jetpackConfigured?React.createElement("div",null):React.createElement("div",null,"Boost traffic, enhance security, and improve performance with a connection to WordPress.com",React.createElement("br",null),React.createElement("a",{className:"button button-primary button-large",href:"#",onClick:this.handleClickConnect},"Connect to WordPress.com")))}});module.exports=JetpackJumpstartMenu;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/site-actions":4,"../constants/jetpack-start-paths":22,"../stores/site-store":28}],13:[function(require,module,exports){
(function (global){
function getJetpackState(){return{site_title:SiteStore.getTitle(),jetpackConfigured:SiteStore.getJetpackConfigured(),jumpstartEnabled:SiteStore.getJetpackJumpstartEnabled(),modulesEnabled:SiteStore.getActiveModuleSlugs()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Radium=require("radium"),SkipButton=require("./skip-button"),SiteStore=require("../stores/site-store"),SiteActions=require("../actions/site-actions"),Paths=require("../constants/jetpack-start-paths"),ContentBox=require("./content-box"),styles=require("../styles"),WelcomeSection=require("./welcome-section"),SetupProgressActions=require("../actions/setup-progress-actions"),SpinnerStore=require("../stores/spinner-store"),Button=require("@automattic/dops-react/js/components/button"),JetpackLogo=React.createClass({displayName:"JetpackLogo",styles:{jetpackLogoWrapper:{display:"block",textAlign:"center",height:70,color:"white",marginLeft:5,backgroundColor:"#81a844"},jetpackLogo:{display:"inline-block",position:"relative",width:214,marginRight:6,background:"url("+JPS.base_url+"/../jetpack/images/jetpack-logo.png) center center no-repeat",backgroundSize:"183px auto",color:"#fff",fontWeight:"normal"},jetpackLogoName:{textIndent:-9999,visibility:"hidden"}},render:function(){return React.createElement("span",{style:[this.styles.jetpackLogoWrapper,this.props.style]},"Powered by",React.createElement("br",null),React.createElement("a",{href:"/wp-admin/admin.php?page=jetpack",title:"Jetpack",style:this.styles.jetpackLogo},React.createElement("span",{style:this.styles.jetpackLogoName},"Jetpack")))}});JetpackLogo=Radium(JetpackLogo);var JetpackJumpstart=React.createClass({displayName:"JetpackJumpstart",styles:{jetpackLogo:{"float":"right","@media (max-width: 782px)":{"float":"none",marginLeft:0}},jumpstartModule:{"float":"left",position:"relative",height:160,padding:10,"@media (min-width: 782px)":{width:"33%"}},jumpstartModuleDesc:{display:"block",marginTop:5,lineHeight:"150%"}},componentDidMount:function(){SiteStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SiteStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getJetpackState())},getInitialState:function(){var e=getJetpackState();return e.showMoreModules=!1,e},handleJetpackConnect:function(e){e.preventDefault(),SiteActions.configureJetpack(Paths.JETPACK_MODULES_STEP_SLUG)},handleChangeModuleStatus:function(e){var t=jQuery(e.currentTarget),a=t.data("module-slug");SiteStore.isJetpackModuleEnabled(a)?SiteActions.deactivateJetpackModule(a):SiteActions.activateJetpackModule(a)},handleEnableAllModules:function(e){e.preventDefault(),SiteActions.enableJumpstart()},handleNext:function(e){e.preventDefault(),SetupProgressActions.completeAndNextStep(Paths.JETPACK_MODULES_STEP_SLUG)},handleShowMoreModules:function(e){e.preventDefault(),SiteActions.loadAllJetpackModules().done(function(){this.setState({showMoreModules:!0})}.bind(this))},handleShowFewerModules:function(e){e.preventDefault(),this.setState({showMoreModules:!1})},_renderModule:function(e){var t=SiteStore.isJetpackModuleEnabled(e.slug),a="jp-module-"+e.slug;return React.createElement("div",{key:"modules-"+e.slug,style:this.styles.jumpstartModule},React.createElement("input",{id:a,type:"checkbox",checked:t,"data-module-slug":e.slug,onChange:this.handleChangeModuleStatus}),React.createElement("label",{htmlFor:a},React.createElement("strong",null,e.name)),React.createElement("div",{style:this.styles.jumpstartModuleDesc},React.createElement("div",{dangerouslySetInnerHTML:{__html:e.description}}),t&&e.configure_url&&React.createElement("div",null,React.createElement("a",{target:"_configure",href:e.configure_url},"configure"))))},render:function(){var e,t;this.state.jetpackConfigured||SpinnerStore.showing()||(e=React.createElement("div",{className:"welcome__jumpstart_overlay"}),t=React.createElement("div",{className:"welcome__jumpstart_overlay__body"},React.createElement("p",null,"These modules require a WordPress.com account - it's free!"),React.createElement(Button,{color:"green",size:"big",theme:"jetpack",onClick:this.handleJetpackConnect},"Connect to WordPress.com"),React.createElement("p",null,React.createElement(SkipButton,null))));var a=SiteStore.getJumpstartModules().map(this._renderModule),n=SiteStore.getJetpackAdditionalModules().map(this._renderModule);return React.createElement(WelcomeSection,null,React.createElement("h3",null,"Let's launch ",React.createElement("em",null,this.state.site_title)),React.createElement("h4",null,"Enable Jetpack features"),this.state.jetpackConfigured&&React.createElement("div",null,React.createElement(JetpackLogo,{style:this.styles.jetpackLogo}),React.createElement("p",{style:styles.content},"Congratulations! You've enabled Jetpack and unlocked dozens of powerful features."),React.createElement("p",{style:styles.content},"Check the boxes below to enable our most popular features."),React.createElement("div",{className:"clear"})),React.createElement("div",{className:"welcome__connect"},React.createElement("div",{className:"welcome__jumpstart_wrapper"},e,t,this.state.jetpackConfigured&&React.createElement("div",{className:"submit"},React.createElement(Button,{style:{"float":"right"},color:"blue",onClick:this.handleNext},"Next Step â†’"),React.createElement("div",{className:"clear"})),React.createElement(ContentBox,null,React.createElement("h3",null,"Popular features Â Â ",React.createElement(Button,{disabled:this.state.jumpstartEnabled,color:"blue",onClick:this.handleEnableAllModules},this.state.jumpstartEnabled?"Enabled All":"Enable all (recommended)")),a),this.state.showMoreModules?React.createElement("p",{className:"more"},React.createElement("a",{href:"#",onClick:this.handleShowFewerModules},"hide additional features")):React.createElement("p",{className:"more"},React.createElement("a",{href:"#",onClick:this.handleShowMoreModules},"show additional features")),this.state.showMoreModules&&React.createElement(ContentBox,null,React.createElement("h3",null,"Additional modules"),n))))}});module.exports=Radium(JetpackJumpstart);


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../actions/site-actions":4,"../constants/jetpack-start-paths":22,"../stores/site-store":28,"../stores/spinner-store":29,"../styles":30,"./content-box":7,"./skip-button":16,"./welcome-section":19,"@automattic/dops-react/js/components/button":33,"radium":62}],14:[function(require,module,exports){
(function (global){
function getSiteLayoutState(){return{site_title:SiteStore.getTitle(),layout:SiteStore.getLayout()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SiteStore=require("../stores/site-store"),Button=require("@automattic/dops-react/js/components/button"),WelcomeSection=require("./welcome-section"),styles=require("../styles"),SetupProgressActions=require("../actions/setup-progress-actions"),LayoutStep=React.createClass({displayName:"LayoutStep",componentDidMount:function(){SiteStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SiteStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getSiteLayoutState())},getInitialState:function(){return getSiteLayoutState()},handleSetLayout:function(e){this.setState({layout:jQuery(e.currentTarget).val()})},handleSubmit:function(e){e.preventDefault(),SetupProgressActions.submitLayoutStep(this.state.layout)},render:function(){return React.createElement(WelcomeSection,{id:"welcome__layout"},React.createElement("h3",null,"Let's launch ",React.createElement("em",null,this.state.site_title)),React.createElement("h4",null,"Select a Layout"),React.createElement("p",{style:styles.content},"WordPress can be a blog, a web site with a hierarchy of static pages, or a combination of the two."),React.createElement("form",{onSubmit:this.handleSubmit},React.createElement("label",null,React.createElement("input",{type:"radio",name:"site_layout",value:"website",checked:"website"===this.state.layout,onChange:this.handleSetLayout})," Static Website",React.createElement("p",{className:"description"},"A web site with a hierarchy of pages")),React.createElement("br",null),React.createElement("label",null,React.createElement("input",{type:"radio",name:"site_layout",value:"site-blog",checked:"site-blog"===this.state.layout,onChange:this.handleSetLayout})," Static Website with a blog",React.createElement("p",{className:"description"},"A web site with pages that also has a blog or news section")),React.createElement("br",null),React.createElement("label",null,React.createElement("input",{type:"radio",name:"site_layout",value:"blog",checked:"blog"===this.state.layout,onChange:this.handleSetLayout})," Just a blog",React.createElement("p",{className:"description"},"A web site that will constantly show new content (articles, photos, videos, etc.)")),React.createElement("p",{className:"submit"},React.createElement(Button,{color:"blue"},"Next Step â†’"))))}});module.exports=LayoutStep;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../stores/site-store":28,"../styles":30,"./welcome-section":19,"@automattic/dops-react/js/components/button":33}],15:[function(require,module,exports){
(function (global){
function getSiteTitleState(){return{title:SiteStore.getTitle(),description:SiteStore.getDescription()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SiteActions=require("../actions/site-actions"),SiteStore=require("../stores/site-store"),WelcomeSection=require("./welcome-section"),styles=require("../styles"),Button=require("@automattic/dops-react/js/components/button"),SetupProgressActions=require("../actions/setup-progress-actions"),SiteTitleStep=React.createClass({displayName:"SiteTitleStep",componentDidMount:function(){SiteStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SiteStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getSiteTitleState())},getInitialState:function(){return getSiteTitleState()},handleChangeTitle:function(e){SiteActions.setTitle(e.currentTarget.value)},handleChangeDescription:function(e){SiteActions.setDescription(e.currentTarget.value)},handleSubmit:function(e){e.preventDefault(),SetupProgressActions.submitTitleStep()},render:function(){return React.createElement(WelcomeSection,{id:"welcome__site-title"},React.createElement("h3",null,"Let's launch your new website"),React.createElement("h4",null,"Enter a Title and Description"),React.createElement("p",{style:styles.content},"Make your site stand out with a catchy name."),React.createElement("form",{onSubmit:this.handleSubmit},React.createElement("table",{className:"form-table"},React.createElement("tbody",null,React.createElement("tr",null,React.createElement("th",null,React.createElement("label",{htmlFor:"site_title"},"Site Title")),React.createElement("td",null,React.createElement("input",{type:"text",name:"site_title",id:"site-title",autoComplete:"off",onChange:this.handleChangeTitle,value:this.state.title,placeholder:"Site Title (this can be changed later)",required:!0}),React.createElement("p",{className:"description"},"The name of your site. This title appears at the top of pages and in search results."))),React.createElement("tr",null,React.createElement("th",null,React.createElement("label",{htmlFor:"site_description"},"Site Description")),React.createElement("td",null,React.createElement("input",{type:"text",name:"site_description",id:"site-description",autoComplete:"off",onChange:this.handleChangeDescription,value:this.state.description,placeholder:"Site Description",required:!0}),React.createElement("p",{className:"description"},'A motto or tagline. This appears below the title on your site, and next to the title in search results. Try to be brief and descriptive, e.g. "Your online bait and tackle store"'))))),React.createElement("p",{className:"submit"},React.createElement(Button,{color:"blue"},"Next Step â†’"))))}});module.exports=SiteTitleStep;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../actions/site-actions":4,"../stores/site-store":28,"../styles":30,"./welcome-section":19,"@automattic/dops-react/js/components/button":33}],16:[function(require,module,exports){
(function (global){
function getSetupProgress(){return{completed:SetupProgressStore.getCurrentStep().completed}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,SetupProgressStore=require("../stores/setup-progress-store"),SetupProgressActions=require("../actions/setup-progress-actions"),SkipButton=React.createClass({displayName:"SkipButton",style:{color:"#bbb",fontSize:"90%",marginLeft:20,borderBottom:"1px dotted #bbb"},componentDidMount:function(){SetupProgressStore.addChangeListener(this._onChange)},componentWillUnmount:function(){SetupProgressStore.removeChangeListener(this._onChange)},_onChange:function(){this.setState(getSetupProgress())},getInitialState:function(){return getSetupProgress()},handleSkip:function(e){e.preventDefault(),SetupProgressActions.skipStep()},render:function(){var e=this.state.completed;return e?null:React.createElement("a",{style:this.style,href:"#",onClick:this.handleSkip},"Not now")}});module.exports=SkipButton;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../stores/setup-progress-store":27}],17:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Tooltip=React.createClass({displayName:"Tooltip",propTypes:{left:React.PropTypes.number.isRequired,top:React.PropTypes.number.isRequired,width:React.PropTypes.number.isRequired,title:React.PropTypes.string.isRequired},handleDismiss:function(e){e.preventDefault()},componentDidMount:function(){this._recomputePosition()},componentWillReceiveProps:function(){this._recomputePosition()},getInitialState:function(){return{realTop:this.props.top}},_recomputePosition:function(){var e=jQuery(React.findDOMNode(this.refs.wrapper));this.setState({realTop:this.props.top-e.outerHeight()/2})},render:function(){return React.createElement("div",{ref:"wrapper",className:"wp-pointer wp-pointer-left",style:{position:"absolute",width:this.props.width,top:this.state.realTop,left:this.props.left,zIndex:9999}},React.createElement("div",{className:"wp-pointer-content"},React.createElement("h3",null,this.props.title),React.createElement("p",null,this.props.children)),React.createElement("div",{className:"wp-pointer-arrow"},React.createElement("div",{className:"wp-pointer-arrow-inner"})))}});module.exports=Tooltip;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],18:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Radium=require("radium"),ProgressBar=require("@automattic/dops-react/js/components/progress-bar"),SetupProgressActions=require("../actions/setup-progress-actions"),Dashicon=require("./dashicon"),stepShape=React.PropTypes.shape({name:React.PropTypes.string.isRequired,slug:React.PropTypes.string}),WelcomeMenu=React.createClass({displayName:"WelcomeMenu",propTypes:{currentStep:stepShape.isRequired,clickable:React.PropTypes.bool,allSteps:React.PropTypes.arrayOf(stepShape).isRequired,progressPercent:React.PropTypes.number.isRequired},getDefaultProps:function(){return{clickable:!0}},styles:{wrapper:{"float":"right",width:"28%",height:"100%",background:"#fafafa",border:"1px solid #eee"},title:{margin:0,padding:12,overflow:"hidden",background:"#444",color:"#fff",fontSize:12,textTransform:"uppercase"},list:{margin:"13px 10px",listStyle:"none","@media (max-width: 600px)":{margin:"5px 4px"}},menuItem:{marginBottom:6,position:"relative",color:"#ccc",lineHeight:1.7,"@media (max-width: 782px)":{fontSize:"small"},"@media (max-width: 600px)":{fontSize:"smaller"}},menuItemCompleted:{color:"#4AB866"},icon:{fontSize:16,top:3,position:"relative"},menuItemLink:{color:"inherit",borderBottom:"1px dashed"},menuItemCurrent:{color:"#0074A2"}},selectStep:function(e){e.preventDefault();var t=jQuery(e.currentTarget).data("step-slug");SetupProgressActions.setCurrentStep(t)},render:function(){var e=this.props.allSteps.map(function(e){var t,r,s,a;return this.props.clickable&&this.props.currentStep&&(r=this.props.currentStep.slug==e.slug),t=!e["static"]&&this.props.clickable?React.createElement("a",{href:"#",style:this.styles.menuItemLink,"data-step-slug":e.slug,onClick:this.selectStep},e.name):e.name,e.menuView&&this.props.clickable&&(s=React.createElement(e.menuView,null)),a=e.completed?"yes":"arrow-right-alt2",React.createElement("li",{key:e.slug,style:[this.styles.menuItem,e.completed&&this.styles.menuItemCompleted,r&&this.styles.menuItemCurrent]},React.createElement(Dashicon,{style:this.styles.icon,name:a}),t," ",e.skipped?"(skipped)":null,s)}.bind(this));return React.createElement("div",{style:[this.styles.wrapper,this.props.style]},React.createElement("h3",{style:this.styles.title},React.createElement("span",{style:{"float":"left",marginRight:10}},"Your Progress"),React.createElement("div",null,React.createElement(ProgressBar,{style:{"float":"left"},progressPercent:this.props.progressPercent}))),React.createElement("ol",{style:this.styles.list},e))}});module.exports=Radium(WelcomeMenu);


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"./dashicon":8,"@automattic/dops-react/js/components/progress-bar":34,"radium":62}],19:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,WelcomeSection=React.createClass({displayName:"WelcomeSection",render:function(){var e=this.props,t=function(e,t){var o={},r=Object.prototype.hasOwnProperty;if(null==e)throw new TypeError;for(var n in e)r.call(e,n)&&!r.call(t,n)&&(o[n]=e[n]);return o}(e,{});return React.createElement("div",React.__spread({},t,{className:"welcome__section"}),this.props.children)}});module.exports=WelcomeSection;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],20:[function(require,module,exports){
(function (global){
function getSetupProgress(){return{newUser:SetupProgressStore.isNewUser(),showSpinner:SpinnerStore.showing(),spinnerMessage:SpinnerStore.getMessage(),currentStep:SetupProgressStore.getCurrentStep(),allSteps:SetupProgressStore.getAllSteps(),progressPercent:SetupProgressStore.getProgressPercent()}}var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,WelcomeMenu=require("./welcome-menu"),SetupProgressStore=require("../stores/setup-progress-store"),Reset=require("@automattic/dops-react/js/components/reset"),SetupProgressActions=require("../actions/setup-progress-actions"),Flash=require("./flash"),styles=require("../styles"),GetStarted=require("./get-started"),SpinnerStore=require("../stores/spinner-store"),SpinnerActions=require("../actions/spinner-actions"),DataStore=require("../stores/data-store"),WelcomeWidget=React.createClass({displayName:"WelcomeWidget",styles:{wrapper:{position:"relative"},loadingOverlay:{position:"absolute",top:0,left:0,width:"100%",height:"100%",minHeight:"100%",zIndex:999,backgroundColor:"rgba(255,255,255,0.6)"},loadingMessage:{position:"absolute",width:"50%",minWidth:300,borderRadius:2,padding:20,border:"1px solid black",backgroundColor:"white",textAlign:"center",left:"50%",top:100,transform:"translate(-50%,-50%)"},container:{"float":"left",width:"70%",padding:"0 10px"},menu:{marginTop:25}},componentDidMount:function(){SetupProgressStore.addChangeListener(this._onChange),SpinnerStore.addChangeListener(this._onSpinnerChange),DataStore.addChangeListener(this._onDataChange)},componentWillUnmount:function(){SetupProgressStore.removeChangeListener(this._onChange),SpinnerStore.removeChangeListener(this._onSpinnerChange),DataStore.removeChangeListener(this._onDataChange)},_onChange:function(){this.setState(getSetupProgress())},_onSpinnerChange:function(){this.setState({showSpinner:SpinnerStore.showing(),spinnerMessage:SpinnerStore.getMessage()})},_onDataChange:function(){this.setState({saving:DataStore.isSaving()})},getInitialState:function(){return getSetupProgress()},handleReset:function(e){e.preventDefault(),SetupProgressActions.resetData()},handleShowSpinner:function(e){e.preventDefault(),SpinnerActions.show("Testing spinner")},handleHideSpinner:function(e){e.preventDefault(),SpinnerActions.hide()},render:function(){return React.createElement(Reset,{css:styles.css},this._renderDebug(),React.createElement("div",{style:this.styles.wrapper},this._renderSpinner(),React.createElement("div",{style:this.styles.container},React.createElement(Flash,null),this._renderSection()),React.createElement(WelcomeMenu,{style:this.styles.menu,clickable:!this.state.newUser,currentStep:this.state.currentStep,allSteps:this.state.allSteps,progressPercent:this.state.progressPercent}),React.createElement("div",{className:"clear"})))},_renderSection:function(){return this.state.newUser?React.createElement(GetStarted,null):this._renderCurrentView()},_renderDebug:function(){return null},_renderSpinner:function(){return this.state.showSpinner?React.createElement("div",{style:this.styles.loadingOverlay},React.createElement("div",{style:this.styles.loadingMessage},React.createElement("img",{src:"/wp-admin/images/spinner-2x.gif",width:"16px",height:"16px"}),"Â Â ",this.state.spinnerMessage)):null},_renderCurrentView:function(){return this.state.currentStep?React.createElement(this.state.currentStep.welcomeView,null):React.createElement("h3",null,"Nothing")}});module.exports=WelcomeWidget;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../actions/setup-progress-actions":3,"../actions/spinner-actions":5,"../stores/data-store":25,"../stores/setup-progress-store":27,"../stores/spinner-store":29,"../styles":30,"./flash":10,"./get-started":11,"./welcome-menu":18,"@automattic/dops-react/js/components/reset":35}],21:[function(require,module,exports){
var keyMirror=require("keymirror");module.exports=keyMirror({STEP_COMPLETE:null,STEP_GET_STARTED:null,STEP_SELECT:null,STEP_NEXT:null,STEP_SKIP:null,SITE_SET_TITLE:null,SITE_SET_DESCRIPTION:null,SITE_SAVE_TITLE_AND_DESCRIPTION:null,SITE_SET_THEME:null,SITE_INSTALL_THEME:null,SITE_JETPACK_CONFIGURED:null,SITE_JETPACK_MODULE_ENABLED:null,SITE_JETPACK_MODULE_DISABLED:null,SITE_JETPACK_JUMPSTART_ENABLED:null,SITE_JETPACK_ADD_MODULES:null,SITE_SET_LAYOUT:null,SAVE_STARTED:null,SAVE_FINISHED:null,SET_FLASH:null,UNSET_FLASH:null,FLASH_SEVERITY_NOTICE:null,FLASH_SEVERITY_ERROR:null,RESET_DATA:null,SHOW_SPINNER:null,HIDE_SPINNER:null});


},{"keymirror":56}],22:[function(require,module,exports){
module.exports={SITE_TITLE_STEP_SLUG:"title",LAYOUT_STEP_SLUG:"layout",TRAFFIC_STEP_SLUG:"traffic",STATS_MONITORING_STEP_SLUG:"stats-monitoring",DESIGN_STEP_SLUG:"design",ADVANCED_STEP_SLUG:"advanced",JETPACK_MODULES_STEP_SLUG:"jetpack"};


},{}],23:[function(require,module,exports){
var Dispatcher=require("flux").Dispatcher;module.exports=new Dispatcher;


},{"flux":51}],24:[function(require,module,exports){
var WelcomePanel=require("./welcome-panel");WelcomePanel();


},{"./welcome-panel":32}],25:[function(require,module,exports){
function incrementSaveCounter(){_currentSaves+=1}function decrementSaveCounter(){_currentSaves-=1}var AppDispatcher=require("../dispatcher/app-dispatcher"),EventEmitter=require("events").EventEmitter,JPSConstants=require("../constants/jetpack-start-constants"),_currentSaves=0,jpsTimeout,CHANGE_EVENT="change";jQuery(window).on("beforeunload",function(){return DataStore.isSaving()?(jpsTimeout=setTimeout(function(){},1e3),"Your site changes are still saving."):void 0}),jQuery(window).on("unload",function(){clearTimeout(jpsTimeout)});var DataStore=_.extend({},EventEmitter.prototype,{isSaving:function(){return _currentSaves>0},addChangeListener:function(e){this.on(CHANGE_EVENT,e)},removeChangeListener:function(e){this.removeListener(CHANGE_EVENT,e)},emitChange:function(){this.emit(CHANGE_EVENT)}});AppDispatcher.register(function(e){switch(e.actionType){case JPSConstants.SAVE_STARTED:incrementSaveCounter(),DataStore.emitChange();break;case JPSConstants.SAVE_FINISHED:decrementSaveCounter(),DataStore.emitChange()}}),module.exports=DataStore;


},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23,"events":54}],26:[function(require,module,exports){
function setFlash(e,t){message=e,severity=t}var AppDispatcher=require("../dispatcher/app-dispatcher"),EventEmitter=require("events").EventEmitter,JPSConstants=require("../constants/jetpack-start-constants"),CHANGE_EVENT="change",message,severity,FlashStore=_.extend({},EventEmitter.prototype,{getFlash:function(){var e;switch(severity){case JPSConstants.FLASH_SEVERITY_ERROR:e="error";break;case JPSConstants.FLASH_SEVERITY_NOTICE:e="notice"}return{message:message,severity:e}},addChangeListener:function(e){this.on(CHANGE_EVENT,e)},removeChangeListener:function(e){this.removeListener(CHANGE_EVENT,e)},emitChange:function(){this.emit(CHANGE_EVENT)}});AppDispatcher.register(function(e){switch(e.actionType){case JPSConstants.SET_FLASH:setFlash(e.message,e.severity),FlashStore.emitChange();break;case JPSConstants.UNSET_FLASH:setFlash(null,null),FlashStore.emitChange()}}),module.exports=FlashStore;


},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23,"events":54}],27:[function(require,module,exports){
function setSteps(e){e.forEach(function(e){"undefined"==typeof e.completed&&(e.completed=JPS.step_status[e.slug]&&JPS.step_status[e.slug].completed||!1),"undefined"==typeof e.skipped&&(e.skipped=JPS.step_status[e.slug]&&JPS.step_status[e.slug].skipped||!1),"undefined"==typeof e["static"]&&(e["static"]=!1),"undefined"==typeof e.includeInProgress&&(e.includeInProgress=!0)}),_steps=e,ensureValidStepSlug()}function getStarted(){_started=!0,selectNextPendingStep()}function complete(e){var t=getStepFromSlug(e);t.completed=!0,t.skipped=!1}function skip(){var e=currentStepSlug(),t=getStepFromSlug(e);t.skipped=!0,selectNextPendingStep()}function getStepFromSlug(e){var t=null;return _.each(_steps,function(s){s.slug===e&&(t=s)}),t}function ensureValidStepSlug(){var e=currentStepSlug();e&&getStepFromSlug(e)||selectNextPendingStep()}function selectNextPendingStep(){var e=_.findWhere(_steps,{completed:!1,skipped:!1});null!==e&&select(e.slug)}function currentStepSlug(){if(0===window.location.hash.indexOf("#welcome/steps")){var e=window.location.hash.split("/"),t=e[e.length-1];return t}return null}function select(e){window.location.hash="welcome/steps/"+e}function reset(){JPS.step_status={},_.where(_steps,{"static":!1}).forEach(function(e){e.completed=!1,e.skipped=!1}),_started=!1}var AppDispatcher=require("../dispatcher/app-dispatcher"),EventEmitter=require("events").EventEmitter,JPSConstants=require("../constants/jetpack-start-constants"),CHANGE_EVENT="change",_steps,_started=JPS.started,SetupProgressStore=_.extend({},EventEmitter.prototype,{init:function(e){setSteps(e)},getAllSteps:function(){return _steps},isNewUser:function(){return!_started},emitChange:function(){this.emit(CHANGE_EVENT)},getCurrentStep:function(){return getStepFromSlug(currentStepSlug())},getStepFromSlug:function(e){return getStepFromSlug(e)},getProgressPercent:function(){var e=_.where(_steps,{includeInProgress:!0}).length,t=_.where(_steps,{includeInProgress:!0,completed:!0}).length,s=t/e*90+10,n=10*Math.round(s/10);return n},addChangeListener:function(e){this.on(CHANGE_EVENT,e)},removeChangeListener:function(e){this.removeListener(CHANGE_EVENT,e)}});AppDispatcher.register(function(e){switch(e.actionType){case JPSConstants.STEP_GET_STARTED:getStarted(),SetupProgressStore.emitChange();break;case JPSConstants.STEP_SELECT:select(e.slug),SetupProgressStore.emitChange();break;case JPSConstants.STEP_NEXT:selectNextPendingStep(),SetupProgressStore.emitChange();break;case JPSConstants.STEP_COMPLETE:complete(e.slug),SetupProgressStore.emitChange();break;case JPSConstants.STEP_COMPLETE_AND_NEXT:complete(e.slug),selectNextPendingStep(),SetupProgressStore.emitChange();break;case JPSConstants.RESET_DATA:reset(),SetupProgressStore.emitChange();break;case JPSConstants.STEP_SKIP:skip(),SetupProgressStore.emitChange()}}),module.exports=SetupProgressStore;


},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23,"events":54}],28:[function(require,module,exports){
function setTitle(e){JPS.bloginfo.name=e}function setDescription(e){JPS.bloginfo.description=e}function setActiveTheme(e){JPS.themes.forEach(function(t){t.id==e?t.active=!0:t.active=!1})}function installedTheme(e){JPS.themes.unshift(e),JPS.themes=JPS.themes.slice(0,3)}function setJetpackModuleActivated(e){-1===_.indexOf(JPS.jetpack.active_modules,e)&&JPS.jetpack.active_modules.push(e)}function setJetpackModuleDectivated(e){var t=_.indexOf(JPS.jetpack.active_modules,e);t>=0&&JPS.jetpack.active_modules.splice(t,1)}function setJetpackAdditionalModules(e){JPS.jetpack.additional_modules=_.filter(e,function(e){return-1==_.indexOf(JPS.jetpack.jumpstart_modules.map(function(e){return e.slug}),e.slug)})}function setLayout(e){layout=e}function setJetpackConfigured(){JPS.jetpack.configured=!0}function setJetpackJumpstartActivated(){JPS.jetpack.jumpstart_modules.forEach(function(e){setJetpackModuleActivated(e.slug)})}var AppDispatcher=require("../dispatcher/app-dispatcher"),EventEmitter=require("events").EventEmitter,JPSConstants=require("../constants/jetpack-start-constants"),WPAjax=require("../utils/wp-ajax"),CHANGE_EVENT="change",layout=JPS.steps.layout.current,SiteStore=_.extend({},EventEmitter.prototype,{getTitle:function(){return JPS.bloginfo.name},getDescription:function(){return JPS.bloginfo.description},getThemes:function(){return JPS.themes},getActiveThemeId:function(){for(var e=0;e<JPS.themes.length;e++){var t=JPS.themes[e];if(t.active)return t.id}return null},getJetpackConfigured:function(){return JPS.jetpack.configured},getActiveModuleSlugs:function(){return JPS.jetpack.active_modules},isJetpackModuleEnabled:function(e){return _.indexOf(JPS.jetpack.active_modules,e)>=0},getJetpackAdditionalModules:function(){return JPS.jetpack.additional_modules},getJumpstartModuleSlugs:function(){return JPS.jetpack.jumpstart_modules.map(function(e){return e.slug})},getJumpstartModules:function(){return JPS.jetpack.jumpstart_modules},getPopularThemes:function(){return WPAjax.post(JPS.site_actions.get_popular_themes)},getJetpackJumpstartEnabled:function(){for(var e=0;e<JPS.jetpack.jumpstart_modules.length;e++){var t=JPS.jetpack.jumpstart_modules[e];if(!this.isJetpackModuleEnabled(t.slug))return!1}return!0},getLayout:function(){return layout},emitChange:function(){this.emit(CHANGE_EVENT)},addChangeListener:function(e){this.on(CHANGE_EVENT,e)},removeChangeListener:function(e){this.removeListener(CHANGE_EVENT,e)}});AppDispatcher.register(function(e){switch(e.actionType){case JPSConstants.SITE_SET_TITLE:setTitle(e.title),SiteStore.emitChange();break;case JPSConstants.SITE_SET_DESCRIPTION:setDescription(e.description),SiteStore.emitChange();break;case JPSConstants.SITE_SET_THEME:setActiveTheme(e.themeId),SiteStore.emitChange();break;case JPSConstants.SITE_INSTALL_THEME:installedTheme(e.theme),SiteStore.emitChange();break;case JPSConstants.SITE_JETPACK_CONFIGURED:setJetpackConfigured(),SiteStore.emitChange();break;case JPSConstants.SITE_JETPACK_ADD_MODULES:setJetpackAdditionalModules(e.modules),SiteStore.emitChange();break;case JPSConstants.SITE_JETPACK_MODULE_ENABLED:setJetpackModuleActivated(e.slug),SiteStore.emitChange();break;case JPSConstants.SITE_JETPACK_MODULE_DISABLED:setJetpackModuleDectivated(e.slug),SiteStore.emitChange();break;case JPSConstants.SITE_JETPACK_JUMPSTART_ENABLED:setJetpackJumpstartActivated(),SiteStore.emitChange();break;case JPSConstants.SITE_SET_LAYOUT:setLayout(e.layout),SiteStore.emitChange()}}),module.exports=SiteStore;


},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23,"../utils/wp-ajax":31,"events":54}],29:[function(require,module,exports){
function show(e){spinnerEnabled=!0,spinnerMessage=e}function hide(){spinnerEnabled=!1,spinnerMessage=null}var AppDispatcher=require("../dispatcher/app-dispatcher"),EventEmitter=require("events").EventEmitter,JPSConstants=require("../constants/jetpack-start-constants"),CHANGE_EVENT="change",spinnerEnabled=!1,spinnerMessage=null,SpinnerStore=_.extend({},EventEmitter.prototype,{showing:function(){return spinnerEnabled},getMessage:function(){return spinnerMessage},addChangeListener:function(e){this.on(CHANGE_EVENT,e)},removeChangeListener:function(e){this.removeListener(CHANGE_EVENT,e)},emitChange:function(){this.emit(CHANGE_EVENT)}});AppDispatcher.register(function(e){switch(e.actionType){case JPSConstants.SHOW_SPINNER:show(e.message),SpinnerStore.emitChange();break;case JPSConstants.HIDE_SPINNER:hide(),SpinnerStore.emitChange()}}),module.exports=SpinnerStore;


},{"../constants/jetpack-start-constants":21,"../dispatcher/app-dispatcher":23,"events":54}],30:[function(require,module,exports){
module.exports={h3:{fontWeight:"normal"},content:{fontSize:"larger",color:"#777",lineHeight:1.5,margin:"1em 0"},css:{h4:{marginBottom:10},h5:{marginTop:0,fontSize:"1em",fontWeight:400},"input, select":{margin:1,padding:"3px 5px"},'input[type="text"]':{width:"100%"},".submit":{margin:"0px !important",padding:"5px 5px !important",backgroundColor:"#EEE",textAlign:"right"}}};


},{}],31:[function(require,module,exports){
var DataActions=require("../actions/data-actions"),WPAjax=function(){return{post:function(e,t){t="undefined"!=typeof t?t:{};var n=_.extend(t,{action:e,nonce:JPS.nonce}),a=jQuery.Deferred();return DataActions.requestStarted(),jQuery.post(ajaxurl,n).success(function(e){e.success?a.resolve(e.data):a.reject(e.data)}).fail(function(){a.reject("Server error")}).always(function(){DataActions.requestFinished()}),a}}}();module.exports=WPAjax;


},{"../actions/data-actions":1}],32:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,WelcomeWidget=require("./components/welcome-widget"),Paths=require("./constants/jetpack-start-paths"),SetupProgressStore=require("./stores/setup-progress-store");module.exports=function(){jQuery(document).ready(function(){SetupProgressStore.init([{name:"Site title",slug:Paths.SITE_TITLE_STEP_SLUG,welcomeView:require("./components/site-title-step")},{name:"Pick a layout",slug:Paths.LAYOUT_STEP_SLUG,welcomeView:require("./components/layout-step")},{name:"Pick a design",slug:Paths.DESIGN_STEP_SLUG,welcomeView:require("./components/design-step")},{name:"Enable Jetpack",slug:Paths.JETPACK_MODULES_STEP_SLUG,welcomeView:require("./components/jetpack-jumpstart-step"),menuView:require("./components/jetpack-jumpstart-menu")},{name:"Advanced settings",slug:Paths.ADVANCED_STEP_SLUG,welcomeView:require("./components/advanced-settings-step"),includeInProgress:!1}]),React.render(React.createElement(WelcomeWidget,{}),document.getElementById("jps-welcome-panel"))})};


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./components/advanced-settings-step":6,"./components/design-step":9,"./components/jetpack-jumpstart-menu":12,"./components/jetpack-jumpstart-step":13,"./components/layout-step":14,"./components/site-title-step":15,"./components/welcome-widget":20,"./constants/jetpack-start-paths":22,"./stores/setup-progress-store":27}],33:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,styles=require("../styles"),Radium=require("radium"),Button=React.createClass({displayName:"Button",propTypes:{size:React.PropTypes.oneOf(["tiny","normal","big"]),color:React.PropTypes.oneOf(["gray","blue","green"]),theme:React.PropTypes.oneOf(["wp","jetpack"]),inline:React.PropTypes.bool,onClick:React.PropTypes.func,href:React.PropTypes.string},getDefaultProps:function(){return{size:"normal",inline:!0,color:"gray",theme:"wp"}},handleCallbackHref:function(e){e.preventDefault(),window.location=this.props.href},styles:{basic:{borderRadius:3,boxShadow:"inset 0 1px 0 rgba(255, 255, 255, 0.3)",borderWidth:1,borderStyle:"solid",cursor:"pointer",display:"block",fontSize:14,fontWeight:"bold",padding:"10px 20px",textAlign:"center",textDecoration:"none",WebkitFontSmoothing:"antialiased",transition:"background 0.2s"},sizes:{tiny:{fontSize:10,padding:"2px 10px"},normal:{fontSize:13,padding:"5px 10px"},big:{fontSize:16,padding:"20px 40px"}},colors:{gray:{background:"linear-gradient(#fff, #f9f9f9)",borderColor:styles.colors.lightGray,color:styles.colors.darkGray,":hover":{color:styles.colors.gray}},blue:{background:styles.colors.blue,borderColor:"rgba(0,0,0,0.6)",color:"white",":hover":{background:styles.colors.lighterBlue}},green:{background:styles.colors.green,color:"white",borderColor:"rgba(0,0,0,0.6)",":hover":{background:styles.colors.lighterGreen}}},themes:{wp:{},jetpack:{padding:"18px 24px 15px",borderRadius:6,borderStyle:"none",boxShadow:"0 6px 0 #3e6c20,0 6px 3px rgba(0,0,0,0.4)"}},inline:{display:"inline-block"},disabled:{background:"#f9f9f9",borderColor:styles.colors.lightGray,color:styles.colors.lightGray,":hover":{background:"#f9f9f9",borderColor:styles.colors.lightGray,color:styles.colors.lightGray}}},render:function(){var e,o=this.props,r=o.size,t=o.color,l=o.inline,s=o.onClick,i=o.theme,n=o.href,a=function(e,o){var r={},t=Object.prototype.hasOwnProperty;if(null==e)throw new TypeError;for(var l in e)t.call(e,l)&&!t.call(o,l)&&(r[l]=e[l]);return r}(o,{size:1,color:1,inline:1,onClick:1,theme:1,href:1}),c=[this.styles.basic,this.styles.sizes[r],this.styles.colors[t],this.styles.themes[i],this.props.disabled&&this.styles.disabled,l&&this.styles.inline,this.props.style];return e=n&&!s?this.handleCallbackHref:s,React.createElement("button",React.__spread({},a,{style:c,onClick:e,onMouseOver:this.handleMouseOver,onMouseOut:this.handleMouseOut}),this.props.children)}});module.exports=Radium(Button);


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../styles":36,"radium":43}],34:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Radium=require("radium"),ProgressBar=React.createClass({displayName:"ProgressBar",propTypes:{style:React.PropTypes.object,progressPercent:React.PropTypes.number.isRequired},styles:{wrapper:{fontWeight:400,fontSize:"80%"},progress:{background:"#4ab866",width:"0%",transition:"width 0.5s",display:"block",height:"100%"},bar:{display:"inline-block",width:80,height:12,margin:"0 8px -2px 0",padding:2,borderRadius:2,background:"#f5f5f5"}},render:function(){return React.createElement("div",{style:[this.styles.wrapper,this.props.style]},React.createElement("div",{style:this.styles.bar},React.createElement("span",{style:[this.styles.progress,{width:this.props.progressPercent+"%"}]})),this.props.progressPercent,"% complete")}});module.exports=Radium(ProgressBar);


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"radium":43}],35:[function(require,module,exports){
(function (global){
var React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,Radium=require("radium"),m=require("../utils/m"),idCounter=0,Reset=React.createClass({displayName:"Reset",propTypes:{css:React.PropTypes.object},style:{resets:{"*":{boxSizing:"border-box"},"div, ul, ol, li, h1, h2, h3, h4, h5, h6, form, fieldset, legend, input, button, textarea, p, blockquote, th, td":{margin:0,padding:0},img:{border:"none",maxWidth:"100%"},td:{verticalAlign:"top"},".slideDown-enter":{overflowY:"hidden",maxHeight:0,transition:"all .5s ease-out"},".slideDown-enter-active":{overflowY:"hidden",maxHeight:400},".slideDown-leave":{overflowY:"hidden",maxHeight:400,transition:"all .5s ease-out"},".slideDown-leave-active":{overflowY:"hidden",maxHeight:0},".slideRTL-enter":{position:"absolute",left:"100%",transition:"all .2s linear"},".slideRTL-enter-active":{position:"absolute",left:"0%"},".slideRTL-leave":{position:"absolute",left:"0%",transition:"all .2s linear"},".slideRTL-leave-active":{position:"absolute",left:"-100%"},".slideLTR-enter":{position:"absolute",left:"-100%",transition:"all .2s linear"},".slideLTR-enter-active":{position:"absolute",left:"0%"},".slideLTR-leave":{position:"absolute",left:"0%",transition:"all .2s linear"},".slideLTR-leave-active":{position:"absolute",left:"100%"}}},render:function(){var e=this.props,t=function(e,t){var i={},l=Object.prototype.hasOwnProperty;if(null==e)throw new TypeError;for(var o in e)l.call(e,o)&&!l.call(t,o)&&(i[o]=e[o]);return i}(e,{}),i=this._generateId();return React.createElement("div",React.__spread({id:i},t),React.createElement(Radium.Style,{scopeSelector:"#"+i,rules:m(this.style.resets,this.props.css)}),this.props.children)},_generateId:function(){return"dopsid"+idCounter++}});module.exports=Reset;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../utils/m":37,"radium":43}],36:[function(require,module,exports){
var styles={right:{"float":"right"},left:{"float":"left"},third:{width:"33%"},full:{width:"100%"},half:{width:"48%"},hidden:{display:"none"},clear:{clear:"both",display:"block"},accountStatus:{textTransform:"capitalize"},accountStatusNoticon:{borderRadius:"50%",width:16,height:16,marginRight:10,color:"#fff",background:"#81bf16"},box:{borderRadius:2,padding:"5px 10px",background:"#f5f5f5"},light:{color:"#999"},colors:{akismetGreen:"#5e8e14",blue:"#029dd6",lighterBlue:"#13AEE7",black:"#333",darkGray:"#444",gray:"#787878",lightGray:"#bbb",veryLightGray:"#eee",offWhite:"#f9f9f9",accountActive:"#81bf16",accountInactive:"#bbb",green:"#518d2a",lighterGreen:"#57972d"},fonts:{sans:'Open Sans, "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif',serif:"Merriweather, Georgia, serif",mono:'"Courier New", Courier, monospace'},input:{width:"100%",boxShadow:"none",background:"#fff",border:"1px solid #d5d5d5",fontSize:12,padding:"8px 10px"},select:{borderRadius:3,backgroundColor:"#fff",fontSize:12,height:35,width:"100%",border:"1px solid #d5d5d5",padding:"3px 5px",minWidth:0},checkbox:{marginRight:10},errorField:{border:"1px solid #dd3d36"},errorLabel:{border:"1px solid #dd3d36",color:"#a00",display:"block",fontSize:12,margin:"5px 0 0 0",padding:5}};styles.css={"> *":{font:"14px/1.5 "+styles.fonts.sans,color:styles.colors.black},a:{color:styles.colors.blue,textDecoration:"none"},"a:hover":{textDecoration:"underline"},h1:{fontSize:34},h2:{color:styles.colors.gray,fontSize:16},h3:{fontSize:18},"h1, h2, h3":{fontFamily:styles.fonts.serif,fontWeight:500}},module.exports=styles;


},{}],37:[function(require,module,exports){
module.exports=function(){for(var e={},r=0;r<arguments.length;++r)arguments[r]&&jQuery.extend(e,arguments[r]);return e};


},{}],38:[function(require,module,exports){
(function (global){
"use strict";var createMarkupForStyles=require("../create-markup-for-styles"),Prefixer=require("../prefixer"),React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,buildCssString=function(e,t){if(e&&t){var r=Prefixer.getPrefixedStyle(t,"css"),i=createMarkupForStyles(r);return e+"{"+i+"}"}},Style=React.createClass({displayName:"Style",propTypes:{rules:React.PropTypes.object,scopeSelector:React.PropTypes.string},getDefaultProps:function(){return{scopeSelector:""}},_buildStyles:function(e){var t=this;return Object.keys(e).reduce(function(r,i){var s=e[i];if("mediaQueries"===i)r+=t._buildMediaQueryString(s);else{var n=(t.props.scopeSelector?t.props.scopeSelector+" ":"")+i;r+=buildCssString(n,s)}return r},"")},_buildMediaQueryString:function(e){var t=this,r=this._getContextMediaQueries(),i="";return Object.keys(e).forEach(function(s){var n=r[s]?r[s]:s;i+="@media "+n+"{"+t._buildStyles(e[s])+"}"}),i},_getContextMediaQueries:function(){var e={};return this.context&&this.context.mediaQueries&&Object.keys(this.context.mediaQueries).forEach(function(t){e[t]=this.context.mediaQueries[t].media}.bind(this)),e},render:function(){if(!this.props.rules)return null;var e=this._buildStyles(this.props.rules);return React.createElement("style",{dangerouslySetInnerHTML:{__html:e}})}});module.exports=Style;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../create-markup-for-styles":40,"../prefixer":46}],39:[function(require,module,exports){
"use strict";var ExecutionEnvironment=require("exenv"),_matchMediaFunction=ExecutionEnvironment.canUseDOM&&window&&window.matchMedia;module.exports={canMatchMedia:function(){return"function"==typeof _matchMediaFunction},matchMedia:function(n){return _matchMediaFunction(n)},setMatchMedia:function(n){_matchMediaFunction=n}};


},{"exenv":49}],40:[function(require,module,exports){
"use strict";var createMarkupForStyles=function(e,r){return r=r||"",Object.keys(e).map(function(t){return r+t+": "+e[t]+";"}).join("\n")};module.exports=createMarkupForStyles;


},{}],41:[function(require,module,exports){
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(e.__proto__=t)}var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),_get=function(e,t,r){for(var n=!0;n;){var o=e,i=t,a=r;s=l=u=void 0,n=!1;var s=Object.getOwnPropertyDescriptor(o,i);if(void 0!==s){if("value"in s)return s.value;var u=s.get;return void 0===u?void 0:u.call(a)}var l=Object.getPrototypeOf(o);if(null===l)return void 0;e=l,t=i,r=a,n=!0}},resolveStyles=require("./resolve-styles.js"),enhanceWithRadium=function(e){var t=e.displayName||e.name||"Component",r=function(e){function t(){_classCallCheck(this,t),_get(Object.getPrototypeOf(t.prototype),"constructor",this).apply(this,arguments),this.state=this.state||{},this.state._radiumStyleState={}}return _inherits(t,e),_createClass(t,[{key:"render",value:function(){var e=_get(Object.getPrototypeOf(t.prototype),"render",this).call(this);return resolveStyles(this,e)}},{key:"componentWillUnmount",value:function(){_get(Object.getPrototypeOf(t.prototype),"componentWillUnmount",this)&&_get(Object.getPrototypeOf(t.prototype),"componentWillUnmount",this).call(this),this._radiumMouseUpListener&&this._radiumMouseUpListener.remove(),this._radiumMediaQueryListenersByQuery&&Object.keys(this._radiumMediaQueryListenersByQuery).forEach(function(e){this._radiumMediaQueryListenersByQuery[e].remove()},this)}}]),t}(e);return r.displayName="Radium("+t+")",r};module.exports=enhanceWithRadium;


},{"./resolve-styles.js":47}],42:[function(require,module,exports){
"use strict";var VALID_KEYS=[":active",":focus",":hover"],getState=function(t,e,a){if(e=e||"main",-1===VALID_KEYS.indexOf(a))throw new Error("Radium.getState invalid value param: `"+a+"`");return!!(t&&t._radiumStyleState&&t._radiumStyleState[e]&&t._radiumStyleState[e][a])||!1};module.exports=getState;


},{}],43:[function(require,module,exports){
"use strict";var Enhancer=require("./enhancer");module.exports=function(e){return Enhancer(e)},module.exports.Style=require("./components/style"),module.exports.getState=require("./get-state"),module.exports.keyframes=require("./keyframes"),module.exports.Config=require("./config");


},{"./components/style":38,"./config":39,"./enhancer":41,"./get-state":42,"./keyframes":44}],44:[function(require,module,exports){
"use strict";var createMarkupForStyles=require("./create-markup-for-styles"),Prefixer=require("./prefixer"),ExecutionEnvironment=require("exenv"),isAnimationSupported=ExecutionEnvironment.canUseDOM&&Prefixer.getPrefixedPropertyName("animation")!==!1,animationIndex=1,animationStyleSheet=null,keyframesPrefixed=null;isAnimationSupported&&(animationStyleSheet=document.createElement("style"),document.head.appendChild(animationStyleSheet),keyframesPrefixed="keyframes",animationStyleSheet.textContent="@keyframes {}",animationStyleSheet.sheet.cssRules.length||(keyframesPrefixed=Prefixer.cssPrefix+"keyframes"));var keyframes=function(e){var t="Animation"+animationIndex;if(animationIndex+=1,!isAnimationSupported)return t;var n="@"+keyframesPrefixed+" "+t+" {\n"+Object.keys(e).map(function(t){var n=e[t],r=Prefixer.getPrefixedStyle(n,"css"),i=createMarkupForStyles(r,"  ");return"  "+t+" {\n  "+i+"\n  }"}).join("\n")+"\n}\n";if(!animationStyleSheet)throw new Error("keyframes not initialized properly");return animationStyleSheet.sheet.insertRule(n,animationStyleSheet.sheet.cssRules.length),t};module.exports=keyframes;


},{"./create-markup-for-styles":40,"./prefixer":46,"exenv":49}],45:[function(require,module,exports){
"use strict";var _callbacks=[],_mouseUpListenerIsActive=!1,_handleMouseUp=function(e){_callbacks.forEach(function(s){s(e)})},subscribe=function(e){return-1===_callbacks.indexOf(e)&&_callbacks.push(e),_mouseUpListenerIsActive||(window.addEventListener("mouseup",_handleMouseUp),_mouseUpListenerIsActive=!0),{remove:function(){var s=_callbacks.indexOf(e);_callbacks.splice(s,1),0===_callbacks.length&&_mouseUpListenerIsActive&&(window.removeEventListener("mouseup",_handleMouseUp),_mouseUpListenerIsActive=!1)}}};module.exports={subscribe:subscribe};


},{}],46:[function(require,module,exports){
"use strict";var ExecutionEnvironment=require("exenv"),arrayFind=require("array-find"),infoByCssPrefix={"-moz-":{cssPrefix:"-moz-",jsPrefix:"Moz",alternativeProperties:{flex:[{css:"-moz-box-flex",js:"MozBoxFlex"}],order:[{css:"-moz-box-ordinal-group",js:"MozBoxOrdinalGroup"}]},alternativeValues:{display:{flex:["-moz-box"]}}},"-ms-":{cssPrefix:"-ms-",jsPrefix:"ms",alternativeValues:{display:{flex:["-ms-flexbox"],order:["-ms-flex-order"]}}},"-o-":{cssPrefix:"-o-",jsPrefix:"O"},"-webkit-":{cssPrefix:"-webkit-",jsPrefix:"Webkit",alternativeProperties:{flex:[{css:"-webkit-box-flex",js:"WebkitBoxFlex"}],order:[{css:"-webkit-box-ordinal-group",js:"WebkitBoxOrdinalGroup"}]},alternativeValues:{display:{flex:["-webkit-box"]}}}},isUnitlessNumber={boxFlex:!0,boxFlexGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,strokeDashoffset:!0,strokeOpacity:!0,strokeWidth:!0},domStyle={},prefixedPropertyCache={},prefixedValueCache={},prefixInfo={cssPrefix:"",jsPrefix:""};if(ExecutionEnvironment.canUseDOM){domStyle=document.createElement("p").style;var windowStyles=window.getComputedStyle(document.documentElement,""),prefixMatch=Array.prototype.slice.call(windowStyles).join("").match(/-(moz|webkit|ms|o)-/),cssVendorPrefix=prefixMatch&&prefixMatch[0];prefixInfo=infoByCssPrefix[cssVendorPrefix]||prefixInfo}var _camelCaseRegex=/([a-z])?([A-Z])/g,_camelCaseReplacer=function(e,r,i){return r+"-"+i.toLowerCase()},_camelCaseToDashCase=function(e){return e.replace(_camelCaseRegex,_camelCaseReplacer)},getPrefixedPropertyName=function(e){if(prefixedPropertyCache.hasOwnProperty(e))return prefixedPropertyCache[e];var r={css:_camelCaseToDashCase(e),js:e,isDefaultForServer:!0},i=[{css:prefixInfo.cssPrefix+_camelCaseToDashCase(e),js:prefixInfo.jsPrefix+e[0].toUpperCase()+e.slice(1)},r];prefixInfo.alternativeProperties&&prefixInfo.alternativeProperties[e]&&(i=i.concat(prefixInfo.alternativeProperties[e]));var a=arrayFind(i,function(e){return e.js in domStyle?e:void 0})||!1;return prefixedPropertyCache[e]=a},_addPixelSuffixToValueIfNeeded=function(e,r){return 0===r||isNaN(r)||isUnitlessNumber[e]?r:r+"px"},_getPrefixedValue=function(e,r,i){if(!Array.isArray(r)){if(!isNaN(r))return _addPixelSuffixToValueIfNeeded(i,r);if("string"!=typeof r&&(r=r.toString()),!isNaN(parseInt(r,10)))return r}var a=Array.isArray(r)?r.join(" || "):e+r;if(prefixedValueCache.hasOwnProperty(a))return prefixedValueCache[a];var o;Array.isArray(r)?(o=r.map(function(e){return _addPixelSuffixToValueIfNeeded(i,e)}),o=o.concat(r.filter(function(e){return!isNaN(e)}).map(function(e){return prefixInfo.cssPrefix+e}))):o=[r,prefixInfo.cssPrefix+r],prefixInfo.alternativeValues&&prefixInfo.alternativeValues[i]&&prefixInfo.alternativeValues[i][r]&&(o=o.concat(prefixInfo.alternativeValues[i][r]));var t=arrayFind(o,function(r){return domStyle[e]="",domStyle[e]=r,!!domStyle[e]});return t?prefixedValueCache[a]=t:(prefixedValueCache[a]=r,console&&console.warn&&console.warn('Unsupported CSS value "'+r+'" for property "'+e+'"')),prefixedValueCache[a]},getPrefixedStyle=function(e,r){if(r=r||"js",!ExecutionEnvironment.canUseDOM)return Object.keys(e).reduce(function(i,a){var o=e[a],t="css"===r?_camelCaseToDashCase(a):a,s=Array.isArray(o)?o[0]:o;return i[t]=s,i},{});var i={};return Object.keys(e).forEach(function(a){var o=e[a],t=getPrefixedPropertyName(a);if(t===!1)return void(console&&console.warn&&console.warn('Unsupported CSS property "'+a+'"'));var s=_getPrefixedValue(t.js,o,a);i[t[r]]=s}),i};module.exports={getPrefixedPropertyName:getPrefixedPropertyName,getPrefixedStyle:getPrefixedStyle,cssPrefix:prefixInfo.cssPrefix,jsPrefix:prefixInfo.jsPrefix};


},{"array-find":48,"exenv":49}],47:[function(require,module,exports){
(function (process,global){
"use strict";var MouseUpListener=require("./mouse-up-listener"),getState=require("./get-state"),Prefixer=require("./prefixer"),Config=require("./config"),ExecutionEnvironment=require("exenv"),React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,objectAssign=require("object-assign"),mediaQueryListByQueryString={},_isSpecialKey=function(e){return":"===e[0]||"@"===e[0]},_getStyleState=function(e,t,r){return getState(e.state,t,r)},_setStyleState=function(e,t,r){var n=e.state&&e.state._radiumStyleState||{},i={_radiumStyleState:objectAssign({},n)};i._radiumStyleState[t]=i._radiumStyleState[t]||{},objectAssign(i._radiumStyleState[t],r),e.setState(i)},_mergeStyles=function e(t){var r={};return t.forEach(function(t){t&&"object"==typeof t&&!Array.isArray(t)&&Object.keys(t).forEach(function(n){_isSpecialKey(n)&&r[n]?r[n]=e([r[n],t[n]]):r[n]=t[n]})}),r},_mouseUp=function(e){Object.keys(e.state._radiumStyleState).forEach(function(t){_getStyleState(e,t,":active")&&_setStyleState(e,t,{":active":!1})})},_onMediaQueryChange=function(e,t,r){var n={};n[t]=r.matches,_setStyleState(e,"_all",n)},_resolveMediaQueryStyles=function(e,t){return Config.canMatchMedia()?(Object.keys(t).filter(function(e){return"@"===e[0]}).map(function(r){var n=t[r];r=r.replace("@media ","");var i=mediaQueryListByQueryString[r];if(i||(mediaQueryListByQueryString[r]=i=Config.matchMedia(r)),e._radiumMediaQueryListenersByQuery||(e._radiumMediaQueryListenersByQuery={}),!e._radiumMediaQueryListenersByQuery[r]){var o=_onMediaQueryChange.bind(null,e,r);i.addListener(o),e._radiumMediaQueryListenersByQuery[r]={remove:function(){i.removeListener(o)}}}i.matches&&(t=_mergeStyles([t,n]))}),t):t},resolveStyles=function t(e,r,n){if(n=n||{},!r)return r;var i=null,o=r.props.children;if(o){var a=typeof o;if("string"===a||"number"===a)i=o;else if(1===React.Children.count(o)&&o.type){var s=React.Children.only(o);i=t(e,s,n)}else i=React.Children.map(o,function(r){return React.isValidElement(r)?t(e,r,n):r})}if(!React.isValidElement(r)||"string"!=typeof r.type)return o===i?r:React.cloneElement(r,r.props,i);var u=r.props,c=u.style,l={};if(Array.isArray(c)&&(c=_mergeStyles(c)),"production"!==process.env.NODE_ENV){var y=["background","border","borderBottom","borderColor","borderLeft","borderRadius","borderRight","borderStyle","borderTop","borderWidth","font","listStyle","margin","padding","transform","transition"],f=function M(e){if("object"==typeof e){var t=Object.keys(e);y.forEach(function(r){e[r]&&t.some(function(e){return e!==r&&0===e.indexOf(r)})&&console.warn('Radium: property "'+r+'" in style object',c,": do not mix longhand and shorthand properties in the same style object. See https://github.com/FormidableLabs/radium/issues/95 for more information.")}),t.forEach(function(t){return M(e[t])})}};f(c)}if(!c||!Object.keys(c).some(_isSpecialKey))return c?(l.style=Prefixer.getPrefixedStyle(c),React.cloneElement(r,l,i)):i?React.cloneElement(r,{},i):r;var d=r.ref||r.key,S=d||"main";if(n[S])throw new Error("Radium requires each element with interactive styles to have a unique key, set using either the ref or key prop. "+(d?'Key "'+d+'" is a duplicate.':"Multiple elements have no key specified."));n[S]=!0,c=_resolveMediaQueryStyles(e,c);var m={};if(Object.keys(c).forEach(function(e){_isSpecialKey(e)||(m[e]=c[e])}),c[":hover"]||c[":active"]){var v=u.onMouseEnter;l.onMouseEnter=function(t){v&&v(t),_setStyleState(e,S,{":hover":!0})};var p=u.onMouseLeave;l.onMouseLeave=function(t){p&&p(t),_setStyleState(e,S,{":hover":!1})}}if(c[":active"]){var _=u.onMouseDown;l.onMouseDown=function(t){_&&_(t),e._lastMouseDown=Date.now(),_setStyleState(e,S,{":active":!0})}}if(c[":focus"]){var g=u.onFocus;l.onFocus=function(t){g&&g(t),_setStyleState(e,S,{":focus":!0})};var h=u.onBlur;l.onBlur=function(t){h&&h(t),_setStyleState(e,S,{":focus":!1})}}var b=Object.keys(c).filter(function(t){return":active"===t&&_getStyleState(e,S,":active")||":hover"===t&&_getStyleState(e,S,":hover")||":focus"===t&&_getStyleState(e,S,":focus")}).map(function(e){return c[e]});return b.length&&(m=_mergeStyles([m].concat(b))),c[":active"]&&!e._radiumMouseUpListener&&ExecutionEnvironment.canUseEventListeners&&(e._radiumMouseUpListener=MouseUpListener.subscribe(_mouseUp.bind(null,e))),l.style=Prefixer.getPrefixedStyle(m),React.cloneElement(r,l,i)};resolveStyles.__clearStateForTests=function(){mediaQueryListByQueryString={}},module.exports=resolveStyles;


}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./config":39,"./get-state":42,"./mouse-up-listener":45,"./prefixer":46,"_process":55,"exenv":49,"object-assign":50}],48:[function(require,module,exports){
"use strict";function find(n,t,r){if("function"==typeof Array.prototype.find)return n.find(t,r);r=r||this;var f,i=n.length;if("function"!=typeof t)throw new TypeError(t+" is not a function");for(f=0;i>f;f++)if(t.call(r,n[f],f,n))return n[f]}module.exports=find;


},{}],49:[function(require,module,exports){
!function(){"use strict";var e=!("undefined"==typeof window||!window.document||!window.document.createElement),n={canUseDOM:e,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:e&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:e&&!!window.screen};"function"==typeof define&&"object"==typeof define.amd&&define.amd?define(function(){return n}):"undefined"!=typeof module&&module.exports?module.exports=n:window.ExecutionEnvironment=n}();


},{}],50:[function(require,module,exports){
"use strict";function ToObject(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}function ownEnumerableKeys(e){var r=Object.getOwnPropertyNames(e);return Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(e))),r.filter(function(r){return propIsEnumerable.call(e,r)})}var propIsEnumerable=Object.prototype.propertyIsEnumerable;module.exports=Object.assign||function(e,r){for(var t,n,o=ToObject(e),c=1;c<arguments.length;c++){t=arguments[c],n=ownEnumerableKeys(Object(t));for(var u=0;u<n.length;u++)o[n[u]]=t[n[u]]}return o};


},{}],51:[function(require,module,exports){
module.exports.Dispatcher=require("./lib/Dispatcher");


},{"./lib/Dispatcher":52}],52:[function(require,module,exports){
"use strict";function Dispatcher(){this.$Dispatcher_callbacks={},this.$Dispatcher_isPending={},this.$Dispatcher_isHandled={},this.$Dispatcher_isDispatching=!1,this.$Dispatcher_pendingPayload=null}var invariant=require("./invariant"),_lastID=1,_prefix="ID_";Dispatcher.prototype.register=function(i){var t=_prefix+_lastID++;return this.$Dispatcher_callbacks[t]=i,t},Dispatcher.prototype.unregister=function(i){invariant(this.$Dispatcher_callbacks[i],"Dispatcher.unregister(...): `%s` does not map to a registered callback.",i),delete this.$Dispatcher_callbacks[i]},Dispatcher.prototype.waitFor=function(i){invariant(this.$Dispatcher_isDispatching,"Dispatcher.waitFor(...): Must be invoked while dispatching.");for(var t=0;t<i.length;t++){var a=i[t];this.$Dispatcher_isPending[a]?invariant(this.$Dispatcher_isHandled[a],"Dispatcher.waitFor(...): Circular dependency detected while waiting for `%s`.",a):(invariant(this.$Dispatcher_callbacks[a],"Dispatcher.waitFor(...): `%s` does not map to a registered callback.",a),this.$Dispatcher_invokeCallback(a))}},Dispatcher.prototype.dispatch=function(i){invariant(!this.$Dispatcher_isDispatching,"Dispatch.dispatch(...): Cannot dispatch in the middle of a dispatch."),this.$Dispatcher_startDispatching(i);try{for(var t in this.$Dispatcher_callbacks)this.$Dispatcher_isPending[t]||this.$Dispatcher_invokeCallback(t)}finally{this.$Dispatcher_stopDispatching()}},Dispatcher.prototype.isDispatching=function(){return this.$Dispatcher_isDispatching},Dispatcher.prototype.$Dispatcher_invokeCallback=function(i){this.$Dispatcher_isPending[i]=!0,this.$Dispatcher_callbacks[i](this.$Dispatcher_pendingPayload),this.$Dispatcher_isHandled[i]=!0},Dispatcher.prototype.$Dispatcher_startDispatching=function(i){for(var t in this.$Dispatcher_callbacks)this.$Dispatcher_isPending[t]=!1,this.$Dispatcher_isHandled[t]=!1;this.$Dispatcher_pendingPayload=i,this.$Dispatcher_isDispatching=!0},Dispatcher.prototype.$Dispatcher_stopDispatching=function(){this.$Dispatcher_pendingPayload=null,this.$Dispatcher_isDispatching=!1},module.exports=Dispatcher;


},{"./invariant":53}],53:[function(require,module,exports){
"use strict";var invariant=function(r,e,n,i,o,a,t,f){if(!r){var s;if(void 0===e)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var d=[n,i,o,a,t,f],l=0;s=new Error("Invariant Violation: "+e.replace(/%s/g,function(){return d[l++]}))}throw s.framesToPop=1,s}};module.exports=invariant;


},{}],54:[function(require,module,exports){
function EventEmitter(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function isFunction(e){return"function"==typeof e}function isNumber(e){return"number"==typeof e}function isObject(e){return"object"==typeof e&&null!==e}function isUndefined(e){return void 0===e}module.exports=EventEmitter,EventEmitter.EventEmitter=EventEmitter,EventEmitter.prototype._events=void 0,EventEmitter.prototype._maxListeners=void 0,EventEmitter.defaultMaxListeners=10,EventEmitter.prototype.setMaxListeners=function(e){if(!isNumber(e)||0>e||isNaN(e))throw TypeError("n must be a positive number");return this._maxListeners=e,this},EventEmitter.prototype.emit=function(e){var t,n,s,i,r,o;if(this._events||(this._events={}),"error"===e&&(!this._events.error||isObject(this._events.error)&&!this._events.error.length)){if(t=arguments[1],t instanceof Error)throw t;throw TypeError('Uncaught, unspecified "error" event.')}if(n=this._events[e],isUndefined(n))return!1;if(isFunction(n))switch(arguments.length){case 1:n.call(this);break;case 2:n.call(this,arguments[1]);break;case 3:n.call(this,arguments[1],arguments[2]);break;default:for(s=arguments.length,i=new Array(s-1),r=1;s>r;r++)i[r-1]=arguments[r];n.apply(this,i)}else if(isObject(n)){for(s=arguments.length,i=new Array(s-1),r=1;s>r;r++)i[r-1]=arguments[r];for(o=n.slice(),s=o.length,r=0;s>r;r++)o[r].apply(this,i)}return!0},EventEmitter.prototype.addListener=function(e,t){var n;if(!isFunction(t))throw TypeError("listener must be a function");if(this._events||(this._events={}),this._events.newListener&&this.emit("newListener",e,isFunction(t.listener)?t.listener:t),this._events[e]?isObject(this._events[e])?this._events[e].push(t):this._events[e]=[this._events[e],t]:this._events[e]=t,isObject(this._events[e])&&!this._events[e].warned){var n;n=isUndefined(this._maxListeners)?EventEmitter.defaultMaxListeners:this._maxListeners,n&&n>0&&this._events[e].length>n&&(this._events[e].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[e].length),"function"==typeof console.trace&&console.trace())}return this},EventEmitter.prototype.on=EventEmitter.prototype.addListener,EventEmitter.prototype.once=function(e,t){function n(){this.removeListener(e,n),s||(s=!0,t.apply(this,arguments))}if(!isFunction(t))throw TypeError("listener must be a function");var s=!1;return n.listener=t,this.on(e,n),this},EventEmitter.prototype.removeListener=function(e,t){var n,s,i,r;if(!isFunction(t))throw TypeError("listener must be a function");if(!this._events||!this._events[e])return this;if(n=this._events[e],i=n.length,s=-1,n===t||isFunction(n.listener)&&n.listener===t)delete this._events[e],this._events.removeListener&&this.emit("removeListener",e,t);else if(isObject(n)){for(r=i;r-->0;)if(n[r]===t||n[r].listener&&n[r].listener===t){s=r;break}if(0>s)return this;1===n.length?(n.length=0,delete this._events[e]):n.splice(s,1),this._events.removeListener&&this.emit("removeListener",e,t)}return this},EventEmitter.prototype.removeAllListeners=function(e){var t,n;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[e]&&delete this._events[e],this;if(0===arguments.length){for(t in this._events)"removeListener"!==t&&this.removeAllListeners(t);return this.removeAllListeners("removeListener"),this._events={},this}if(n=this._events[e],isFunction(n))this.removeListener(e,n);else for(;n.length;)this.removeListener(e,n[n.length-1]);return delete this._events[e],this},EventEmitter.prototype.listeners=function(e){var t;return t=this._events&&this._events[e]?isFunction(this._events[e])?[this._events[e]]:this._events[e].slice():[]},EventEmitter.listenerCount=function(e,t){var n;return n=e._events&&e._events[t]?isFunction(e._events[t])?1:e._events[t].length:0};


},{}],55:[function(require,module,exports){
function cleanUpNextTick(){draining=!1,currentQueue.length?queue=currentQueue.concat(queue):queueIndex=-1,queue.length&&drainQueue()}function drainQueue(){if(!draining){var e=setTimeout(cleanUpNextTick);draining=!0;for(var n=queue.length;n;){for(currentQueue=queue,queue=[];++queueIndex<n;)currentQueue[queueIndex].run();queueIndex=-1,n=queue.length}currentQueue=null,draining=!1,clearTimeout(e)}}function Item(e,n){this.fun=e,this.array=n}function noop(){}var process=module.exports={},queue=[],draining=!1,currentQueue,queueIndex=-1;process.nextTick=function(e){var n=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)n[r-1]=arguments[r];queue.push(new Item(e,n)),draining||setTimeout(drainQueue,0)},Item.prototype.run=function(){this.fun.apply(null,this.array)},process.title="browser",process.browser=!0,process.env={},process.argv=[],process.version="",process.versions={},process.on=noop,process.addListener=noop,process.once=noop,process.off=noop,process.removeListener=noop,process.removeAllListeners=noop,process.emit=noop,process.binding=function(e){throw new Error("process.binding is not supported")},process.cwd=function(){return"/"},process.chdir=function(e){throw new Error("process.chdir is not supported")},process.umask=function(){return 0};


},{}],56:[function(require,module,exports){
"use strict";var keyMirror=function(r){var e,o={};if(!(r instanceof Object)||Array.isArray(r))throw new Error("keyMirror(...): Argument must be an object.");for(e in r)r.hasOwnProperty(e)&&(o[e]=e);return o};module.exports=keyMirror;


},{}],57:[function(require,module,exports){
(function (global){
"use strict";var createMarkupForStyles=require("../create-markup-for-styles"),Prefixer=require("../prefixer"),React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,buildCssString=function(e,t){if(e&&t){var r=Prefixer.getPrefixedStyle(t,"css"),i=createMarkupForStyles(r);return e+"{"+i+"}"}},Style=React.createClass({displayName:"Style",propTypes:{rules:React.PropTypes.object,scopeSelector:React.PropTypes.string},getDefaultProps:function(){return{scopeSelector:""}},_buildStyles:function(e){var t=this;return Object.keys(e).reduce(function(r,i){var s=e[i];if("mediaQueries"===i)r+=t._buildMediaQueryString(s);else{var n=(t.props.scopeSelector?t.props.scopeSelector+" ":"")+i;r+=buildCssString(n,s)}return r},"")},_buildMediaQueryString:function(e){var t=this,r=this._getContextMediaQueries(),i="";return Object.keys(e).forEach(function(s){var n=r[s]?r[s]:s;i+="@media "+n+"{"+t._buildStyles(e[s])+"}"}),i},_getContextMediaQueries:function(){var e={};return this.context&&this.context.mediaQueries&&Object.keys(this.context.mediaQueries).forEach(function(t){e[t]=this.context.mediaQueries[t].media}.bind(this)),e},render:function(){if(!this.props.rules)return null;var e=this._buildStyles(this.props.rules);return React.createElement("style",{dangerouslySetInnerHTML:{__html:e}})}});module.exports=Style;


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../create-markup-for-styles":59,"../prefixer":65}],58:[function(require,module,exports){
"use strict";var ExecutionEnvironment=require("exenv"),_matchMediaFunction=ExecutionEnvironment.canUseDOM&&window&&window.matchMedia&&function(n){return window.matchMedia(n)};module.exports={canMatchMedia:function(){return"function"==typeof _matchMediaFunction},matchMedia:function(n){return _matchMediaFunction(n)},setMatchMedia:function(n){_matchMediaFunction=n}};


},{"exenv":68}],59:[function(require,module,exports){
"use strict";var createMarkupForStyles=function(e,r){return r=r||"",Object.keys(e).map(function(t){return r+t+": "+e[t]+";"}).join("\n")};module.exports=createMarkupForStyles;


},{}],60:[function(require,module,exports){
(function (process){
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(e.__proto__=t)}var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,r,o){return r&&e(t.prototype,r),o&&e(t,o),t}}(),_get=function(e,t,r){for(var o=!0;o;){var n=e,i=t,s=r;a=c=u=void 0,o=!1;var a=Object.getOwnPropertyDescriptor(n,i);if(void 0!==a){if("value"in a)return a.value;var u=a.get;return void 0===u?void 0:u.call(s)}var c=Object.getPrototypeOf(n);if(null===c)return void 0;e=c,t=i,r=s,o=!0}},resolveStyles=require("./resolve-styles.js"),enhanceWithRadium=function(e){var t=e.displayName||e.name||"Component",r=function(e){function t(){_classCallCheck(this,t),_get(Object.getPrototypeOf(t.prototype),"constructor",this).apply(this,arguments),this.state=this.state||{},this.state._radiumStyleState={}}return _inherits(t,e),_createClass(t,[{key:"render",value:function(){var e=_get(Object.getPrototypeOf(t.prototype),"render",this).call(this);return resolveStyles(this,e)}},{key:"componentWillUnmount",value:function(){_get(Object.getPrototypeOf(t.prototype),"componentWillUnmount",this)&&_get(Object.getPrototypeOf(t.prototype),"componentWillUnmount",this).call(this),this._radiumMouseUpListener&&this._radiumMouseUpListener.remove(),this._radiumMediaQueryListenersByQuery&&Object.keys(this._radiumMediaQueryListenersByQuery).forEach(function(e){this._radiumMediaQueryListenersByQuery[e].remove()},this)}}]),t}(e),o=["defaultProps","propTypes","contextTypes","childContextTypes"];return o.forEach(function(t){e.hasOwnProperty(t)&&(r[t]=e[t])}),"production"!==process.env.NODE_ENV&&Object.keys(e.prototype).forEach(function(t){r.prototype.hasOwnProperty(t)||(r.prototype[t]=e.prototype[t])}),r.displayName="Radium("+t+")",r};module.exports=enhanceWithRadium;


}).call(this,require('_process'))

},{"./resolve-styles.js":66,"_process":55}],61:[function(require,module,exports){
"use strict";var VALID_KEYS=[":active",":focus",":hover"],getState=function(t,e,a){if(e=e||"main",-1===VALID_KEYS.indexOf(a))throw new Error("Radium.getState invalid value param: `"+a+"`");return!!(t&&t._radiumStyleState&&t._radiumStyleState[e]&&t._radiumStyleState[e][a])||!1};module.exports=getState;


},{}],62:[function(require,module,exports){
"use strict";var Enhancer=require("./enhancer");module.exports=function(e){return Enhancer(e)},module.exports.Style=require("./components/style"),module.exports.getState=require("./get-state"),module.exports.keyframes=require("./keyframes"),module.exports.Config=require("./config");


},{"./components/style":57,"./config":58,"./enhancer":60,"./get-state":61,"./keyframes":63}],63:[function(require,module,exports){
"use strict";var createMarkupForStyles=require("./create-markup-for-styles"),Prefixer=require("./prefixer"),ExecutionEnvironment=require("exenv"),isAnimationSupported=ExecutionEnvironment.canUseDOM&&Prefixer.getPrefixedPropertyName("animation")!==!1,animationIndex=1,animationStyleSheet=null,keyframesPrefixed=null;isAnimationSupported&&(animationStyleSheet=document.createElement("style"),document.head.appendChild(animationStyleSheet),keyframesPrefixed="keyframes",animationStyleSheet.textContent="@keyframes {}",animationStyleSheet.sheet.cssRules.length||(keyframesPrefixed=Prefixer.cssPrefix+"keyframes"));var keyframes=function(e){var t="Animation"+animationIndex;if(animationIndex+=1,!isAnimationSupported)return t;var n="@"+keyframesPrefixed+" "+t+" {\n"+Object.keys(e).map(function(t){var n=e[t],r=Prefixer.getPrefixedStyle(n,"css"),i=createMarkupForStyles(r,"  ");return"  "+t+" {\n  "+i+"\n  }"}).join("\n")+"\n}\n";if(!animationStyleSheet)throw new Error("keyframes not initialized properly");return animationStyleSheet.sheet.insertRule(n,animationStyleSheet.sheet.cssRules.length),t};module.exports=keyframes;


},{"./create-markup-for-styles":59,"./prefixer":65,"exenv":68}],64:[function(require,module,exports){
"use strict";var _callbacks=[],_mouseUpListenerIsActive=!1,_handleMouseUp=function(e){_callbacks.forEach(function(s){s(e)})},subscribe=function(e){return-1===_callbacks.indexOf(e)&&_callbacks.push(e),_mouseUpListenerIsActive||(window.addEventListener("mouseup",_handleMouseUp),_mouseUpListenerIsActive=!0),{remove:function(){var s=_callbacks.indexOf(e);_callbacks.splice(s,1),0===_callbacks.length&&_mouseUpListenerIsActive&&(window.removeEventListener("mouseup",_handleMouseUp),_mouseUpListenerIsActive=!1)}}};module.exports={subscribe:subscribe};


},{}],65:[function(require,module,exports){
"use strict";var ExecutionEnvironment=require("exenv"),arrayFind=require("array-find"),infoByCssPrefix={"-moz-":{cssPrefix:"-moz-",jsPrefix:"Moz",alternativeProperties:{flex:[{css:"-moz-box-flex",js:"MozBoxFlex"}],order:[{css:"-moz-box-ordinal-group",js:"MozBoxOrdinalGroup"}]},alternativeValues:{display:{flex:["-moz-box"]}}},"-ms-":{cssPrefix:"-ms-",jsPrefix:"ms",alternativeValues:{display:{flex:["-ms-flexbox"],order:["-ms-flex-order"]}}},"-o-":{cssPrefix:"-o-",jsPrefix:"O"},"-webkit-":{cssPrefix:"-webkit-",jsPrefix:"Webkit",alternativeProperties:{flex:[{css:"-webkit-box-flex",js:"WebkitBoxFlex"}],order:[{css:"-webkit-box-ordinal-group",js:"WebkitBoxOrdinalGroup"}]},alternativeValues:{display:{flex:["-webkit-box"]}}}},isUnitlessNumber={boxFlex:!0,boxFlexGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,strokeDashoffset:!0,strokeOpacity:!0,strokeWidth:!0},domStyle={},prefixedPropertyCache={},prefixedValueCache={},prefixInfo={cssPrefix:"",jsPrefix:""};if(ExecutionEnvironment.canUseDOM){domStyle=document.createElement("p").style;var windowStyles=window.getComputedStyle(document.documentElement,""),prefixMatch=Array.prototype.slice.call(windowStyles).join("").match(/-(moz|webkit|ms|o)-/),cssVendorPrefix=prefixMatch&&prefixMatch[0];prefixInfo=infoByCssPrefix[cssVendorPrefix]||prefixInfo}var _camelCaseRegex=/([a-z])?([A-Z])/g,_camelCaseReplacer=function(e,r,i){return r+"-"+i.toLowerCase()},_camelCaseToDashCase=function(e){return e.replace(_camelCaseRegex,_camelCaseReplacer)},getPrefixedPropertyName=function(e){if(prefixedPropertyCache.hasOwnProperty(e))return prefixedPropertyCache[e];var r={css:_camelCaseToDashCase(e),js:e,isDefaultForServer:!0},i=[{css:prefixInfo.cssPrefix+_camelCaseToDashCase(e),js:prefixInfo.jsPrefix+e[0].toUpperCase()+e.slice(1)},r];prefixInfo.alternativeProperties&&prefixInfo.alternativeProperties[e]&&(i=i.concat(prefixInfo.alternativeProperties[e]));var o=arrayFind(i,function(e){return e.js in domStyle?e:void 0})||!1;return prefixedPropertyCache[e]=o},_addPixelSuffixToValueIfNeeded=function(e,r){return 0===r||isNaN(r)||isUnitlessNumber[e]?r:r+"px"},_getPrefixedValue=function(e,r,i){if(!Array.isArray(r)){if(!isNaN(r))return _addPixelSuffixToValueIfNeeded(i,r);if("string"!=typeof r){if(null===r||void 0===r)return console&&console.warn&&console.warn('CSS value is "'+r+'" for property "'+e+'"'),r;r=r.toString()}if(!isNaN(parseInt(r,10)))return r}var o=Array.isArray(r)?r.join(" || "):e+r;if(prefixedValueCache.hasOwnProperty(o))return prefixedValueCache[o];var a;Array.isArray(r)?(a=r.map(function(e){return _addPixelSuffixToValueIfNeeded(i,e)}),a=a.concat(r.filter(function(e){return!isNaN(e)}).map(function(e){return prefixInfo.cssPrefix+e}))):a=[r,prefixInfo.cssPrefix+r],prefixInfo.alternativeValues&&prefixInfo.alternativeValues[i]&&prefixInfo.alternativeValues[i][r]&&(a=a.concat(prefixInfo.alternativeValues[i][r]));var t=arrayFind(a,function(r){return domStyle[e]="",domStyle[e]=r,!!domStyle[e]});return t?prefixedValueCache[o]=t:(prefixedValueCache[o]=r,console&&console.warn&&console.warn('Unsupported CSS value "'+r+'" for property "'+e+'"')),prefixedValueCache[o]},getPrefixedStyle=function(e,r){if(r=r||"js",!ExecutionEnvironment.canUseDOM)return Object.keys(e).reduce(function(i,o){var a=e[o],t="css"===r?_camelCaseToDashCase(o):o,s=Array.isArray(a)?a[0]:a;return i[t]=s,i},{});var i={};return Object.keys(e).forEach(function(o){var a=e[o],t=getPrefixedPropertyName(o);if(t===!1)return void(console&&console.warn&&console.warn('Unsupported CSS property "'+o+'"'));var s=_getPrefixedValue(t.js,a,o);i[t[r]]=s}),i};module.exports={getPrefixedPropertyName:getPrefixedPropertyName,getPrefixedStyle:getPrefixedStyle,cssPrefix:prefixInfo.cssPrefix,jsPrefix:prefixInfo.jsPrefix};


},{"array-find":67,"exenv":68}],66:[function(require,module,exports){
(function (process,global){
"use strict";var _extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o])}return e},MouseUpListener=require("./mouse-up-listener"),getState=require("./get-state"),Prefixer=require("./prefixer"),Config=require("./config"),ExecutionEnvironment=require("exenv"),React="undefined"!=typeof window?window.React:"undefined"!=typeof global?global.React:null,mediaQueryListByQueryString={},_isSpecialKey=function(e){return":"===e[0]||"@"===e[0]},_getStyleState=function(e,t,r){return getState(e.state,t,r)},_setStyleState=function(e,t,r){var o=e._lastRadiumState||e.state&&e.state._radiumStyleState||{},n={_radiumStyleState:_extends({},o)};n._radiumStyleState[t]=_extends({},n._radiumStyleState[t],r),e._lastRadiumState=n._radiumStyleState,e.setState(n)},_mergeStyles=function e(t){var r={};return t.forEach(function(t){t&&"object"==typeof t&&!Array.isArray(t)&&Object.keys(t).forEach(function(o){_isSpecialKey(o)&&r[o]?r[o]=e([r[o],t[o]]):r[o]=t[o]})}),r},_mouseUp=function(e){Object.keys(e.state._radiumStyleState).forEach(function(t){_getStyleState(e,t,":active")&&_setStyleState(e,t,{":active":!1})})},_onMediaQueryChange=function(e,t,r){var o={};o[t]=r.matches,_setStyleState(e,"_all",o)},_resolveMediaQueryStyles=function(e,t){return Config.canMatchMedia()?(Object.keys(t).filter(function(e){return"@"===e[0]}).map(function(r){var o=t[r];r=r.replace("@media ","");var n=mediaQueryListByQueryString[r];if(n||(mediaQueryListByQueryString[r]=n=Config.matchMedia(r)),e._radiumMediaQueryListenersByQuery||(e._radiumMediaQueryListenersByQuery={}),!e._radiumMediaQueryListenersByQuery[r]){var i=_onMediaQueryChange.bind(null,e,r);n.addListener(i),e._radiumMediaQueryListenersByQuery[r]={remove:function(){n.removeListener(i)}}}n.matches&&(t=_mergeStyles([t,o]))}),t):t},resolveStyles=function t(e,r,o){if(o=o||{},!r)return r;var n=null,i=r.props.children;if(i){var a=typeof i;if("string"===a||"number"===a)n=i;else if(1===React.Children.count(i)&&i.type){var s=React.Children.only(i);n=t(e,s,o)}else n=React.Children.map(i,function(r){return React.isValidElement(r)?t(e,r,o):r})}if(!React.isValidElement(r)||"string"!=typeof r.type)return i===n?r:React.cloneElement(r,r.props,n);var u=r.props,d=u.style,c={};if(Array.isArray(d)&&(d=_mergeStyles(d)),"production"!==process.env.NODE_ENV){var l={background:["backgroundAttachment","backgroundBlendMode","backgroundClip","backgroundColor","backgroundImage","backgroundOrigin","backgroundPosition","backgroundPositionX","backgroundPositionY","backgroundRepeat","backgroundRepeatX","backgroundRepeatY","backgroundSize"],border:["borderBottom","borderBottomColor","borderBottomStyle","borderBottomWidth","borderColor","borderLeft","borderLeftColor","borderLeftStyle","borderLeftWidth","borderRight","borderRightColor","borderRightStyle","borderRightWidth","borderStyle","borderTop","borderTopColor","borderTopStyle","borderTopWidth","borderWidth"],borderImage:["borderImageOutset","borderImageRepeat","borderImageSlice","borderImageSource","borderImageWidth"],borderRadius:["borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius"],font:["fontFamily","fontKerning","fontSize","fontStretch","fontStyle","fontVariant","fontVariantLigatures","fontWeight","lineHeight"],listStyle:["listStyleImage","listStylePosition","listStyleType"],margin:["marginBottom","marginLeft","marginRight","marginTop"],padding:["paddingBottom","paddingLeft","paddingRight","paddingTop"],transform:["transformOrigin","transformStyle"],transition:["transitionDelay","transitionDuration","transitionProperty","transitionTimingFunction"]},y=function R(t){if("object"==typeof t){var r=Object.keys(t);r.forEach(function(t){l[t]&&l[t].some(function(e){return-1!==r.indexOf(e)})&&console.warn('Radium: property "'+t+'" in style object',d,": do not mix longhand and shorthand properties in the same style object. Check the render method of "+e.constructor.displayName+".","See https://github.com/FormidableLabs/radium/issues/95 for more information.")}),r.forEach(function(e){return R(t[e])})}};y(d)}if(!d||!Object.keys(d).some(_isSpecialKey))return d?(c.style=Prefixer.getPrefixedStyle(d),React.cloneElement(r,c,n)):n?React.cloneElement(r,{},n):r;var f=r.ref||r.key,m=f||"main";if(o[m])throw new Error("Radium requires each element with interactive styles to have a unique key, set using either the ref or key prop. "+(f?'Key "'+f+'" is a duplicate.':"Multiple elements have no key specified."));o[m]=!0,d=_resolveMediaQueryStyles(e,d);var g={};if(Object.keys(d).forEach(function(e){_isSpecialKey(e)||(g[e]=d[e])}),d[":hover"]||d[":active"]){var S=u.onMouseEnter;c.onMouseEnter=function(t){S&&S(t),_setStyleState(e,m,{":hover":!0})};var b=u.onMouseLeave;c.onMouseLeave=function(t){b&&b(t),_setStyleState(e,m,{":hover":!1})}}if(d[":active"]){var p=u.onMouseDown;c.onMouseDown=function(t){p&&p(t),e._lastMouseDown=Date.now(),_setStyleState(e,m,{":active":!0})}}if(d[":focus"]){var h=u.onFocus;c.onFocus=function(t){h&&h(t),_setStyleState(e,m,{":focus":!0})};var v=u.onBlur;c.onBlur=function(t){v&&v(t),_setStyleState(e,m,{":focus":!1})}}var _=Object.keys(d).filter(function(t){return":active"===t&&_getStyleState(e,m,":active")||":hover"===t&&_getStyleState(e,m,":hover")||":focus"===t&&_getStyleState(e,m,":focus")}).map(function(e){return d[e]});return _.length&&(g=_mergeStyles([g].concat(_))),d[":active"]&&!e._radiumMouseUpListener&&ExecutionEnvironment.canUseEventListeners&&(e._radiumMouseUpListener=MouseUpListener.subscribe(_mouseUp.bind(null,e))),c.style=Prefixer.getPrefixedStyle(g),React.cloneElement(r,c,n)};resolveStyles.__clearStateForTests=function(){mediaQueryListByQueryString={}},module.exports=resolveStyles;


}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./config":58,"./get-state":61,"./mouse-up-listener":64,"./prefixer":65,"_process":55,"exenv":68}],67:[function(require,module,exports){
"use strict";function find(n,t,r){if("function"==typeof Array.prototype.find)return n.find(t,r);r=r||this;var f,i=n.length;if("function"!=typeof t)throw new TypeError(t+" is not a function");for(f=0;i>f;f++)if(t.call(r,n[f],f,n))return n[f]}module.exports=find;


},{}],68:[function(require,module,exports){
!function(){"use strict";var e=!("undefined"==typeof window||!window.document||!window.document.createElement),n={canUseDOM:e,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:e&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:e&&!!window.screen};"function"==typeof define&&"object"==typeof define.amd&&define.amd?define(function(){return n}):"undefined"!=typeof module&&module.exports?module.exports=n:window.ExecutionEnvironment=n}();


},{}]},{},[24])
//# sourceMappingURL=data:application/json;base64,
